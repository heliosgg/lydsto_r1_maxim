
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[9]);

  var _mobxReact = _$$_REQUIRE(_dependencyMap[10]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[12]);

  var _Home = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Settings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Dev = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _DevDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _RemoteCtlPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _MaterialList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _MaterialDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _DisturbSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _TimeCleanList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _TimeCleanDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _CleanDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _MapList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _stores = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _Theme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _VirtualMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _CleanList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _ZoneEdit = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _MapDetail = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _SettingVoice = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _CustomMade = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var _TimeCleanMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

  var _MyMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

  var _ProductWebView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[35]));

  var _DustManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[36]));

  var _Package = _$$_REQUIRE(_dependencyMap[37]);

  var _UserApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[38]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[39]));

  var _PropsSyncManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[40]));

  var _DevConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[41]));

  var _AsyncMapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[42]));

  var logger = _$$_REQUIRE(_dependencyMap[43]);

  var RootStack = (0, _reactNavigation.createStackNavigator)({
    Home: _Home.default,
    Settings: _Settings.default,
    MoreSetting: _CommonSetting.MoreSetting,
    FirmwareUpgrade: _CommonSetting.FirmwareUpgrade,
    RemoteCtlPage: _RemoteCtlPage.default,
    MaterialList: _MaterialList.default,
    MaterialDetail: _MaterialDetail.default,
    DisturbSetting: _DisturbSetting.default,
    TimeCleanList: _TimeCleanList.default,
    TimeCleanDetail: _TimeCleanDetail.default,
    CleanList: _CleanList.default,
    CleanDetail: _CleanDetail.default,
    Dev: _Dev.default,
    DevDetail: _DevDetail.default,
    VirtualWall: _VirtualMap.default,
    MapList: _MapList.default,
    ZoneEdit: _ZoneEdit.default,
    MapDetail: _MapDetail.default,
    SettingVoice: _SettingVoice.default,
    DustManager: _DustManager.default,
    CustomMade: _CustomMade.default,
    TimeCleanMap: _TimeCleanMap.default,
    MyMap: _MyMap.default,
    ProductWebView: _ProductWebView.default
  }, {
    initialRouteName: 'Home',
    navigationOptions: function navigationOptions(_ref) {
      var navigation = _ref.navigation;
      return {
        header: _react.default.createElement(_NavigationBar.default, {
          title: navigation.state.params ? navigation.state.params.title : _miot.Device.name,
          subtitleNumberOfLines: 2,
          subtitle: navigation.state.params ? navigation.state.params.subtitle : '',
          subtitleStyle: {
            fontFamily: 'System'
          },
          backgroundColor: "rgba(0,0,0,0)",
          left: [{
            key: _NavigationBar.default.ICON.BACK,
            onPress: function onPress() {
              var parent = navigation.dangerouslyGetParent();

              var _ref2 = parent || {},
                  _ref2$state = _ref2.state;

              _ref2$state = _ref2$state === undefined ? {} : _ref2$state;
              var _ref2$state$index = _ref2$state.index,
                  index = _ref2$state$index === undefined ? -1 : _ref2$state$index;

              if (index > 0) {
                navigation.goBack();
              } else {
                _miot.Package.exit();
              }
            }
          }]
        })
      };
    }
  });

  var showDev = _DevConfig.default.isWhiteList();

  var RNVConsole = showDev ? _$$_REQUIRE(_dependencyMap[44]).showLogWhenDev({
    console: logger
  }) : null;

  _Theme.default.init();

  (0, _mobxReact.onError)(function (error) {
    logger.info(error);
  });

  _Package.PackageEvent.packageAuthorizationCancel.addListener(function () {
    _UserApi.default.refusePolicy();

    _miot.Package.exit();
  });

  _Package.PackageEvent.packageDidResume.addListener(function () {
    _PropsSyncManager.default.startSync();
  });

  _Package.PackageEvent.packageWillPause.addListener(function () {
    _PropsSyncManager.default.stopSync();
  });

  _Package.PackageEvent.packageWillExit.addListener(function () {
    _PushManager.default.reset();

    _PropsSyncManager.default.reset();

    _AsyncMapApi.default.reset();
  });

  var App = function (_React$Component) {
    (0, _inherits2.default)(App, _React$Component);

    function App() {
      (0, _classCallCheck2.default)(this, App);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(App).apply(this, arguments));
    }

    (0, _createClass2.default)(App, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: 'red'
          }
        }, _react.default.createElement(_mobxReact.Provider, _stores.default, _react.default.createElement(RootStack, null)), RNVConsole);
      }
    }]);
    return App;
  }(_react.default.Component);

  _miot.Package.entry(App, function () {});
},10001,[14305,14320,14323,14371,14377,14386,10297,10033,10074,10918,10004,10719,10353,10010,11801,11858,11861,11912,11933,11951,11966,11969,11981,11984,11996,12002,10391,12020,12032,12053,12068,12071,12074,12080,12083,12098,12104,10056,10442,11711,12110,11624,11816,10100,12113]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license mobx-react v5.4.4
   * native.js
   *
   * Copyright (c) 2015 Michel Weststrate.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  function _interopDefault(ex) {
    return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
  }

  var mobx = _$$_REQUIRE(_dependencyMap[0]);

  var React = _$$_REQUIRE(_dependencyMap[1]);

  var React__default = _interopDefault(React);

  var reactNative = _$$_REQUIRE(_dependencyMap[2]);

  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  function unwrapExports(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;
  }

  function createCommonjsModule(fn, module) {
    return module = {
      exports: {}
    }, fn(module, module.exports), module.exports;
  }

  var reactIs_production_min = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var b = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
        c = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
        d = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
        e = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
        f = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
        g = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
        h = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
        k = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
        l = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.async_mode") : 60111,
        m = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
        n = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
        p = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
        r = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
        t = b ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;

    function u(a) {
      if ("object" === typeof a && null !== a) {
        var q = a.$$typeof;

        switch (q) {
          case c:
            switch (a = a.type, a) {
              case l:
              case m:
              case e:
              case g:
              case f:
                return a;

              default:
                switch (a = a && a.$$typeof, a) {
                  case k:
                  case n:
                  case h:
                    return a;

                  default:
                    return q;
                }

            }

          case d:
            return q;
        }
      }
    }

    function v(a) {
      return u(a) === m;
    }

    exports.typeOf = u;
    exports.AsyncMode = l;
    exports.ConcurrentMode = m;
    exports.ContextConsumer = k;
    exports.ContextProvider = h;
    exports.Element = c;
    exports.ForwardRef = n;
    exports.Fragment = e;
    exports.Profiler = g;
    exports.Portal = d;
    exports.StrictMode = f;

    exports.isValidElementType = function (a) {
      return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n);
    };

    exports.isAsyncMode = function (a) {
      return v(a) || u(a) === l;
    };

    exports.isConcurrentMode = v;

    exports.isContextConsumer = function (a) {
      return u(a) === k;
    };

    exports.isContextProvider = function (a) {
      return u(a) === h;
    };

    exports.isElement = function (a) {
      return "object" === typeof a && null !== a && a.$$typeof === c;
    };

    exports.isForwardRef = function (a) {
      return u(a) === n;
    };

    exports.isFragment = function (a) {
      return u(a) === e;
    };

    exports.isProfiler = function (a) {
      return u(a) === g;
    };

    exports.isPortal = function (a) {
      return u(a) === d;
    };

    exports.isStrictMode = function (a) {
      return u(a) === f;
    };
  });
  unwrapExports(reactIs_production_min);
  var reactIs_production_min_1 = reactIs_production_min.typeOf;
  var reactIs_production_min_2 = reactIs_production_min.AsyncMode;
  var reactIs_production_min_3 = reactIs_production_min.ConcurrentMode;
  var reactIs_production_min_4 = reactIs_production_min.ContextConsumer;
  var reactIs_production_min_5 = reactIs_production_min.ContextProvider;
  var reactIs_production_min_6 = reactIs_production_min.Element;
  var reactIs_production_min_7 = reactIs_production_min.ForwardRef;
  var reactIs_production_min_8 = reactIs_production_min.Fragment;
  var reactIs_production_min_9 = reactIs_production_min.Profiler;
  var reactIs_production_min_10 = reactIs_production_min.Portal;
  var reactIs_production_min_11 = reactIs_production_min.StrictMode;
  var reactIs_production_min_12 = reactIs_production_min.isValidElementType;
  var reactIs_production_min_13 = reactIs_production_min.isAsyncMode;
  var reactIs_production_min_14 = reactIs_production_min.isConcurrentMode;
  var reactIs_production_min_15 = reactIs_production_min.isContextConsumer;
  var reactIs_production_min_16 = reactIs_production_min.isContextProvider;
  var reactIs_production_min_17 = reactIs_production_min.isElement;
  var reactIs_production_min_18 = reactIs_production_min.isForwardRef;
  var reactIs_production_min_19 = reactIs_production_min.isFragment;
  var reactIs_production_min_20 = reactIs_production_min.isProfiler;
  var reactIs_production_min_21 = reactIs_production_min.isPortal;
  var reactIs_production_min_22 = reactIs_production_min.isStrictMode;
  var reactIs = createCommonjsModule(function (module) {
    {
      module.exports = reactIs_production_min;
    }
  });
  var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };
  var FORWARD_REF_STATICS = {
    '$$typeof': true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true
  };
  var TYPE_STATICS = {};
  TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;
  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = Object.prototype;

  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      var targetStatics = TYPE_STATICS[targetComponent['$$typeof']] || REACT_STATICS;
      var sourceStatics = TYPE_STATICS[sourceComponent['$$typeof']] || REACT_STATICS;

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];

        if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);

          try {
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }

      return targetComponent;
    }

    return targetComponent;
  }

  var hoistNonReactStatics_cjs = hoistNonReactStatics;

  var EventEmitter = function () {
    function EventEmitter() {
      _classCallCheck(this, EventEmitter);

      this.listeners = [];
    }

    _createClass(EventEmitter, [{
      key: "on",
      value: function on(cb) {
        var _this = this;

        this.listeners.push(cb);
        return function () {
          var index = _this.listeners.indexOf(cb);

          if (index !== -1) _this.listeners.splice(index, 1);
        };
      }
    }, {
      key: "emit",
      value: function emit(data) {
        this.listeners.forEach(function (fn) {
          return fn(data);
        });
      }
    }]);

    return EventEmitter;
  }();

  function createChainableTypeChecker(validate) {
    function checkType(isRequired, props, propName, componentName, location, propFullName) {
      for (var _len = arguments.length, rest = new Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {
        rest[_key - 6] = arguments[_key];
      }

      return mobx.untracked(function () {
        componentName = componentName || "<<anonymous>>";
        propFullName = propFullName || propName;

        if (props[propName] == null) {
          if (isRequired) {
            var actual = props[propName] === null ? "null" : "undefined";
            return new Error("The " + location + " `" + propFullName + "` is marked as required " + "in `" + componentName + "`, but its value is `" + actual + "`.");
          }

          return null;
        } else {
          return validate.apply(undefined, [props, propName, componentName, location, propFullName].concat(rest));
        }
      });
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  function isSymbol(propType, propValue) {
    if (propType === "symbol") {
      return true;
    }

    if (propValue["@@toStringTag"] === "Symbol") {
      return true;
    }

    if (typeof Symbol === "function" && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  function getPropType(propValue) {
    var propType = _typeof(propValue);

    if (Array.isArray(propValue)) {
      return "array";
    }

    if (propValue instanceof RegExp) {
      return "object";
    }

    if (isSymbol(propType, propValue)) {
      return "symbol";
    }

    return propType;
  }

  function getPreciseType(propValue) {
    var propType = getPropType(propValue);

    if (propType === "object") {
      if (propValue instanceof Date) {
        return "date";
      } else if (propValue instanceof RegExp) {
        return "regexp";
      }
    }

    return propType;
  }

  function createObservableTypeCheckerCreator(allowNativeType, mobxType) {
    return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {
      return mobx.untracked(function () {
        if (allowNativeType) {
          if (getPropType(props[propName]) === mobxType.toLowerCase()) return null;
        }

        var mobxChecker;

        switch (mobxType) {
          case "Array":
            mobxChecker = mobx.isObservableArray;
            break;

          case "Object":
            mobxChecker = mobx.isObservableObject;
            break;

          case "Map":
            mobxChecker = mobx.isObservableMap;
            break;

          default:
            throw new Error("Unexpected mobxType: ".concat(mobxType));
        }

        var propValue = props[propName];

        if (!mobxChecker(propValue)) {
          var preciseType = getPreciseType(propValue);
          var nativeTypeExpectationMessage = allowNativeType ? " or javascript `" + mobxType.toLowerCase() + "`" : "";
          return new Error("Invalid prop `" + propFullName + "` of type `" + preciseType + "` supplied to" + " `" + componentName + "`, expected `mobx.Observable" + mobxType + "`" + nativeTypeExpectationMessage + ".");
        }

        return null;
      });
    });
  }

  function createObservableArrayOfTypeChecker(allowNativeType, typeChecker) {
    return createChainableTypeChecker(function (props, propName, componentName, location, propFullName) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 5 ? _len2 - 5 : 0), _key2 = 5; _key2 < _len2; _key2++) {
        rest[_key2 - 5] = arguments[_key2];
      }

      return mobx.untracked(function () {
        if (typeof typeChecker !== "function") {
          return new Error("Property `" + propFullName + "` of component `" + componentName + "` has " + "invalid PropType notation.");
        }

        var error = createObservableTypeCheckerCreator(allowNativeType, "Array")(props, propName, componentName);
        if (error instanceof Error) return error;
        var propValue = props[propName];

        for (var i = 0; i < propValue.length; i++) {
          error = typeChecker.apply(undefined, [propValue, i, componentName, location, propFullName + "[" + i + "]"].concat(rest));
          if (error instanceof Error) return error;
        }

        return null;
      });
    });
  }

  var observableArray = createObservableTypeCheckerCreator(false, "Array");
  var observableArrayOf = createObservableArrayOfTypeChecker.bind(null, false);
  var observableMap = createObservableTypeCheckerCreator(false, "Map");
  var observableObject = createObservableTypeCheckerCreator(false, "Object");
  var arrayOrObservableArray = createObservableTypeCheckerCreator(true, "Array");
  var arrayOrObservableArrayOf = createObservableArrayOfTypeChecker.bind(null, true);
  var objectOrObservableObject = createObservableTypeCheckerCreator(true, "Object");
  var propTypes = Object.freeze({
    observableArray: observableArray,
    observableArrayOf: observableArrayOf,
    observableMap: observableMap,
    observableObject: observableObject,
    arrayOrObservableArray: arrayOrObservableArray,
    arrayOrObservableArrayOf: arrayOrObservableArrayOf,
    objectOrObservableObject: objectOrObservableObject
  });

  function isStateless(component) {
    return !(component.prototype && component.prototype.render);
  }

  var symbolId = 0;

  function createSymbol(name) {
    if (typeof Symbol === "function") {
      return Symbol(name);
    }

    var symbol = "__$mobx-react ".concat(name, " (").concat(symbolId, ")");
    symbolId++;
    return symbol;
  }

  var createdSymbols = {};

  function newSymbol(name) {
    if (!createdSymbols[name]) {
      createdSymbols[name] = createSymbol(name);
    }

    return createdSymbols[name];
  }

  var mobxMixins = newSymbol("patchMixins");
  var mobxPatchedDefinition = newSymbol("patchedDefinition");

  function getMixins(target, methodName) {
    var mixins = target[mobxMixins] = target[mobxMixins] || {};
    var methodMixins = mixins[methodName] = mixins[methodName] || {};
    methodMixins.locks = methodMixins.locks || 0;
    methodMixins.methods = methodMixins.methods || [];
    return methodMixins;
  }

  function wrapper(realMethod, mixins) {
    var _this = this;

    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    mixins.locks++;

    try {
      var retVal;

      if (realMethod !== undefined && realMethod !== null) {
        retVal = realMethod.apply(this, args);
      }

      return retVal;
    } finally {
      mixins.locks--;

      if (mixins.locks === 0) {
        mixins.methods.forEach(function (mx) {
          mx.apply(_this, args);
        });
      }
    }
  }

  function wrapFunction(realMethod, mixins) {
    var fn = function fn() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      wrapper.call.apply(wrapper, [this, realMethod, mixins].concat(args));
    };

    return fn;
  }

  function patch(target, methodName) {
    var mixins = getMixins(target, methodName);

    for (var _len3 = arguments.length, mixinMethods = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
      mixinMethods[_key3 - 2] = arguments[_key3];
    }

    for (var _i = 0; _i < mixinMethods.length; _i++) {
      var mixinMethod = mixinMethods[_i];

      if (mixins.methods.indexOf(mixinMethod) < 0) {
        mixins.methods.push(mixinMethod);
      }
    }

    var oldDefinition = Object.getOwnPropertyDescriptor(target, methodName);

    if (oldDefinition && oldDefinition[mobxPatchedDefinition]) {
      return;
    }

    var originalMethod = target[methodName];
    var newDefinition = createDefinition(target, methodName, oldDefinition ? oldDefinition.enumerable : undefined, mixins, originalMethod);
    Object.defineProperty(target, methodName, newDefinition);
  }

  function createDefinition(target, methodName, enumerable, mixins, originalMethod) {
    var _ref;

    var wrappedFunc = wrapFunction(originalMethod, mixins);
    return _ref = {}, _defineProperty(_ref, mobxPatchedDefinition, true), _defineProperty(_ref, "get", function get() {
      return wrappedFunc;
    }), _defineProperty(_ref, "set", function set(value) {
      if (this === target) {
        wrappedFunc = wrapFunction(value, mixins);
      } else {
        var newDefinition = createDefinition(this, methodName, enumerable, mixins, value);
        Object.defineProperty(this, methodName, newDefinition);
      }
    }), _defineProperty(_ref, "configurable", true), _defineProperty(_ref, "enumerable", enumerable), _ref;
  }

  var injectorContextTypes = {
    mobxStores: objectOrObservableObject
  };
  Object.seal(injectorContextTypes);
  var proxiedInjectorProps = {
    contextTypes: {
      get: function get() {
        return injectorContextTypes;
      },
      set: function set(_) {},
      configurable: true,
      enumerable: false
    },
    isMobxInjector: {
      value: true,
      writable: true,
      configurable: true,
      enumerable: true
    }
  };

  function createStoreInjector(grabStoresFn, component, injectNames) {
    var displayName = "inject-" + (component.displayName || component.name || component.constructor && component.constructor.name || "Unknown");
    if (injectNames) displayName += "-with-" + injectNames;

    var Injector = function (_Component) {
      _inherits(Injector, _Component);

      function Injector() {
        var _getPrototypeOf2;

        var _this;

        _classCallCheck(this, Injector);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Injector)).call.apply(_getPrototypeOf2, [this].concat(args)));

        _this.storeRef = function (instance) {
          _this.wrappedInstance = instance;
        };

        return _this;
      }

      _createClass(Injector, [{
        key: "render",
        value: function render() {
          var newProps = {};

          for (var key in this.props) {
            if (this.props.hasOwnProperty(key)) {
              newProps[key] = this.props[key];
            }
          }

          var additionalProps = grabStoresFn(this.context.mobxStores || {}, newProps, this.context) || {};

          for (var _key2 in additionalProps) {
            newProps[_key2] = additionalProps[_key2];
          }

          if (!isStateless(component)) {
            newProps.ref = this.storeRef;
          }

          return React.createElement(component, newProps);
        }
      }]);

      return Injector;
    }(React.Component);

    Injector.displayName = displayName;
    hoistNonReactStatics_cjs(Injector, component);
    Injector.wrappedComponent = component;
    Object.defineProperties(Injector, proxiedInjectorProps);
    return Injector;
  }

  function grabStoresByName(storeNames) {
    return function (baseStores, nextProps) {
      storeNames.forEach(function (storeName) {
        if (storeName in nextProps) return;
        if (!(storeName in baseStores)) throw new Error("MobX injector: Store '" + storeName + "' is not available! Make sure it is provided by some Provider");
        nextProps[storeName] = baseStores[storeName];
      });
      return nextProps;
    };
  }

  function inject() {
    var grabStoresFn;

    if (typeof arguments[0] === "function") {
      grabStoresFn = arguments[0];
      return function (componentClass) {
        var injected = createStoreInjector(grabStoresFn, componentClass);
        injected.isMobxInjector = false;
        injected = observer(injected);
        injected.isMobxInjector = true;
        return injected;
      };
    } else {
      var storeNames = [];

      for (var i = 0; i < arguments.length; i++) {
        storeNames[i] = arguments[i];
      }

      grabStoresFn = grabStoresByName(storeNames);
      return function (componentClass) {
        return createStoreInjector(grabStoresFn, componentClass, storeNames.join("-"));
      };
    }
  }

  var mobxAdminProperty = mobx.$mobx || "$mobx";
  var mobxIsUnmounted = newSymbol("isUnmounted");
  var isDevtoolsEnabled = false;
  var isUsingStaticRendering = false;
  var warnedAboutObserverInjectDeprecation = false;
  var componentByNodeRegistry = typeof WeakMap !== "undefined" ? new WeakMap() : undefined;
  var renderReporter = new EventEmitter();
  var skipRenderKey = newSymbol("skipRender");
  var isForcingUpdateKey = newSymbol("isForcingUpdate");
  var ReactForwardRefSymbol = typeof React.forwardRef === "function" && React.forwardRef(function (_props, _ref) {})["$$typeof"];

  function setHiddenProp(target, prop, value) {
    if (!Object.hasOwnProperty.call(target, prop)) {
      Object.defineProperty(target, prop, {
        enumerable: false,
        configurable: true,
        writable: true,
        value: value
      });
    } else {
      target[prop] = value;
    }
  }

  function findDOMNode$1(component) {
    return null;
  }

  function reportRendering(component) {
    var node = findDOMNode$1(component);
    if (node && componentByNodeRegistry) componentByNodeRegistry.set(node, component);
    renderReporter.emit({
      event: "render",
      renderTime: component.__$mobRenderEnd - component.__$mobRenderStart,
      totalTime: Date.now() - component.__$mobRenderStart,
      component: component,
      node: node
    });
  }

  function trackComponents() {
    if (typeof WeakMap === "undefined") throw new Error("[mobx-react] tracking components is not supported in this browser.");
    if (!isDevtoolsEnabled) isDevtoolsEnabled = true;
  }

  function useStaticRendering(useStaticRendering) {
    isUsingStaticRendering = useStaticRendering;
  }

  var errorsReporter = new EventEmitter();

  function patch$1(target, funcName) {
    patch(target, funcName, reactiveMixin[funcName]);
  }

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;

    if (_typeof(objA) !== "object" || objA === null || _typeof(objB) !== "object" || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }

  function is(x, y) {
    if (x === y) {
      return x !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function makeComponentReactive(render) {
    var _this2 = this;

    if (isUsingStaticRendering === true) return render.call(this);

    function reactiveRender() {
      var _this = this;

      isRenderingPending = false;
      var exception = undefined;
      var rendering = undefined;
      reaction.track(function () {
        if (isDevtoolsEnabled) {
          _this.__$mobRenderStart = Date.now();
        }

        try {
          rendering = mobx._allowStateChanges(false, baseRender);
        } catch (e) {
          exception = e;
        }

        if (isDevtoolsEnabled) {
          _this.__$mobRenderEnd = Date.now();
        }
      });

      if (exception) {
        errorsReporter.emit(exception);
        throw exception;
      }

      return rendering;
    }

    var initialName = this.displayName || this.name || this.constructor && (this.constructor.displayName || this.constructor.name) || "<component>";
    var rootNodeID = this._reactInternalInstance && this._reactInternalInstance._rootNodeID || this._reactInternalInstance && this._reactInternalInstance._debugID || this._reactInternalFiber && this._reactInternalFiber._debugID;
    setHiddenProp(this, skipRenderKey, false);
    setHiddenProp(this, isForcingUpdateKey, false);
    var baseRender = render.bind(this);
    var isRenderingPending = false;
    var reaction = new mobx.Reaction("".concat(initialName, "#").concat(rootNodeID, ".render()"), function () {
      if (!isRenderingPending) {
        isRenderingPending = true;
        if (typeof _this2.componentWillReact === "function") _this2.componentWillReact();

        if (_this2[mobxIsUnmounted] !== true) {
          var hasError = true;

          try {
            setHiddenProp(_this2, isForcingUpdateKey, true);
            if (!_this2[skipRenderKey]) React.Component.prototype.forceUpdate.call(_this2);
            hasError = false;
          } finally {
            setHiddenProp(_this2, isForcingUpdateKey, false);
            if (hasError) reaction.dispose();
          }
        }
      }
    });
    reaction.reactComponent = this;
    reactiveRender[mobxAdminProperty] = reaction;
    this.render = reactiveRender;
    return reactiveRender.call(this);
  }

  var reactiveMixin = {
    componentWillUnmount: function componentWillUnmount() {
      if (isUsingStaticRendering === true) return;
      this.render[mobxAdminProperty] && this.render[mobxAdminProperty].dispose();
      this[mobxIsUnmounted] = true;

      if (isDevtoolsEnabled) {
        var node = findDOMNode$1(this);

        if (node && componentByNodeRegistry) {
          componentByNodeRegistry.delete(node);
        }

        renderReporter.emit({
          event: "destroy",
          component: this,
          node: node
        });
      }
    },
    componentDidMount: function componentDidMount() {
      if (isDevtoolsEnabled) {
        reportRendering(this);
      }
    },
    componentDidUpdate: function componentDidUpdate() {
      if (isDevtoolsEnabled) {
        reportRendering(this);
      }
    },
    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
      if (isUsingStaticRendering) {}

      if (this.state !== nextState) {
        return true;
      }

      return !shallowEqual(this.props, nextProps);
    }
  };

  function makeObservableProp(target, propName) {
    var valueHolderKey = newSymbol("reactProp_".concat(propName, "_valueHolder"));
    var atomHolderKey = newSymbol("reactProp_".concat(propName, "_atomHolder"));

    function getAtom() {
      if (!this[atomHolderKey]) {
        setHiddenProp(this, atomHolderKey, mobx.createAtom("reactive " + propName));
      }

      return this[atomHolderKey];
    }

    Object.defineProperty(target, propName, {
      configurable: true,
      enumerable: true,
      get: function get() {
        getAtom.call(this).reportObserved();
        return this[valueHolderKey];
      },
      set: function set(v) {
        if (!this[isForcingUpdateKey] && !shallowEqual(this[valueHolderKey], v)) {
          setHiddenProp(this, valueHolderKey, v);
          setHiddenProp(this, skipRenderKey, true);
          getAtom.call(this).reportChanged();
          setHiddenProp(this, skipRenderKey, false);
        } else {
          setHiddenProp(this, valueHolderKey, v);
        }
      }
    });
  }

  function observer(arg1, arg2) {
    if (typeof arg1 === "string") {
      throw new Error("Store names should be provided as array");
    }

    if (Array.isArray(arg1)) {
      if (!warnedAboutObserverInjectDeprecation) {
        warnedAboutObserverInjectDeprecation = true;
      }

      if (!arg2) {
        return function (componentClass) {
          return observer(arg1, componentClass);
        };
      } else {
        return inject.apply(null, arg1)(observer(arg2));
      }
    }

    var componentClass = arg1;

    if (componentClass.isMobxInjector === true) {}

    if (componentClass.__proto__ === React.PureComponent) {}

    if (ReactForwardRefSymbol && componentClass["$$typeof"] === ReactForwardRefSymbol) {
      var _baseRender = componentClass.render;
      if (typeof _baseRender !== "function") throw new Error("render property of ForwardRef was not a function");
      return React.forwardRef(function ObserverForwardRef() {
        var _arguments = arguments;
        return React__default.createElement(Observer, null, function () {
          return _baseRender.apply(undefined, _arguments);
        });
      });
    }

    if (typeof componentClass === "function" && (!componentClass.prototype || !componentClass.prototype.render) && !componentClass.isReactClass && !React.Component.isPrototypeOf(componentClass)) {
      var _class, _temp;

      var observerComponent = observer((_temp = _class = function (_Component) {
        _inherits(_class, _Component);

        function _class() {
          _classCallCheck(this, _class);

          return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));
        }

        _createClass(_class, [{
          key: "render",
          value: function render() {
            return componentClass.call(this, this.props, this.context);
          }
        }]);

        return _class;
      }(React.Component), _class.displayName = componentClass.displayName || componentClass.name, _class.contextTypes = componentClass.contextTypes, _class.propTypes = componentClass.propTypes, _class.defaultProps = componentClass.defaultProps, _temp));
      hoistNonReactStatics_cjs(observerComponent, componentClass);
      return observerComponent;
    }

    if (!componentClass) {
      throw new Error("Please pass a valid component to 'observer'");
    }

    var target = componentClass.prototype || componentClass;
    mixinLifecycleEvents(target);
    componentClass.isMobXReactObserver = true;
    makeObservableProp(target, "props");
    makeObservableProp(target, "state");
    var baseRender = target.render;

    target.render = function () {
      return makeComponentReactive.call(this, baseRender);
    };

    return componentClass;
  }

  function mixinLifecycleEvents(target) {
    ["componentDidMount", "componentWillUnmount", "componentDidUpdate"].forEach(function (funcName) {
      patch$1(target, funcName);
    });

    if (!target.shouldComponentUpdate) {
      target.shouldComponentUpdate = reactiveMixin.shouldComponentUpdate;
    } else {
      if (target.shouldComponentUpdate !== reactiveMixin.shouldComponentUpdate) {}
    }
  }

  var Observer = observer(function (_ref2) {
    var children = _ref2.children,
        observerInject = _ref2.inject,
        render = _ref2.render;
    var component = children || render;

    if (typeof component === "undefined") {
      return null;
    }

    if (!observerInject) {
      return component();
    }

    var InjectComponent = inject(observerInject)(component);
    return React__default.createElement(InjectComponent, null);
  });
  Observer.displayName = "Observer";

  var ObserverPropsCheck = function ObserverPropsCheck(props, key, componentName, location, propFullName) {
    var extraKey = key === "children" ? "render" : "children";

    if (typeof props[key] === "function" && typeof props[extraKey] === "function") {
      return new Error("Invalid prop,do not use children and render in the same time in`" + componentName);
    }

    if (typeof props[key] === "function" || typeof props[extraKey] === "function") {
      return;
    }

    return new Error("Invalid prop `" + propFullName + "` of type `" + _typeof(props[key]) + "` supplied to" + " `" + componentName + "`, expected `function`.");
  };

  Observer.propTypes = {
    render: ObserverPropsCheck,
    children: ObserverPropsCheck
  };

  function componentWillMount() {
    var state = this.constructor.getDerivedStateFromProps(this.props, this.state);

    if (state !== null && state !== undefined) {
      this.setState(state);
    }
  }

  function componentWillReceiveProps(nextProps) {
    function updater(prevState) {
      var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);
      return state !== null && state !== undefined ? state : null;
    }

    this.setState(updater.bind(this));
  }

  function componentWillUpdate(nextProps, nextState) {
    try {
      var prevProps = this.props;
      var prevState = this.state;
      this.props = nextProps;
      this.state = nextState;
      this.__reactInternalSnapshotFlag = true;
      this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);
    } finally {
      this.props = prevProps;
      this.state = prevState;
    }
  }

  componentWillMount.__suppressDeprecationWarning = true;
  componentWillReceiveProps.__suppressDeprecationWarning = true;
  componentWillUpdate.__suppressDeprecationWarning = true;

  function polyfill(Component) {
    var prototype = Component.prototype;

    if (!prototype || !prototype.isReactComponent) {
      throw new Error('Can only polyfill class components');
    }

    if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {
      return Component;
    }

    var foundWillMountName = null;
    var foundWillReceivePropsName = null;
    var foundWillUpdateName = null;

    if (typeof prototype.componentWillMount === 'function') {
      foundWillMountName = 'componentWillMount';
    } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {
      foundWillMountName = 'UNSAFE_componentWillMount';
    }

    if (typeof prototype.componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'componentWillReceiveProps';
    } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {
      foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
    }

    if (typeof prototype.componentWillUpdate === 'function') {
      foundWillUpdateName = 'componentWillUpdate';
    } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {
      foundWillUpdateName = 'UNSAFE_componentWillUpdate';
    }

    if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
      var componentName = Component.displayName || Component.name;
      var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
      throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '') + '\n\nThe above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks');
    }

    if (typeof Component.getDerivedStateFromProps === 'function') {
      prototype.componentWillMount = componentWillMount;
      prototype.componentWillReceiveProps = componentWillReceiveProps;
    }

    if (typeof prototype.getSnapshotBeforeUpdate === 'function') {
      if (typeof prototype.componentDidUpdate !== 'function') {
        throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');
      }

      prototype.componentWillUpdate = componentWillUpdate;
      var componentDidUpdate = prototype.componentDidUpdate;

      prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {
        var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;
        componentDidUpdate.call(this, prevProps, prevState, snapshot);
      };
    }

    return Component;
  }

  var specialReactKeys = {
    children: true,
    key: true,
    ref: true
  };

  var Provider = function (_Component) {
    _inherits(Provider, _Component);

    function Provider(props, context) {
      var _this;

      _classCallCheck(this, Provider);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Provider).call(this, props, context));
      _this.state = {};
      copyStores(props, _this.state);
      return _this;
    }

    _createClass(Provider, [{
      key: "render",
      value: function render() {
        return React.Children.only(this.props.children);
      }
    }, {
      key: "getChildContext",
      value: function getChildContext() {
        var stores = {};
        copyStores(this.context.mobxStores, stores);
        copyStores(this.props, stores);
        return {
          mobxStores: stores
        };
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        if (!nextProps) return null;
        if (!prevState) return nextProps;

        if (Object.keys(nextProps).filter(validStoreName).length !== Object.keys(prevState).filter(validStoreName).length) {}

        if (!nextProps.suppressChangedStoreWarning) for (var key in nextProps) {
          if (validStoreName(key) && prevState[key] !== nextProps[key]) {}
        }
        return nextProps;
      }
    }]);

    return Provider;
  }(React.Component);

  Provider.contextTypes = {
    mobxStores: objectOrObservableObject
  };
  Provider.childContextTypes = {
    mobxStores: objectOrObservableObject.isRequired
  };

  function copyStores(from, to) {
    if (!from) return;

    for (var key in from) {
      if (validStoreName(key)) to[key] = from[key];
    }
  }

  function validStoreName(key) {
    return !specialReactKeys[key] && key !== "suppressChangedStoreWarning";
  }

  polyfill(Provider);
  var storeKey = newSymbol("disposeOnUnmount");

  function runDisposersOnWillUnmount() {
    var _this = this;

    if (!this[storeKey]) {
      return;
    }

    this[storeKey].forEach(function (propKeyOrFunction) {
      var prop = typeof propKeyOrFunction === "string" ? _this[propKeyOrFunction] : propKeyOrFunction;

      if (prop !== undefined && prop !== null) {
        if (typeof prop !== "function") {
          throw new Error("[mobx-react] disposeOnUnmount only works on functions such as disposers returned by reactions, autorun, etc.");
        }

        prop();
      }
    });
    this[storeKey] = [];
  }

  function disposeOnUnmount(target, propertyKeyOrFunction) {
    if (Array.isArray(propertyKeyOrFunction)) {
      return propertyKeyOrFunction.map(function (fn) {
        return disposeOnUnmount(target, fn);
      });
    }

    if (!target instanceof React.Component) {
      throw new Error("[mobx-react] disposeOnUnmount only works on class based React components.");
    }

    if (typeof propertyKeyOrFunction !== "string" && typeof propertyKeyOrFunction !== "function") {
      throw new Error("[mobx-react] disposeOnUnmount only works if the parameter is either a property key or a function.");
    }

    var componentWasAlreadyModified = !!target[storeKey];
    var store = target[storeKey] || (target[storeKey] = []);
    store.push(propertyKeyOrFunction);

    if (!componentWasAlreadyModified) {
      patch(target, "componentWillUnmount", runDisposersOnWillUnmount);
    }

    if (typeof propertyKeyOrFunction !== "string") {
      return propertyKeyOrFunction;
    }
  }

  if (!React.Component) throw new Error("mobx-react requires React to be available");
  if (!mobx.spy) throw new Error("mobx-react requires mobx to be available");
  if (typeof reactNative.unstable_batchedUpdates === "function") mobx.configure({
    reactionScheduler: reactNative.unstable_batchedUpdates
  });

  var onError = function onError(fn) {
    return errorsReporter.on(fn);
  };

  if ((typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "undefined" ? "undefined" : _typeof(__MOBX_DEVTOOLS_GLOBAL_HOOK__)) === "object") {
    var mobx$1 = {
      spy: mobx.spy,
      extras: {
        getDebugName: mobx.getDebugName
      }
    };
    var mobxReact = {
      renderReporter: renderReporter,
      componentByNodeRegistry: componentByNodeRegistry,
      componentByNodeRegistery: componentByNodeRegistry,
      trackComponents: trackComponents
    };

    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobxReact(mobxReact, mobx$1);
  }

  exports.propTypes = propTypes;
  exports.PropTypes = propTypes;
  exports.onError = onError;
  exports.observer = observer;
  exports.Observer = Observer;
  exports.renderReporter = renderReporter;
  exports.componentByNodeRegistery = componentByNodeRegistry;
  exports.componentByNodeRegistry = componentByNodeRegistry;
  exports.trackComponents = trackComponents;
  exports.useStaticRendering = useStaticRendering;
  exports.Provider = Provider;
  exports.inject = inject;
  exports.disposeOnUnmount = disposeOnUnmount;
},10004,[10007,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FlowCancellationError = FlowCancellationError;
  exports._allowStateChanges = allowStateChanges;
  exports._allowStateChangesInsideComputed = allowStateChangesInsideComputed;
  exports._allowStateReadsEnd = allowStateReadsEnd;
  exports._allowStateReadsStart = allowStateReadsStart;
  exports._endAction = _endAction;
  exports._getAdministration = getAdministration;
  exports._getGlobalState = getGlobalState;
  exports._interceptReads = interceptReads;
  exports._isComputingDerivation = isComputingDerivation;
  exports._resetGlobalState = resetGlobalState;
  exports._startAction = _startAction;
  exports.autorun = autorun;
  exports.configure = configure;
  exports.createAtom = createAtom;
  exports.decorate = decorate;
  exports.entries = entries;
  exports.extendObservable = extendObservable;
  exports.extendShallowObservable = extendShallowObservable;
  exports.flow = flow;
  exports.get = get;
  exports.getAtom = getAtom;
  exports.getDebugName = getDebugName;
  exports.getDependencyTree = getDependencyTree;
  exports.getObserverTree = getObserverTree;
  exports.has = has;
  exports.intercept = intercept;
  exports.isAction = isAction;
  exports.isArrayLike = isArrayLike;
  exports.isComputed = isComputed;
  exports.isComputedProp = isComputedProp;
  exports.isFlowCancellationError = isFlowCancellationError;
  exports.isObservable = isObservable;
  exports.isObservableArray = isObservableArray;
  exports.isObservableObject = isObservableObject;
  exports.isObservableProp = isObservableProp;
  exports.keys = keys;
  exports.observe = observe;
  exports.onBecomeObserved = onBecomeObserved;
  exports.onBecomeUnobserved = onBecomeUnobserved;
  exports.onReactionError = onReactionError;
  exports.reaction = reaction;
  exports.remove = remove;
  exports.runInAction = runInAction;
  exports.set = set;
  exports.spy = spy;
  exports.toJS = toJS;
  exports.trace = trace;
  exports.transaction = transaction;
  exports.untracked = untracked;
  exports.values = values;
  exports.when = when;
  exports.observable = exports.isObservableSet = exports.isObservableMap = exports.isBoxedObservable = exports.computed = exports.comparer = exports.action = exports.Reaction = exports.ObservableSet = exports.ObservableMap = exports.IDerivationState = exports.$mobx = undefined;
  var OBFUSCATED_ERROR = "An invariant failed, however the error is obfuscated because this is an production build.";
  var EMPTY_ARRAY = [];
  Object.freeze(EMPTY_ARRAY);
  var EMPTY_OBJECT = {};
  Object.freeze(EMPTY_OBJECT);
  var mockGlobal = {};

  function getGlobal() {
    if (typeof window !== "undefined") {
      return window;
    }

    if (typeof global !== "undefined") {
      return global;
    }

    if (typeof self !== "undefined") {
      return self;
    }

    return mockGlobal;
  }

  function getNextId() {
    return ++globalState.mobxGuid;
  }

  function fail(message) {
    invariant(false, message);
    throw "X";
  }

  function invariant(check, message) {
    if (!check) throw new Error("[mobx] " + (message || OBFUSCATED_ERROR));
  }

  var deprecatedMessages = [];

  function deprecated(msg, thing) {
    return false;

    if (thing) {
      return deprecated("'" + msg + "', use '" + thing + "' instead.");
    }

    if (deprecatedMessages.indexOf(msg) !== -1) return false;
    deprecatedMessages.push(msg);
    return true;
  }

  function once(func) {
    var invoked = false;
    return function () {
      if (invoked) return;
      invoked = true;
      return func.apply(this, arguments);
    };
  }

  var noop = function noop() {};

  function unique(list) {
    var res = [];
    list.forEach(function (item) {
      if (res.indexOf(item) === -1) res.push(item);
    });
    return res;
  }

  function isObject(value) {
    return value !== null && typeof value === "object";
  }

  function isPlainObject(value) {
    if (value === null || typeof value !== "object") return false;
    var proto = Object.getPrototypeOf(value);
    return proto === Object.prototype || proto === null;
  }

  function convertToMap(dataStructure) {
    if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {
      return dataStructure;
    } else if (Array.isArray(dataStructure)) {
      return new Map(dataStructure);
    } else if (isPlainObject(dataStructure)) {
      var map = new Map();

      for (var key in dataStructure) {
        map.set(key, dataStructure[key]);
      }

      return map;
    } else {
      return fail("Cannot convert to map from '" + dataStructure + "'");
    }
  }

  function makeNonEnumerable(object, propNames) {
    for (var i = 0; i < propNames.length; i++) {
      addHiddenProp(object, propNames[i], object[propNames[i]]);
    }
  }

  function addHiddenProp(object, propName, value) {
    Object.defineProperty(object, propName, {
      enumerable: false,
      writable: true,
      configurable: true,
      value: value
    });
  }

  function addHiddenFinalProp(object, propName, value) {
    Object.defineProperty(object, propName, {
      enumerable: false,
      writable: false,
      configurable: true,
      value: value
    });
  }

  function assertPropertyConfigurable(object, prop) {}

  function createInstanceofPredicate(name, clazz) {
    var propName = "isMobX" + name;
    clazz.prototype[propName] = true;
    return function (x) {
      return isObject(x) && x[propName] === true;
    };
  }

  function areBothNaN(a, b) {
    return typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
  }

  function isArrayLike(x) {
    return Array.isArray(x) || isObservableArray(x);
  }

  function isES6Map(thing) {
    if (getGlobal().Map !== undefined && thing instanceof getGlobal().Map) return true;
    return false;
  }

  function isES6Set(thing) {
    return thing instanceof Set;
  }

  function iteratorToArray(it) {
    var res = [];

    while (true) {
      var r = it.next();
      if (r.done) break;
      res.push(r.value);
    }

    return res;
  }

  function primitiveSymbol() {
    return typeof Symbol === "function" && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") || "@@toPrimitive";
  }

  function toPrimitive(value) {
    return value === null ? null : typeof value === "object" ? "" + value : value;
  }

  function forOf(iter, callback) {
    var next = iter.next();

    while (!next.done) {
      callback(next.value);
      next = iter.next();
    }
  }

  function iteratorSymbol() {
    return typeof Symbol === "function" && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") || "@@iterator";
  }

  function declareIterator(prototType, iteratorFactory) {
    addHiddenFinalProp(prototType, iteratorSymbol(), iteratorFactory);
  }

  function makeIterable(iterator) {
    iterator[iteratorSymbol()] = getSelf;
    return iterator;
  }

  function toStringTagSymbol() {
    return typeof Symbol === "function" && (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") || "@@toStringTag";
  }

  function getSelf() {
    return this;
  }

  var Atom = function () {
    function Atom(name) {
      if (name === undefined) {
        name = "Atom@" + getNextId();
      }

      this.name = name;
      this.isPendingUnobservation = false;
      this.isBeingObserved = false;
      this.observers = [];
      this.observersIndexes = {};
      this.diffValue = 0;
      this.lastAccessedBy = 0;
      this.lowestObserverState = IDerivationState.NOT_TRACKING;
    }

    Atom.prototype.onBecomeUnobserved = function () {};

    Atom.prototype.onBecomeObserved = function () {};

    Atom.prototype.reportObserved = function () {
      return reportObserved(this);
    };

    Atom.prototype.reportChanged = function () {
      startBatch();
      propagateChanged(this);
      endBatch();
    };

    Atom.prototype.toString = function () {
      return this.name;
    };

    return Atom;
  }();

  var isAtom = createInstanceofPredicate("Atom", Atom);

  function createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {
    if (onBecomeObservedHandler === undefined) {
      onBecomeObservedHandler = noop;
    }

    if (onBecomeUnobservedHandler === undefined) {
      onBecomeUnobservedHandler = noop;
    }

    var atom = new Atom(name);
    onBecomeObserved(atom, onBecomeObservedHandler);
    onBecomeUnobserved(atom, onBecomeUnobservedHandler);
    return atom;
  }

  function identityComparer(a, b) {
    return a === b;
  }

  function structuralComparer(a, b) {
    return deepEqual(a, b);
  }

  function shallowComparer(a, b) {
    return deepEqual(a, b, 1);
  }

  function defaultComparer(a, b) {
    return areBothNaN(a, b) || identityComparer(a, b);
  }

  var comparer = {
    identity: identityComparer,
    structural: structuralComparer,
    default: defaultComparer,
    shallow: shallowComparer
  };
  exports.comparer = comparer;

  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  function __extends(d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }

  var _assign = function __assign() {
    _assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];

        for (var p in s) {
          if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
      }

      return t;
    };

    return _assign.apply(this, arguments);
  };

  function __read(o, n) {
    var m = typeof Symbol === "function" && o[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"];
    if (!m) return o;
    var i = m.call(o),
        r,
        ar = [],
        e;

    try {
      while ((n === undefined || n-- > 0) && !(r = i.next()).done) {
        ar.push(r.value);
      }
    } catch (error) {
      e = {
        error: error
      };
    } finally {
      try {
        if (r && !r.done && (m = i["return"])) m.call(i);
      } finally {
        if (e) throw e.error;
      }
    }

    return ar;
  }

  function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++) {
      ar = ar.concat(__read(arguments[i]));
    }

    return ar;
  }

  var enumerableDescriptorCache = {};
  var nonEnumerableDescriptorCache = {};

  function createPropertyInitializerDescriptor(prop, enumerable) {
    var cache = enumerable ? enumerableDescriptorCache : nonEnumerableDescriptorCache;
    return cache[prop] || (cache[prop] = {
      configurable: true,
      enumerable: enumerable,
      get: function get() {
        initializeInstance(this);
        return this[prop];
      },
      set: function set(value) {
        initializeInstance(this);
        this[prop] = value;
      }
    });
  }

  function initializeInstance(target) {
    if (target.__mobxDidRunLazyInitializers === true) return;
    var decorators = target.__mobxDecorators;

    if (decorators) {
      addHiddenProp(target, "__mobxDidRunLazyInitializers", true);

      for (var key in decorators) {
        var d = decorators[key];
        d.propertyCreator(target, d.prop, d.descriptor, d.decoratorTarget, d.decoratorArguments);
      }
    }
  }

  function createPropDecorator(propertyInitiallyEnumerable, propertyCreator) {
    return function decoratorFactory() {
      var decoratorArguments;

      var decorator = function decorate(target, prop, descriptor, applyImmediately) {
        if (applyImmediately === true) {
          propertyCreator(target, prop, descriptor, target, decoratorArguments);
          return null;
        }

        if (!Object.prototype.hasOwnProperty.call(target, "__mobxDecorators")) {
          var inheritedDecorators = target.__mobxDecorators;
          addHiddenProp(target, "__mobxDecorators", _assign({}, inheritedDecorators));
        }

        target.__mobxDecorators[prop] = {
          prop: prop,
          propertyCreator: propertyCreator,
          descriptor: descriptor,
          decoratorTarget: target,
          decoratorArguments: decoratorArguments
        };
        return createPropertyInitializerDescriptor(prop, propertyInitiallyEnumerable);
      };

      if (quacksLikeADecorator(arguments)) {
        decoratorArguments = EMPTY_ARRAY;
        return decorator.apply(null, arguments);
      } else {
        decoratorArguments = Array.prototype.slice.call(arguments);
        return decorator;
      }
    };
  }

  function quacksLikeADecorator(args) {
    return (args.length === 2 || args.length === 3) && typeof args[1] === "string" || args.length === 4 && args[3] === true;
  }

  function deepEnhancer(v, _, name) {
    if (isObservable(v)) return v;
    if (Array.isArray(v)) return observable.array(v, {
      name: name
    });
    if (isPlainObject(v)) return observable.object(v, undefined, {
      name: name
    });
    if (isES6Map(v)) return observable.map(v, {
      name: name
    });
    if (isES6Set(v)) return observable.set(v, {
      name: name
    });
    return v;
  }

  function shallowEnhancer(v, _, name) {
    if (v === undefined || v === null) return v;
    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) return v;
    if (Array.isArray(v)) return observable.array(v, {
      name: name,
      deep: false
    });
    if (isPlainObject(v)) return observable.object(v, undefined, {
      name: name,
      deep: false
    });
    if (isES6Map(v)) return observable.map(v, {
      name: name,
      deep: false
    });
    if (isES6Set(v)) return observable.set(v, {
      name: name,
      deep: false
    });
    return fail(false);
  }

  function referenceEnhancer(newValue) {
    return newValue;
  }

  function refStructEnhancer(v, oldValue, name) {
    if (deepEqual(v, oldValue)) return oldValue;
    return v;
  }

  function createDecoratorForEnhancer(enhancer) {
    invariant(enhancer);
    var decorator = createPropDecorator(true, function (target, propertyName, descriptor, _decoratorTarget, decoratorArgs) {
      var initialValue = descriptor ? descriptor.initializer ? descriptor.initializer.call(target) : descriptor.value : undefined;
      defineObservableProperty(target, propertyName, initialValue, enhancer);
    });
    var res = typeof process !== "undefined" && process.env && false ? function observableDecorator() {
      if (arguments.length < 2) return fail("Incorrect decorator invocation. @observable decorator doesn't expect any arguments");
      return decorator.apply(null, arguments);
    } : decorator;
    res.enhancer = enhancer;
    return res;
  }

  var defaultCreateObservableOptions = {
    deep: true,
    name: undefined,
    defaultDecorator: undefined
  };
  var shallowCreateObservableOptions = {
    deep: false,
    name: undefined,
    defaultDecorator: undefined
  };
  Object.freeze(defaultCreateObservableOptions);
  Object.freeze(shallowCreateObservableOptions);

  function asCreateObservableOptions(thing) {
    if (thing === null || thing === undefined) return defaultCreateObservableOptions;
    if (typeof thing === "string") return {
      name: thing,
      deep: true
    };
    return thing;
  }

  function getEnhancerFromOptions(options) {
    return options.defaultDecorator ? options.defaultDecorator.enhancer : options.deep === false ? referenceEnhancer : deepEnhancer;
  }

  var deepDecorator = createDecoratorForEnhancer(deepEnhancer);
  var shallowDecorator = createDecoratorForEnhancer(shallowEnhancer);
  var refDecorator = createDecoratorForEnhancer(referenceEnhancer);
  var refStructDecorator = createDecoratorForEnhancer(refStructEnhancer);

  function createObservable(v, arg2, arg3) {
    if (typeof arguments[1] === "string") {
      return deepDecorator.apply(null, arguments);
    }

    if (isObservable(v)) return v;
    var res = isPlainObject(v) ? observable.object(v, arg2, arg3) : Array.isArray(v) ? observable.array(v, arg2) : isES6Map(v) ? observable.map(v, arg2) : isES6Set(v) ? observable.set(v, arg2) : v;
    if (res !== v) return res;
    fail(false);
  }

  var observableFactories = {
    box: function box(value, options) {
      if (arguments.length > 2) incorrectlyUsedAsDecorator("box");
      var o = asCreateObservableOptions(options);
      return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);
    },
    shallowBox: function shallowBox(value, name) {
      if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowBox");
      deprecated("observable.shallowBox", "observable.box(value, { deep: false })");
      return observable.box(value, {
        name: name,
        deep: false
      });
    },
    array: function array(initialValues, options) {
      if (arguments.length > 2) incorrectlyUsedAsDecorator("array");
      var o = asCreateObservableOptions(options);
      return new ObservableArray(initialValues, getEnhancerFromOptions(o), o.name);
    },
    shallowArray: function shallowArray(initialValues, name) {
      if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowArray");
      deprecated("observable.shallowArray", "observable.array(values, { deep: false })");
      return observable.array(initialValues, {
        name: name,
        deep: false
      });
    },
    map: function map(initialValues, options) {
      if (arguments.length > 2) incorrectlyUsedAsDecorator("map");
      var o = asCreateObservableOptions(options);
      return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);
    },
    shallowMap: function shallowMap(initialValues, name) {
      if (arguments.length > 2) incorrectlyUsedAsDecorator("shallowMap");
      deprecated("observable.shallowMap", "observable.map(values, { deep: false })");
      return observable.map(initialValues, {
        name: name,
        deep: false
      });
    },
    set: function set(initialValues, options) {
      if (arguments.length > 2) incorrectlyUsedAsDecorator("set");
      var o = asCreateObservableOptions(options);
      return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);
    },
    object: function object(props, decorators, options) {
      if (typeof arguments[1] === "string") incorrectlyUsedAsDecorator("object");
      var o = asCreateObservableOptions(options);
      return extendObservable({}, props, decorators, o);
    },
    shallowObject: function shallowObject(props, name) {
      if (typeof arguments[1] === "string") incorrectlyUsedAsDecorator("shallowObject");
      deprecated("observable.shallowObject", "observable.object(values, {}, { deep: false })");
      return observable.object(props, {}, {
        name: name,
        deep: false
      });
    },
    ref: refDecorator,
    shallow: shallowDecorator,
    deep: deepDecorator,
    struct: refStructDecorator
  };
  var observable = createObservable;
  exports.observable = observable;
  Object.keys(observableFactories).forEach(function (name) {
    return observable[name] = observableFactories[name];
  });

  function incorrectlyUsedAsDecorator(methodName) {
    fail("Expected one or two arguments to observable." + methodName + ". Did you accidentally try to use observable." + methodName + " as decorator?");
  }

  var computedDecorator = createPropDecorator(false, function (instance, propertyName, descriptor, decoratorTarget, decoratorArgs) {
    var get = descriptor.get,
        set = descriptor.set;
    var options = decoratorArgs[0] || {};
    defineComputedProperty(instance, propertyName, _assign({
      get: get,
      set: set
    }, options));
  });
  var computedStructDecorator = computedDecorator({
    equals: comparer.structural
  });

  var computed = function computed(arg1, arg2, arg3) {
    if (typeof arg2 === "string") {
      return computedDecorator.apply(null, arguments);
    }

    if (arg1 !== null && typeof arg1 === "object" && arguments.length === 1) {
      return computedDecorator.apply(null, arguments);
    }

    var opts = typeof arg2 === "object" ? arg2 : {};
    opts.get = arg1;
    opts.set = typeof arg2 === "function" ? arg2 : opts.set;
    opts.name = opts.name || arg1.name || "";
    return new ComputedValue(opts);
  };

  exports.computed = computed;
  computed.struct = computedStructDecorator;
  var IDerivationState;
  exports.IDerivationState = IDerivationState;

  (function (IDerivationState) {
    IDerivationState[IDerivationState["NOT_TRACKING"] = -1] = "NOT_TRACKING";
    IDerivationState[IDerivationState["UP_TO_DATE"] = 0] = "UP_TO_DATE";
    IDerivationState[IDerivationState["POSSIBLY_STALE"] = 1] = "POSSIBLY_STALE";
    IDerivationState[IDerivationState["STALE"] = 2] = "STALE";
  })(IDerivationState || (exports.IDerivationState = IDerivationState = {}));

  var TraceMode;

  (function (TraceMode) {
    TraceMode[TraceMode["NONE"] = 0] = "NONE";
    TraceMode[TraceMode["LOG"] = 1] = "LOG";
    TraceMode[TraceMode["BREAK"] = 2] = "BREAK";
  })(TraceMode || (TraceMode = {}));

  var CaughtException = function () {
    function CaughtException(cause) {
      this.cause = cause;
    }

    return CaughtException;
  }();

  function isCaughtException(e) {
    return e instanceof CaughtException;
  }

  function shouldCompute(derivation) {
    switch (derivation.dependenciesState) {
      case IDerivationState.UP_TO_DATE:
        return false;

      case IDerivationState.NOT_TRACKING:
      case IDerivationState.STALE:
        return true;

      case IDerivationState.POSSIBLY_STALE:
        {
          var prevAllowStateReads = allowStateReadsStart(true);
          var prevUntracked = untrackedStart();
          var obs = derivation.observing,
              l = obs.length;

          for (var i = 0; i < l; i++) {
            var obj = obs[i];

            if (isComputedValue(obj)) {
              if (globalState.disableErrorBoundaries) {
                obj.get();
              } else {
                try {
                  obj.get();
                } catch (e) {
                  untrackedEnd(prevUntracked);
                  allowStateReadsEnd(prevAllowStateReads);
                  return true;
                }
              }

              if (derivation.dependenciesState === IDerivationState.STALE) {
                untrackedEnd(prevUntracked);
                allowStateReadsEnd(prevAllowStateReads);
                return true;
              }
            }
          }

          changeDependenciesStateTo0(derivation);
          untrackedEnd(prevUntracked);
          allowStateReadsEnd(prevAllowStateReads);
          return false;
        }
    }
  }

  function isComputingDerivation() {
    return globalState.trackingDerivation !== null;
  }

  function checkIfStateModificationsAreAllowed(atom) {
    var hasObservers = atom.observers.length > 0;
    if (globalState.computationDepth > 0 && hasObservers) fail(false);
    if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === "strict")) fail(false);
  }

  function checkIfStateReadsAreAllowed(observable) {}

  function trackDerivedFunction(derivation, f, context) {
    var prevAllowStateReads = allowStateReadsStart(true);
    changeDependenciesStateTo0(derivation);
    derivation.newObserving = new Array(derivation.observing.length + 100);
    derivation.unboundDepsCount = 0;
    derivation.runId = ++globalState.runId;
    var prevTracking = globalState.trackingDerivation;
    globalState.trackingDerivation = derivation;
    var result;

    if (globalState.disableErrorBoundaries === true) {
      result = f.call(context);
    } else {
      try {
        result = f.call(context);
      } catch (e) {
        result = new CaughtException(e);
      }
    }

    globalState.trackingDerivation = prevTracking;
    bindDependencies(derivation);

    if (derivation.observing.length === 0) {
      warnAboutDerivationWithoutDependencies(derivation);
    }

    allowStateReadsEnd(prevAllowStateReads);
    return result;
  }

  function warnAboutDerivationWithoutDependencies(derivation) {
    return;

    if (globalState.reactionRequiresObservable || derivation.requiresObservable) {}
  }

  function bindDependencies(derivation) {
    var prevObserving = derivation.observing;
    var observing = derivation.observing = derivation.newObserving;
    var lowestNewObservingDerivationState = IDerivationState.UP_TO_DATE;
    var i0 = 0,
        l = derivation.unboundDepsCount;

    for (var i = 0; i < l; i++) {
      var dep = observing[i];

      if (dep.diffValue === 0) {
        dep.diffValue = 1;
        if (i0 !== i) observing[i0] = dep;
        i0++;
      }

      if (dep.dependenciesState > lowestNewObservingDerivationState) {
        lowestNewObservingDerivationState = dep.dependenciesState;
      }
    }

    observing.length = i0;
    derivation.newObserving = null;
    l = prevObserving.length;

    while (l--) {
      var dep = prevObserving[l];

      if (dep.diffValue === 0) {
        removeObserver(dep, derivation);
      }

      dep.diffValue = 0;
    }

    while (i0--) {
      var dep = observing[i0];

      if (dep.diffValue === 1) {
        dep.diffValue = 0;
        addObserver(dep, derivation);
      }
    }

    if (lowestNewObservingDerivationState !== IDerivationState.UP_TO_DATE) {
      derivation.dependenciesState = lowestNewObservingDerivationState;
      derivation.onBecomeStale();
    }
  }

  function clearObserving(derivation) {
    var obs = derivation.observing;
    derivation.observing = [];
    var i = obs.length;

    while (i--) {
      removeObserver(obs[i], derivation);
    }

    derivation.dependenciesState = IDerivationState.NOT_TRACKING;
  }

  function untracked(action) {
    var prev = untrackedStart();
    var res = action();
    untrackedEnd(prev);
    return res;
  }

  function untrackedStart() {
    var prev = globalState.trackingDerivation;
    globalState.trackingDerivation = null;
    return prev;
  }

  function untrackedEnd(prev) {
    globalState.trackingDerivation = prev;
  }

  function allowStateReadsStart(allowStateReads) {
    var prev = globalState.allowStateReads;
    globalState.allowStateReads = allowStateReads;
    return prev;
  }

  function allowStateReadsEnd(prev) {
    globalState.allowStateReads = prev;
  }

  function changeDependenciesStateTo0(derivation) {
    if (derivation.dependenciesState === IDerivationState.UP_TO_DATE) return;
    derivation.dependenciesState = IDerivationState.UP_TO_DATE;
    var obs = derivation.observing;
    var i = obs.length;

    while (i--) {
      obs[i].lowestObserverState = IDerivationState.UP_TO_DATE;
    }
  }

  var currentActionId = 0;
  var nextActionId = 1;
  var functionNameDescriptor = Object.getOwnPropertyDescriptor(function () {}, "name");
  var isFunctionNameConfigurable = functionNameDescriptor && functionNameDescriptor.configurable;

  function createAction(actionName, fn) {
    var res = function res() {
      return executeAction(actionName, fn, this, arguments);
    };

    res.isMobxAction = true;
    return res;
  }

  function executeAction(actionName, fn, scope, args) {
    var runInfo = _startAction(actionName, scope, args);

    try {
      return fn.apply(scope, args);
    } catch (err) {
      runInfo.error = err;
      throw err;
    } finally {
      _endAction(runInfo);
    }
  }

  function _startAction(actionName, scope, args) {
    var notifySpy = isSpyEnabled() && !!actionName;
    var startTime = 0;

    if (notifySpy) {
      startTime = Date.now();
      var l = args && args.length || 0;
      var flattendArgs = new Array(l);
      if (l > 0) for (var i = 0; i < l; i++) {
        flattendArgs[i] = args[i];
      }
      spyReportStart({
        type: "action",
        name: actionName,
        object: scope,
        arguments: flattendArgs
      });
    }

    var prevDerivation = untrackedStart();
    startBatch();
    var prevAllowStateChanges = allowStateChangesStart(true);
    var prevAllowStateReads = allowStateReadsStart(true);
    var runInfo = {
      prevDerivation: prevDerivation,
      prevAllowStateChanges: prevAllowStateChanges,
      prevAllowStateReads: prevAllowStateReads,
      notifySpy: notifySpy,
      startTime: startTime,
      actionId: nextActionId++,
      parentActionId: currentActionId
    };
    currentActionId = runInfo.actionId;
    return runInfo;
  }

  function _endAction(runInfo) {
    if (currentActionId !== runInfo.actionId) {
      fail("invalid action stack. did you forget to finish an action?");
    }

    currentActionId = runInfo.parentActionId;

    if (runInfo.error !== undefined) {
      globalState.suppressReactionErrors = true;
    }

    allowStateChangesEnd(runInfo.prevAllowStateChanges);
    allowStateReadsEnd(runInfo.prevAllowStateReads);
    endBatch();
    untrackedEnd(runInfo.prevDerivation);

    if (runInfo.notifySpy) {
      spyReportEnd({
        time: Date.now() - runInfo.startTime
      });
    }

    globalState.suppressReactionErrors = false;
  }

  function allowStateChanges(allowStateChanges, func) {
    var prev = allowStateChangesStart(allowStateChanges);
    var res;

    try {
      res = func();
    } finally {
      allowStateChangesEnd(prev);
    }

    return res;
  }

  function allowStateChangesStart(allowStateChanges) {
    var prev = globalState.allowStateChanges;
    globalState.allowStateChanges = allowStateChanges;
    return prev;
  }

  function allowStateChangesEnd(prev) {
    globalState.allowStateChanges = prev;
  }

  function allowStateChangesInsideComputed(func) {
    var prev = globalState.computationDepth;
    globalState.computationDepth = 0;
    var res;

    try {
      res = func();
    } finally {
      globalState.computationDepth = prev;
    }

    return res;
  }

  var ObservableValue = function (_super) {
    __extends(ObservableValue, _super);

    function ObservableValue(value, enhancer, name, notifySpy, equals) {
      if (name === undefined) {
        name = "ObservableValue@" + getNextId();
      }

      if (notifySpy === undefined) {
        notifySpy = true;
      }

      if (equals === undefined) {
        equals = comparer.default;
      }

      var _this = _super.call(this, name) || this;

      _this.enhancer = enhancer;
      _this.name = name;
      _this.equals = equals;
      _this.hasUnreportedChange = false;
      _this.value = enhancer(value, undefined, name);

      if (notifySpy && isSpyEnabled()) {
        spyReport({
          type: "create",
          name: _this.name,
          newValue: "" + _this.value
        });
      }

      return _this;
    }

    ObservableValue.prototype.dehanceValue = function (value) {
      if (this.dehancer !== undefined) return this.dehancer(value);
      return value;
    };

    ObservableValue.prototype.set = function (newValue) {
      var oldValue = this.value;
      newValue = this.prepareNewValue(newValue);

      if (newValue !== globalState.UNCHANGED) {
        var notifySpy = isSpyEnabled();

        if (notifySpy) {
          spyReportStart({
            type: "update",
            name: this.name,
            newValue: newValue,
            oldValue: oldValue
          });
        }

        this.setNewValue(newValue);
        if (notifySpy) spyReportEnd();
      }
    };

    ObservableValue.prototype.prepareNewValue = function (newValue) {
      checkIfStateModificationsAreAllowed(this);

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this,
          type: "update",
          newValue: newValue
        });
        if (!change) return globalState.UNCHANGED;
        newValue = change.newValue;
      }

      newValue = this.enhancer(newValue, this.value, this.name);
      return this.equals(this.value, newValue) ? globalState.UNCHANGED : newValue;
    };

    ObservableValue.prototype.setNewValue = function (newValue) {
      var oldValue = this.value;
      this.value = newValue;
      this.reportChanged();

      if (hasListeners(this)) {
        notifyListeners(this, {
          type: "update",
          object: this,
          newValue: newValue,
          oldValue: oldValue
        });
      }
    };

    ObservableValue.prototype.get = function () {
      this.reportObserved();
      return this.dehanceValue(this.value);
    };

    ObservableValue.prototype.intercept = function (handler) {
      return registerInterceptor(this, handler);
    };

    ObservableValue.prototype.observe = function (listener, fireImmediately) {
      if (fireImmediately) listener({
        object: this,
        type: "update",
        newValue: this.value,
        oldValue: undefined
      });
      return registerListener(this, listener);
    };

    ObservableValue.prototype.toJSON = function () {
      return this.get();
    };

    ObservableValue.prototype.toString = function () {
      return this.name + "[" + this.value + "]";
    };

    ObservableValue.prototype.valueOf = function () {
      return toPrimitive(this.get());
    };

    return ObservableValue;
  }(Atom);

  ObservableValue.prototype[primitiveSymbol()] = ObservableValue.prototype.valueOf;
  var isObservableValue = createInstanceofPredicate("ObservableValue", ObservableValue);
  exports.isBoxedObservable = isObservableValue;

  var ComputedValue = function () {
    function ComputedValue(options) {
      this.dependenciesState = IDerivationState.NOT_TRACKING;
      this.observing = [];
      this.newObserving = null;
      this.isBeingObserved = false;
      this.isPendingUnobservation = false;
      this.observers = [];
      this.observersIndexes = {};
      this.diffValue = 0;
      this.runId = 0;
      this.lastAccessedBy = 0;
      this.lowestObserverState = IDerivationState.UP_TO_DATE;
      this.unboundDepsCount = 0;
      this.__mapid = "#" + getNextId();
      this.value = new CaughtException(null);
      this.isComputing = false;
      this.isRunningSetter = false;
      this.isTracing = TraceMode.NONE;
      invariant(options.get, "missing option for computed: get");
      this.derivation = options.get;
      this.name = options.name || "ComputedValue@" + getNextId();
      if (options.set) this.setter = createAction(this.name + "-setter", options.set);
      this.equals = options.equals || (options.compareStructural || options.struct ? comparer.structural : comparer.default);
      this.scope = options.context;
      this.requiresReaction = !!options.requiresReaction;
      this.keepAlive = !!options.keepAlive;
    }

    ComputedValue.prototype.onBecomeStale = function () {
      propagateMaybeChanged(this);
    };

    ComputedValue.prototype.onBecomeUnobserved = function () {};

    ComputedValue.prototype.onBecomeObserved = function () {};

    ComputedValue.prototype.get = function () {
      if (this.isComputing) fail("Cycle detected in computation " + this.name + ": " + this.derivation);

      if (globalState.inBatch === 0 && this.observers.length === 0 && !this.keepAlive) {
        if (shouldCompute(this)) {
          this.warnAboutUntrackedRead();
          startBatch();
          this.value = this.computeValue(false);
          endBatch();
        }
      } else {
        reportObserved(this);
        if (shouldCompute(this)) if (this.trackAndCompute()) propagateChangeConfirmed(this);
      }

      var result = this.value;
      if (isCaughtException(result)) throw result.cause;
      return result;
    };

    ComputedValue.prototype.peek = function () {
      var res = this.computeValue(false);
      if (isCaughtException(res)) throw res.cause;
      return res;
    };

    ComputedValue.prototype.set = function (value) {
      if (this.setter) {
        invariant(!this.isRunningSetter, "The setter of computed value '" + this.name + "' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?");
        this.isRunningSetter = true;

        try {
          this.setter.call(this.scope, value);
        } finally {
          this.isRunningSetter = false;
        }
      } else invariant(false, false);
    };

    ComputedValue.prototype.trackAndCompute = function () {
      if (isSpyEnabled()) {
        spyReport({
          object: this.scope,
          type: "compute",
          name: this.name
        });
      }

      var oldValue = this.value;
      var wasSuspended = this.dependenciesState === IDerivationState.NOT_TRACKING;
      var newValue = this.computeValue(true);
      var changed = wasSuspended || isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals(oldValue, newValue);

      if (changed) {
        this.value = newValue;
      }

      return changed;
    };

    ComputedValue.prototype.computeValue = function (track) {
      this.isComputing = true;
      globalState.computationDepth++;
      var res;

      if (track) {
        res = trackDerivedFunction(this, this.derivation, this.scope);
      } else {
        if (globalState.disableErrorBoundaries === true) {
          res = this.derivation.call(this.scope);
        } else {
          try {
            res = this.derivation.call(this.scope);
          } catch (e) {
            res = new CaughtException(e);
          }
        }
      }

      globalState.computationDepth--;
      this.isComputing = false;
      return res;
    };

    ComputedValue.prototype.suspend = function () {
      if (!this.keepAlive) {
        clearObserving(this);
        this.value = undefined;
      }
    };

    ComputedValue.prototype.observe = function (listener, fireImmediately) {
      var _this = this;

      var firstTime = true;
      var prevValue = undefined;
      return autorun(function () {
        var newValue = _this.get();

        if (!firstTime || fireImmediately) {
          var prevU = untrackedStart();
          listener({
            type: "update",
            object: _this,
            newValue: newValue,
            oldValue: prevValue
          });
          untrackedEnd(prevU);
        }

        firstTime = false;
        prevValue = newValue;
      });
    };

    ComputedValue.prototype.warnAboutUntrackedRead = function () {
      return;

      if (this.requiresReaction === true) {
        fail("[mobx] Computed value " + this.name + " is read outside a reactive context");
      }

      if (this.isTracing !== TraceMode.NONE) {}

      if (globalState.computedRequiresReaction) {}
    };

    ComputedValue.prototype.toJSON = function () {
      return this.get();
    };

    ComputedValue.prototype.toString = function () {
      return this.name + "[" + this.derivation.toString() + "]";
    };

    ComputedValue.prototype.valueOf = function () {
      return toPrimitive(this.get());
    };

    return ComputedValue;
  }();

  ComputedValue.prototype[primitiveSymbol()] = ComputedValue.prototype.valueOf;
  var isComputedValue = createInstanceofPredicate("ComputedValue", ComputedValue);
  var persistentKeys = ["mobxGuid", "spyListeners", "enforceActions", "computedRequiresReaction", "reactionRequiresObservable", "observableRequiresReaction", "allowStateReads", "disableErrorBoundaries", "runId", "UNCHANGED"];

  var MobXGlobals = function () {
    function MobXGlobals() {
      this.version = 5;
      this.UNCHANGED = {};
      this.trackingDerivation = null;
      this.computationDepth = 0;
      this.runId = 0;
      this.mobxGuid = 0;
      this.inBatch = 0;
      this.pendingUnobservations = [];
      this.pendingReactions = [];
      this.isRunningReactions = false;
      this.allowStateChanges = true;
      this.allowStateReads = true;
      this.enforceActions = false;
      this.spyListeners = [];
      this.globalReactionErrorHandlers = [];
      this.computedRequiresReaction = false;
      this.reactionRequiresObservable = false;
      this.observableRequiresReaction = false;
      this.computedConfigurable = false;
      this.disableErrorBoundaries = false;
      this.suppressReactionErrors = false;
    }

    return MobXGlobals;
  }();

  var canMergeGlobalState = true;
  var isolateCalled = false;

  var globalState = function () {
    var global = getGlobal();
    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) canMergeGlobalState = false;
    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) canMergeGlobalState = false;

    if (!canMergeGlobalState) {
      setTimeout(function () {
        if (!isolateCalled) {
          fail("There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`");
        }
      }, 1);
      return new MobXGlobals();
    } else if (global.__mobxGlobals) {
      global.__mobxInstanceCount += 1;
      if (!global.__mobxGlobals.UNCHANGED) global.__mobxGlobals.UNCHANGED = {};
      return global.__mobxGlobals;
    } else {
      global.__mobxInstanceCount = 1;
      return global.__mobxGlobals = new MobXGlobals();
    }
  }();

  function isolateGlobalState() {
    if (globalState.pendingReactions.length || globalState.inBatch || globalState.isRunningReactions) fail("isolateGlobalState should be called before MobX is running any reactions");
    isolateCalled = true;

    if (canMergeGlobalState) {
      if (--getGlobal().__mobxInstanceCount === 0) getGlobal().__mobxGlobals = undefined;
      globalState = new MobXGlobals();
    }
  }

  function getGlobalState() {
    return globalState;
  }

  function resetGlobalState() {
    var defaultGlobals = new MobXGlobals();

    for (var key in defaultGlobals) {
      if (persistentKeys.indexOf(key) === -1) globalState[key] = defaultGlobals[key];
    }

    globalState.allowStateChanges = !globalState.enforceActions;
  }

  function hasObservers(observable) {
    return observable.observers && observable.observers.length > 0;
  }

  function getObservers(observable) {
    return observable.observers;
  }

  function addObserver(observable, node) {
    var l = observable.observers.length;

    if (l) {
      observable.observersIndexes[node.__mapid] = l;
    }

    observable.observers[l] = node;
    if (observable.lowestObserverState > node.dependenciesState) observable.lowestObserverState = node.dependenciesState;
  }

  function removeObserver(observable, node) {
    if (observable.observers.length === 1) {
      observable.observers.length = 0;
      queueForUnobservation(observable);
    } else {
      var list = observable.observers;
      var map = observable.observersIndexes;
      var filler = list.pop();

      if (filler !== node) {
        var index = map[node.__mapid] || 0;

        if (index) {
          map[filler.__mapid] = index;
        } else {
          delete map[filler.__mapid];
        }

        list[index] = filler;
      }

      delete map[node.__mapid];
    }
  }

  function queueForUnobservation(observable) {
    if (observable.isPendingUnobservation === false) {
      observable.isPendingUnobservation = true;
      globalState.pendingUnobservations.push(observable);
    }
  }

  function startBatch() {
    globalState.inBatch++;
  }

  function endBatch() {
    if (--globalState.inBatch === 0) {
      runReactions();
      var list = globalState.pendingUnobservations;

      for (var i = 0; i < list.length; i++) {
        var observable = list[i];
        observable.isPendingUnobservation = false;

        if (observable.observers.length === 0) {
          if (observable.isBeingObserved) {
            observable.isBeingObserved = false;
            observable.onBecomeUnobserved();
          }

          if (observable instanceof ComputedValue) {
            observable.suspend();
          }
        }
      }

      globalState.pendingUnobservations = [];
    }
  }

  function reportObserved(observable) {
    checkIfStateReadsAreAllowed(observable);
    var derivation = globalState.trackingDerivation;

    if (derivation !== null) {
      if (derivation.runId !== observable.lastAccessedBy) {
        observable.lastAccessedBy = derivation.runId;
        derivation.newObserving[derivation.unboundDepsCount++] = observable;

        if (!observable.isBeingObserved) {
          observable.isBeingObserved = true;
          observable.onBecomeObserved();
        }
      }

      return true;
    } else if (observable.observers.length === 0 && globalState.inBatch > 0) {
      queueForUnobservation(observable);
    }

    return false;
  }

  function propagateChanged(observable) {
    if (observable.lowestObserverState === IDerivationState.STALE) return;
    observable.lowestObserverState = IDerivationState.STALE;
    var observers = observable.observers;
    var i = observers.length;

    while (i--) {
      var d = observers[i];

      if (d.dependenciesState === IDerivationState.UP_TO_DATE) {
        if (d.isTracing !== TraceMode.NONE) {
          logTraceInfo(d, observable);
        }

        d.onBecomeStale();
      }

      d.dependenciesState = IDerivationState.STALE;
    }
  }

  function propagateChangeConfirmed(observable) {
    if (observable.lowestObserverState === IDerivationState.STALE) return;
    observable.lowestObserverState = IDerivationState.STALE;
    var observers = observable.observers;
    var i = observers.length;

    while (i--) {
      var d = observers[i];
      if (d.dependenciesState === IDerivationState.POSSIBLY_STALE) d.dependenciesState = IDerivationState.STALE;else if (d.dependenciesState === IDerivationState.UP_TO_DATE) observable.lowestObserverState = IDerivationState.UP_TO_DATE;
    }
  }

  function propagateMaybeChanged(observable) {
    if (observable.lowestObserverState !== IDerivationState.UP_TO_DATE) return;
    observable.lowestObserverState = IDerivationState.POSSIBLY_STALE;
    var observers = observable.observers;
    var i = observers.length;

    while (i--) {
      var d = observers[i];

      if (d.dependenciesState === IDerivationState.UP_TO_DATE) {
        d.dependenciesState = IDerivationState.POSSIBLY_STALE;

        if (d.isTracing !== TraceMode.NONE) {
          logTraceInfo(d, observable);
        }

        d.onBecomeStale();
      }
    }
  }

  function logTraceInfo(derivation, observable) {
    if (derivation.isTracing === TraceMode.BREAK) {
      var lines = [];
      printDepTree(getDependencyTree(derivation), lines, 1);
      new Function("debugger;\n/*\nTracing '" + derivation.name + "'\n\nYou are entering this break point because derivation '" + derivation.name + "' is being traced and '" + observable.name + "' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n" + (derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\//g, "/") : "") + "\n\nThe dependencies for this derivation are:\n\n" + lines.join("\n") + "\n*/\n    ")();
    }
  }

  function printDepTree(tree, lines, depth) {
    if (lines.length >= 1000) {
      lines.push("(and many more)");
      return;
    }

    lines.push("" + new Array(depth).join("\t") + tree.name);
    if (tree.dependencies) tree.dependencies.forEach(function (child) {
      return printDepTree(child, lines, depth + 1);
    });
  }

  var Reaction = function () {
    function Reaction(name, onInvalidate, errorHandler, requiresObservable) {
      if (name === undefined) {
        name = "Reaction@" + getNextId();
      }

      if (requiresObservable === undefined) {
        requiresObservable = false;
      }

      this.name = name;
      this.onInvalidate = onInvalidate;
      this.errorHandler = errorHandler;
      this.requiresObservable = requiresObservable;
      this.observing = [];
      this.newObserving = [];
      this.dependenciesState = IDerivationState.NOT_TRACKING;
      this.diffValue = 0;
      this.runId = 0;
      this.unboundDepsCount = 0;
      this.__mapid = "#" + getNextId();
      this.isDisposed = false;
      this._isScheduled = false;
      this._isTrackPending = false;
      this._isRunning = false;
      this.isTracing = TraceMode.NONE;
    }

    Reaction.prototype.onBecomeStale = function () {
      this.schedule();
    };

    Reaction.prototype.schedule = function () {
      if (!this._isScheduled) {
        this._isScheduled = true;
        globalState.pendingReactions.push(this);
        runReactions();
      }
    };

    Reaction.prototype.isScheduled = function () {
      return this._isScheduled;
    };

    Reaction.prototype.runReaction = function () {
      if (!this.isDisposed) {
        startBatch();
        this._isScheduled = false;

        if (shouldCompute(this)) {
          this._isTrackPending = true;

          try {
            this.onInvalidate();

            if (this._isTrackPending && isSpyEnabled()) {
              spyReport({
                name: this.name,
                type: "scheduled-reaction"
              });
            }
          } catch (e) {
            this.reportExceptionInDerivation(e);
          }
        }

        endBatch();
      }
    };

    Reaction.prototype.track = function (fn) {
      startBatch();
      var notify = isSpyEnabled();
      var startTime;

      if (notify) {
        startTime = Date.now();
        spyReportStart({
          name: this.name,
          type: "reaction"
        });
      }

      this._isRunning = true;
      var result = trackDerivedFunction(this, fn, undefined);
      this._isRunning = false;
      this._isTrackPending = false;

      if (this.isDisposed) {
        clearObserving(this);
      }

      if (isCaughtException(result)) this.reportExceptionInDerivation(result.cause);

      if (notify) {
        spyReportEnd({
          time: Date.now() - startTime
        });
      }

      endBatch();
    };

    Reaction.prototype.reportExceptionInDerivation = function (error) {
      var _this = this;

      if (this.errorHandler) {
        this.errorHandler(error, this);
        return;
      }

      if (globalState.disableErrorBoundaries) throw error;
      var message = "[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '" + this + "'";

      if (globalState.suppressReactionErrors) {} else {}

      if (isSpyEnabled()) {
        spyReport({
          type: "error",
          name: this.name,
          message: message,
          error: "" + error
        });
      }

      globalState.globalReactionErrorHandlers.forEach(function (f) {
        return f(error, _this);
      });
    };

    Reaction.prototype.dispose = function () {
      if (!this.isDisposed) {
        this.isDisposed = true;

        if (!this._isRunning) {
          startBatch();
          clearObserving(this);
          endBatch();
        }
      }
    };

    Reaction.prototype.getDisposer = function () {
      var r = this.dispose.bind(this);
      r.$mobx = this;
      return r;
    };

    Reaction.prototype.toString = function () {
      return "Reaction[" + this.name + "]";
    };

    Reaction.prototype.trace = function (enterBreakPoint) {
      if (enterBreakPoint === undefined) {
        enterBreakPoint = false;
      }

      trace(this, enterBreakPoint);
    };

    return Reaction;
  }();

  exports.Reaction = Reaction;

  function onReactionError(handler) {
    globalState.globalReactionErrorHandlers.push(handler);
    return function () {
      var idx = globalState.globalReactionErrorHandlers.indexOf(handler);
      if (idx >= 0) globalState.globalReactionErrorHandlers.splice(idx, 1);
    };
  }

  var MAX_REACTION_ITERATIONS = 100;

  var reactionScheduler = function reactionScheduler(f) {
    return f();
  };

  function runReactions() {
    if (globalState.inBatch > 0 || globalState.isRunningReactions) return;
    reactionScheduler(runReactionsHelper);
  }

  function runReactionsHelper() {
    globalState.isRunningReactions = true;
    var allReactions = globalState.pendingReactions;
    var iterations = 0;

    while (allReactions.length > 0) {
      if (++iterations === MAX_REACTION_ITERATIONS) {
        allReactions.splice(0);
      }

      var remainingReactions = allReactions.splice(0);

      for (var i = 0, l = remainingReactions.length; i < l; i++) {
        remainingReactions[i].runReaction();
      }
    }

    globalState.isRunningReactions = false;
  }

  var isReaction = createInstanceofPredicate("Reaction", Reaction);

  function setReactionScheduler(fn) {
    var baseScheduler = reactionScheduler;

    reactionScheduler = function reactionScheduler(f) {
      return fn(function () {
        return baseScheduler(f);
      });
    };
  }

  function isSpyEnabled() {
    return !!globalState.spyListeners.length;
  }

  function spyReport(event) {
    if (!globalState.spyListeners.length) return;
    var listeners = globalState.spyListeners;

    for (var i = 0, l = listeners.length; i < l; i++) {
      listeners[i](event);
    }
  }

  function spyReportStart(event) {
    var change = _assign(_assign({}, event), {
      spyReportStart: true
    });

    spyReport(change);
  }

  var END_EVENT = {
    spyReportEnd: true
  };

  function spyReportEnd(change) {
    if (change) spyReport(_assign(_assign({}, change), {
      spyReportEnd: true
    }));else spyReport(END_EVENT);
  }

  function spy(listener) {
    globalState.spyListeners.push(listener);
    return once(function () {
      globalState.spyListeners = globalState.spyListeners.filter(function (l) {
        return l !== listener;
      });
    });
  }

  function dontReassignFields() {
    fail(false);
  }

  function namedActionDecorator(name) {
    return function (target, prop, descriptor) {
      if (descriptor) {
        if (descriptor.value) {
          return {
            value: createAction(name, descriptor.value),
            enumerable: false,
            configurable: true,
            writable: true
          };
        }

        var initializer_1 = descriptor.initializer;
        return {
          enumerable: false,
          configurable: true,
          writable: true,
          initializer: function initializer() {
            return createAction(name, initializer_1.call(this));
          }
        };
      }

      return actionFieldDecorator(name).apply(this, arguments);
    };
  }

  function actionFieldDecorator(name) {
    return function (target, prop, descriptor) {
      Object.defineProperty(target, prop, {
        configurable: true,
        enumerable: false,
        get: function get() {
          return undefined;
        },
        set: function set(value) {
          addHiddenProp(this, prop, action(name, value));
        }
      });
    };
  }

  function boundActionDecorator(target, propertyName, descriptor, applyToInstance) {
    if (applyToInstance === true) {
      defineBoundAction(target, propertyName, descriptor.value);
      return null;
    }

    if (descriptor) {
      return {
        configurable: true,
        enumerable: false,
        get: function get() {
          defineBoundAction(this, propertyName, descriptor.value || descriptor.initializer.call(this));
          return this[propertyName];
        },
        set: dontReassignFields
      };
    }

    return {
      enumerable: false,
      configurable: true,
      set: function set(v) {
        defineBoundAction(this, propertyName, v);
      },
      get: function get() {
        return undefined;
      }
    };
  }

  var action = function action(arg1, arg2, arg3, arg4) {
    if (arguments.length === 1 && typeof arg1 === "function") return createAction(arg1.name || "<unnamed action>", arg1);
    if (arguments.length === 2 && typeof arg2 === "function") return createAction(arg1, arg2);
    if (arguments.length === 1 && typeof arg1 === "string") return namedActionDecorator(arg1);

    if (arg4 === true) {
      arg1[arg2] = createAction(arg1.name || arg2, arg3.value);
    } else {
      return namedActionDecorator(arg2).apply(null, arguments);
    }
  };

  exports.action = action;
  action.bound = boundActionDecorator;

  function runInAction(arg1, arg2) {
    var actionName = typeof arg1 === "string" ? arg1 : arg1.name || "<unnamed action>";
    var fn = typeof arg1 === "function" ? arg1 : arg2;
    return executeAction(actionName, fn, this, undefined);
  }

  function isAction(thing) {
    return typeof thing === "function" && thing.isMobxAction === true;
  }

  function defineBoundAction(target, propertyName, fn) {
    addHiddenProp(target, propertyName, createAction(propertyName, fn.bind(target)));
  }

  function autorun(view, opts) {
    if (opts === undefined) {
      opts = EMPTY_OBJECT;
    }

    var name = opts && opts.name || view.name || "Autorun@" + getNextId();
    var runSync = !opts.scheduler && !opts.delay;
    var reaction;

    if (runSync) {
      reaction = new Reaction(name, function () {
        this.track(reactionRunner);
      }, opts.onError, opts.requiresObservable);
    } else {
      var scheduler_1 = createSchedulerFromOptions(opts);
      var isScheduled_1 = false;
      reaction = new Reaction(name, function () {
        if (!isScheduled_1) {
          isScheduled_1 = true;
          scheduler_1(function () {
            isScheduled_1 = false;
            if (!reaction.isDisposed) reaction.track(reactionRunner);
          });
        }
      }, opts.onError, opts.requiresObservable);
    }

    function reactionRunner() {
      view(reaction);
    }

    reaction.schedule();
    return reaction.getDisposer();
  }

  var run = function run(f) {
    return f();
  };

  function createSchedulerFromOptions(opts) {
    return opts.scheduler ? opts.scheduler : opts.delay ? function (f) {
      return setTimeout(f, opts.delay);
    } : run;
  }

  function reaction(expression, effect, opts) {
    if (opts === undefined) {
      opts = EMPTY_OBJECT;
    }

    if (typeof opts === "boolean") {
      opts = {
        fireImmediately: opts
      };
      deprecated("Using fireImmediately as argument is deprecated. Use '{ fireImmediately: true }' instead");
    }

    var name = opts.name || "Reaction@" + getNextId();
    var effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);
    var runSync = !opts.scheduler && !opts.delay;
    var scheduler = createSchedulerFromOptions(opts);
    var firstTime = true;
    var isScheduled = false;
    var value;
    var equals = opts.compareStructural ? comparer.structural : opts.equals || comparer.default;
    var r = new Reaction(name, function () {
      if (firstTime || runSync) {
        reactionRunner();
      } else if (!isScheduled) {
        isScheduled = true;
        scheduler(reactionRunner);
      }
    }, opts.onError, opts.requiresObservable);

    function reactionRunner() {
      isScheduled = false;
      if (r.isDisposed) return;
      var changed = false;
      r.track(function () {
        var nextValue = expression(r);
        changed = firstTime || !equals(value, nextValue);
        value = nextValue;
      });
      if (firstTime && opts.fireImmediately) effectAction(value, r);
      if (!firstTime && changed === true) effectAction(value, r);
      if (firstTime) firstTime = false;
    }

    r.schedule();
    return r.getDisposer();
  }

  function wrapErrorHandler(errorHandler, baseFn) {
    return function () {
      try {
        return baseFn.apply(this, arguments);
      } catch (e) {
        errorHandler.call(this, e);
      }
    };
  }

  function onBecomeObserved(thing, arg2, arg3) {
    return interceptHook("onBecomeObserved", thing, arg2, arg3);
  }

  function onBecomeUnobserved(thing, arg2, arg3) {
    return interceptHook("onBecomeUnobserved", thing, arg2, arg3);
  }

  function interceptHook(hook, thing, arg2, arg3) {
    var atom = typeof arg3 === "function" ? getAtom(thing, arg2) : getAtom(thing);
    var cb = typeof arg3 === "function" ? arg3 : arg2;
    var orig = atom[hook];
    if (typeof orig !== "function") return fail(false);

    atom[hook] = function () {
      orig.call(this);
      cb.call(this);
    };

    return function () {
      atom[hook] = orig;
    };
  }

  function configure(options) {
    var enforceActions = options.enforceActions,
        computedRequiresReaction = options.computedRequiresReaction,
        computedConfigurable = options.computedConfigurable,
        disableErrorBoundaries = options.disableErrorBoundaries,
        arrayBuffer = options.arrayBuffer,
        reactionScheduler = options.reactionScheduler,
        reactionRequiresObservable = options.reactionRequiresObservable,
        observableRequiresReaction = options.observableRequiresReaction;

    if (options.isolateGlobalState === true) {
      isolateGlobalState();
    }

    if (enforceActions !== undefined) {
      if (typeof enforceActions === "boolean" || enforceActions === "strict") deprecated("Deprecated value for 'enforceActions', use 'false' => '\"never\"', 'true' => '\"observed\"', '\"strict\"' => \"'always'\" instead");
      var ea = undefined;

      switch (enforceActions) {
        case true:
        case "observed":
          ea = true;
          break;

        case false:
        case "never":
          ea = false;
          break;

        case "strict":
        case "always":
          ea = "strict";
          break;

        default:
          fail("Invalid value for 'enforceActions': '" + enforceActions + "', expected 'never', 'always' or 'observed'");
      }

      globalState.enforceActions = ea;
      globalState.allowStateChanges = ea === true || ea === "strict" ? false : true;
    }

    if (computedRequiresReaction !== undefined) {
      globalState.computedRequiresReaction = !!computedRequiresReaction;
    }

    if (reactionRequiresObservable !== undefined) {
      globalState.reactionRequiresObservable = !!reactionRequiresObservable;
    }

    if (observableRequiresReaction !== undefined) {
      globalState.observableRequiresReaction = !!observableRequiresReaction;
      globalState.allowStateReads = !globalState.observableRequiresReaction;
    }

    if (computedConfigurable !== undefined) {
      globalState.computedConfigurable = !!computedConfigurable;
    }

    if (disableErrorBoundaries !== undefined) {
      if (disableErrorBoundaries === true) {}

      globalState.disableErrorBoundaries = !!disableErrorBoundaries;
    }

    if (typeof arrayBuffer === "number") {
      reserveArrayBuffer(arrayBuffer);
    }

    if (reactionScheduler) {
      setReactionScheduler(reactionScheduler);
    }
  }

  function decorate(thing, decorators) {
    var target = typeof thing === "function" ? thing.prototype : thing;

    var _loop_1 = function _loop_1(prop) {
      var propertyDecorators = decorators[prop];

      if (!Array.isArray(propertyDecorators)) {
        propertyDecorators = [propertyDecorators];
      }

      var descriptor = Object.getOwnPropertyDescriptor(target, prop);
      var newDescriptor = propertyDecorators.reduce(function (accDescriptor, decorator) {
        return decorator(target, prop, accDescriptor);
      }, descriptor);
      if (newDescriptor) Object.defineProperty(target, prop, newDescriptor);
    };

    for (var prop in decorators) {
      _loop_1(prop);
    }

    return thing;
  }

  function extendShallowObservable(target, properties, decorators) {
    deprecated("'extendShallowObservable' is deprecated, use 'extendObservable(target, props, { deep: false })' instead");
    return extendObservable(target, properties, decorators, shallowCreateObservableOptions);
  }

  function extendObservable(target, properties, decorators, options) {
    options = asCreateObservableOptions(options);
    var defaultDecorator = options.defaultDecorator || (options.deep === false ? refDecorator : deepDecorator);
    initializeInstance(target);
    asObservableObject(target, options.name, defaultDecorator.enhancer);
    startBatch();

    try {
      var keys = Object.getOwnPropertyNames(properties);

      for (var i = 0, l = keys.length; i < l; i++) {
        var key = keys[i];
        var descriptor = Object.getOwnPropertyDescriptor(properties, key);
        var decorator = decorators && key in decorators ? decorators[key] : descriptor.get ? computedDecorator : defaultDecorator;
        var resultDescriptor = decorator(target, key, descriptor, true);
        if (resultDescriptor) Object.defineProperty(target, key, resultDescriptor);
      }
    } finally {
      endBatch();
    }

    return target;
  }

  function getDependencyTree(thing, property) {
    return nodeToDependencyTree(getAtom(thing, property));
  }

  function nodeToDependencyTree(node) {
    var result = {
      name: node.name
    };
    if (node.observing && node.observing.length > 0) result.dependencies = unique(node.observing).map(nodeToDependencyTree);
    return result;
  }

  function getObserverTree(thing, property) {
    return nodeToObserverTree(getAtom(thing, property));
  }

  function nodeToObserverTree(node) {
    var result = {
      name: node.name
    };
    if (hasObservers(node)) result.observers = getObservers(node).map(nodeToObserverTree);
    return result;
  }

  var generatorId = 0;

  function FlowCancellationError() {
    this.message = "FLOW_CANCELLED";
  }

  FlowCancellationError.prototype = Object.create(Error.prototype);

  function isFlowCancellationError(error) {
    return error instanceof FlowCancellationError;
  }

  function flow(generator) {
    if (arguments.length !== 1) fail("Flow expects one 1 argument and cannot be used as decorator");
    var name = generator.name || "<unnamed flow>";
    return function () {
      var ctx = this;
      var args = arguments;
      var runId = ++generatorId;
      var gen = action(name + " - runid: " + runId + " - init", generator).apply(ctx, args);
      var rejector;
      var pendingPromise = undefined;
      var res = new Promise(function (resolve, reject) {
        var stepId = 0;
        rejector = reject;

        function onFulfilled(res) {
          pendingPromise = undefined;
          var ret;

          try {
            ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen.next).call(gen, res);
          } catch (e) {
            return reject(e);
          }

          next(ret);
        }

        function onRejected(err) {
          pendingPromise = undefined;
          var ret;

          try {
            ret = action(name + " - runid: " + runId + " - yield " + stepId++, gen.throw).call(gen, err);
          } catch (e) {
            return reject(e);
          }

          next(ret);
        }

        function next(ret) {
          if (ret && typeof ret.then === "function") {
            ret.then(next, reject);
            return;
          }

          if (ret.done) return resolve(ret.value);
          pendingPromise = Promise.resolve(ret.value);
          return pendingPromise.then(onFulfilled, onRejected);
        }

        onFulfilled(undefined);
      });
      res.cancel = action(name + " - runid: " + runId + " - cancel", function () {
        try {
          if (pendingPromise) cancelPromise(pendingPromise);
          var res_1 = gen.return(undefined);
          var yieldedPromise = Promise.resolve(res_1.value);
          yieldedPromise.then(noop, noop);
          cancelPromise(yieldedPromise);
          rejector(new FlowCancellationError());
        } catch (e) {
          rejector(e);
        }
      });
      return res;
    };
  }

  function cancelPromise(promise) {
    if (typeof promise.cancel === "function") promise.cancel();
  }

  function interceptReads(thing, propOrHandler, handler) {
    var target;

    if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {
      target = getAdministration(thing);
    } else if (isObservableObject(thing)) {
      if (typeof propOrHandler !== "string") return fail(false);
      target = getAdministration(thing, propOrHandler);
    } else {
      return fail(false);
    }

    if (target.dehancer !== undefined) return fail(false);
    target.dehancer = typeof propOrHandler === "function" ? propOrHandler : handler;
    return function () {
      target.dehancer = undefined;
    };
  }

  function intercept(thing, propOrHandler, handler) {
    if (typeof handler === "function") return interceptProperty(thing, propOrHandler, handler);else return interceptInterceptable(thing, propOrHandler);
  }

  function interceptInterceptable(thing, handler) {
    return getAdministration(thing).intercept(handler);
  }

  function interceptProperty(thing, property, handler) {
    return getAdministration(thing, property).intercept(handler);
  }

  function _isComputed(value, property) {
    if (value === null || value === undefined) return false;

    if (property !== undefined) {
      if (isObservableObject(value) === false) return false;
      if (!value.$mobx.values[property]) return false;
      var atom = getAtom(value, property);
      return isComputedValue(atom);
    }

    return isComputedValue(value);
  }

  function isComputed(value) {
    if (arguments.length > 1) return fail(false);
    return _isComputed(value);
  }

  function isComputedProp(value, propName) {
    if (typeof propName !== "string") return fail(false);
    return _isComputed(value, propName);
  }

  function _isObservable(value, property) {
    if (value === null || value === undefined) return false;

    if (property !== undefined) {
      if (isObservableObject(value)) {
        var o = value.$mobx;
        return o.values && !!o.values[property];
      }

      return false;
    }

    return isObservableObject(value) || !!value.$mobx || isAtom(value) || isReaction(value) || isComputedValue(value);
  }

  function isObservable(value) {
    if (arguments.length !== 1) fail(false);
    return _isObservable(value);
  }

  function isObservableProp(value, propName) {
    if (typeof propName !== "string") return fail(false);
    return _isObservable(value, propName);
  }

  function keys(obj) {
    if (isObservableObject(obj)) {
      return obj.$mobx.getKeys();
    }

    if (isObservableMap(obj)) {
      return iteratorToArray(obj.keys());
    }

    if (isObservableSet(obj)) {
      return iteratorToArray(obj.keys());
    }

    if (isObservableArray(obj)) {
      return obj.map(function (_, index) {
        return index;
      });
    }

    return fail(false);
  }

  function values(obj) {
    if (isObservableObject(obj)) {
      return keys(obj).map(function (key) {
        return obj[key];
      });
    }

    if (isObservableMap(obj)) {
      return keys(obj).map(function (key) {
        return obj.get(key);
      });
    }

    if (isObservableSet(obj)) {
      return iteratorToArray(obj.values());
    }

    if (isObservableArray(obj)) {
      return obj.slice();
    }

    return fail(false);
  }

  function entries(obj) {
    if (isObservableObject(obj)) {
      return keys(obj).map(function (key) {
        return [key, obj[key]];
      });
    }

    if (isObservableMap(obj)) {
      return keys(obj).map(function (key) {
        return [key, obj.get(key)];
      });
    }

    if (isObservableSet(obj)) {
      return iteratorToArray(obj.entries());
    }

    if (isObservableArray(obj)) {
      return obj.map(function (key, index) {
        return [index, key];
      });
    }

    return fail(false);
  }

  function set(obj, key, value) {
    if (arguments.length === 2 && !isObservableSet(obj)) {
      startBatch();
      var values_1 = key;

      try {
        for (var key_1 in values_1) {
          set(obj, key_1, values_1[key_1]);
        }
      } finally {
        endBatch();
      }

      return;
    }

    if (isObservableObject(obj)) {
      var adm = obj.$mobx;
      var existingObservable = adm.values[key];

      if (existingObservable) {
        adm.write(obj, key, value);
      } else {
        defineObservableProperty(obj, key, value, adm.defaultEnhancer);
      }
    } else if (isObservableMap(obj)) {
      obj.set(key, value);
    } else if (isObservableSet(obj)) {
      obj.add(key);
    } else if (isObservableArray(obj)) {
      if (typeof key !== "number") key = parseInt(key, 10);
      invariant(key >= 0, "Not a valid index: '" + key + "'");
      startBatch();
      if (key >= obj.length) obj.length = key + 1;
      obj[key] = value;
      endBatch();
    } else {
      return fail(false);
    }
  }

  function remove(obj, key) {
    if (isObservableObject(obj)) {
      obj.$mobx.remove(key);
    } else if (isObservableMap(obj)) {
      obj.delete(key);
    } else if (isObservableSet(obj)) {
      obj.delete(key);
    } else if (isObservableArray(obj)) {
      if (typeof key !== "number") key = parseInt(key, 10);
      invariant(key >= 0, "Not a valid index: '" + key + "'");
      obj.splice(key, 1);
    } else {
      return fail(false);
    }
  }

  function has(obj, key) {
    if (isObservableObject(obj)) {
      var adm = getAdministration(obj);
      adm.getKeys();
      return !!adm.values[key];
    } else if (isObservableMap(obj)) {
      return obj.has(key);
    } else if (isObservableSet(obj)) {
      return obj.has(key);
    } else if (isObservableArray(obj)) {
      return key >= 0 && key < obj.length;
    } else {
      return fail(false);
    }
  }

  function get(obj, key) {
    if (!has(obj, key)) return undefined;

    if (isObservableObject(obj)) {
      return obj[key];
    } else if (isObservableMap(obj)) {
      return obj.get(key);
    } else if (isObservableArray(obj)) {
      return obj[key];
    } else {
      return fail(false);
    }
  }

  function observe(thing, propOrCb, cbOrFire, fireImmediately) {
    if (typeof cbOrFire === "function") return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);else return observeObservable(thing, propOrCb, cbOrFire);
  }

  function observeObservable(thing, listener, fireImmediately) {
    return getAdministration(thing).observe(listener, fireImmediately);
  }

  function observeObservableProperty(thing, property, listener, fireImmediately) {
    return getAdministration(thing, property).observe(listener, fireImmediately);
  }

  var defaultOptions = {
    detectCycles: true,
    exportMapsAsObjects: true,
    recurseEverything: false
  };

  function cache(map, key, value, options) {
    if (options.detectCycles) map.set(key, value);
    return value;
  }

  function toJSHelper(source, options, __alreadySeen) {
    if (!options.recurseEverything && !isObservable(source)) return source;
    if (typeof source !== "object") return source;
    if (source === null) return null;
    if (source instanceof Date) return source;
    if (isObservableValue(source)) return toJSHelper(source.get(), options, __alreadySeen);
    if (isObservable(source)) keys(source);
    var detectCycles = options.detectCycles === true;

    if (detectCycles && source !== null && __alreadySeen.has(source)) {
      return __alreadySeen.get(source);
    }

    if (isObservableArray(source) || Array.isArray(source)) {
      var res_1 = cache(__alreadySeen, source, [], options);
      var toAdd = source.map(function (value) {
        return toJSHelper(value, options, __alreadySeen);
      });
      res_1.length = toAdd.length;

      for (var i = 0, l = toAdd.length; i < l; i++) {
        res_1[i] = toAdd[i];
      }

      return res_1;
    }

    if (isObservableSet(source) || Object.getPrototypeOf(source) === Set.prototype) {
      if (options.exportMapsAsObjects === false) {
        var res_2 = cache(__alreadySeen, source, new Set(), options);
        source.forEach(function (value) {
          res_2.add(toJSHelper(value, options, __alreadySeen));
        });
        return res_2;
      } else {
        var res_3 = cache(__alreadySeen, source, [], options);
        source.forEach(function (value) {
          res_3.push(toJSHelper(value, options, __alreadySeen));
        });
        return res_3;
      }
    }

    if (isObservableMap(source) || Object.getPrototypeOf(source) === Map.prototype) {
      if (options.exportMapsAsObjects === false) {
        var res_4 = cache(__alreadySeen, source, new Map(), options);
        source.forEach(function (value, key) {
          res_4.set(key, toJSHelper(value, options, __alreadySeen));
        });
        return res_4;
      } else {
        var res_5 = cache(__alreadySeen, source, {}, options);
        source.forEach(function (value, key) {
          res_5[key] = toJSHelper(value, options, __alreadySeen);
        });
        return res_5;
      }
    }

    var res = cache(__alreadySeen, source, {}, options);

    for (var key in source) {
      res[key] = toJSHelper(source[key], options, __alreadySeen);
    }

    return res;
  }

  function toJS(source, options) {
    if (typeof options === "boolean") options = {
      detectCycles: options
    };
    if (!options) options = defaultOptions;
    options.detectCycles = options.detectCycles === undefined ? options.recurseEverything === true : options.detectCycles === true;

    var __alreadySeen;

    if (options.detectCycles) __alreadySeen = new Map();
    return toJSHelper(source, options, __alreadySeen);
  }

  function trace() {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    var enterBreakPoint = false;
    if (typeof args[args.length - 1] === "boolean") enterBreakPoint = args.pop();
    var derivation = getAtomFromArgs(args);

    if (!derivation) {
      return fail(false);
    }

    if (derivation.isTracing === TraceMode.NONE) {}

    derivation.isTracing = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;
  }

  function getAtomFromArgs(args) {
    switch (args.length) {
      case 0:
        return globalState.trackingDerivation;

      case 1:
        return getAtom(args[0]);

      case 2:
        return getAtom(args[0], args[1]);
    }
  }

  function transaction(action, thisArg) {
    if (thisArg === undefined) {
      thisArg = undefined;
    }

    startBatch();

    try {
      return action.apply(thisArg);
    } finally {
      endBatch();
    }
  }

  function when(predicate, arg1, arg2) {
    if (arguments.length === 1 || arg1 && typeof arg1 === "object") return whenPromise(predicate, arg1);
    return _when(predicate, arg1, arg2 || {});
  }

  function _when(predicate, effect, opts) {
    var timeoutHandle;

    if (typeof opts.timeout === "number") {
      timeoutHandle = setTimeout(function () {
        if (!disposer.$mobx.isDisposed) {
          disposer();
          var error = new Error("WHEN_TIMEOUT");
          if (opts.onError) opts.onError(error);else throw error;
        }
      }, opts.timeout);
    }

    opts.name = opts.name || "When@" + getNextId();
    var effectAction = createAction(opts.name + "-effect", effect);
    var disposer = autorun(function (r) {
      if (predicate()) {
        r.dispose();
        if (timeoutHandle) clearTimeout(timeoutHandle);
        effectAction();
      }
    }, opts);
    return disposer;
  }

  function whenPromise(predicate, opts) {
    var cancel;
    var res = new Promise(function (resolve, reject) {
      var disposer = _when(predicate, resolve, _assign(_assign({}, opts), {
        onError: reject
      }));

      cancel = function cancel() {
        disposer();
        reject("WHEN_CANCELLED");
      };
    });
    res.cancel = cancel;
    return res;
  }

  function hasInterceptors(interceptable) {
    return interceptable.interceptors !== undefined && interceptable.interceptors.length > 0;
  }

  function registerInterceptor(interceptable, handler) {
    var interceptors = interceptable.interceptors || (interceptable.interceptors = []);
    interceptors.push(handler);
    return once(function () {
      var idx = interceptors.indexOf(handler);
      if (idx !== -1) interceptors.splice(idx, 1);
    });
  }

  function interceptChange(interceptable, change) {
    var prevU = untrackedStart();

    try {
      var interceptors = interceptable.interceptors;
      if (interceptors) for (var i = 0, l = interceptors.length; i < l; i++) {
        change = interceptors[i](change);
        invariant(!change || change.type, "Intercept handlers should return nothing or a change object");
        if (!change) break;
      }
      return change;
    } finally {
      untrackedEnd(prevU);
    }
  }

  function hasListeners(listenable) {
    return listenable.changeListeners !== undefined && listenable.changeListeners.length > 0;
  }

  function registerListener(listenable, handler) {
    var listeners = listenable.changeListeners || (listenable.changeListeners = []);
    listeners.push(handler);
    return once(function () {
      var idx = listeners.indexOf(handler);
      if (idx !== -1) listeners.splice(idx, 1);
    });
  }

  function notifyListeners(listenable, change) {
    var prevU = untrackedStart();
    var listeners = listenable.changeListeners;
    if (!listeners) return;
    listeners = listeners.slice();

    for (var i = 0, l = listeners.length; i < l; i++) {
      listeners[i](change);
    }

    untrackedEnd(prevU);
  }

  var MAX_SPLICE_SIZE = 10000;

  var safariPrototypeSetterInheritanceBug = function () {
    var v = false;
    var p = {};
    Object.defineProperty(p, "0", {
      set: function set() {
        v = true;
      }
    });
    Object.create(p)["0"] = 1;
    return v === false;
  }();

  var OBSERVABLE_ARRAY_BUFFER_SIZE = 0;

  var StubArray = function () {
    function StubArray() {}

    return StubArray;
  }();

  function inherit(ctor, proto) {
    if (typeof Object["setPrototypeOf"] !== "undefined") {
      Object["setPrototypeOf"](ctor.prototype, proto);
    } else if (typeof ctor.prototype.__proto__ !== "undefined") {
      ctor.prototype.__proto__ = proto;
    } else {
      ctor["prototype"] = proto;
    }
  }

  inherit(StubArray, Array.prototype);

  if (Object.isFrozen(Array)) {
    ["constructor", "push", "shift", "concat", "pop", "unshift", "replace", "find", "findIndex", "splice", "reverse", "sort"].forEach(function (key) {
      Object.defineProperty(StubArray.prototype, key, {
        configurable: true,
        writable: true,
        value: Array.prototype[key]
      });
    });
  }

  var ObservableArrayAdministration = function () {
    function ObservableArrayAdministration(name, enhancer, array, owned) {
      this.array = array;
      this.owned = owned;
      this.values = [];
      this.lastKnownLength = 0;
      this.atom = new Atom(name || "ObservableArray@" + getNextId());

      this.enhancer = function (newV, oldV) {
        return enhancer(newV, oldV, name + "[..]");
      };
    }

    ObservableArrayAdministration.prototype.dehanceValue = function (value) {
      if (this.dehancer !== undefined) return this.dehancer(value);
      return value;
    };

    ObservableArrayAdministration.prototype.dehanceValues = function (values) {
      if (this.dehancer !== undefined && values.length > 0) return values.map(this.dehancer);
      return values;
    };

    ObservableArrayAdministration.prototype.intercept = function (handler) {
      return registerInterceptor(this, handler);
    };

    ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {
      if (fireImmediately === undefined) {
        fireImmediately = false;
      }

      if (fireImmediately) {
        listener({
          object: this.array,
          type: "splice",
          index: 0,
          added: this.values.slice(),
          addedCount: this.values.length,
          removed: [],
          removedCount: 0
        });
      }

      return registerListener(this, listener);
    };

    ObservableArrayAdministration.prototype.getArrayLength = function () {
      this.atom.reportObserved();
      return this.values.length;
    };

    ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {
      if (typeof newLength !== "number" || newLength < 0) throw new Error("[mobx.array] Out of range: " + newLength);
      var currentLength = this.values.length;
      if (newLength === currentLength) return;else if (newLength > currentLength) {
        var newItems = new Array(newLength - currentLength);

        for (var i = 0; i < newLength - currentLength; i++) {
          newItems[i] = undefined;
        }

        this.spliceWithArray(currentLength, 0, newItems);
      } else this.spliceWithArray(newLength, currentLength - newLength);
    };

    ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {
      if (oldLength !== this.lastKnownLength) throw new Error("[mobx] Modification exception: the internal structure of an observable array was changed. Did you use peek() to change it?");
      this.lastKnownLength += delta;
      if (delta > 0 && oldLength + delta + 1 > OBSERVABLE_ARRAY_BUFFER_SIZE) reserveArrayBuffer(oldLength + delta + 1);
    };

    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {
      var _this = this;

      checkIfStateModificationsAreAllowed(this.atom);
      var length = this.values.length;
      if (index === undefined) index = 0;else if (index > length) index = length;else if (index < 0) index = Math.max(0, length + index);
      if (arguments.length === 1) deleteCount = length - index;else if (deleteCount === undefined || deleteCount === null) deleteCount = 0;else deleteCount = Math.max(0, Math.min(deleteCount, length - index));
      if (newItems === undefined) newItems = EMPTY_ARRAY;

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: this.array,
          type: "splice",
          index: index,
          removedCount: deleteCount,
          added: newItems
        });
        if (!change) return EMPTY_ARRAY;
        deleteCount = change.removedCount;
        newItems = change.added;
      }

      newItems = newItems.length === 0 ? newItems : newItems.map(function (v) {
        return _this.enhancer(v, undefined);
      });
      var lengthDelta = newItems.length - deleteCount;
      this.updateArrayLength(length, lengthDelta);
      var res = this.spliceItemsIntoValues(index, deleteCount, newItems);
      if (deleteCount !== 0 || newItems.length !== 0) this.notifyArraySplice(index, newItems, res);
      return this.dehanceValues(res);
    };

    ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {
      var _a;

      if (newItems.length < MAX_SPLICE_SIZE) {
        return (_a = this.values).splice.apply(_a, __spread([index, deleteCount], newItems));
      } else {
        var res = this.values.slice(index, index + deleteCount);
        this.values = this.values.slice(0, index).concat(newItems, this.values.slice(index + deleteCount));
        return res;
      }
    };

    ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {
      var notifySpy = !this.owned && isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        object: this.array,
        type: "update",
        index: index,
        newValue: newValue,
        oldValue: oldValue
      } : null;
      if (notifySpy) spyReportStart(_assign(_assign({}, change), {
        name: this.atom.name
      }));
      this.atom.reportChanged();
      if (notify) notifyListeners(this, change);
      if (notifySpy) spyReportEnd();
    };

    ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {
      var notifySpy = !this.owned && isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        object: this.array,
        type: "splice",
        index: index,
        removed: removed,
        added: added,
        removedCount: removed.length,
        addedCount: added.length
      } : null;
      if (notifySpy) spyReportStart(_assign(_assign({}, change), {
        name: this.atom.name
      }));
      this.atom.reportChanged();
      if (notify) notifyListeners(this, change);
      if (notifySpy) spyReportEnd();
    };

    return ObservableArrayAdministration;
  }();

  var ObservableArray = function (_super) {
    __extends(ObservableArray, _super);

    function ObservableArray(initialValues, enhancer, name, owned) {
      if (name === undefined) {
        name = "ObservableArray@" + getNextId();
      }

      if (owned === undefined) {
        owned = false;
      }

      var _this = _super.call(this) || this;

      var adm = new ObservableArrayAdministration(name, enhancer, _this, owned);
      addHiddenFinalProp(_this, "$mobx", adm);

      if (initialValues && initialValues.length) {
        var prev = allowStateChangesStart(true);

        _this.spliceWithArray(0, 0, initialValues);

        allowStateChangesEnd(prev);
      }

      if (safariPrototypeSetterInheritanceBug) {
        Object.defineProperty(adm.array, "0", ENTRY_0);
      }

      return _this;
    }

    ObservableArray.prototype.intercept = function (handler) {
      return this.$mobx.intercept(handler);
    };

    ObservableArray.prototype.observe = function (listener, fireImmediately) {
      if (fireImmediately === undefined) {
        fireImmediately = false;
      }

      return this.$mobx.observe(listener, fireImmediately);
    };

    ObservableArray.prototype.clear = function () {
      return this.splice(0);
    };

    ObservableArray.prototype.concat = function () {
      var arrays = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        arrays[_i] = arguments[_i];
      }

      this.$mobx.atom.reportObserved();
      return Array.prototype.concat.apply(this.peek(), arrays.map(function (a) {
        return isObservableArray(a) ? a.peek() : a;
      }));
    };

    ObservableArray.prototype.replace = function (newItems) {
      return this.$mobx.spliceWithArray(0, this.$mobx.values.length, newItems);
    };

    ObservableArray.prototype.toJS = function () {
      return this.slice();
    };

    ObservableArray.prototype.toJSON = function () {
      return this.toJS();
    };

    ObservableArray.prototype.peek = function () {
      this.$mobx.atom.reportObserved();
      return this.$mobx.dehanceValues(this.$mobx.values);
    };

    ObservableArray.prototype.find = function (predicate, thisArg, fromIndex) {
      if (fromIndex === undefined) {
        fromIndex = 0;
      }

      if (arguments.length === 3) deprecated("The array.find fromIndex argument to find will not be supported anymore in the next major");
      var idx = this.findIndex.apply(this, arguments);
      return idx === -1 ? undefined : this.get(idx);
    };

    ObservableArray.prototype.findIndex = function (predicate, thisArg, fromIndex) {
      if (fromIndex === undefined) {
        fromIndex = 0;
      }

      if (arguments.length === 3) deprecated("The array.findIndex fromIndex argument to find will not be supported anymore in the next major");
      var items = this.peek(),
          l = items.length;

      for (var i = fromIndex; i < l; i++) {
        if (predicate.call(thisArg, items[i], i, this)) return i;
      }

      return -1;
    };

    ObservableArray.prototype.splice = function (index, deleteCount) {
      var newItems = [];

      for (var _i = 2; _i < arguments.length; _i++) {
        newItems[_i - 2] = arguments[_i];
      }

      switch (arguments.length) {
        case 0:
          return [];

        case 1:
          return this.$mobx.spliceWithArray(index);

        case 2:
          return this.$mobx.spliceWithArray(index, deleteCount);
      }

      return this.$mobx.spliceWithArray(index, deleteCount, newItems);
    };

    ObservableArray.prototype.spliceWithArray = function (index, deleteCount, newItems) {
      return this.$mobx.spliceWithArray(index, deleteCount, newItems);
    };

    ObservableArray.prototype.push = function () {
      var items = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        items[_i] = arguments[_i];
      }

      var adm = this.$mobx;
      adm.spliceWithArray(adm.values.length, 0, items);
      return adm.values.length;
    };

    ObservableArray.prototype.pop = function () {
      return this.splice(Math.max(this.$mobx.values.length - 1, 0), 1)[0];
    };

    ObservableArray.prototype.shift = function () {
      return this.splice(0, 1)[0];
    };

    ObservableArray.prototype.unshift = function () {
      var items = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        items[_i] = arguments[_i];
      }

      var adm = this.$mobx;
      adm.spliceWithArray(0, 0, items);
      return adm.values.length;
    };

    ObservableArray.prototype.reverse = function () {
      var clone = this.slice();
      return clone.reverse.apply(clone, arguments);
    };

    ObservableArray.prototype.sort = function (compareFn) {
      var clone = this.slice();
      return clone.sort.apply(clone, arguments);
    };

    ObservableArray.prototype.remove = function (value) {
      var idx = this.$mobx.dehanceValues(this.$mobx.values).indexOf(value);

      if (idx > -1) {
        this.splice(idx, 1);
        return true;
      }

      return false;
    };

    ObservableArray.prototype.move = function (fromIndex, toIndex) {
      deprecated("observableArray.move is deprecated, use .slice() & .replace() instead");

      function checkIndex(index) {
        if (index < 0) {
          throw new Error("[mobx.array] Index out of bounds: " + index + " is negative");
        }

        var length = this.$mobx.values.length;

        if (index >= length) {
          throw new Error("[mobx.array] Index out of bounds: " + index + " is not smaller than " + length);
        }
      }

      checkIndex.call(this, fromIndex);
      checkIndex.call(this, toIndex);

      if (fromIndex === toIndex) {
        return;
      }

      var oldItems = this.$mobx.values;
      var newItems;

      if (fromIndex < toIndex) {
        newItems = __spread(oldItems.slice(0, fromIndex), oldItems.slice(fromIndex + 1, toIndex + 1), [oldItems[fromIndex]], oldItems.slice(toIndex + 1));
      } else {
        newItems = __spread(oldItems.slice(0, toIndex), [oldItems[fromIndex]], oldItems.slice(toIndex, fromIndex), oldItems.slice(fromIndex + 1));
      }

      this.replace(newItems);
    };

    ObservableArray.prototype.get = function (index) {
      var impl = this.$mobx;

      if (impl) {
        if (index < impl.values.length) {
          impl.atom.reportObserved();
          return impl.dehanceValue(impl.values[index]);
        }
      }

      return undefined;
    };

    ObservableArray.prototype.set = function (index, newValue) {
      var adm = this.$mobx;
      var values = adm.values;

      if (index < values.length) {
        checkIfStateModificationsAreAllowed(adm.atom);
        var oldValue = values[index];

        if (hasInterceptors(adm)) {
          var change = interceptChange(adm, {
            type: "update",
            object: this,
            index: index,
            newValue: newValue
          });
          if (!change) return;
          newValue = change.newValue;
        }

        newValue = adm.enhancer(newValue, oldValue);
        var changed = newValue !== oldValue;

        if (changed) {
          values[index] = newValue;
          adm.notifyArrayChildUpdate(index, newValue, oldValue);
        }
      } else if (index === values.length) {
        adm.spliceWithArray(index, 0, [newValue]);
      } else {
        throw new Error("[mobx.array] Index out of bounds, " + index + " is larger than " + values.length);
      }
    };

    return ObservableArray;
  }(StubArray);

  declareIterator(ObservableArray.prototype, function () {
    this.$mobx.atom.reportObserved();
    var self = this;
    var nextIndex = 0;
    return makeIterable({
      next: function next() {
        return nextIndex < self.length ? {
          value: self[nextIndex++],
          done: false
        } : {
          done: true,
          value: undefined
        };
      }
    });
  });
  Object.defineProperty(ObservableArray.prototype, "length", {
    enumerable: false,
    configurable: true,
    get: function get() {
      return this.$mobx.getArrayLength();
    },
    set: function set(newLength) {
      this.$mobx.setArrayLength(newLength);
    }
  });
  addHiddenProp(ObservableArray.prototype, toStringTagSymbol(), "Array");
  ["indexOf", "join", "lastIndexOf", "slice", "toString", "toLocaleString"].forEach(function (funcName) {
    var baseFunc = Array.prototype[funcName];
    invariant(typeof baseFunc === "function", "Base function not defined on Array prototype: '" + funcName + "'");
    addHiddenProp(ObservableArray.prototype, funcName, function () {
      return baseFunc.apply(this.peek(), arguments);
    });
  });
  ["every", "filter", "forEach", "map", "some"].forEach(function (funcName) {
    var baseFunc = Array.prototype[funcName];
    invariant(typeof baseFunc === "function", "Base function not defined on Array prototype: '" + funcName + "'");
    addHiddenProp(ObservableArray.prototype, funcName, function (callback, thisArg) {
      var _this = this;

      var adm = this.$mobx;
      adm.atom.reportObserved();
      var dehancedValues = adm.dehanceValues(adm.values);
      return dehancedValues[funcName](function (element, index) {
        return callback.call(thisArg, element, index, _this);
      }, thisArg);
    });
  });
  ["reduce", "reduceRight"].forEach(function (funcName) {
    addHiddenProp(ObservableArray.prototype, funcName, function () {
      var _this = this;

      var adm = this.$mobx;
      adm.atom.reportObserved();
      var callback = arguments[0];

      arguments[0] = function (accumulator, currentValue, index) {
        currentValue = adm.dehanceValue(currentValue);
        return callback(accumulator, currentValue, index, _this);
      };

      return adm.values[funcName].apply(adm.values, arguments);
    });
  });
  makeNonEnumerable(ObservableArray.prototype, ["constructor", "intercept", "observe", "clear", "concat", "get", "replace", "toJS", "toJSON", "peek", "find", "findIndex", "splice", "spliceWithArray", "push", "pop", "set", "shift", "unshift", "reverse", "sort", "remove", "move", "toString", "toLocaleString"]);
  var ENTRY_0 = createArrayEntryDescriptor(0);

  function createArrayEntryDescriptor(index) {
    return {
      enumerable: false,
      configurable: false,
      get: function get() {
        return this.get(index);
      },
      set: function set(value) {
        this.set(index, value);
      }
    };
  }

  function createArrayBufferItem(index) {
    Object.defineProperty(ObservableArray.prototype, "" + index, createArrayEntryDescriptor(index));
  }

  function reserveArrayBuffer(max) {
    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max; index++) {
      createArrayBufferItem(index);
    }

    OBSERVABLE_ARRAY_BUFFER_SIZE = max;
  }

  reserveArrayBuffer(1000);
  var isObservableArrayAdministration = createInstanceofPredicate("ObservableArrayAdministration", ObservableArrayAdministration);

  function isObservableArray(thing) {
    return isObject(thing) && isObservableArrayAdministration(thing.$mobx);
  }

  var ObservableMapMarker = {};

  var ObservableMap = function () {
    function ObservableMap(initialData, enhancer, name) {
      if (enhancer === undefined) {
        enhancer = deepEnhancer;
      }

      if (name === undefined) {
        name = "ObservableMap@" + getNextId();
      }

      this.enhancer = enhancer;
      this.name = name;
      this.$mobx = ObservableMapMarker;
      this._keysAtom = createAtom(this.name + ".keys()");

      if (typeof Map !== "function") {
        throw new Error("mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js");
      }

      this._data = new Map();
      this._hasMap = new Map();
      this.merge(initialData);
    }

    ObservableMap.prototype._has = function (key) {
      return this._data.has(key);
    };

    ObservableMap.prototype.has = function (key) {
      var _this = this;

      if (!globalState.trackingDerivation) return this._has(key);

      var entry = this._hasMap.get(key);

      if (!entry) {
        var newEntry = entry = new ObservableValue(this._has(key), referenceEnhancer, this.name + "." + stringifyKey(key) + "?", false);

        this._hasMap.set(key, newEntry);

        onBecomeUnobserved(newEntry, function () {
          return _this._hasMap.delete(key);
        });
      }

      return entry.get();
    };

    ObservableMap.prototype.set = function (key, value) {
      var hasKey = this._has(key);

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: hasKey ? "update" : "add",
          object: this,
          newValue: value,
          name: key
        });
        if (!change) return this;
        value = change.newValue;
      }

      if (hasKey) {
        this._updateValue(key, value);
      } else {
        this._addValue(key, value);
      }

      return this;
    };

    ObservableMap.prototype.delete = function (key) {
      var _this = this;

      checkIfStateModificationsAreAllowed(this._keysAtom);

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: "delete",
          object: this,
          name: key
        });
        if (!change) return false;
      }

      if (this._has(key)) {
        var notifySpy = isSpyEnabled();
        var notify = hasListeners(this);
        var change = notify || notifySpy ? {
          type: "delete",
          object: this,
          oldValue: this._data.get(key).value,
          name: key
        } : null;
        if (notifySpy) spyReportStart(_assign(_assign({}, change), {
          name: this.name,
          key: key
        }));
        transaction(function () {
          _this._keysAtom.reportChanged();

          _this._updateHasMapEntry(key, false);

          var observable = _this._data.get(key);

          observable.setNewValue(undefined);

          _this._data.delete(key);
        });
        if (notify) notifyListeners(this, change);
        if (notifySpy) spyReportEnd();
        return true;
      }

      return false;
    };

    ObservableMap.prototype._updateHasMapEntry = function (key, value) {
      var entry = this._hasMap.get(key);

      if (entry) {
        entry.setNewValue(value);
      }
    };

    ObservableMap.prototype._updateValue = function (key, newValue) {
      var observable = this._data.get(key);

      newValue = observable.prepareNewValue(newValue);

      if (newValue !== globalState.UNCHANGED) {
        var notifySpy = isSpyEnabled();
        var notify = hasListeners(this);
        var change = notify || notifySpy ? {
          type: "update",
          object: this,
          oldValue: observable.value,
          name: key,
          newValue: newValue
        } : null;
        if (notifySpy) spyReportStart(_assign(_assign({}, change), {
          name: this.name,
          key: key
        }));
        observable.setNewValue(newValue);
        if (notify) notifyListeners(this, change);
        if (notifySpy) spyReportEnd();
      }
    };

    ObservableMap.prototype._addValue = function (key, newValue) {
      var _this = this;

      checkIfStateModificationsAreAllowed(this._keysAtom);
      transaction(function () {
        var observable = new ObservableValue(newValue, _this.enhancer, _this.name + "." + stringifyKey(key), false);

        _this._data.set(key, observable);

        newValue = observable.value;

        _this._updateHasMapEntry(key, true);

        _this._keysAtom.reportChanged();
      });
      var notifySpy = isSpyEnabled();
      var notify = hasListeners(this);
      var change = notify || notifySpy ? {
        type: "add",
        object: this,
        name: key,
        newValue: newValue
      } : null;
      if (notifySpy) spyReportStart(_assign(_assign({}, change), {
        name: this.name,
        key: key
      }));
      if (notify) notifyListeners(this, change);
      if (notifySpy) spyReportEnd();
    };

    ObservableMap.prototype.get = function (key) {
      if (this.has(key)) return this.dehanceValue(this._data.get(key).get());
      return this.dehanceValue(undefined);
    };

    ObservableMap.prototype.dehanceValue = function (value) {
      if (this.dehancer !== undefined) {
        return this.dehancer(value);
      }

      return value;
    };

    ObservableMap.prototype.keys = function () {
      this._keysAtom.reportObserved();

      return this._data.keys();
    };

    ObservableMap.prototype.values = function () {
      var self = this;
      var keys = this.keys();
      return makeIterable({
        next: function next() {
          var _a = keys.next(),
              done = _a.done,
              value = _a.value;

          return {
            done: done,
            value: done ? undefined : self.get(value)
          };
        }
      });
    };

    ObservableMap.prototype.entries = function () {
      var self = this;
      var keys = this.keys();
      return makeIterable({
        next: function next() {
          var _a = keys.next(),
              done = _a.done,
              value = _a.value;

          return {
            done: done,
            value: done ? undefined : [value, self.get(value)]
          };
        }
      });
    };

    ObservableMap.prototype.forEach = function (callback, thisArg) {
      var _this = this;

      this._keysAtom.reportObserved();

      this._data.forEach(function (_, key) {
        return callback.call(thisArg, _this.get(key), key, _this);
      });
    };

    ObservableMap.prototype.merge = function (other) {
      var _this = this;

      if (isObservableMap(other)) {
        other = other.toJS();
      }

      transaction(function () {
        var prev = allowStateChangesStart(true);

        try {
          if (isPlainObject(other)) Object.keys(other).forEach(function (key) {
            return _this.set(key, other[key]);
          });else if (Array.isArray(other)) other.forEach(function (_a) {
            var _b = __read(_a, 2),
                key = _b[0],
                value = _b[1];

            return _this.set(key, value);
          });else if (isES6Map(other)) {
            if (other.constructor !== Map) fail("Cannot initialize from classes that inherit from Map: " + other.constructor.name);else other.forEach(function (value, key) {
                return _this.set(key, value);
              });
          } else if (other !== null && other !== undefined) fail("Cannot initialize map from " + other);
        } finally {
          allowStateChangesEnd(prev);
        }
      });
      return this;
    };

    ObservableMap.prototype.clear = function () {
      var _this = this;

      transaction(function () {
        untracked(function () {
          _this._data.forEach(function (_, key) {
            return _this.delete(key);
          });
        });
      });
    };

    ObservableMap.prototype.replace = function (values) {
      var _this = this;

      transaction(function () {
        var replacementMap = convertToMap(values);
        var orderedData = new Map();
        var keysReportChangedCalled = false;
        forOf(_this._data.keys(), function (key) {
          if (!replacementMap.has(key)) {
            var deleted = _this.delete(key);

            if (deleted) {
              keysReportChangedCalled = true;
            } else {
              var value = _this._data.get(key);

              orderedData.set(key, value);
            }
          }
        });
        forOf(replacementMap.entries(), function (_a) {
          var _b = __read(_a, 2),
              key = _b[0],
              value = _b[1];

          var keyExisted = _this._data.has(key);

          _this.set(key, value);

          if (_this._data.has(key)) {
            var value_1 = _this._data.get(key);

            orderedData.set(key, value_1);

            if (!keyExisted) {
              keysReportChangedCalled = true;
            }
          }
        });

        if (!keysReportChangedCalled) {
          if (_this._data.size !== orderedData.size) {
            _this._keysAtom.reportChanged();
          } else {
            var iter1 = _this._data.keys();

            var iter2 = orderedData.keys();
            var next1 = iter1.next();
            var next2 = iter2.next();

            while (!next1.done) {
              if (next1.value !== next2.value) {
                _this._keysAtom.reportChanged();

                break;
              }

              next1 = iter1.next();
              next2 = iter2.next();
            }
          }
        }

        _this._data = orderedData;
      });
      return this;
    };

    Object.defineProperty(ObservableMap.prototype, "size", {
      get: function get() {
        this._keysAtom.reportObserved();

        return this._data.size;
      },
      enumerable: true,
      configurable: true
    });

    ObservableMap.prototype.toPOJO = function () {
      var _this = this;

      var res = {};
      this.forEach(function (_, key) {
        return res[typeof key === "symbol" ? key : stringifyKey(key)] = _this.get(key);
      });
      return res;
    };

    ObservableMap.prototype.toJS = function () {
      return new Map(this);
    };

    ObservableMap.prototype.toJSON = function () {
      return this.toPOJO();
    };

    ObservableMap.prototype.toString = function () {
      var _this = this;

      return this.name + "[{ " + iteratorToArray(this.keys()).map(function (key) {
        return stringifyKey(key) + ": " + ("" + _this.get(key));
      }).join(", ") + " }]";
    };

    ObservableMap.prototype.observe = function (listener, fireImmediately) {
      false;
      return registerListener(this, listener);
    };

    ObservableMap.prototype.intercept = function (handler) {
      return registerInterceptor(this, handler);
    };

    return ObservableMap;
  }();

  exports.ObservableMap = ObservableMap;

  function stringifyKey(key) {
    if (key && key.toString) return key.toString();else return new String(key).toString();
  }

  declareIterator(ObservableMap.prototype, function () {
    return this.entries();
  });
  addHiddenFinalProp(ObservableMap.prototype, toStringTagSymbol(), "Map");
  var isObservableMap = createInstanceofPredicate("ObservableMap", ObservableMap);
  exports.isObservableMap = isObservableMap;
  var ObservableSetMarker = {};

  var ObservableSet = function () {
    function ObservableSet(initialData, enhancer, name) {
      if (enhancer === undefined) {
        enhancer = deepEnhancer;
      }

      if (name === undefined) {
        name = "ObservableSet@" + getNextId();
      }

      this.name = name;
      this.$mobx = ObservableSetMarker;
      this._data = new Set();
      this._atom = createAtom(this.name);

      if (typeof Set !== "function") {
        throw new Error("mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js");
      }

      this.enhancer = function (newV, oldV) {
        return enhancer(newV, oldV, name);
      };

      if (initialData) {
        this.replace(initialData);
      }
    }

    ObservableSet.prototype.dehanceValue = function (value) {
      if (this.dehancer !== undefined) {
        return this.dehancer(value);
      }

      return value;
    };

    ObservableSet.prototype.clear = function () {
      var _this = this;

      transaction(function () {
        untracked(function () {
          _this._data.forEach(function (value) {
            _this.delete(value);
          });
        });
      });
    };

    ObservableSet.prototype.forEach = function (callbackFn, thisArg) {
      var _this = this;

      this._atom.reportObserved();

      this._data.forEach(function (value) {
        callbackFn.call(thisArg, value, value, _this);
      });
    };

    Object.defineProperty(ObservableSet.prototype, "size", {
      get: function get() {
        this._atom.reportObserved();

        return this._data.size;
      },
      enumerable: true,
      configurable: true
    });

    ObservableSet.prototype.add = function (value) {
      var _this = this;

      checkIfStateModificationsAreAllowed(this._atom);

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: "add",
          object: this,
          newValue: value
        });
        if (!change) return this;
      }

      if (!this.has(value)) {
        transaction(function () {
          _this._data.add(_this.enhancer(value, undefined));

          _this._atom.reportChanged();
        });
        var notifySpy = isSpyEnabled();
        var notify = hasListeners(this);
        var change = notify || notifySpy ? {
          type: "add",
          object: this,
          newValue: value
        } : null;
        if (notifySpy && false) spyReportStart(change);
        if (notify) notifyListeners(this, change);
        if (notifySpy && false) spyReportEnd();
      }

      return this;
    };

    ObservableSet.prototype.delete = function (value) {
      var _this = this;

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: "delete",
          object: this,
          oldValue: value
        });
        if (!change) return false;
      }

      if (this.has(value)) {
        var notifySpy = isSpyEnabled();
        var notify = hasListeners(this);
        var change = notify || notifySpy ? {
          type: "delete",
          object: this,
          oldValue: value
        } : null;
        if (notifySpy && false) spyReportStart(_assign(_assign({}, change), {
          name: this.name
        }));
        transaction(function () {
          _this._atom.reportChanged();

          _this._data.delete(value);
        });
        if (notify) notifyListeners(this, change);
        if (notifySpy && false) spyReportEnd();
        return true;
      }

      return false;
    };

    ObservableSet.prototype.has = function (value) {
      this._atom.reportObserved();

      return this._data.has(this.dehanceValue(value));
    };

    ObservableSet.prototype.entries = function () {
      var nextIndex = 0;
      var keys = iteratorToArray(this.keys());
      var values = iteratorToArray(this.values());
      return makeIterable({
        next: function next() {
          var index = nextIndex;
          nextIndex += 1;
          return index < values.length ? {
            value: [keys[index], values[index]],
            done: false
          } : {
            done: true
          };
        }
      });
    };

    ObservableSet.prototype.keys = function () {
      return this.values();
    };

    ObservableSet.prototype.values = function () {
      this._atom.reportObserved();

      var self = this;
      var nextIndex = 0;
      var observableValues;

      if (this._data.values !== undefined) {
        observableValues = iteratorToArray(this._data.values());
      } else {
        observableValues = [];

        this._data.forEach(function (e) {
          return observableValues.push(e);
        });
      }

      return makeIterable({
        next: function next() {
          return nextIndex < observableValues.length ? {
            value: self.dehanceValue(observableValues[nextIndex++]),
            done: false
          } : {
            done: true
          };
        }
      });
    };

    ObservableSet.prototype.replace = function (other) {
      var _this = this;

      if (isObservableSet(other)) {
        other = other.toJS();
      }

      transaction(function () {
        var prev = allowStateChangesStart(true);

        try {
          if (Array.isArray(other)) {
            _this.clear();

            other.forEach(function (value) {
              return _this.add(value);
            });
          } else if (isES6Set(other)) {
            _this.clear();

            other.forEach(function (value) {
              return _this.add(value);
            });
          } else if (other !== null && other !== undefined) {
            fail("Cannot initialize set from " + other);
          }
        } finally {
          allowStateChangesEnd(prev);
        }
      });
      return this;
    };

    ObservableSet.prototype.observe = function (listener, fireImmediately) {
      false;
      return registerListener(this, listener);
    };

    ObservableSet.prototype.intercept = function (handler) {
      return registerInterceptor(this, handler);
    };

    ObservableSet.prototype.toJS = function () {
      return new Set(this);
    };

    ObservableSet.prototype.toString = function () {
      return this.name + "[ " + iteratorToArray(this.keys()).join(", ") + " ]";
    };

    return ObservableSet;
  }();

  exports.ObservableSet = ObservableSet;
  declareIterator(ObservableSet.prototype, function () {
    return this.values();
  });
  addHiddenFinalProp(ObservableSet.prototype, toStringTagSymbol(), "Set");
  var isObservableSet = createInstanceofPredicate("ObservableSet", ObservableSet);
  exports.isObservableSet = isObservableSet;

  var ObservableObjectAdministration = function () {
    function ObservableObjectAdministration(target, name, defaultEnhancer) {
      this.target = target;
      this.name = name;
      this.defaultEnhancer = defaultEnhancer;
      this.values = {};
    }

    ObservableObjectAdministration.prototype.read = function (owner, key) {
      if (this.target !== owner) {
        this.illegalAccess(owner, key);
        if (!this.values[key]) return undefined;
      }

      return this.values[key].get();
    };

    ObservableObjectAdministration.prototype.write = function (owner, key, newValue) {
      var instance = this.target;

      if (instance !== owner) {
        this.illegalAccess(owner, key);
      }

      var observable = this.values[key];

      if (observable instanceof ComputedValue) {
        observable.set(newValue);
        return;
      }

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          type: "update",
          object: instance,
          name: key,
          newValue: newValue
        });
        if (!change) return;
        newValue = change.newValue;
      }

      newValue = observable.prepareNewValue(newValue);

      if (newValue !== globalState.UNCHANGED) {
        var notify = hasListeners(this);
        var notifySpy = isSpyEnabled();
        var change = notify || notifySpy ? {
          type: "update",
          object: instance,
          oldValue: observable.value,
          name: key,
          newValue: newValue
        } : null;
        if (notifySpy) spyReportStart(_assign(_assign({}, change), {
          name: this.name,
          key: key
        }));
        observable.setNewValue(newValue);
        if (notify) notifyListeners(this, change);
        if (notifySpy) spyReportEnd();
      }
    };

    ObservableObjectAdministration.prototype.remove = function (key) {
      if (!this.values[key]) return;
      var target = this.target;

      if (hasInterceptors(this)) {
        var change = interceptChange(this, {
          object: target,
          name: key,
          type: "remove"
        });
        if (!change) return;
      }

      try {
        startBatch();
        var notify = hasListeners(this);
        var notifySpy = isSpyEnabled();
        var oldValue = this.values[key].get();
        if (this.keys) this.keys.remove(key);
        delete this.values[key];
        delete this.target[key];
        var change = notify || notifySpy ? {
          type: "remove",
          object: target,
          oldValue: oldValue,
          name: key
        } : null;
        if (notifySpy) spyReportStart(_assign(_assign({}, change), {
          name: this.name,
          key: key
        }));
        if (notify) notifyListeners(this, change);
        if (notifySpy) spyReportEnd();
      } finally {
        endBatch();
      }
    };

    ObservableObjectAdministration.prototype.illegalAccess = function (owner, propName) {};

    ObservableObjectAdministration.prototype.observe = function (callback, fireImmediately) {
      false;
      return registerListener(this, callback);
    };

    ObservableObjectAdministration.prototype.intercept = function (handler) {
      return registerInterceptor(this, handler);
    };

    ObservableObjectAdministration.prototype.getKeys = function () {
      var _this = this;

      if (this.keys === undefined) {
        this.keys = new ObservableArray(Object.keys(this.values).filter(function (key) {
          return _this.values[key] instanceof ObservableValue;
        }), referenceEnhancer, "keys(" + this.name + ")", true);
      }

      return this.keys.slice();
    };

    return ObservableObjectAdministration;
  }();

  function asObservableObject(target, name, defaultEnhancer) {
    if (name === undefined) {
      name = "";
    }

    if (defaultEnhancer === undefined) {
      defaultEnhancer = deepEnhancer;
    }

    var adm = target.$mobx;
    if (adm) return adm;
    false;
    if (!isPlainObject(target)) name = (target.constructor.name || "ObservableObject") + "@" + getNextId();
    if (!name) name = "ObservableObject@" + getNextId();
    adm = new ObservableObjectAdministration(target, name, defaultEnhancer);
    addHiddenFinalProp(target, "$mobx", adm);
    return adm;
  }

  function defineObservableProperty(target, propName, newValue, enhancer) {
    var adm = asObservableObject(target);
    assertPropertyConfigurable(target, propName);

    if (hasInterceptors(adm)) {
      var change = interceptChange(adm, {
        object: target,
        name: propName,
        type: "add",
        newValue: newValue
      });
      if (!change) return;
      newValue = change.newValue;
    }

    var observable = adm.values[propName] = new ObservableValue(newValue, enhancer, adm.name + "." + propName, false);
    newValue = observable.value;
    Object.defineProperty(target, propName, generateObservablePropConfig(propName));
    if (adm.keys) adm.keys.push(propName);
    notifyPropertyAddition(adm, target, propName, newValue);
  }

  function defineComputedProperty(target, propName, options) {
    var adm = asObservableObject(target);
    options.name = adm.name + "." + propName;
    options.context = target;
    adm.values[propName] = new ComputedValue(options);
    Object.defineProperty(target, propName, generateComputedPropConfig(propName));
  }

  var observablePropertyConfigs = Object.create(null);
  var computedPropertyConfigs = Object.create(null);

  function generateObservablePropConfig(propName) {
    return observablePropertyConfigs[propName] || (observablePropertyConfigs[propName] = {
      configurable: true,
      enumerable: true,
      get: function get() {
        return this.$mobx.read(this, propName);
      },
      set: function set(v) {
        this.$mobx.write(this, propName, v);
      }
    });
  }

  function getAdministrationForComputedPropOwner(owner) {
    var adm = owner.$mobx;

    if (!adm) {
      initializeInstance(owner);
      return owner.$mobx;
    }

    return adm;
  }

  function generateComputedPropConfig(propName) {
    return computedPropertyConfigs[propName] || (computedPropertyConfigs[propName] = {
      configurable: globalState.computedConfigurable,
      enumerable: false,
      get: function get() {
        return getAdministrationForComputedPropOwner(this).read(this, propName);
      },
      set: function set(v) {
        getAdministrationForComputedPropOwner(this).write(this, propName, v);
      }
    });
  }

  function notifyPropertyAddition(adm, object, key, newValue) {
    var notify = hasListeners(adm);
    var notifySpy = isSpyEnabled();
    var change = notify || notifySpy ? {
      type: "add",
      object: object,
      name: key,
      newValue: newValue
    } : null;
    if (notifySpy) spyReportStart(_assign(_assign({}, change), {
      name: adm.name,
      key: key
    }));
    if (notify) notifyListeners(adm, change);
    if (notifySpy) spyReportEnd();
  }

  var isObservableObjectAdministration = createInstanceofPredicate("ObservableObjectAdministration", ObservableObjectAdministration);

  function isObservableObject(thing) {
    if (isObject(thing)) {
      initializeInstance(thing);
      return isObservableObjectAdministration(thing.$mobx);
    }

    return false;
  }

  function getAtom(thing, property) {
    if (typeof thing === "object" && thing !== null) {
      if (isObservableArray(thing)) {
        if (property !== undefined) fail(false);
        return thing.$mobx.atom;
      }

      if (isObservableSet(thing)) {
        return thing.$mobx;
      }

      if (isObservableMap(thing)) {
        var anyThing = thing;
        if (property === undefined) return anyThing._keysAtom;

        var observable = anyThing._data.get(property) || anyThing._hasMap.get(property);

        if (!observable) fail(false);
        return observable;
      }

      initializeInstance(thing);
      if (property && !thing.$mobx) thing[property];

      if (isObservableObject(thing)) {
        if (!property) return fail(false);
        var observable = thing.$mobx.values[property];
        if (!observable) fail(false);
        return observable;
      }

      if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {
        return thing;
      }
    } else if (typeof thing === "function") {
      if (isReaction(thing.$mobx)) {
        return thing.$mobx;
      }
    }

    return fail(false);
  }

  function getAdministration(thing, property) {
    if (!thing) fail("Expecting some object");
    if (property !== undefined) return getAdministration(getAtom(thing, property));
    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) return thing;
    if (isObservableMap(thing) || isObservableSet(thing)) return thing;
    initializeInstance(thing);
    if (thing.$mobx) return thing.$mobx;
    fail(false);
  }

  function getDebugName(thing, property) {
    var named;
    if (property !== undefined) named = getAtom(thing, property);else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) named = getAdministration(thing);else named = getAtom(thing);
    return named.name;
  }

  var toString = Object.prototype.toString;

  function deepEqual(a, b, depth) {
    if (depth === undefined) {
      depth = -1;
    }

    return eq(a, b, depth);
  }

  function eq(a, b, depth, aStack, bStack) {
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    if (a == null || b == null) return false;
    if (a !== a) return b !== b;
    var type = typeof a;
    if (type !== "function" && type !== "object" && typeof b != "object") return false;
    a = unwrap(a);
    b = unwrap(b);
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;

    switch (className) {
      case "[object RegExp]":
      case "[object String]":
        return "" + a === "" + b;

      case "[object Number]":
        if (+a !== +a) return +b !== +b;
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;

      case "[object Date]":
      case "[object Boolean]":
        return +a === +b;

      case "[object Symbol]":
        return typeof Symbol !== "undefined" && (typeof Symbol === "function" ? Symbol.valueOf : "@@valueOf").call(a) === (typeof Symbol === "function" ? Symbol.valueOf : "@@valueOf").call(b);
    }

    var areArrays = className === "[object Array]";

    if (!areArrays) {
      if (typeof a != "object" || typeof b != "object") return false;
      var aCtor = a.constructor,
          bCtor = b.constructor;

      if (aCtor !== bCtor && !(typeof aCtor === "function" && aCtor instanceof aCtor && typeof bCtor === "function" && bCtor instanceof bCtor) && "constructor" in a && "constructor" in b) {
        return false;
      }
    }

    if (depth === 0) {
      return false;
    } else if (depth < 0) {
      depth = -1;
    }

    aStack = aStack || [];
    bStack = bStack || [];
    var length = aStack.length;

    while (length--) {
      if (aStack[length] === a) return bStack[length] === b;
    }

    aStack.push(a);
    bStack.push(b);

    if (areArrays) {
      length = a.length;
      if (length !== b.length) return false;

      while (length--) {
        if (!eq(a[length], b[length], depth - 1, aStack, bStack)) return false;
      }
    } else {
      var keys = Object.keys(a);
      var key = undefined;
      length = keys.length;
      if (Object.keys(b).length !== length) return false;

      while (length--) {
        key = keys[length];
        if (!(has$1(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) return false;
      }
    }

    aStack.pop();
    bStack.pop();
    return true;
  }

  function unwrap(a) {
    if (isObservableArray(a)) return a.peek();
    if (isES6Map(a) || isObservableMap(a)) return iteratorToArray(a.entries());
    if (isES6Set(a) || isObservableSet(a)) return iteratorToArray(a.entries());
    return a;
  }

  function has$1(a, key) {
    return Object.prototype.hasOwnProperty.call(a, key);
  }

  try {
    "production";
  } catch (e) {
    var g = getGlobal();
    if (typeof process === "undefined") g.process = {};
    g.process.env = {};
  }

  (function () {
    function testCodeMinification() {}

    if (testCodeMinification.name !== "testCodeMinification" && false && typeof process !== 'undefined' && process.env.IGNORE_MOBX_MINIFY_WARNING !== "true") {
      var varName = ["process", "env", "NODE_ENV"].join(".");
    }
  })();

  var $mobx = "$mobx";
  exports.$mobx = $mobx;

  if (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === "object") {
    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({
      spy: spy,
      extras: {
        getDebugName: getDebugName
      },
      $mobx: $mobx
    });
  }
},10007,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _HomeCleanInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CleanControl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _MainMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _CommonUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _api = _$$_REQUIRE(_dependencyMap[20]);

  var _UserApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[22]);

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _BottomDrawer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _BasePage2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _Package = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[26]));

  var _CycleTask = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _RobotStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _StatusConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _common = _$$_REQUIRE(_dependencyMap[30]);

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _propTypes = _$$_REQUIRE(_dependencyMap[32]);

  var PROP = _Consts.default.PROP,
      EVENT = _Consts.default.EVENT,
      ACTION = _Consts.default.ACTION,
      AppConst = _Consts.default.AppConst,
      Colors = _Consts.default.Colors;
  var PUSH_PROPS = [PROP.FAULT, PROP.STATUS, PROP.FAN_LEVEL, PROP.SWEEP_MODE, PROP.NEW_MAP_DISCOVER, PROP.WATER_LEVEL, PROP.SWEEP_TYPE, PROP.WORKING_TIME, PROP.CLEAN_AREA, PROP.BATTERY_LEVEL, PROP.CUSTOM_SWITCH, PROP.MOP];
  var PUSH_EVENTS = [EVENT.ENTER_SILENT_MODE, EVENT.LOW_POWER_TO_CLEAN, EVENT.DUST_NO_FAN, EVENT.DUST_NO_BAG, EVENT.MAP_UPDATE, EVENT.REMOVE_MOP];
  var SYNC_PROPS = [].concat(PUSH_PROPS, [PROP.FIRMWARE_REVISION]);

  var Home = function (_BasePage) {
    (0, _inherits2.default)(Home, _BasePage);

    function Home(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, Home);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Home).call(this, _props));

      _this._afterAcceptPolicy = function () {
        _this.acceptPolicy = true;

        _this.loadMap();

        _this._notifyStatusChange(_this.appStatus, _this.pageStatus);

        _this._registerListener();

        _this._syncData(true);

        _common.logger.info("package version: " + _Package.default.version + ", ownerId: " + _miot.Device.owner.ID + ", did: " + _miot.Device.deviceID + ", userId: " + _Service.default.account.ID);
      };

      _this.onDidFocus = function () {
        _this.pageStatus = AppConst.PAGE_RESUME;

        if (_this.acceptPolicy) {
          _this._notifyStatusChange(_this.appStatus, AppConst.PAGE_RESUME);

          _this._syncData(true);
        }
      };

      _this.onDidBlur = function () {
        _this.pageStatus = AppConst.PAGE_PAUSE;

        _this._notifyStatusChange(_this.appStatus, AppConst.PAGE_PAUSE);

        _this.dataScheduler.pause();
      };

      _this._notifyStatusChange = function (appStatus, pageStatus) {
        _common.logger.info("=== appStatus: " + appStatus + ", pageStatus: " + pageStatus + " ===");

        if (_this.mapRef && _this.mapRef.onAppStatusChange) {
          _this.mapRef.onAppStatusChange(appStatus, pageStatus);
        }
      };

      _this._loadData = function () {
        return _api.SpecApi.syncProps(_this.needSyncProps).then(function (res) {
          return _this._handleSyncProps(res);
        }).catch(function () {
          return false;
        }).then(function (result) {
          return result;
        });
      };

      _this._shouldLoopSyncProps = function () {
        _common.logger.info("should loop sync props? push: " + _this.pushRecv + ", appStatus: " + _this.appStatus + ", pageStatus: " + _this.pageStatus);

        return _this.appStatus !== AppConst.APP_PAUSE && _this.pageStatus !== AppConst.PAGE_PAUSE;
      };

      _this._getSyncPropsDuration = function () {
        if (!_this.propsInit) {
          return 3500;
        }

        return 10000;
      };

      _this._syncData = function () {
        var syncAll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        if (!_this.acceptPolicy) {
          return;
        }

        if (syncAll) {
          _this.needSyncProps = SYNC_PROPS;
        }

        var loop = _this._shouldLoopSyncProps();

        var duration = _this._getSyncPropsDuration();

        _this.dataScheduler.start(_this._loadData, loop, duration);
      };

      _this._deviceNameChanged = function (device) {
        var navigation = _this.props.navigation;
        navigation.setParams({
          name: device.name
        });

        _this.forceUpdate();
      };

      _this._onMoreClick = function () {
        var status = _this.state.status;
        var navigation = _this.props.navigation;
        navigation.navigate('Settings', {
          'ishasAutoArea': _this.mapRef.ishasAutoArea,
          'isMapShow': _this.mapRef.isMapShow
        });
      };

      _this._onCloseEvent = function (eventName) {
        var event = _this.state.event;

        if (event === eventName) {
          _this.setState({
            event: null
          });
        }
      };

      _this._registerListener = function () {
        _this._deviceNameChangedListener = _miot.DeviceEvent.deviceNameChanged.addListener(_this._deviceNameChanged);

        _PushManager.default.addObserver("Home", _this._handlePushMessage, {
          props: PUSH_PROPS,
          events: PUSH_EVENTS
        });

        _this._packageDidResume = _Package.PackageEvent.packageDidResume.addListener(function () {
          _this.appStatus = AppConst.APP_RESUME;

          _this._notifyStatusChange(AppConst.APP_RESUME, _this.pageStatus);

          _this._syncData(true);

          _this._checkNewMap(_this.state);
        });
        _this._packageWillPause = _Package.PackageEvent.packageWillPause.addListener(function () {
          _this.appStatus = AppConst.APP_PAUSE;

          _this._notifyStatusChange(AppConst.APP_PAUSE, _this.pageStatus);

          _this.dataScheduler.pause();
        });
        _this._packageWillExit = _Package.PackageEvent.packageWillExit.addListener(function () {
          _this.appStatus = AppConst.APP_PAUSE;

          _this._notifyStatusChange(AppConst.APP_PAUSE, _this.pageStatus);

          _this._unregisterListener();
        });
      };

      _this._unregisterListener = function () {
        if (_this._deviceNameChangedListener) {
          _this._deviceNameChangedListener.remove();

          _this._deviceNameChangedListener = null;
        }

        if (_this._packageDidResume) {
          _this._packageDidResume.remove();

          _this._packageDidResume = null;
        }

        if (_this._packageWillPause) {
          _this._packageWillPause.remove();

          _this._packageWillPause = null;
        }

        if (_this._packageWillExit) {
          _this._packageWillExit.remove();

          _this._packageWillExit = null;
        }

        _PushManager.default.removeObserver("Home");

        _PushManager.default.reset();

        _this.dataScheduler.stop();
      };

      _this._handlePushMessage = function (msg) {
        var _ref = msg || {},
            _ref$prop = _ref.prop,
            prop = _ref$prop === undefined ? {} : _ref$prop,
            _ref$event = _ref.event,
            event = _ref$event === undefined ? {} : _ref$event;

        _this._handleSyncProps(prop);

        _this._handleEvents(event);
      };

      _this._handleEvents = function (event) {
        if (event) {
          var keys = Object.keys(event);

          if (keys.length > 0) {
            _this.setState({
              event: keys[0]
            });

            if (keys[0] === EVENT.MAP_UPDATE) {
              _this.loadMap();
            }
          }
        }
      };

      _this._filterProps = function (props) {
        var now = Date.now();
        var keys = Object.keys(props).filter(function (key) {
          return _this.state[key] !== props[key] && _this.checkProp(key, now);
        });
        var res = keys.reduce(function (result, key) {
          result[key] = props[key];
          return result;
        }, {});
        return res;
      };

      _this._checkNewMap = function (state) {
        if (_this.appStatus === AppConst.APP_RESUME && _this.pageStatus === AppConst.PAGE_RESUME) {
          var oldStatus = _this.state.status;

          _common.logger.info("check new map, appStatus: " + _this.appStatus + ", pageStatus: " + _this.pageStatus + ", notifyNewMapId: " + _this.notifyNewMapId + " state: " + JSON.stringify(state));

          var newMapDiscover = state.newMapDiscover,
              _state$status = state.status,
              status = _state$status === undefined ? oldStatus : _state$status;

          if (status === _StatusConsts.default.SWEEP) {
            _this.setState({
              showDialog: false
            });

            return;
          }

          if (newMapDiscover === 0) {
            _this.notifyNewMapId = newMapDiscover;

            _this.setState({
              showDialog: false
            });
          } else if (newMapDiscover && _this.notifyNewMapId !== newMapDiscover) {
            _this.notifyNewMapId = newMapDiscover;

            _this.setState({
              showDialog: true
            });
          }
        }
      };

      _this._handleCleanCtlProps = function (res) {
        _common.logger.info("handle clean prop: " + JSON.stringify(res));

        if (res) {
          var names = Object.keys(res);

          if (names.length > 0) {
            _this.updateTimeStamp(names);

            _this.setState((0, _objectSpread2.default)({}, res));

            if (res.status) {
              if (res.sweepMode) {
                _this.props.navigation.setParams({
                  status: res.status,
                  sweepMode: res.sweepMode
                });
              } else {
                _this.props.navigation.setParams({
                  status: res.status
                });
              }

              _RobotStore.default.updateState(res);
            }

            var _this$state = _this.state,
                _this$state$isArea = _this$state.isArea,
                isArea = _this$state$isArea === undefined ? false : _this$state$isArea,
                _this$state$isSpot = _this$state.isSpot,
                isSpot = _this$state$isSpot === undefined ? false : _this$state$isSpot;

            if (res.status === _StatusConsts.default.SWEEP && (isArea || isSpot)) {
              _this._closeView();
            }
          }
        }
      };

      _this._handleSyncProps = function (res) {
        var props = _this._filterProps(res);

        if (res.status) {
          _this.props.navigation.setParams({
            status: res.status,
            sweepMode: res.sweepMode
          });

          _RobotStore.default.updateState(res);
        }

        _this._checkNewMap(props);

        if (Object.keys(props).length > 0) {
          _this.setState((0, _objectSpread2.default)({}, props));

          var _this$state2 = _this.state,
              _this$state2$isArea = _this$state2.isArea,
              isArea = _this$state2$isArea === undefined ? false : _this$state2$isArea,
              _this$state2$isSpot = _this$state2.isSpot,
              isSpot = _this$state2$isSpot === undefined ? false : _this$state2$isSpot;

          if ((res.status === _StatusConsts.default.SWEEP || res.status === _StatusConsts.default.BACK_CHARGE) && (isArea || isSpot)) {
            _this._closeView();
          }
        }

        if (!_this.propsInit) {
          _this.propsInit = res.status !== undefined;
        }

        return res.status !== undefined;
      };

      _this._changeArea = function (state) {
        _this.setState({
          isArea: state
        });
      };

      _this._onSelectAreaChanged = function () {
        var areas = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

        _this.setState({
          selectAreaCount: areas.length
        });
      };

      _this._changeSpot = function (value) {
        _this.setState({
          isSpot: value
        });
      };

      _this._getZone = function () {
        return _this.mapRef._getZoneData();
      };

      _this._getAreaClean = function () {
        return _this.mapRef._getAreaClean();
      };

      _this._getSpot = function () {
        return _this.mapRef._getSpotPosition();
      };

      _this._setSpot = function () {
        if (_this.mapRef) {
          _this.mapRef.setLdSpot();
        }
      };

      _this.loadMap = function () {
        if (_this.mapRef) {
          _this.mapRef.startLoadMap();
        }
      };

      _this.setUpPartArea = function (index) {
        _this.mapRef.setUpPartArea(index);
      };

      _this._resetMap = function () {
        _this.mapRef._resetMap();
      };

      _this.resetZoneView = function () {
        _this.setState({
          isArea: false,
          isSpot: false
        });

        _this.mapRef.resetZoneView();
      };

      _this._closeView = function () {
        _this.setState({
          isArea: false,
          isSpot: false
        });

        _this.mapRef._closeZoneView();
      };

      _this._onMainMapPropChange = function (res) {
        if (res) {
          _this.updateTimeStamp(Object.keys(res));

          _this.setState((0, _objectSpread2.default)({}, res));
        }
      };

      _this._handleNewMap = function () {
        var accept = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        _this.setState({
          showDialog: false
        }, function () {
          var param = {
            MapId: _this.notifyNewMapId,
            Save: accept
          };

          _api.SpecApi.specA(ACTION.HANDLE_NEW_MAP, [JSON.stringify(param)]).then(function (success) {
            if (success) {
              _UIUtils.default.info(_localString.default.operator_success);
            } else {
              if (accept) {
                _UIUtils.default.info(_localString.default.operator_fail);
              }
            }
          });
        });
      };

      _this.returnBgView = function () {
        var _this$state$hiden = _this.state.hiden,
            hiden = _this$state$hiden === undefined ? false : _this$state$hiden;

        if (hiden) {
          return;
        }

        return null;
      };

      _this._isPartArea = function (index, text) {
        _this.setState({
          isUpPartArea: index,
          isUpPartAreaTxt: text
        });
      };

      _this._isnoMap = function (type) {
        if (_this.state.isNoMap != type) {
          _this.state.isNoMap = type;

          if (type) {
            _this._isPartArea(true, _localString.default.noMap_prompt);
          } else {
            _this._isPartArea(false, '');
          }
        }
      };

      _this._cleanType = function (statusType) {
        if (statusType != _this.state.statusTypeNum) {
          _this.state.statusTypeNum = statusType;
        }
      };

      _this.state = {
        animatedValue: new _reactNative.Animated.Value(0),
        isSpot: false,
        isArea: false,
        hiden: false,
        isUpPartArea: false,
        isUpPartAreaTxt: null,
        isNoMap: false,
        statusTypeNum: '',
        materVisible: false
      };
      _this.upAnimated = _reactNative.Animated.timing(_this.state.animatedValue, {
        toValue: 1,
        duration: 300,
        easing: _reactNative.Easing.linear
      });
      _this.downAnimated = _reactNative.Animated.timing(_this.state.animatedValue, {
        toValue: 0,
        duration: 300,
        easing: _reactNative.Easing.linear
      });
      _this.acceptPolicy = false;
      _this.appStatus = AppConst.APP_RESUME;
      _this.pageStatus = AppConst.PAGE_RESUME;
      _this.needSyncProps = SYNC_PROPS;
      _this.propsInit = false;
      _this.pushRecv = false;
      _this.dataScheduler = new _CycleTask.default(3500, false, 200);
      _this.notifyNewMapId = null;
      _this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return false;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {
          return false;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        }
      });
      return _this;
    }

    (0, _createClass2.default)(Home, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(Home.prototype), "componentDidMount", this).call(this);

        if (_miot.Device.isOwner) {
          _UserApi.default.checkPolicy(this._afterAcceptPolicy);
        } else {
          this._afterAcceptPolicy();
        }

        this.getMaterList();
        var navigation = this.props.navigation;
        navigation.setParams({
          resetMap: this._resetMap.bind(this),
          moreClick: this._onMoreClick.bind(this)
        });
      }
    }, {
      key: "getMaterList",
      value: function getMaterList() {
        var _this2 = this;

        var props = [PROP.MAIN_BRUSH_LEFT_TIME, PROP.SIDE_BRUSH_LEFT_TIME, PROP.FILTER_LEFT_TIME, PROP.SENSOR_LEFT_TIME];

        _api.SpecApi.syncProps(props, false, 1).then(function (res) {
          var showDialod = false;

          for (var key in res) {
            if (res[key] == 0) {
              showDialod = true;
              break;
            }
          }

          _this2.setState({
            materVisible: showDialod
          });
        }).catch(function () {});
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(Home.prototype), "componentWillUnmount", this).call(this);

        this._unregisterListener();
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state3 = this.state,
            status = _this$state3.status,
            _this$state3$selectAr = _this$state3.selectAreaCount,
            selectAreaCount = _this$state3$selectAr === undefined ? 0 : _this$state3$selectAr,
            workingTime = _this$state3.workingTime,
            batteryLevel = _this$state3.batteryLevel,
            cleanArea = _this$state3.cleanArea,
            mop = _this$state3.mop,
            sweepMode = _this$state3.sweepMode,
            fanLevel = _this$state3.fanLevel,
            waterLevel = _this$state3.waterLevel,
            sweepType = _this$state3.sweepType,
            fault = _this$state3.fault,
            _this$state3$hiden = _this$state3.hiden,
            hiden = _this$state3$hiden === undefined ? false : _this$state3$hiden,
            _this$state3$showLoad = _this$state3.showLoading,
            showLoading = _this$state3$showLoad === undefined ? false : _this$state3$showLoad,
            _this$state3$event = _this$state3.event,
            event = _this$state3$event === undefined ? null : _this$state3$event,
            _this$state3$isSpot = _this$state3.isSpot,
            isSpot = _this$state3$isSpot === undefined ? false : _this$state3$isSpot,
            _this$state3$isNoMap = _this$state3.isNoMap,
            isNoMap = _this$state3$isNoMap === undefined ? true : _this$state3$isNoMap,
            _this$state3$isArea = _this$state3.isArea,
            isArea = _this$state3$isArea === undefined ? false : _this$state3$isArea,
            _this$state3$showDial = _this$state3.showDialog,
            showDialog = _this$state3$showDial === undefined ? false : _this$state3$showDial,
            _this$state3$customSw = _this$state3.customSwitch,
            customSwitch = _this$state3$customSw === undefined ? false : _this$state3$customSw,
            materVisible = _this$state3.materVisible;
        var navigation = this.props.navigation;
        return _react.default.createElement(_reactNative.ImageBackground, {
          style: {
            height: '100%',
            width: '100%'
          },
          source: _$$_REQUIRE(_dependencyMap[33])
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            paddingTop: 84
          }
        }, this.state.isUpPartArea ? _react.default.createElement(_reactNative.View, {
          style: {
            paddingHorizontal: 20,
            marginTop: 90,
            position: 'absolute',
            height: 50,
            width: '100%'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            backgroundColor: '#fff',
            borderRadius: 4,
            justifyContent: 'center',
            alignItems: 'center',
            paddingHorizontal: 12,
            paddingVertical: 12
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[34]),
          resizeMode: "contain",
          style: {
            width: 48,
            height: 48
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            flex: 1,
            color: '#939AA9',
            fontSize: 12,
            marginLeft: 8
          }
        }, this.state.isUpPartAreaTxt))) : null, _react.default.createElement(_MainMap.default, {
          ref: function ref(_ref2) {
            return _this3.mapRef = _ref2;
          },
          status: status,
          statusType: this.state.statusTypeNum,
          animatedValue: this.state.animatedValue,
          onPropChange: this._onMainMapPropChange,
          onSelectAreaChanged: this._onSelectAreaChanged,
          isPartArea: this._isPartArea,
          mode: sweepMode,
          hiden: hiden,
          navigation: navigation,
          isnoMap: this._isnoMap
        }), _react.default.createElement(_HomeCleanInfo.default, {
          style: {
            height: 54,
            width: '100%',
            position: 'absolute',
            zIndex: 0
          },
          workingTime: workingTime,
          cleanArea: cleanArea,
          batteryLevel: batteryLevel,
          hiden: hiden,
          animatedValue: this.state.animatedValue
        })), _react.default.createElement(_CleanControl.default, {
          status: status,
          cleanType: this._cleanType,
          onMap: isNoMap,
          fanLevel: fanLevel,
          waterLevel: waterLevel,
          event: event,
          closeView: this._closeView,
          sweepType: sweepType,
          resetZoneView: this.resetZoneView,
          fault: fault,
          setUpPartArea: this.setUpPartArea,
          isSpot: isSpot,
          setSpot: this._setSpot,
          getSpot: this._getSpot,
          getZone: this._getZone,
          getAreaClean: this._getAreaClean,
          onPropChange: this._handleCleanCtlProps,
          onCloseEvent: this._onCloseEvent,
          sweepMode: sweepMode
        }), _react.default.createElement(_Dialog.MessageDialog, {
          message: _localString.default.reset_supplies,
          visible: materVisible,
          messageStyle: {
            alignSelf: 'center',
            textAlign: 'center',
            fontFamily: 'System'
          },
          buttons: [{
            text: _localString.default.confirm,
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            style: {
              color: Colors.mainColor
            },
            callback: function callback() {
              _this3.setState({
                materVisible: false
              });
            }
          }],
          onDismiss: function onDismiss() {
            _this3.setState({
              materVisible: false
            });
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          title: _localString.default.hint,
          message: _localString.default.tip_new_map_discover,
          visible: showDialog,
          messageStyle: {
            alignSelf: 'center',
            textAlign: 'center',
            fontFamily: 'System'
          },
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: Colors.secondColor
            },
            callback: function callback() {
              _this3.setState({
                showDialog: false
              });

              _this3._handleNewMap(false);
            }
          }, {
            text: _localString.default.confirm,
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            style: {
              color: Colors.mainColor
            },
            callback: function callback() {
              _this3.setState({
                showDialog: false
              });

              _this3._handleNewMap(true);
            }
          }],
          onDismiss: function onDismiss() {
            _this3.setState({
              showDialog: false
            });
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          timeout: 10000,
          message: _localString.default.loading
        })));
      }
    }]);
    return Home;
  }(_BasePage2.default);

  exports.default = Home;

  Home.navigationOptions = function (_ref3) {
    var navigation = _ref3.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        style: {
          position: "absolute",
          zIndex: 10,
          elevation: 10
        },
        backgroundColor: "#FFFFFF",
        type: _NavigationBar.default.TYPE.LIGHT,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.state.params.resetMap();
          }
        }],
        right: [{
          key: _NavigationBar.default.ICON.MORE,
          onPress: function onPress() {
            navigation.state.params.moreClick();
          }
        }],
        title: navigation.state.params ? navigation.state.params.name || _miot.Device.name : _miot.Device.name,
        subtitle: navigation.state.params ? _CommonUtils.default.getWorkStatus(navigation.state.params.status, navigation.state.params.sweepMode) : _CommonUtils.default.getWorkStatus(-1),
        subtitleStyle: {
          fontFamily: 'System'
        }
      })
    };
  };
},10010,[14308,14305,14314,14320,14323,14371,14377,14380,14386,10297,10074,10033,10013,10403,10541,10064,10719,11786,10409,10016,10091,10442,10755,11711,11789,11687,10056,11702,11795,10061,10109,10062,10318,11798,10535]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _StatusConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _api = _$$_REQUIRE(_dependencyMap[12]);

  var _HomeHeadInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var PROP = _Consts.default.PROP;
  var SYNC_PROPS = [PROP.WORKING_TIME, PROP.BATTERY_LEVEL, PROP.CLEAN_AREA];

  var HomeCleanInfo = function (_React$Component) {
    (0, _inherits2.default)(HomeCleanInfo, _React$Component);

    function HomeCleanInfo(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, HomeCleanInfo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomeCleanInfo).call(this, _props));

      _this._isMove = function (status) {
        return status === _StatusConsts.default.BACK_CHARGE || status === _StatusConsts.default.SWEEP;
      };

      _this._filterProps = function (props) {
        var keys = Object.keys(props).filter(function (key) {
          return _this.state[key] !== props[key];
        });
        var res = keys.reduce(function (result, key) {
          result[key] = props[key];
          return result;
        }, {});
        return res;
      };

      _this._syncProps = function () {
        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SYNC_PROPS;

        _api.SpecApi.syncProps(props).then(function (res) {
          return _this._handleSyncProps(res);
        }).catch(function () {
          return false;
        });
      };

      _this._handleSyncProps = function (res) {
        var props = _this._filterProps(res);

        if (Object.keys(props).length > 0) {
          _this.setState((0, _objectSpread2.default)({}, props));
        }

        if (!_this.loaded) {
          _this.loaded = res.workingTime !== undefined;
        }

        return res.workingTime !== undefined;
      };

      _this.formatTime = function (num) {
        if (Number.isInteger(num)) {
          return Math.floor(+num / 60);
        }

        return '--';
      };

      _this._renderInfoView = function () {
        var _this$props = _this.props,
            cleanArea = _this$props.cleanArea,
            batteryLevel = _this$props.batteryLevel,
            workingTime = _this$props.workingTime;

        var time = _this.formatTime(workingTime);

        return _react.default.createElement(_reactNative.View, {
          style: styles.body
        }, _react.default.createElement(_HomeHeadInfo.default, {
          title: cleanArea === undefined ? '--' : cleanArea,
          sup: "m\xB2",
          desc: _localString.default.cleand
        }), _react.default.createElement(_HomeHeadInfo.default, {
          title: batteryLevel || '--',
          sup: "%",
          desc: _localString.default.battery
        }), _react.default.createElement(_HomeHeadInfo.default, {
          title: time,
          sup: "min",
          desc: _localString.default.clean_time
        }));
      };

      _this._renderSpotView = function () {
        return _react.default.createElement(_reactNative.View, {
          style: styles.body
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.spotTextStyle
        }, _localString.default.spot_tips.format(1.6)));
      };

      _this._renderZoneCleanView = function () {
        return _react.default.createElement(_reactNative.View, {
          style: styles.body
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.spotTextStyle
        }, _localString.default.zone_clean_tips));
      };

      _this._renderSelectView = function (selectAreaCount) {
        return _react.default.createElement(_reactNative.View, {
          style: styles.body
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.spotTextStyle
        }, _localString.default.select_x_zones.format(selectAreaCount)));
      };

      _this._renderBody = function () {
        var _this$props2 = _this.props,
            _this$props2$isSpot = _this$props2.isSpot,
            isSpot = _this$props2$isSpot === undefined ? false : _this$props2$isSpot,
            _this$props2$isArea = _this$props2.isArea,
            isArea = _this$props2$isArea === undefined ? false : _this$props2$isArea,
            _this$props2$selectAr = _this$props2.selectAreaCount,
            selectAreaCount = _this$props2$selectAr === undefined ? 0 : _this$props2$selectAr;

        if (isSpot) {
          return _this._renderSpotView();
        } else if (isArea) {
          return _this._renderZoneCleanView();
        } else if (selectAreaCount > 0) {
          return _this._renderSelectView(selectAreaCount);
        } else {
          return _this._renderInfoView();
        }
      };

      _this.loaded = false;
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(HomeCleanInfo, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            _this$props3$hiden = _this$props3.hiden,
            hiden = _this$props3$hiden === undefined ? false : _this$props3$hiden,
            style = _this$props3.style;
        return _react.default.createElement(_reactNative.View, {
          style: style
        }, this._renderBody());
      }
    }]);
    return HomeCleanInfo;
  }(_react.default.Component);

  exports.default = HomeCleanInfo;

  var styles = _reactNative.StyleSheet.create({
    body: {
      flexDirection: 'row',
      backgroundColor: '#FFFFFF',
      justifyContent: 'center',
      textAlign: 'center',
      height: 60,
      alignItems: 'center',
      elevation: 6,
      shadowOffset: {
        width: 0,
        height: 0
      },
      shadowOpacity: 1,
      shadowRadius: 5
    },
    container: {
      flex: 1,
      justifyContent: 'center',
      textAlign: 'center',
      alignItems: 'center'
    },
    cleanBody: {
      flexDirection: 'row',
      alignItems: 'flex-start'
    },
    cleanValue: {
      color: 'rgba(0,0,0,0.8)',
      fontSize: 20
    },
    cleanTxt: {
      fontSize: 13,
      opacity: 0.6,
      color: '#000000'
    },
    textStyle: {
      color: 'rgba(0, 0, 0, 0.6)',
      fontSize: 12,
      textAlign: 'center',
      justifyContent: 'center'
    },
    spotTextStyle: {
      color: '#333333',
      flexDirection: 'row',
      fontSize: 15,
      textAlign: 'center',
      alignItems: 'center',
      justifyContent: 'center'
    },
    line: {
      height: 14,
      width: 0.5,
      backgroundColor: 'rgba(0,0,0,0.3)'
    }
  });
},10013,[14305,14314,14320,14323,14371,14377,14386,10297,10033,10016,10061,10064,10091,10400]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  _$$_REQUIRE(_dependencyMap[1]);

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _strings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var zh = _strings.default.zh;

  function getString(strs) {
    var _Host$locale$language = _Host.default.locale.language,
        language = _Host$locale$language === undefined ? 'en' : _Host$locale$language;

    if (language !== 'zh') {
      return strs[language] || strs.en;
    }

    return strs.zh;
  }

  var strings = zh;
  strings = getString(_strings.default);
  var _default = strings;
  exports.default = _default;
},10016,[14305,10019,10035,10022]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  String.prototype.format = function (replacements) {
    replacements = typeof replacements === 'object' ? replacements : Array.prototype.slice.call(arguments, 0);
    return formatString(this, replacements);
  };

  var formatString = function formatString(str, replacements) {
    replacements = typeof replacements === 'object' ? replacements : Array.prototype.slice.call(arguments, 1);
    return str.replace(/\{\{|\}\}|\{(\w+)\}/g, function (m, n) {
      if (m == '{{') {
        return '{';
      }

      if (m == '}}') {
        return '}';
      }

      return replacements[n];
    });
  };
},10019,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _base = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _zhHans = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _de2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _fr2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _es2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _it2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _pl2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ptBr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ru2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _tr2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ja2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ko2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _de = (0, _extends2.default)({}, _base.default, _de2.default);

  var _fr = (0, _extends2.default)({}, _base.default, _fr2.default);

  var _es = (0, _extends2.default)({}, _base.default, _es2.default);

  var _it = (0, _extends2.default)({}, _base.default, _it2.default);

  var _pl = (0, _extends2.default)({}, _base.default, _pl2.default);

  var _pt_br = (0, _extends2.default)({}, _base.default, _ptBr.default);

  var _ru = (0, _extends2.default)({}, _base.default, _ru2.default);

  var _tr = (0, _extends2.default)({}, _base.default, _tr2.default);

  var _ja = (0, _extends2.default)({}, _base.default, _ja2.default);

  var _ko = (0, _extends2.default)({}, _base.default, _ko2.default);

  var _default = {
    en: _base.default,
    zh: _zhHans.default,
    de: _de,
    fr: _fr,
    es: _es,
    it: _it,
    pl: _pl,
    pt: _pt_br,
    ru: _ru,
    tr: _tr,
    ja: _ja,
    ko: _ko
  };
  exports.default = _default;
},10022,[14305,14344,10025,10028,10031,10034,10037,10040,10043,10046,10049,10052,10055,10058]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: 'Mi Home dust collecting, sweeping and mopping robot',
    operator_success: 'Configured successfully',
    ctrl_fail: "Couldn't carry out'",
    ctrling: 'Carrying out···',
    loading: 'Loading···',
    load_fail: "Couldn't load'",
    load_fail_retry: "Couldn't load, tap to try again",
    mins: '{0} min',
    no_disturb: 'DND',
    pressurize: 'Carpet boost',
    voice_enable: 'Voice on/off',
    volume_setting: 'Adjust volume',
    memory_map: 'Remember map',
    map_list: 'Map list',
    device_mark: 'Device leveling',
    x_schedule: 'Tasks scheduled:{0}',
    setting_once_only: 'Setting is valid once',
    repeat_sweep_once_only: 'After enabling the cleanup will be repeated, only valid once',
    no_disturb_time: 'DND {0}-{1}',
    no_disturb_disable: 'DND is not enabled',
    volume_percent: 'Volume {0}%',
    mark_device_by_land: 'Level device based on the current location',
    dust_collect_manage: 'Dust collection management',
    min_house: 'Small apartment',
    med_house: 'Medium apartment',
    max_house: 'Large apartment',
    tip_sweep_nearby: 'Clean up within a small area near the vacuum-mop',
    can_use_x_day: 'Remaining service life: {0} h',
    remain_percent: '{0}% remaining',
    materail_reset: 'Reset consumable',
    buy_now: 'Purchase now',
    side_bursh_desc: 'The side brush directs dirt and debris from the corners towards the main brush. Over time, it will wear and tear and lose its effectiveness. Therefore, it is recommended to replace the side brush every {0} operating hours or less.',
    main_bursh_desc: "The main brush directs dirt and debris into the vacuum-mop's dust compartment. Over time, it will wear and tear and lose its effectiveness. Therefore, it is recommended to replace the brush every {0} operating hours or less.",
    filter_desc: 'The dust compartment filter uses H11 grade filter material, in order to prevent dust from escaping the compartment and getting inside the motor of the vacuum-mop. Over time, it will get clogged and lose its effectiveness. Therefore, it is recommended to rinse the filter with water every two weeks and replace it every {0} operating hours or less.',
    no_disturb_setting: 'DND settings',
    not_local_network: 'Before opening the remote control function, please ensure both the phone and the vacuum-mop are connected to the same Wi-Fi network',
    ping_loading: 'Checking network···',
    remote_will_cancel_current: 'Switching to remote control will stop the current task',
    remote_disable_by_fault: 'Vacuum-mop has an error, unable to use remote control',
    exit_remote_fail: "Couldn't exit remote control",
    add_name: 'Add name',
    room_name_length_limit: 'Room name cannot be longer than 12 characters',
    back_avoid_tip: 'Please avoid dropping the vacuum-mop when reversing it',
    room_name_can_not_same: 'Name cannot be duplicated',
    switch_sweep_mode_tip: 'Switching the cleaning method will stop the current task',
    can_not_do_mark_in_work: 'Unable to carry out this operation while paused or while a task is in progress',
    set_map: 'Set as current map',
    already_set_current_map: 'Already set as current map',
    set_will_stop_back_charge: 'This operation will stop the vacuum-mop from returning to the dock to charge',
    set_will_stop_work: 'Carrying out this action will stop the current task',
    working_can_not_edit: 'The area editor cannot be used while the vacuum-mop is cleaning',
    drawline_to_split: 'Please draw a line on the screen to divide the room',
    workday: 'Working days',
    weekday: 'Weekend',
    timing_mode: 'Schedule mode',
    gear: 'Suction',
    timing_time: 'Scheduled time',
    tomorrow: 'Tomorrow {0}',
    save_data: 'Saving···',
    exit_with_not_save: 'Discard unsaved changes and exit now?',
    start_end_time_same: 'Starting time and ending time cannot be identical',
    total_area: 'Total area',
    total_duration: 'Total duration',
    total_count: 'Total times',
    show_only_30_clean_record: 'Only show records of the last {0} days',
    date_format: 'MM/dd hh:mm',
    dev_page: 'Dev Page',
    full_charge: 'Full',
    start_clean: 'Start',
    pause_clean: 'Pause',
    clean_mode: 'Cleaning mode',
    water_level: 'Adjust water ouput',
    continue_clean: 'Resume',
    sweep: 'Vacuum',
    sweep_mop: 'Vacuum & mop',
    mop: 'Mop',
    middle: 'Medium',
    full_speed: 'Turbo',
    work_free: 'Available',
    work_shutdown: 'Off',
    err_none: 'No error',
    err_side_wheel_desc: 'Please check whether the bumper is stuck',
    err_bumper_desc: 'Please wipe the collision sensor clean',
    err_right_sensor_desc: 'Please wipe the wall sensor clean',
    err_load_map_fail: "Couldn't load the map",
    err_wheel: 'Please check whether the main wheels are stuck',
    err_main_wheel: 'Main wheels error',
    err_side_wheel: 'Bumper error',
    err_incline: 'The vacuum-mop is tilted',
    tip_device_mark: 'Please place the vacuum-mop on a level surface and do not move it during the calibration process. The vacuum-mop will restart automatically',
    err_start_incline_desc: 'Please move the vacuum-mop to a level surface to start',
    err_radar_top: 'Radar top error',
    err_bumper: 'Bumper error',
    err_radar_cover: 'Radar cover error',
    err_dust_box_desc: 'Please clean the dust compartment and filter, and ensure they are installed in place',
    err_device_trapped: 'Vacuum-mop is stuck, please move it to a new location and start again',
    err_start_incline: 'Vacuum-mop is not on a level surface',
    err_restricted: 'Unable to start in a restricted area',
    err_cliff: 'Cliff sensor error',
    event_no_disturb_desc: 'Unable to resume and carry out scheduled cleanups',
    err_no_mop: 'No mop pad installed, please check to ensure the mop pad is installed in place',
    err_low_battery_disable_sweep: 'Unable to clean up while battery level is too low',
    err_dust_fan: 'Dust collecting charging dock fan error',
    err_leave_to_power_off: 'If the vacuum-mop needs to be turned off, please move it away from the charging dock and try again',
    finish_clean_to_zone: 'Switching to zoned cleanup will stop the current task in progress',
    finish_clean_to_spot: 'Switching to spot cleanup will stop the current task in progress',
    finish_charge_to_zone: 'Switching to zoned cleanup will stop the charging process',
    finish_charge_to_spot: 'Switching to spot cleanup will stop the charging process',
    finish_clean_to_sweep: 'Switching to vacuum mode will stop the current task',
    finish_clean_to_sweep_mop: 'Switching to vacuum & mop mode will stop the current task',
    finish_clean_to_mop: 'Switching to mop mode will stop the current task',
    stop_clean: 'Entering the area editor will stop the current task',
    wait_load: 'Please wait for the data to be loaded',
    device_mark_success: 'Device leveling completed',
    tip_find_robot: 'Please look for the vacuum-mop based on the sound',
    confirm_reset_material: 'Reset this consumable now?',
    stop_work_to_reset_map: 'Resetting the map will stop the current task in progress',
    stop_charge_to_virtualwall: 'Returning to the dock to charge, setting a virtual wall/restricted area will stop this',
    stop_work_to_virtualwall: 'Setting a virtual wall/restricted area will stop the current task in progress',
    spot_tips: 'Clean up the area within {0} m around the coordinate point',
    zone_clean_tips: 'Clean up within the zoned area',
    delete_current_map: 'Delete the map?',
    select_x_zones: 'Areas selected: {0}',
    machine_inside: 'Restricted areas cannot cover the dust collecting charging dock or the vacuum-mop',
    wait_operate: 'Carrying out, please wait···',
    ctl_success: 'Carried out successfully',
    no_map: 'No map available yet',
    time_out: 'Operation timeout',
    no_area: 'The current map has no room information and cannot be edited',
    too_small_to_split: "Couldn't divide, please increase the area of the to be divided room",
    line_need_close_to_wall: "The ends of the dividing line should be as close to the room's walls as possible",
    err_radar: 'Radar error',
    err_radar_cover_desc: 'Please check whether the radar cover is stuck',
    sensor_maintain: 'Sensor maintain',
    already_used: '{0} hour used',
    already_clean: 'Already Clean',
    err_backcharge: "Couldn't return to dock to charge",
    err_backcharge_desc1: 'Please remove any obstacles near the dust collecting charging dock',
    err_backcharge_desc2: 'Please check whether the connection between the vacuum-mop and the dust collecting charging dock is normal',
    name_invalid: 'Name cannot contain special characters',
    rug_check_tip: 'The main and side brushes need to be cleaned regularly to avoid incorrect detection',
    tip_new_map_discover: 'A new map has been found, set it as the current map',
    end_cleaning: 'End cleaning',
    partitionEditing: 'Partition editing',
    saved_map: 'Map saved',
    operator_fail: 'Setting failed',
    remove: 'Delete',
    cleand: 'Cleaning area',
    clean_time: 'Cleaning time',
    battery: 'Remaining battery level',
    sweep_record: 'Cleaning records',
    timing_sweep: 'Reserved cleaning',
    double_sweep: 'Secondary cleaning',
    virtual_wall: 'Virtual wall/restricted area setting',
    map_rest: 'Reset the map',
    consumable_material_statistics: 'Consumable information',
    remote_control: 'Remote controller',
    no_schedule: 'No reservation currently',
    time_clean_disturb_tip: 'The Do Not Disturb mode has been activated and the device has been in the hibernating state',
    delete_saved_map: 'Reset the map or not',
    side_bursh: 'Side brush',
    main_bursh: 'Rolling brush',
    filter: 'Filter screen',
    start_time: 'Start time',
    end_time: 'End time',
    collect_dust_now: 'Collect dust immediately',
    del_cur_timing: 'Are you sure to delete the reserved cleaning?',
    name_cannot_empty: 'The name may not be empty',
    custom_name: 'Self-define',
    room_name: 'Room{0}',
    add_wall: 'Add virtual wall',
    add_zone: 'Add restricted sweeping and mopping area',
    more_than_forbid_length: 'You can only set up at most {0} restricted areas and virtual walls',
    reset_name: 'Renaming',
    map: 'Map',
    map_x: 'Map{0}',
    current_map: 'Current map',
    merge: 'Area combination',
    segmentation: 'Area division',
    monday: 'Monday',
    tuesday: 'Tuesday',
    wednesday: 'Wednesday',
    thursday: 'Thursday',
    friday: 'Friday',
    saturday: 'Saturday',
    sunday: 'Sunday',
    everyday: 'Every day',
    repeat: 'Repeat',
    no_repeat: 'Not repeat',
    global_clean: 'Global cleaning',
    zone_clean: 'Area cleaning',
    fix_point_clean: 'Fixed-point cleaning',
    no_clean_record: 'No cleaning records currently',
    stop_charge: 'Pause recharging',
    charging: 'Charging',
    charge: 'Recharge',
    silent: 'Quiet',
    standard: 'Standard',
    strong: 'Strong',
    charging_btn: 'Charging',
    work_sleep: 'Hibernating',
    work_pause: 'Pause',
    work_cleaning: 'Cleaning',
    work_recharge: 'Being recharged',
    work_charging: 'Charging',
    work_fault: 'Fault',
    work_remote_control: 'Being remotely controlled',
    work_full_charged: 'Charging done',
    err_low_battery_charge: 'The device has a low battery level. Start recharging',
    err_load_battery_shut_down: 'Too low battery level. The machine is automatically turned off',
    err_roller_brush: 'The main brush is stuck',
    err_brush: 'The side brush is stuck',
    err_radar_desc: 'Please check if the radar is stuck (no radar data)',
    err_no_dust: 'The two-in-one water tank is taken out',
    err_full_dust_box: 'Clean the dust bin and the filter screen',
    err_no_water: 'Insufficient water',
    err_area_not_arrival: 'The designated area cannot be reached',
    err_restricted_desc: 'Please move the device out of the restricted area before starting',
    err_cliff_desc: 'Please wipe the cliff sensor and move away from the dangerous area to start',
    err_water_pump: 'The water pump is abnormal',
    err_not_enough_two_room: 'Please select two adjacent areas for combination',
    err_not_enough_split: 'Please select an area for division',
    err_not_enough_rename: 'Please select an area for renaming',
    err_incline_desc: 'Please start the machine on level ground',
    err_radar_top_desc: 'Please check if the radar is obscured and move it to a new position to start (radar has few valid data)',
    err_wall_sensor: 'The wall-following sensor is abnormal',
    err_main_brush: 'There seems to be something wrong with the main brush (open circuit or short circuit)',
    err_side_brush: 'The side brush is abnormal',
    err_fan: 'The fan is abnormal',
    err_dust_box: 'The dust bin is full. It is recommended to clean the dust bin and the filter screen',
    err_no_water_box: 'Please replace the two-in-one water tank and the filter screen, and confirm that the filter screen and the two-in-one water tank are installed in place',
    err_charge: 'Recharging failed, dust collection charging pile not found',
    event_no_disturb: 'The Do Not Disturb mode has been activated, and the voice prompt has been inactivated',
    err_low_battery_do_charge: 'Low battery level. Charging is recommended',
    hint: 'Hint',
    finish_clean_to_recharge: 'Do you want to end the current cleaning and start recharging?',
    cancel: 'Cancel',
    confirm: 'OK',
    save: 'Save',
    sensor_desc: 'Clear the dust once every {0} hours of use',
    disturb_tips_setting: 'Do Not Disturb time period setting',
    disturb_tips_des: 'Do Not Disturb mode: breakpoint cleaning will not be carried out in this time period, and the voice prompt and indicator brightness will be reduced',
    add_area: 'Add area',
    map_editing: 'Map Editing',
    mode_setting: 'Mode setting',
    mopping_water: 'Mopping water amount',
    custom_mode: 'Custom mode',
    cleanUpBy_area: 'Do cleaning according to the mode set for each area',
    my_map: 'My map',
    area_cleaning: 'Division area cleaning',
    sweep: "Sweep where you're pointing at",
    focus_cleaning: 'In-situ cleaning',
    clickTo_clean: 'Click a point on the map to clean 1.2mx1.2m',
    Inplace_execution: 'Immediately carry out 1.5mx1.5m in-situ cleaning in situ',
    sweeper_work: 'The sweeping robot is working. The current operation will end the cleaning task',
    operationCleaning_task: 'The current operation will end this cleaning task',
    voiceAndVolume: 'Voice and volume',
    consumable_timing: 'Consumables timing ',
    NoMap: 'No map is currently available. Please do complete automatic cleaning once from the charging pile. The device will automatically return to the charging pile for charging when the cleaning is done.',
    prohibit: 'restricted area setting',
    voice_Setting: 'Voice volume',
    voice_Using: 'In use',
    voice_Downing: 'Downloading',
    voice_Start_Down: 'Download',
    voice_Language_Setting: 'Device voice language',
    product_description: 'Product Manual',
    edge_sweep: 'Edge-following cleaning ',
    zone_edit: 'Edit the area',
    robot_search: 'Look for robot',
    never_collect_dust: 'Never collect dust',
    clean_1_collect_dust: 'Automatically collect dust after a single cleaning',
    clean_2_collect_dust: 'Automatically collect dust after cleaning twice',
    clean_3_collect_dust: 'Automatically collect dust after cleaning for three times',
    add_mop_forbidZone: 'Add mopping restricted area',
    has_same_timing: 'You set a repeated reservation',
    err_no_dust_package: 'The dust bag is not in place',
    mopping_only: 'Only mopping',
    isZoning: 'At most 5 divided areas can be set up',
    noMap_prompt: 'No map is currently available. Please do automatic cleaning once',
    empty_mode: 'Clear mode',
    suction: 'Suction force',
    small: 'Small',
    in: 'Medium',
    big: 'Large',
    cleaning_range: 'Cleaning scope',
    regular_mode: 'Normal mode',
    custom_open: 'Please set it in the custom mode in the map editor and then turn it on',
    customized_area: 'Please customize the area first',
    no_set: 'If no custom area is set, the robot will do cleaning in the normal mode',
    empty_set: 'After clearing, the robot will do cleaning in the normal mode',
    mop_notInstalled: 'Mop not installed',
    recharge_text: 'Do you want to end the current cleaning and start recharging?',
    Split_Time_Tips: 'After area division, the relevant reserved cleanings will be automatically set to be the reserved global cleaning.',
    Merge_Time_Tips: 'After area combination, the relevant reserved cleanings will be automatically set to be the reserved global cleaning.',
    isMop_take: 'The amount of mopping water only works when the mop is installed',
    global_take: 'The edge-following sweeping only works in the global cleaning mode',
    Mopping_area: 'Mopping restricted area',
    Sweeping_area: 'Restricted sweeping and mopping area',
    point_sweeping: "Sweeping in the “Sweep where you're pointing at” mode",
    following_sweeping: 'Doing the edge-following cleaning',
    total_sweeping: 'Doing the global cleaning',
    room_sweeping: 'Cleaning an area',
    double_sweeping: 'Doing secondary cleaning',
    area_sweeping: 'Cleaning the divided area',
    local_sweeping: 'Fixed-point cleaning in situ',
    RemoveMop_rack: 'It is recommended to remove the mop cloth support to avoid moisture and damage to the wood floor',
    resetTxt: 'Restore the factory settings',
    resetTxtPrompt: 'After the factory settings are restored, the device will be removed from the device list, and all device related data will be cleared',
    reset_prompt: 'Are you sure you want to reset consumables?',
    continue_find_charge: 'Continue recharging',
    reset: 'Reset'
  };
  exports.default = _default;
},10025,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: '米家集尘扫拖机器人',
    operator_success: '设置成功',
    ctrl_fail: '操作失败',
    ctrling: '操作中···',
    loading: '加载中···',
    load_fail: '加载失败',
    load_fail_retry: '加载失败，点击重试',
    mins: '{0}分钟',
    no_disturb: '免打扰',
    pressurize: '地毯增压',
    voice_enable: '语音开关',
    volume_setting: '音量调节',
    memory_map: '记忆地图',
    map_list: '地图列表',
    device_mark: '设备标平',
    x_schedule: '已预约{0}个任务',
    setting_once_only: '设置单次有效',
    repeat_sweep_once_only: '开启后重复清扫，仅单次有效',
    no_disturb_time: '{0}-{1}免打扰',
    no_disturb_disable: '未开启免打扰',
    volume_percent: '音量{0}%',
    mark_device_by_land: '根据当前地形标平设备',
    dust_collect_manage: '集尘管理',
    min_house: '小户型',
    med_house: '中户型',
    max_house: '大户型',
    tip_sweep_nearby: '将清扫设备附近小范围内区域',
    can_use_x_day: '预计还可使用{0}小时',
    remain_percent: '剩余{0}%',
    materail_reset: '耗材复位',
    buy_now: '立刻购买',
    side_bursh_desc: '边刷用于清扫墙角垃圾，将垃圾送入主刷，但随着工作时间的增长，边刷会有磨损，影响清扫效果，建议工作{0}小时或更短时间更换一次。',
    main_bursh_desc: '主刷是机器人的核心清洁部件，以高速旋转将垃圾卷入尘盒。但随着工作时间的增长，主刷会有磨损，建议工作{0}小时或更短时间更换一次。',
    filter_desc: '尘盒滤网采用H11等级滤材，有效防止吸入尘盒的灰尘逸出。但工作一段时间后会有堵塞的可能，建议每两周用清水清洗一次，工作满{0}小时或更短时间更换一次。',
    no_disturb_setting: '免打扰设置',
    not_local_network: '进入遥控器前，请保持手机和设备处于同一个WiFi',
    ping_loading: '正在检查网络···',
    remote_will_cancel_current: '切换到遥控器将会停止当前工作',
    remote_disable_by_fault: '设备处于故障中，无法遥控',
    exit_remote_fail: '退出遥控失败',
    add_name: '添加名字',
    room_name_length_limit: '房间名称12个字以内',
    back_avoid_tip: '请操作后退时避免经过悬崖',
    room_name_can_not_same: '名字不能重复',
    switch_sweep_mode_tip: '切换清扫方式将会停止当前工作',
    can_not_do_mark_in_work: '无法在工作或暂停的状态下执行该操作',
    set_map: '设为当前地图',
    already_set_current_map: '已设为当前地图',
    set_will_stop_back_charge: '执行该操作将会停止回充',
    set_will_stop_work: '执行该操作将会停止当前工作',
    working_can_not_edit: '设备正在工作，不能进行区域编辑',
    drawline_to_split: '请在屏幕上划线进行房间分割',
    workday: '工作日',
    weekday: '周末',
    timing_mode: '预约模式',
    gear: '档位',
    timing_time: '预约时间',
    tomorrow: '明天 {0}',
    save_data: '正在保存···',
    exit_with_not_save: '未保存更改，仍然退出?',
    start_end_time_same: '开始时间和结束时间不能相同',
    total_area: '累计面积',
    total_duration: '累计时长',
    total_count: '累计次数',
    show_only_30_clean_record: '仅展示最近{0}天内记录',
    date_format: 'MM月dd日 hh:mm',
    dev_page: '开发页面',
    full_charge: '充满',
    start_clean: '开始清扫',
    pause_clean: '暂停清扫',
    clean_mode: '清扫模式',
    water_level: '水量调节',
    continue_clean: '继续清扫',
    sweep: '扫地',
    sweep_mop: '扫拖',
    mop: '拖地',
    middle: '中档',
    full_speed: '全速',
    work_free: '空闲',
    work_shutdown: '关机',
    err_none: '无故障',
    err_side_wheel_desc: '请检查防撞栏是否被卡',
    err_bumper_desc: '请擦拭正前方防撞传感器',
    err_right_sensor_desc: '请擦拭右侧沿墙传感器',
    err_load_map_fail: '地图加载失败',
    err_wheel: '请检查主轮是否被卡',
    err_main_wheel: '主轮异常',
    err_side_wheel: '防撞栏异常',
    err_incline: '设备倾斜',
    tip_device_mark: '请将设备放置水平地面，标平过程中请勿移动，设备将自动重启',
    err_start_incline_desc: '如需启动，请放置水平地面后启动',
    err_radar_top: '雷达顶部异常',
    err_bumper: '防撞传感器异常',
    err_radar_cover: '雷达外罩异常',
    err_dust_box_desc: '请清理尘盒和滤网，并确保尘盒和滤网放置到位',
    err_device_trapped: '设备被困，请移至新位置后再启动',
    err_start_incline: '设备不在水平面',
    err_restricted: '禁区内无法启动',
    err_cliff: '悬崖传感器异常',
    event_no_disturb_desc: '不会续扫及执行预约任务',
    err_no_mop: '未安装拖布，请检查并确保拖布放置到位',
    err_low_battery_disable_sweep: '电量过低，无法清扫',
    err_dust_fan: '集尘宝风机异常',
    err_leave_to_power_off: '如需关机，请搬离集尘充电桩后重试',
    finish_clean_to_zone: '工作中，切换到"划区清扫"模式将停止工作',
    finish_clean_to_spot: '工作中，切换到"定点清扫"模式将停止工作',
    finish_charge_to_zone: '充电中，切换到"划区清扫"模式将停止工作',
    finish_charge_to_spot: '充电中，切换到"定点清扫"模式将停止工作',
    finish_clean_to_sweep: '切换到"扫地"模式将停止工作',
    finish_clean_to_sweep_mop: '切换到"扫拖"模式将停止工作',
    finish_clean_to_mop: '切换到"拖地"模式将停止工作',
    stop_clean: '进入区域编辑将会停止当前工作',
    wait_load: '请等待数据加载完成',
    device_mark_success: '设备标平完成',
    tip_find_robot: '请根据声音寻找扫拖机',
    confirm_reset_material: '确认复位该耗材吗?',
    stop_work_to_reset_map: '工作中，重置地图将会停止工作',
    stop_charge_to_virtualwall: '回充中，进行虚拟墙/禁区设置将会停止回充',
    stop_work_to_virtualwall: '工作中，进行虚拟墙/禁区设置将会暂停工作',
    spot_tips: '清扫坐标点{0}米范围内区域',
    zone_clean_tips: '清扫划区范围内区域',
    delete_current_map: '删除地图?',
    select_x_zones: '已选择{0}个区域',
    machine_inside: '禁区不能覆盖集尘充电桩或设备',
    wait_operate: '操作中，请稍后...',
    ctl_success: '操作成功',
    no_map: '暂无地图',
    time_out: '操作超时',
    no_area: '当前地图没有房间信息，无法编辑',
    too_small_to_split: '分割失败，请增大分割房间的面积',
    line_need_close_to_wall: '分割线两端应尽量靠近房间的墙',
    err_radar: '雷达异常',
    err_radar_cover_desc: '请检查雷达外罩是否被卡住',
    sensor_maintain: '传感器维护',
    already_used: '已工作{0}小时',
    already_clean: '我已清理',
    err_backcharge: '回充失败',
    err_backcharge_desc1: '请移除集尘充电桩附近障碍物',
    err_backcharge_desc2: '请检查设备与集尘充电桩连接是否正常',
    name_invalid: '名字不能含特殊字符',
    rug_check_tip: '需定期清理主刷和边刷，以免误检',
    tip_new_map_discover: '发现新地图，设置为当前地图?',
    end_cleaning: '结束清扫',
    partitionEditing: '分区编辑',
    saved_map: '已保存地图',
    operator_fail: '设置失败',
    remove: '删除',
    cleand: '清扫面积',
    clean_time: '清扫时间',
    battery: '剩余电量',
    sweep_record: '清扫记录',
    timing_sweep: '预约清扫',
    double_sweep: '二次清扫',
    virtual_wall: '虚拟墙/禁区设置',
    map_rest: '重置地图',
    consumable_material_statistics: '耗材情况',
    remote_control: '遥控器',
    no_schedule: '暂无预约',
    time_clean_disturb_tip: '勿扰模式已开启，设备进入休眠状态',
    delete_saved_map: '是否重置地图',
    side_bursh: '边刷',
    main_bursh: '滚刷',
    filter: '滤网',
    start_time: '开始时间',
    end_time: '结束时间',
    collect_dust_now: '立即集尘',
    del_cur_timing: '确定删除该预约清扫？',
    name_cannot_empty: '名称不能为空',
    custom_name: '自定义',
    room_name: '房间{0}',
    add_wall: '添加虚拟墙',
    add_zone: '添加扫拖禁区',
    more_than_forbid_length: '最多只能设置{0}个禁区和虚拟墙',
    reset_name: '重命名',
    map: '地图',
    map_x: '地图{0}',
    current_map: '当前地图',
    merge: '区域合并',
    segmentation: '区域分割',
    monday: '周一',
    tuesday: '周二',
    wednesday: '周三',
    thursday: '周四',
    friday: '周五',
    saturday: '周六',
    sunday: '周日',
    everyday: '每天',
    repeat: '重复',
    no_repeat: '不重复',
    global_clean: '全局清扫',
    zone_clean: '区域清扫',
    fix_point_clean: '定点清扫',
    no_clean_record: '暂无清扫记录',
    stop_charge: '暂停回充',
    charging: '充电中',
    charge: '回充',
    silent: '安静',
    standard: '标准',
    strong: '强力',
    charging_btn: '充电中',
    work_sleep: '休眠中',
    work_pause: '暂停',
    work_cleaning: '清扫中',
    work_recharge: '回充中',
    work_charging: '充电中',
    work_fault: '故障',
    work_remote_control: '遥控中',
    work_full_charged: '充电完成',
    err_low_battery_charge: '电量不足，开始回充',
    err_load_battery_shut_down: '低电过低，自动关机',
    err_roller_brush: '主刷卡住',
    err_brush: '边刷卡住',
    err_radar_desc: '请检查雷达是否卡住（雷达无数据）',
    err_no_dust: '二合一水箱取出',
    err_full_dust_box: '清理尘盒和滤网',
    err_no_water: '水量不足',
    err_area_not_arrival: '指定区域无法到达',
    err_restricted_desc: '请搬离禁区后再启动',
    err_cliff_desc: '请擦拭悬崖传感器并远离危险区域启动',
    err_water_pump: '水泵异常',
    err_not_enough_two_room: '请选择两个相邻区域合并',
    err_not_enough_split: '请选择一个区域分割',
    err_not_enough_rename: '请选择一个区域进行重命名',
    err_incline_desc: '请将机器放到水平地面启动',
    err_radar_top_desc: '请检查雷达是否被遮蔽并移到新位置启动（雷达有效数据少）',
    err_wall_sensor: '沿墙传感器异常',
    err_main_brush: '主刷好像出了问题（开路或短路）',
    err_side_brush: '边刷异常',
    err_fan: '风机异常',
    err_dust_box: '尘盒已满，建议清理尘盒和滤网',
    err_no_water_box: '请装回二合一水箱及滤网，并确认滤网及二合一水箱安装到位',
    err_charge: '回充失败，未找到集尘充电桩',
    event_no_disturb: '勿扰模式已开启，语音提示关闭',
    err_low_battery_do_charge: '电量低，建议充电',
    hint: '提示',
    finish_clean_to_recharge: '是否结束当前清洁开始回充？',
    cancel: '取消',
    confirm: '确定',
    save: '保存',
    sensor_desc: '使用 {0} 小时需要清理一次灰尘',
    disturb_tips_setting: '勿扰时间段设置',
    disturb_tips_des: '勿扰模式：不会在这个时间段进行断点清扫，语音提示以及指示灯亮度会降低',
    add_area: '添加区域',
    map_editing: '地图编辑',
    mode_setting: '模式设置',
    mopping_water: '拖地水量',
    custom_mode: '定制模式',
    cleanUpBy_area: '按照每个区域设置的模式清扫',
    my_map: '我的地图',
    area_cleaning: '划区清扫',
    sweep: '指哪扫哪',
    focus_cleaning: '原地清扫',
    clickTo_clean: '点击地图上的一个点进行1.2mx1.2m进行清扫',
    Inplace_execution: '立即原地执行1.5mx1.5m原地清扫',
    sweeper_work: '扫地机器人正在工作中\n当前操作将结束本次清扫任务',
    operationCleaning_task: '当前操作将结束本次清扫任务',
    voiceAndVolume: '语音及音量',
    consumable_timing: '耗材计时',
    NoMap: '当前无地图，请先进行一次完整自动清扫，从充电桩上出发，清扫完成后，自动回到充电桩充电',
    prohibit: '禁区设置',
    voice_Setting: '语音音量',
    voice_Using: '使用中',
    voice_Downing: '下载中',
    voice_Start_Down: '下载',
    voice_Language_Setting: '设备语音语言',
    product_description: '产品说明书',
    edge_sweep: '沿边清扫',
    zone_edit: '编辑区域',
    robot_search: '寻找机器人',
    never_collect_dust: '永不集尘',
    clean_1_collect_dust: '单次清扫后自动集尘',
    clean_2_collect_dust: '两次清扫后自动集尘',
    clean_3_collect_dust: '三次清扫后自动集尘',
    add_mop_forbidZone: '添加拖地禁区',
    has_same_timing: '您设置的预约清扫重复了',
    err_no_dust_package: '尘袋不在位',
    mopping_only: '仅拖地',
    isZoning: '最多只能设置5个划区',
    noMap_prompt: '当前无地图，请先进行一次自动清扫',
    empty_mode: '清空模式',
    suction: '吸力',
    small: '小',
    in: '中',
    big: '大',
    cleaning_range: '清扫范围',
    regular_mode: '常规模式',
    custom_open: '请在地图编辑中的定制模式内设置后再开启',
    customized_area: '请先定制区域',
    no_set: '未设置定制区域按常规模式清扫',
    empty_set: '清空后机器人将按照常规模式清扫',
    mop_notInstalled: '拖布未安装',
    recharge_text: '是否结束当前清洁开始回充？',
    Split_Time_Tips: '分割区域后，相关的预约清扫将自动设置为预约全局清扫。',
    Merge_Time_Tips: '合并区域后，相关的预约清扫将自动设置为预约全局清扫。',
    isMop_take: '拖地水量仅在安装拖布后生效',
    global_take: '沿边清扫仅在全局清扫模式下生效',
    Mopping_area: '拖地禁区',
    Sweeping_area: '扫拖禁区',
    point_sweeping: '指哪扫哪扫地中',
    following_sweeping: '沿边清扫中',
    total_sweeping: '全局清扫中',
    room_sweeping: '区域清扫中',
    double_sweeping: '二次清扫中',
    area_sweeping: '划区清扫中',
    local_sweeping: '原地定点清扫中',
    RemoveMop_rack: '建议取下拖布架，避免潮湿损坏木地板',
    resetTxt: '恢复出厂设置',
    resetTxtPrompt: '设备恢复出厂设置后，将从设备列表移除，设备相关数据全部清除',
    reset_prompt: '确定要重置耗材吗？',
    continue_find_charge: '继续回充',
    reset: '重置'
  };
  exports.default = _default;
},10028,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: 'Mi Home Kehr- und Wischroboter mit Staubsaugfunktion',
    operator_success: 'Erfolgreich konfiguriert',
    ctrl_fail: 'Konnte nicht ausführen',
    ctrling: 'Wird ausgeführt ...',
    loading: 'Laden wird ausgeführt ...',
    load_fail: 'Laden nicht erfolgreich',
    load_fail_retry: 'Laden nicht möglich, bitte antippen um erneut zu versuchen.',
    mins: '{0} Min',
    no_disturb: 'DND',
    pressurize: 'Teppich-Boost',
    voice_enable: 'Sprachsteuerung einschalten/ausschalten',
    volume_setting: 'Lautstärke einstellen',
    memory_map: 'Karte speichern',
    map_list: 'Kartenliste',
    device_mark: 'Gerätenivellierung',
    x_schedule: 'Geplante Aufgaben: {0}',
    setting_once_only: 'Die Einstellung gilt einmal',
    repeat_sweep_once_only: 'Nach der Aktivierung wird die Reinigung nur einmal wiederholt.',
    no_disturb_time: 'DND {0}-{1}',
    no_disturb_disable: 'DND ist nicht aktiviert',
    volume_percent: 'Lautstärke {0}',
    mark_device_by_land: 'Gerät auf Grundlage des aktuellen Standorts nivellieren',
    dust_collect_manage: 'Verwaltung Staubsammlung',
    min_house: 'Kleine Wohnung',
    med_house: 'Mittelgroße Wohnung',
    max_house: 'Große Wohnung',
    tip_sweep_nearby: 'Reinigung eines kleinen Bereichs in der Nähe des Staubsauger-Wischers.',
    can_use_x_day: 'Verbleibende Lebensdauer: {0} Std.',
    remain_percent: '{0}% verbleiben',
    materail_reset: 'Verbrauchsmaterial zurücksetzen',
    buy_now: 'Jetzt kaufen',
    side_bursh_desc: 'Die Seitenbürste leitet Schmutz und Verunreinigungen aus den Ecken zur Hauptbürste. Mit der Zeit nutzt sie sich ab und verliert ihre Wirksamkeit. Daher empfehlen wir, die Seitenbürste alle {0} Betriebsstunden oder früher auszutauschen.',
    main_bursh_desc: 'Die Hauptbürste leitet Schmutz und Verunreinigungen in den Staubbehälter des Staubsauger-Wischers. Mit der Zeit nutzt sie sich ab und verliert ihre Wirksamkeit. Daher empfehlen wir, die Bürste alle {0} Betriebsstunden oder früher auszutauschen.',
    filter_desc: 'Der Staubbehälter-Filter benutzt H11-Filtermaterial, um zu verhindern, dass Staub aus dem Staubbehälter in den Motor des Staubsauger-Wischers gelangt. Mit der Zeit verstopft er sich langsam und verliert seine Wirksamkeit. Daher empfehlen wir, den Filter alle zwei Wochen mit Wasser zu spülen und alle {0} Betriebsstunden oder früher auszutauschen.',
    no_disturb_setting: 'DND-Einstellungen',
    not_local_network: 'Bevor Sie die Fernbedienungsfunktion öffnen, stellen Sie bitte sicher, dass sowohl das Telefon als auch der Staubsauger-Wischer an dasselbe Wi-Fi-Netzwerk angeschlossen sind.',
    ping_loading: 'Netzwerk wird überprüft ...',
    remote_will_cancel_current: 'Durch das Umschalten auf die Fernbedienung wird die aktuell durchgeführte Arbeit beendet.',
    remote_disable_by_fault: 'Aufgrund eines Fehlers beim Staubsauger-Wischer ist eine Fernbedienung nicht möglich.',
    exit_remote_fail: 'Fernbedienung konnte nicht beendet werden',
    add_name: 'Namen hinzufügen',
    room_name_length_limit: 'Der Raumname darf maximal 12 Zeichen lang sein',
    back_avoid_tip: 'Bitte den Staubsauger-Wischer beim Umdrehen nicht fallen lassen.',
    room_name_can_not_same: 'Der Name darf nicht dupliziert werden',
    switch_sweep_mode_tip: 'Durch das Umschalten der Reinigungsmethode wird die aktuell durchgeführte Arbeit beendet.',
    can_not_do_mark_in_work: 'Dieser Vorgang kann nicht durchgeführt werden, während das Gerät arbeitet oder pausiert.',
    set_map: 'Als aktuelle Karte festlegen',
    already_set_current_map: 'Bereits als aktuelle Karte festgelegt',
    set_will_stop_back_charge: 'Dieser Vorgang wird die Rückkehr des Staubsauger-Wischers zur Ladestation zum Aufladen beendet.',
    set_will_stop_work: 'Durch das durchführen dieser Aktion wird die aktuell durchgeführte Arbeit beendet.',
    working_can_not_edit: 'Der Bereichseditor kann nicht benutzt werden, während der Staubsauger-Wischer Reinigungsarbeiten durchführt.',
    drawline_to_split: 'Bitte zeichnen Sie auf dem Bildschirm eine Linie, um den Raum zu trennen',
    workday: 'Werktage',
    weekday: 'Wochenende',
    timing_mode: 'Zeitplan-Modus',
    gear: 'Saugleistung',
    timing_time: 'Geplante Zeit',
    tomorrow: 'Morgen {0}',
    save_data: 'Es wird gespeichert ...',
    exit_with_not_save: 'Nicht gespeicherte Änderungen verwerfen und jetzt beenden?',
    start_end_time_same: 'Startzeit und Endzeit können nicht identisch sein.',
    total_area: 'Gesamtfläche',
    total_duration: 'Gesamtdauer',
    total_count: 'Gesamtzeiten',
    show_only_30_clean_record: 'Nur Aufzeichnungen der letzten {0} Tage anzeigen',
    date_format: 'MM/TT hh:mm',
    dev_page: 'Entwicklungsseite',
    full_charge: 'Voll',
    start_clean: 'Start',
    pause_clean: 'Pause',
    clean_mode: 'Reinigungsmodus',
    water_level: 'Einstellen der Wasserausgabe',
    continue_clean: 'Fortsetzen',
    sweep: 'Staubsauger',
    sweep_mop: 'Saugen und wischen',
    mop: 'Wischer',
    middle: 'Mittel',
    full_speed: 'Turbo',
    work_free: 'Verfügbar',
    work_shutdown: 'Aus',
    err_none: 'Kein Fehler',
    err_side_wheel_desc: 'Bitte prüfen Sie, ob der Stoßdämpfer festsitzt.',
    err_bumper_desc: 'Bitte Kollisionssensor sauberwischen.',
    err_right_sensor_desc: 'Bitte wischen Sie den Wandsensor sauber.',
    err_load_map_fail: 'Karte konnte nicht geladen werden.',
    err_wheel: 'Bitte prüfen Sie, ob die Haupträder festsitzen.',
    err_main_wheel: 'Haupträderfehler',
    err_side_wheel: 'Stoßdämpferfehler',
    err_incline: 'Der Staubsauger-Wischer ist gekippt',
    tip_device_mark: 'Bitte stellen Sie den Staubsauger-Wischer auf eine ebene Fläche und bewegen Sie diesen während des Kalibrierungsvorgangs nicht. Der Staubsauger-Wischer wird automatisch neustarten.',
    err_start_incline_desc: 'Bitte stellen Sie den Staubsauger-Wischer zum Starten auf eine ebene Fläche und starten Sie ihn erneut.',
    err_radar_top: 'Radarfehler (oben)',
    err_bumper: 'Kollisionsfehler',
    err_radar_cover: 'Radarabdeckungsfehler',
    err_dust_box_desc: 'Bitte reinigen Sie den Staubbehälter und den Filter und stellen Sie sicher, dass sie korrekt installiert sind.',
    err_device_trapped: 'Staubsauger-Wischer steckt fest, bitte an einen anderen Ort stellen und erneut beginnen.',
    err_start_incline: 'Staubsauger-Wischer befindet sich nicht auf einer ebenen Oberfläche.',
    err_restricted: 'In einem eingeschränkt zugänglichen Bereich ist kein Start möglich.',
    err_cliff: 'err_cliff: "Hindernissensorfehler",',
    event_no_disturb_desc: 'Fortsetzen und Durchführung geplanter Reinigungsaufgaben ist nicht möglich.',
    err_no_mop: 'Kein Wischer-Pad installiert, bitte korrekte Installation des Wischer-Pads überprüfen.',
    err_low_battery_disable_sweep: 'Aufgrund des niedrigen Akkustands ist eine Reinigung nicht möglich.',
    err_dust_fan: 'Fehler beim Staubsammlungs-Lüfter in der Ladestation',
    err_leave_to_power_off: 'Wenn der Staubsauger-Wischer ausgeschaltet werden muss, entfernen Sie ihn bitte von der Ladestation und versuchen Sie es erneut.',
    finish_clean_to_zone: 'Durch das Umschalten auf die Zonenreinigung wird die aktuell durchgeführte Arbeit beendet.',
    finish_clean_to_spot: 'Durch das Umschalten auf die Einzelstellen-Reinigung wird die aktuell durchgeführte Arbeit beendet.',
    finish_charge_to_zone: 'Durch das Umschalten auf die Zonenreinigung wird der Ladevorgang beendet.',
    finish_charge_to_spot: 'Durch das Umschalten auf die Einzelstellen-Reinigung wird der Ladevorgang beendet.',
    finish_clean_to_sweep: 'Durch das Umschalten in den Saugmodus wird die aktuell durchgeführte Arbeit beendet.',
    finish_clean_to_sweep_mop: 'Durch das Umschalten in den Saug- und Wischmodus wird die aktuell durchgeführte Arbeit beendet.',
    finish_clean_to_mop: 'Durch das Umschalten in den Wischmodus wird die aktuell durchgeführte Arbeit beendet.',
    stop_clean: 'Durch das Aufrufen des Bereichseditors wird die aktuell durchgeführte Arbeit beendet.',
    wait_load: 'Bitte warten Sie, bis die Daten geladen wurden.',
    device_mark_success: 'Gerätenivellierung abgeschlossen',
    tip_find_robot: 'Bitte lokalisieren Sie den Staubsauger-Wischer mit Hilfe des Signaltons.',
    confirm_reset_material: 'Dieses Verbrauchsmaterial jetzt zurücksetzen?',
    stop_work_to_reset_map: 'Durch das Zurücksetzen der Karte wird die aktuell durchgeführte Arbeit beendet.',
    stop_charge_to_virtualwall: 'Rückkehr zur Ladestation zum Aufladen; dies wird durch die Einstellung einer virtuellen Wand bzw. eines begrenzt zugänglichen Bereichs unterbrochen.',
    stop_work_to_virtualwall: 'Durch die Einstellung einer virtuellen Wand bzw. eines begrenzt zugänglichen Bereichs wird die aktuell durchgeführte Arbeit beendet.',
    spot_tips: 'Den Raum im Radius von {0} m um den Koordinatenpunkt herum reinigen',
    zone_clean_tips: 'Reinigung innerhalb des Zonenbereichs.',
    delete_current_map: 'Karte löschen?',
    select_x_zones: 'Ausgewählte Flächen: {0}',
    machine_inside: 'Die Staubsammel-Ladestation des Staubsauger-Wischers darf sich nicht in einem beschränkt zugänglichen Bereich befinden.',
    wait_operate: 'Wird durchgeführt, bitte warten …',
    ctl_success: 'Erfolgreich durchgeführt',
    no_map: 'Noch keine Karte verfügbar',
    time_out: 'Zeitüberschreitung',
    no_area: 'Die aktuelle Karte beinhaltet keine Rauminformationen und kann nicht bearbeitet werden.',
    too_small_to_split: 'Trennen nicht möglich, vergrößern Sie den Bereich des zu trennenden Raums.',
    line_need_close_to_wall: 'Die Enden der Teillinie sollten so nah wie möglich an den Wänden sein.',
    err_radar: 'Radarfehler',
    err_radar_cover_desc: 'Bitte prüfen Sie, ob die Radarabdeckung verklemmt ist.',
    sensor_maintain: 'Sensorwartung',
    already_used: '{0} Betriebsstunde(n)',
    already_clean: 'Bereits sauber',
    err_backcharge: 'Rückkehr zur Ladestation zum Aufladen nicht möglich',
    err_backcharge_desc1: 'Bitte entfernen Sie alle Hindernisse in der Nähe der Staubsammel-Ladestation',
    err_backcharge_desc2: 'Bitte prüfen, ob die Verbindung zwischen Staubsauger-Wischer und Staubsammel-Ladestation normal funktioniert.',
    name_invalid: 'Name darf keine Sonderzeichen enthalten.',
    rug_check_tip: 'Bürste und Seitenbürste müssen regelmäßig gereinigt werden, um eine falsche Erkennung zu vermeiden.',
    tip_new_map_discover: 'Eine neue Karte wurde gefunden. Soll diese als aktuelle Karte festgelegt werden?',
    end_cleaning: 'Reinigung beendet',
    partitionEditing: 'Partitionsbearbeitung',
    saved_map: 'Bodenplan gespeichert',
    operator_fail: 'Einstellung fehlgeschlagen',
    remove: 'Löschen',
    cleand: 'Reinigungsbereich',
    clean_time: 'Reinigungszeit',
    battery: 'Restladung des Akkus',
    sweep_record: 'Reinigungsdaten',
    timing_sweep: 'Reservierte Reinigung',
    double_sweep: 'Sekundäre Reinigung',
    virtual_wall: 'Virtuelle Wand-/Gesperrter Bereich-Einstellung',
    map_rest: 'Bodenplan zurücksetzen',
    consumable_material_statistics: 'Verbrauchsgutinfo',
    remote_control: 'Fernbedienung',
    no_schedule: 'Zurzeit keine Reservierung',
    time_clean_disturb_tip: 'Nicht stören-Modus wurde aktiviert und das Gerät befindet sich im Ruhezustand',
    delete_saved_map: 'Bodenplan zurücksetzen oder nicht',
    side_bursh: 'Seitenbürste',
    main_bursh: 'Rollenbürste',
    filter: 'Filtersieb',
    start_time: 'Startzeit',
    end_time: 'Endzeit',
    collect_dust_now: 'Sofort Staub sauben',
    del_cur_timing: 'Reservierte Reinigung wirklich löschen?',
    name_cannot_empty: 'Name muss ausgefüllt sein',
    custom_name: 'Selbst festlegen',
    room_name: 'Zimmer{0}',
    add_wall: 'Virtuelle Wand hinzufügen',
    add_zone: 'Gesperrten Wisch- und Kehrbereich hinzufügen',
    more_than_forbid_length: 'Sie können maximal nur {0} gesperrte Bereiche und virtuelle Wände festlegen',
    reset_name: 'Umbenennung',
    map: 'Bodenplan',
    map_x: 'Bodenplan{0}',
    current_map: 'Aktueller Bodenplan',
    merge: 'Bereichskombination',
    segmentation: 'Bereichszuteilung',
    monday: 'Montag',
    tuesday: 'Dienstag',
    wednesday: 'Mittwoch',
    thursday: 'Donnerstag',
    friday: 'Freitag',
    saturday: 'Samstag',
    sunday: 'Sonntag',
    everyday: 'Jeden Tag',
    repeat: 'Wiederholen',
    no_repeat: 'Nicht wiederholen',
    global_clean: 'Gesamtreinigung',
    zone_clean: 'Bereichsreinigung',
    fix_point_clean: 'Stationäre Reinigung',
    no_clean_record: 'Es gibt derzeit keine Reinigungsdaten',
    stop_charge: 'Aufladevorgang pausieren',
    charging: 'Ladevorgang',
    charge: 'Aufladen',
    silent: 'Leise',
    standard: 'Standard',
    strong: 'Kräftig',
    charging_btn: 'Ladevorgang',
    work_sleep: 'Ruhezustand',
    work_pause: 'Pause',
    work_cleaning: 'Reinigung',
    work_recharge: 'Wird aufgeladen',
    work_charging: 'Ladevorgang',
    work_fault: 'Fehler',
    work_remote_control: 'Wird fernbedient',
    work_full_charged: 'Ladevorgang abgeschlossen',
    err_low_battery_charge: 'Akkuladestand des Geräts ist niedrig. Aufladevorgang starten',
    err_load_battery_shut_down: 'Akkuladestand zu niedrig. Maschine schaltet sich automatisch aus',
    err_roller_brush: 'Hauptbürste hat sich verklemmt',
    err_brush: 'Seitenbürste hat sich verklemmt',
    err_radar_desc: 'Prüfen, ob sich Radar verklemmt hat (keine Radardaten)',
    err_no_dust: 'Zwei-in-Einem-Wassertank nicht eingesetzt',
    err_full_dust_box: 'Staubkasten und Filtersieb reinigen',
    err_no_water: 'Wasser reicht nicht',
    err_area_not_arrival: 'Der zugeteilte Bereich ist nicht zugänglich',
    err_restricted_desc: 'Nehmen Sie das Gerät vor dem Start bitte aus dem gesperrten Bereich heraus',
    err_cliff_desc: 'Für Gerätestart Gefällesensor abwischen und Maschine aus Gefahrenbereich nehmen',
    err_water_pump: 'Wasserpumpe ist anomal',
    err_not_enough_two_room: 'Für Kombination bitte zwei benachbarte Bereiche wählen',
    err_not_enough_split: 'Bitte Bereich für Zuteilung wählen',
    err_not_enough_rename: 'Bitte Bereich für Umbenennung wählen',
    err_incline_desc: 'Bitte Maschine auf ebenem Boden starten',
    err_radar_top_desc: 'Prüfen, ob Radar verdeckt ist und ihn für den Start zu einer anderen Stelle bringen (Radar liefert wenige gültige Daten)',
    err_wall_sensor: 'PSD-Wandpositionssensor ist anomal',
    err_main_brush: 'Die Hauptbürste scheint nicht richtig zu funktionieren (Stromunterbrechung oder Kurzschluss)',
    err_side_brush: 'Seitenbürste ist anomal',
    err_fan: 'Gebläse ist anomal',
    err_dust_box: 'Staubkasten ist voll. Es wird empfohlen, den Staubkasten und das Filtersieb zu reinigen',
    err_no_water_box: 'Zwei-in-Einem-Wassertank und Filtersieb wieder sachgemäß einsetzen und Einsatz überprüfen',
    err_charge: 'Wiederaufladung fehlgeschlagen, Ladestation des Staubsaugroboters nicht gefunden',
    event_no_disturb: 'Nicht stören-Modus wurde aktiviert und die Sprachansage wurde deaktiviert',
    err_low_battery_do_charge: 'Niedriger Akkuladestand. Aufladen wird empfohlen',
    hint: 'Tipp',
    finish_clean_to_recharge: 'Aktuelle Reinigung beenden und mit Aufladen beginnen?',
    cancel: 'Abbrechen',
    confirm: 'OK',
    save: 'Speichern',
    sensor_desc: 'Staub alle {0} Nutzungsstunden entleeren',
    disturb_tips_setting: 'Einstellung der Nicht stören-Zeitspanne',
    disturb_tips_des: 'Nicht stören-Modus: Zwischenstopp-Reinigung wird in diesem Modus nicht durchgeführt; außerdem ist die Sprachansage und die Helligkeit der Anzeige reduziert',
    add_area: 'Bereich hinzufügen',
    map_editing: 'Bodenplanbearbeitung',
    mode_setting: 'Moduseinstellung',
    mopping_water: 'Wischwassermenge',
    custom_mode: 'Angepasster Modus',
    cleanUpBy_area: 'Gemäß dem für jeden Bereich festgelegten Modus reinigen',
    my_map: 'Mein Bodenplan',
    area_cleaning: 'Zugeteilten Bereich reinigen',
    sweep: 'Dort kehren, wo Sie hinzeigen',
    focus_cleaning: 'Vor-Ort-Reinigung',
    clickTo_clean: 'Zur Reinigung von 1,2 m x 1,2 m einen Punkt auf dem Bodenplan anklicken',
    Inplace_execution: 'Vor-Ort-Reinigung auf 1,5 m x 1,5 m sofort durchführen',
    sweeper_work: 'Der Wischroboter ist in Betrieb. Der aktuelle Vorgang beendet die Reinigungsaufgabe',
    operationCleaning_task: 'Der aktuelle Vorgang beendet diese Reinigungsaufgabe',
    voiceAndVolume: 'Sprache und Lautstärke',
    consumable_timing: 'Verbrauchsgut-Zeitspanne ',
    NoMap: 'Zurzeit ist kein Bodenplan verfügbar. Bitte einmal automatische Reinigung ab Ladestation durchführen Das Gerät kehrt nach der Reinigung zum Aufladen automatisch zur Ladestation zurück.',
    prohibit: 'Gesperrter Bereich-Einstellung',
    voice_Setting: 'Lautstärke der Sprache',
    voice_Using: 'Im Einsatz',
    voice_Downing: 'Download läuft',
    voice_Start_Down: 'Download',
    voice_Language_Setting: 'Sprache der Sprachansage',
    product_description: 'Bedienungsanleitung des Geräts',
    edge_sweep: 'Randreinigung',
    zone_edit: 'Bereich bearbeiten',
    robot_search: 'Roboter suchen',
    never_collect_dust: 'Nie staubsaugen',
    clean_1_collect_dust: 'Nach einmaliger Reinigung automatisch staubsaugen',
    clean_2_collect_dust: 'Nach zweimaliger Reinigung automatisch staubsaugen',
    clean_3_collect_dust: 'Nach dreimaliger Reinigung automatisch staubsaugen',
    add_mop_forbidZone: 'Gesperrten Wischbereich hinzufügen',
    has_same_timing: 'Sie legten eine wiederholte Reservierung fest',
    err_no_dust_package: 'Staubsack ist nicht eingesetzt',
    mopping_only: 'Nur wischen',
    isZoning: 'Es können maximal 5 zugeteilte Bereiche festgelegt werden',
    noMap_prompt: 'Zurzeit ist kein Bodenplan verfügbar. Automatische Reinigung bitte einmal durchführen',
    empty_mode: 'Modus löschen',
    suction: 'Saugkraft',
    small: 'Klein',
    in: 'Mittel',
    big: 'Groß',
    cleaning_range: 'Reinigungsumfang',
    regular_mode: 'Normaler Modus',
    custom_open: 'Bitte stellen Sie es im Karteneditor in den benutzerdefinierten Modus und schalten Sie es dann ein',
    customized_area: 'Bitte passen Sie zuerst den Bereich an',
    no_set: 'Wurde kein angepasster Bereich eingestellt, reinigt der Roboter im normalen Modus',
    empty_set: 'Nach dem Löschen reinigt der Roboter im normalen Modus',
    mop_notInstalled: 'Kein Wischtuch eingesetzt',
    recharge_text: 'Aktuelle Reinigung beenden und mit Aufladen beginnen?',
    Split_Time_Tips: 'Nach Bereichszuteilung werden die zugehörigen reservierten Reinigungen automatisch auf reservierte Gesamtreinigung umgestellt.',
    Merge_Time_Tips: 'Nach Bereichskombination werden die zugehörigen reservierten Reinigungen automatisch auf reservierte Gesamtreinigung umgestellt.',
    isMop_take: 'Wischwassermenge ist nur bei eingesetztem Wischtuch funktionstüchtig',
    global_take: 'Kehren am Rand funktioniert nur im Gesamtreinigungsmodus',
    Mopping_area: 'Gesperrter Wischbereich',
    Sweeping_area: 'Gesperrter Wisch- und Kehrbereich',
    point_sweeping: 'Kehren im Modus „Dort mit Kehren beginnen, wo Sie hinzeigen”',
    following_sweeping: 'Randreinigung wird durchgeführt',
    total_sweeping: 'Gesamtreinigung durchführen',
    room_sweeping: 'Reinigung eines Bereichs',
    double_sweeping: 'Sekundäre Reinigung durchführen',
    area_sweeping: 'Reinigung des unterteilten Bereichs',
    local_sweeping: 'Lokale Festpunktreinigung',
    RemoveMop_rack: 'Sie sollten besser den Wischtuchhalter abnehmen, damit der Holzboden nicht feucht und beschädigt wird',
    resetTxt: 'Werkseinstellungen wiederherstellen',
    resetTxtPrompt: 'Das Gerät wird nach Wiederherstellung der Werkseinstellungen aus der Geräteliste entfernt und alle gerätebezogenen Daten werden gelöscht',
    reset_prompt: 'Verbrauchsgüter wirklich zurücksetzen?',
    continue_find_charge: 'Aufladen fortsetzen',
    reset: 'Zurücksetzen'
  };
  exports.default = _default;
},10031,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: 'Robot aspirateur, balayage et lavage Mi Home',
    operator_success: 'Configuration réussie',
    ctrl_fail: 'Opération impossible',
    ctrling: 'Opération en cours...',
    loading: 'Chargement en cours...',
    load_fail: 'Chargement impossible',
    load_fail_retry: 'Échec du chargement. Appuyez pour réessayer.',
    mins: '{0} min',
    no_disturb: 'DND',
    pressurize: 'Mode tapis',
    voice_enable: 'Voix activée/désactivée',
    volume_setting: 'Régler le volume',
    memory_map: 'Mémoriser la carte',
    map_list: 'Liste des cartes',
    device_mark: 'Mise à niveau de l’appareil',
    x_schedule: 'Tâches programmées : {0}',
    setting_once_only: 'Le paramètre est valide une fois',
    repeat_sweep_once_only: 'L’activation de cette fonction permet de répéter (une seule fois) le nettoyage.',
    no_disturb_time: 'DND {0}-{1}',
    no_disturb_disable: "Le DND n'est pas activé",
    volume_percent: 'Volume {0}',
    mark_device_by_land: 'Mise à niveau de l’appareil en fonction de la position actuelle',
    dust_collect_manage: 'Gestion de la collecte de poussière',
    min_house: 'Petit appartement',
    med_house: 'Appartement de taille moyenne',
    max_house: 'Grand appartement',
    tip_sweep_nearby: 'Nettoyez dans une petite zone à proximité de l’aspirateur laveur.',
    can_use_x_day: 'Durée de service restante :{0} h',
    remain_percent: '{0}% restant',
    materail_reset: 'Réinitialiser le consommable',
    buy_now: 'Acheter maintenant',
    side_bursh_desc: 'La brosse latérale dirige les saletés et les débris des coins vers la brosse principale. Au fil du temps, elle va s’user et perdre de son efficacité. Par conséquent, il est recommandé de remplacer la brosse latérale après toutes les {0} heures de fonctionnement ou moins.',
    main_bursh_desc: 'La brosse principale dirige les saletés et les débris dans le compartiment à poussière du robot aspirateur laveur. Au fil du temps, elle va s’user et perdre de son efficacité. Par conséquent, il est recommandé de remplacer la brosse principale toutes les {0} heures de fonctionnement ou moins.',
    filter_desc: 'Le filtre du compartiment à poussière est un filtre H11, qui empêche la poussière de s’échapper du compartiment et de pénétrer dans le moteur du robot aspirateur laveur. Au fil du temps, il va s’encrasser et perdre de son efficacité. Par conséquent, il est recommandé de rincer le filtre à l’eau toutes les deux semaines et de le remplacer toutes les {0} heures de fonctionnement ou moins.',
    no_disturb_setting: 'Paramètres DND',
    not_local_network: "Avant d'ouvrir la fonction de contrôle à distance, vérifiez que le téléphone et le robot aspirateur laveur sont connectés au même réseau Wi-Fi.",
    ping_loading: 'Vérification du réseau...',
    remote_will_cancel_current: 'Passer au contrôle à distance interrompra la tâche actuelle.',
    remote_disable_by_fault: 'Erreur au niveau du robot aspirateur laveur, le contrôle à distance ne peut pas être utilisé.',
    exit_remote_fail: 'Impossible de quitter le contrôle à distance',
    add_name: 'Ajouter un nom',
    room_name_length_limit: 'Le nom de la pièce ne peut pas dépasser 12 caractères',
    back_avoid_tip: 'Évitez de faire tomber le robot aspirateur laveur lorsque vous le retournez.',
    room_name_can_not_same: 'Le nom ne peut pas dupliqué.',
    switch_sweep_mode_tip: 'Passer à la méthode de nettoyage interrompra la tâche actuelle.',
    can_not_do_mark_in_work: "Cette opération ne peut pas être effectuée lorsque l’appareil est en pause ou lorsqu'une tâche est en cours.",
    set_map: "Définir comme carte actuelle",
    already_set_current_map: 'Déjà définie comme carte actuelle',
    set_will_stop_back_charge: 'Cette opération empêchera le robot aspirateur laveur de retourner à la station de charge.',
    set_will_stop_work: 'Effectuer cette action interrompra la tâche actuelle.',
    working_can_not_edit: 'L’éditeur de zone ne peut pas être utilisé lorsque le robot aspirateur laveur est en cours de nettoyage.',
    drawline_to_split: 'Tracez une ligne sur l’écran pour séparer la pièce',
    workday: 'Les jours ouvrables',
    weekday: 'Le week-end',
    timing_mode: 'Mode programme',
    gear: 'Aspiration',
    timing_time: 'Heure planifiée',
    tomorrow: 'Demain{0}',
    save_data: 'Enregistrement en cours...',
    exit_with_not_save: 'Ignorer les modifications non sauvegardées et quitter maintenant ?',
    start_end_time_same: 'L’heure début et de fin ne peuvent pas être identiques.',
    total_area: 'Zone totale',
    total_duration: 'Durée totale',
    total_count: 'Nombre total',
    show_only_30_clean_record: 'Ne montrer que les enregistrements des {0} derniers jours',
    date_format: 'MM/jj hh:mm',
    dev_page: 'Dév Page',
    full_charge: 'Plein',
    start_clean: 'Démarrer',
    pause_clean: 'Suspendre',
    clean_mode: 'Mode de nettoyage',
    water_level: "Ajuster le débit d'eau",
    continue_clean: 'Reprendre',
    sweep: 'Aspirateur',
    sweep_mop: 'Robot aspirateur laveur',
    mop: 'Serpillère',
    middle: 'Moyen',
    full_speed: 'Turbo',
    work_free: 'Disponible',
    work_shutdown: 'À l’arrêt',
    err_none: 'Aucune erreur',
    err_side_wheel_desc: 'Vérifiez si le pare-chocs est bloqué.',
    err_bumper_desc: 'Essuyez le capteur de collision.',
    err_right_sensor_desc: 'Essuyez le capteur mural.',
    err_load_map_fail: 'Chargement de la carte impossible.',
    err_wheel: 'Vérifiez si les roues principales sont bloquées.',
    err_main_wheel: 'Erreur des roues principales',
    err_side_wheel: 'Erreur de pare-chocs',
    err_incline: 'Le robot aspirateur laveur est incliné',
    tip_device_mark: 'Placez le robot aspirateur laveur sur une surface plane et ne le déplacez pas pendant le calibrage. Le robot aspirateur laveur redémarrera automatiquement.',
    err_start_incline_desc: 'Pour commencer, placez le robot aspirateur laveur sur une surface plane puis mettez-le en marche.',
    err_radar_top: 'Erreur du radar',
    err_bumper: 'Erreur de capteur de collision',
    err_radar_cover: 'Erreur du cache du radar',
    err_dust_box_desc: "Nettoyez le compartiment et le filtre à poussière et vérifiez qu'ils sont installés.",
    err_device_trapped: "Le robot aspirateur laveur est bloqué. Déplacez-le et recommencez.",
    err_start_incline: 'Le robot aspirateur laveur n’est pas sur une surface plane.',
    err_restricted: 'Démarrage dans une zone restreinte impossible.',
    err_cliff: "Erreur du capteur d'obstacles",
    event_no_disturb_desc: 'Impossible de reprendre et effectuer les nettoyages programmés.',
    err_no_mop: "Pas de support de serpillère installé. Vérifiez qu'un support de serpillère est installé.",
    err_low_battery_disable_sweep: 'Impossible de nettoyer lorsque le niveau de batterie est faible.',
    err_dust_fan: 'Erreur de ventilateur de la station de charge de la collecte de poussière',
    err_leave_to_power_off: 'Si vous devez éteindre le robot aspirateur laveur, éloignez-le de la station de charge puis réessayez.',
    finish_clean_to_zone: 'Passer au Nettoyage zoné interrompra la tâche actuelle.',
    finish_clean_to_spot: 'Passer au Nettoyage localisé interrompra la tâche actuelle.',
    finish_charge_to_zone: 'Passer au Nettoyage zoné interrompra le processus de charge.',
    finish_charge_to_spot: 'Passer au Nettoyage localisé interrompra le processus de charge.',
    finish_clean_to_sweep: 'Passer en mode d’aspiration interrompra la tâche actuelle.',
    finish_clean_to_sweep_mop: 'Passer en mode d’aspiration et lavage interrompra la tâche actuelle.',
    finish_clean_to_mop: 'Passer en mode lavage interrompra la tâche actuelle.',
    stop_clean: 'Entrer dans l’éditeur de zone interrompra la tâche actuelle.',
    wait_load: 'Attendez la fin du chargement des données.',
    device_mark_success: 'Mise à niveau de l’appareil terminée',
    tip_find_robot: 'Cherchez le robot aspirateur laveur en vous basant sur le son.',
    confirm_reset_material: 'Réinitialiser ce consommable maintenant ?',
    stop_work_to_reset_map: 'Réinitialiser la carte interrompra la tâche actuelle.',
    stop_charge_to_virtualwall: 'Retour à la station de charge. Définir un mur virtuel/une zone restreinte interrompra cette action.',
    stop_work_to_virtualwall: 'Définir un mur virtuel/une zone restreinte interrompra la tâche actuelle.',
    spot_tips: 'Nettoyez la zone dans un rayon de {0} m autour du point de coordonnée',
    zone_clean_tips: 'Nettoyer dans la zone zonée.',
    delete_current_map: 'Supprimer la carte ?',
    select_x_zones: 'Zones sélectionnées : {0}',
    machine_inside: 'Une zone restreinte ne peut pas contenir la station charge de la collecte de poussière ou le robot aspirateur laveur.',
    wait_operate: 'Exécution en cours, veuillez patienter...',
    ctl_success: 'Exécution terminée',
    no_map: 'Aucune carte disponible pour l’instant',
    time_out: 'Délai de l’opération dépassé',
    no_area: 'La carte actuelle n’a aucune information de pièce et ne peut pas être modifiée.',
    too_small_to_split: 'Séparation impossible. Veuillez élargir la zone de la pièce à diviser.',
    line_need_close_to_wall: 'Les extrémités de la ligne séparatrice doivent être aussi proches que possible des murs de la pièce.',
    err_radar: 'Erreur du radar',
    err_radar_cover_desc: 'Vérifiez si le cache du radar est bloqué.',
    sensor_maintain: 'Entretien des capteurs',
    already_used: '{0} heure utilisée',
    already_clean: 'Déjà nettoyé',
    err_backcharge: 'Impossible de retourner au socle pour charger',
    err_backcharge_desc1: 'Retirez tous les obstacles près du socle de chargement qui collecte la poussière',
    err_backcharge_desc2: 'Vérifiez la connexion entre le robot aspirateur laveur et le socle de charge du collecteur de poussière.',
    name_invalid: 'Le nom ne peut pas contenir de caractères spéciaux',
    rug_check_tip: 'La brosse et la brosse latérale doivent être nettoyées régulièrement pour éviter des détections incorrectes.',
    tip_new_map_discover: 'Une nouvelle carte a été trouvée, voulez-vous la définir comme itinéraire actuel ?',
    end_cleaning: 'Fin du nettoyage',
    partitionEditing: 'Modification de la partition',
    saved_map: 'Carte enregistrée',
    operator_fail: 'Échec de la configuration',
    remove: 'Supprimer',
    cleand: 'Zone de nettoyage',
    clean_time: 'Temps de nettoyage',
    battery: 'Niveau de batterie restant',
    sweep_record: 'Enregistrements de nettoyage',
    timing_sweep: 'Nettoyage réservé',
    double_sweep: 'Nettoyage secondaire',
    virtual_wall: "Définition d'un mur virtuel/d’une zone restreinte",
    map_rest: 'Réinitialiser le plan',
    consumable_material_statistics: 'Informations sur les consommables',
    remote_control: 'Télécommande',
    no_schedule: 'Aucune réservation actuellement',
    time_clean_disturb_tip: 'Le mode Ne pas déranger a été activé et l’appareil est passé à l’état veille prolongée',
    delete_saved_map: 'Réinitialiser le plan ou non',
    side_bursh: 'Brosse latérale',
    main_bursh: 'Brosse roulante',
    filter: 'Crépine',
    start_time: 'Heure de début',
    end_time: 'Heure de fin',
    collect_dust_now: 'Collectez immédiatement la poussière',
    del_cur_timing: 'Voulez-vous vraiment supprimer le nettoyage réservé ?',
    name_cannot_empty: 'Le nom ne peut pas être vide',
    custom_name: 'Définition automatique',
    room_name: 'Pièce{0}',
    add_wall: 'Ajouter des murs virtuels',
    add_zone: 'Ajouter une zone de balayage et de lavage restreinte',
    more_than_forbid_length: 'Vous ne pouvez configurer que {0} zones restreintes et murs virtuels au maximum',
    reset_name: 'Changement de nom',
    map: 'Plan',
    map_x: 'Plan{0}',
    current_map: 'Plan actuel',
    merge: 'Combinaison de zones',
    segmentation: 'Division de zone',
    monday: 'Lundi',
    tuesday: 'Mardi',
    wednesday: 'Mercredi',
    thursday: 'Jeudi',
    friday: 'Vendredi',
    saturday: 'Samedi',
    sunday: 'Dimanche',
    everyday: 'Tous les jours',
    repeat: 'Répéter',
    no_repeat: 'Ne pas répéter',
    global_clean: 'Nettoyage global',
    zone_clean: 'Nettoyage de la zone',
    fix_point_clean: 'Nettoyage point fixe',
    no_clean_record: 'Aucun enregistrement de nettoyage actuellement',
    stop_charge: 'Interrompre la recharge',
    charging: 'Charge en cours',
    charge: 'Recharger',
    silent: 'Silencieux',
    standard: 'Standard',
    strong: 'Fort',
    charging_btn: 'Charge en cours',
    work_sleep: 'Veille prolongée en cours',
    work_pause: 'Pause',
    work_cleaning: 'Nettoyage',
    work_recharge: 'En cours de recharge',
    work_charging: 'Charge en cours',
    work_fault: 'Défaut',
    work_remote_control: 'Contrôle à distance en cours',
    work_full_charged: 'Charge effectuée',
    err_low_battery_charge: 'L’appareil a un faible niveau de batterie. Commencer la recharge',
    err_load_battery_shut_down: 'Niveau de batterie trop faible. La machine est automatiquement éteinte',
    err_roller_brush: 'La brosse principale est coincée',
    err_brush: 'La brosse latérale est coincée',
    err_radar_desc: 'Veuillez vérifier si le radar est coincé (aucune donnée radar)',
    err_no_dust: 'Le réservoir d’eau 2 en 1 est retiré',
    err_full_dust_box: 'Nettoyer le bac à poussière et la crépine',
    err_no_water: 'Eau insuffisante',
    err_area_not_arrival: 'La zone désignée ne peut pas être atteinte',
    err_restricted_desc: 'Veuillez déplacer l’appareil hors de la zone restreinte avant de commencer',
    err_cliff_desc: 'Veuillez essuyer le capteur de vide et vous éloigner de la zone dangereuse pour démarrer',
    err_water_pump: 'Anomalie au niveau de la pompe à eau',
    err_not_enough_two_room: 'Veuillez sélectionner deux zones adjacentes pour la combinaison',
    err_not_enough_split: 'Veuillez sélectionner une zone pour la division',
    err_not_enough_rename: 'Veuillez sélectionner une zone pour le changement de nom',
    err_incline_desc: 'Veuillez démarrer la machine sur un sol plat',
    err_radar_top_desc: 'Veuillez vérifier si le radar est masqué et déplacez-le vers une nouvelle position pour démarrer (le radar a quelques données valides)',
    err_wall_sensor: 'Anomalie au niveau du capteur de suivi des murs',
    err_main_brush: 'Il semble y avoir un problème avec la brosse principale (circuit ouvert ou court-circuit)',
    err_side_brush: 'Anomalie au niveau de la brosse latérale',
    err_fan: 'Anomalie au niveau du ventilateur',
    err_dust_box: 'Le bac à poussière est plein. Il est recommandé de nettoyer le bac à poussière et la crépine',
    err_no_water_box: 'Veuillez remettre le réservoir d’eau 2 en 1 et la crépine. Vérifiez que la crépine et le réservoir d’eau 2 en 1 sont installés en place',
    err_charge: 'Échec de la recharge, colonne de recharge et de collecte de la poussière introuvable',
    event_no_disturb: 'Le mode Ne pas déranger a été activé et l’invite vocale a été désactivée',
    err_low_battery_do_charge: 'Faible niveau de batterie. Une charge est recommandée',
    hint: 'Conseil',
    finish_clean_to_recharge: 'Voulez-vous terminer le nettoyage en cours et commencer la recharge ?',
    cancel: 'Annuler',
    confirm: 'OK',
    save: 'Enregistrer',
    sensor_desc: 'Retirez la poussière toutes les {0} heures d’utilisation',
    disturb_tips_setting: 'Configuration de la période Ne pas déranger',
    disturb_tips_des: 'Mode Ne pas déranger : le nettoyage au point d’interruption ne sera pas effectué pendant cette période, l’invite vocale et la luminosité de l’indicateur seront réduites',
    add_area: 'Ajouter une zone',
    map_editing: 'Édition de plan',
    mode_setting: 'Réglage du mode',
    mopping_water: 'Quantité d’eau de lavage',
    custom_mode: 'Mode personnalisé',
    cleanUpBy_area: 'Effectuer le nettoyage selon le mode défini pour chaque zone',
    my_map: 'Mon plan',
    area_cleaning: 'Nettoyage zone de division',
    sweep: 'Balayer là où vous pointez',
    focus_cleaning: 'Nettoyage in situ',
    clickTo_clean: 'Cliquez sur un point du plan pour nettoyer 1,2 m x 1,2 m',
    Inplace_execution: 'Effectuer immédiatement un nettoyage in situ de 1,5 m x 1,5 m',
    sweeper_work: 'Le robot de balayage fonctionne. L’opération en cours mettra fin à la tâche de nettoyage',
    operationCleaning_task: "L'opération en cours mettra fin à cette tâche de nettoyage",
    voiceAndVolume: 'Voix et volume',
    consumable_timing: 'Échéance des consommables ',
    NoMap: 'Aucun plan n’est actuellement disponible. Veuillez effectuer un nettoyage automatique complet une fois depuis la colonne de recharge. L’appareil reviendra automatiquement à la colonne de recharge pour la charge une fois le nettoyage effectué.',
    prohibit: 'd’une zone restreinte',
    voice_Setting: 'Volume de la voix',
    voice_Using: 'En cours d’utilisation',
    voice_Downing: 'Téléchargement',
    voice_Start_Down: 'Télécharger',
    voice_Language_Setting: 'Langue de la voix de l’appareil',
    product_description: 'Manuel du produit',
    edge_sweep: 'Nettoyage en suivant les bords',
    zone_edit: 'Éditer la zone',
    robot_search: 'Rechercher robot',
    never_collect_dust: 'Ne jamais collecter la poussière',
    clean_1_collect_dust: 'Collecter automatiquement la poussière après un seul nettoyage',
    clean_2_collect_dust: 'Collecter automatiquement la poussière après avoir nettoyé deux fois',
    clean_3_collect_dust: 'Collecter automatiquement la poussière après avoir nettoyé trois fois',
    add_mop_forbidZone: 'Ajouter une zone restreinte de lavage',
    has_same_timing: 'Vous définissez une réservation répétée',
    err_no_dust_package: 'Le sac à poussière n’est pas en place',
    mopping_only: 'Lavage uniquement',
    isZoning: '5 zones divisées peuvent être configurées au maximum',
    noMap_prompt: 'Aucun plan n’est actuellement disponible. Veuillez effectuer le nettoyage automatique une fois',
    empty_mode: "Mode d'effacement",
    suction: 'Force d’aspiration',
    small: 'Petit',
    in: 'Moyen',
    big: 'Grand',
    cleaning_range: 'Portée du nettoyage',
    regular_mode: 'Mode normal',
    custom_open: "Veuillez le définir en mode personnalisé dans l'éditeur de carte, puis l'activer",
    customized_area: "Veuillez d'abord personnaliser la zone",
    no_set: "Si aucune zone personnalisée n'est définie, le robot effectue le nettoyage en mode normal",
    empty_set: 'Après le nettoyage, le robot effectue le nettoyage en mode normal',
    mop_notInstalled: 'Serpillière non installée',
    recharge_text: 'Voulez-vous terminer le nettoyage en cours et commencer la recharge ?',
    Split_Time_Tips: 'Après la division de zone, les nettoyages réservés correspondants seront automatiquement définis en tant que nettoyage global réservé.',
    Merge_Time_Tips: 'Après la combinaison de zones, les nettoyages réservés correspondants seront automatiquement définis en tant que nettoyage global réservé.',
    isMop_take: "La quantité d'eau de lavage ne fonctionne que lorsque la serpillière est installée",
    global_take: 'Le balayage en suivant les bords fonctionne uniquement en mode nettoyage global',
    Mopping_area: 'Zone restreinte de lavage',
    Sweeping_area: 'Zone de balayage et de lavage restreinte',
    point_sweeping: 'Balayage en mode « Balayer là où vous pointez »',
    following_sweeping: 'Réalisation du nettoyage en suivant les bords',
    total_sweeping: 'Réalisation du nettoyage global',
    room_sweeping: 'Nettoyer une zone',
    double_sweeping: 'Effectuer un nettoyage secondaire',
    area_sweeping: 'Nettoyage de la zone partagée',
    local_sweeping: "Nettoyage d'un point fixe sur place",
    RemoveMop_rack: 'Il est recommandé de retirer le support de la serpillère pour éviter l’humidité et la dégradation des parquets',
    resetTxt: 'Restaurer les paramètres d’usine',
    resetTxtPrompt: 'Après avoir restauré les paramètres d’usine, l’appareil sera retiré de la liste des appareils et toutes les données liées à l’appareil seront effacées',
    reset_prompt: 'Voulez-vous vraiment réinitialiser les consommables ?',
    continue_find_charge: 'Continuer à recharger',
    reset: 'Réinitialiser'
  };
  exports.default = _default;
},10034,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: 'Robot de aspiración, limpieza y barrido Mi Home',
    operator_success: 'Se ha configurado correctamente',
    ctrl_fail: 'No se pudo realizar',
    ctrling: 'Realizando...',
    loading: 'Cargando...',
    load_fail: 'No se pudo cargar',
    load_fail_retry: 'No se pudo cargar, pulse para volver a intentarlo.',
    mins: '{0} min',
    no_disturb: 'DND',
    pressurize: 'Impulso para alfombras',
    voice_enable: 'Voz activada/desactivada',
    volume_setting: 'Ajustar el volumen',
    memory_map: 'Recordar mapa',
    map_list: 'Lista de mapas',
    device_mark: 'Estabilización del dispositivo',
    x_schedule: 'Tareas programadas: {0}',
    setting_once_only: 'El ajuste es válido una vez',
    repeat_sweep_once_only: 'Tras activarlo se repetirá la limpieza, solo tiene efecto una vez.',
    no_disturb_time: 'DND {0}-{1}',
    no_disturb_disable: 'El modo DND no está activado',
    volume_percent: 'Volumen {0}',
    mark_device_by_land: 'Nivele el dispositivo en función de la ubicación actual',
    dust_collect_manage: 'Gestión de la recogida de polvo',
    min_house: 'Piso pequeño',
    med_house: 'Piso mediano',
    max_house: 'Piso grande',
    tip_sweep_nearby: 'Limpieza de una zona pequeña cerca del aspirador con mopa.',
    can_use_x_day: 'Vida útil restante: {0} h',
    remain_percent: '{0}% restante',
    materail_reset: 'Restaurar consumible',
    buy_now: 'Compre ahora',
    side_bursh_desc: 'El cepillo lateral dirige suciedad y basura desde las esquinas hacia el cepillo principal. Con el tiempo, se desgastará por el uso y perderá su efectividad. Por lo tanto, es recomendable reemplazar el cepillo lateral al menos tras {0} horas de funcionamiento.',
    main_bursh_desc: 'El cepillo principal dirige suciedad y basura al compartimento para el polvo del aspirador con mopa. Con el tiempo, se desgastará por el uso y perderá su efectividad. Por lo tanto, es recomendable reemplazar el cepillo al menos cada {0} horas de funcionamiento.',
    filter_desc: 'El filtro del compartimento de polvo utiliza materiales de filtrado de grado H11 para que el polvo no salga del compartimento ni entre en el motor del aspirador con mopa. Con el tiempo, se obstruirá y perderá su efectividad. Por lo tanto, es recomendable enjuagar el filtro cada dos semanas y reemplazarlo al menos tras {0} horas de funcionamiento.',
    no_disturb_setting: 'Configuración de DND',
    not_local_network: 'Antes de abrir la función de control remoto, asegúrese de que el teléfono y el aspirador con mopa están conectados a la misma red Wi-Fi.',
    ping_loading: 'Comprobando red...',
    remote_will_cancel_current: 'Al cambiar a control remoto, se detendrá la tarea en curso.',
    remote_disable_by_fault: 'El aspirador con mopa tiene un error, no se puede utilizar el control remoto.',
    exit_remote_fail: 'No pudo salir del control remoto',
    add_name: 'Añadir nombre',
    room_name_length_limit: 'El nombre de la habitación no puede tener más de 12 caracteres',
    back_avoid_tip: 'No deje caer el aspirador con mopa cuando lo invierta.',
    room_name_can_not_same: 'El nombre no puede duplicarse.',
    switch_sweep_mode_tip: 'Al cambiar el método de limpieza, se detendrá la tarea en curso.',
    can_not_do_mark_in_work: 'No se puede llevar a cabo esta operación mientras está pausado o haya una tarea en progreso.',
    set_map: 'Establecer como mapa actual',
    already_set_current_map: 'Ya está configurado como mapa actual',
    set_will_stop_back_charge: 'Esta operación evitará que el aspirador con mopa vuelva a la base para recarga.',
    set_will_stop_work: 'Realizar esta acción, detendrá la tarea en curso.',
    working_can_not_edit: 'No se puede utilizar el editor de área mientras el aspirador con mopa está limpiando.',
    drawline_to_split: 'Dibuje una línea en la pantalla para dividir la habitación',
    workday: 'Días laborables',
    weekday: 'Fines de semana',
    timing_mode: 'Modo programación',
    gear: 'Aspiración',
    timing_time: 'Hora programada',
    tomorrow: 'Mañana {0}',
    save_data: 'Guardando...',
    exit_with_not_save: '¿Quiere descartar ahora los cambios no guardados y salir?',
    start_end_time_same: 'La hora de inicio y finalización no pueden ser iguales.',
    total_area: 'Área total',
    total_duration: 'Duración total',
    total_count: 'Veces totales',
    show_only_30_clean_record: 'Mostrar solo los registros de los últimos {0} días',
    date_format: 'dd/MM hh:mm',
    dev_page: 'Pág. del disp.',
    full_charge: 'Completo',
    start_clean: 'Iniciar',
    pause_clean: 'Pausar',
    clean_mode: 'Modo de limpieza',
    water_level: 'Ajustar la salida de agua',
    continue_clean: 'Reanudar',
    sweep: 'Aspirador',
    sweep_mop: 'Aspirador y mopa',
    mop: 'Mopa',
    middle: 'Medio',
    full_speed: 'Turbo',
    work_free: 'Disponible',
    work_shutdown: 'Apagado',
    err_none: 'No hay errores',
    err_side_wheel_desc: 'Compruebe si el parachoques está atascado.',
    err_bumper_desc: 'Limpie el sensor de colisiones.',
    err_right_sensor_desc: 'Limpie el sensor de paredes.',
    err_load_map_fail: 'No se pudo cargar el mapa.',
    err_wheel: 'Compruebe si las ruedas principales están atascadas.',
    err_main_wheel: 'Error de las ruedas principales',
    err_side_wheel: 'Error del parachoques',
    err_incline: 'El aspirador con mopa está inclinado.',
    tip_device_mark: 'Coloque el aspirador con mopa sobre una superficie plana y no lo mueva durante el proceso de calibración. El aspirador se reiniciará automáticamente.',
    err_start_incline_desc: 'Para empezar, coloque el aspirador con mopa sobre una superficie plana e inícielo.',
    err_radar_top: 'Error de la parte superior del radar',
    err_bumper: 'Error del sensor de colisión',
    err_radar_cover: 'Error de cubierta del radar',
    err_dust_box_desc: 'Limpie el compartimento para polvo y el filtro y asegúrese de que estén bien instalados.',
    err_device_trapped: 'El aspirador con mopa está atascado, muévalo a una nueva zona y vuelva a iniciarlo.',
    err_start_incline: 'El aspirador con mopa no está en una superficie plana.',
    err_restricted: 'No se puede iniciar en un área restringida.',
    err_cliff: 'Error del sensor de obstáculos',
    event_no_disturb_desc: 'No se puede reanudar ni llevar a cabo las limpiezas programadas.',
    err_no_mop: 'No hay instalada ninguna almohadilla de la mopa, asegúrese de que la almohadilla de la mopa esté bien instalada.',
    err_low_battery_disable_sweep: 'No puede limpiar cuando el nivel de batería es demasiado bajo.',
    err_dust_fan: 'Error del ventilador de la base de carga para recoger el polvo',
    err_leave_to_power_off: 'Si es necesario apagar el aspirador con mopa, sáquelo de la base de carga y vuelva a intentarlo.',
    finish_clean_to_zone: 'Al cambiar a la limpieza por zonas, se detendrá la tarea actual en curso.',
    finish_clean_to_spot: 'Al cambiar a la limpieza puntual, se detendrá la tarea actual en curso.',
    finish_charge_to_zone: 'Al cambiar a la limpieza por zonas, se detendrá el proceso de carga.',
    finish_charge_to_spot: 'Al cambiar a la limpieza puntual, se detendrá el proceso de carga.',
    finish_clean_to_sweep: 'Al cambiar al modo de aspirado, se detendrá la tarea en curso.',
    finish_clean_to_sweep_mop: 'Al cambiar al modo de aspirado y fregado, se detendrá la tarea en curso.',
    finish_clean_to_mop: 'Al cambiar al modo de fregado, se detendrá la tarea en curso.',
    stop_clean: 'Al entrar en el editor de área, se detendrá la tarea en curso.',
    wait_load: 'Espere a que se carguen los datos.',
    device_mark_success: 'Estabilización del dispositivo completada',
    tip_find_robot: 'Busque el aspirador con mopa por el sonido.',
    confirm_reset_material: '¿Quiere restablecer ahora este consumible?',
    stop_work_to_reset_map: 'Al restaurar el mapa, se detendrá la tarea actual en curso.',
    stop_charge_to_virtualwall: 'Establecer una pared virtual/área restringida detendrá el regreso a la base para recarga.',
    stop_work_to_virtualwall: 'Configurar una pared virtual/área restringida detendrá la tarea en curso.',
    spot_tips: 'Limpie el área en un radio de {0} m alrededor del punto de coordenadas',
    zone_clean_tips: 'Limpiar dentro del área indicada.',
    delete_current_map: '¿Eliminar el mapa?',
    select_x_zones: 'Áreas seleccionadas: {0}',
    machine_inside: 'Las áreas restringidas no pueden cubrir la base de carga para recoger polvo ni el aspirador con mopa.',
    wait_operate: 'Ejecutando, espere…',
    ctl_success: 'Ejecución completada con éxito',
    no_map: 'Aún no hay mapa disponible',
    time_out: 'La operación expiró',
    no_area: 'El mapa actual no tiene información de la habitación y no puede cambiarse.',
    too_small_to_split: 'No se pudo dividir. Aumente el área de la habitación que quiere dividir.',
    line_need_close_to_wall: 'Los extremos de la línea divisoria deben estar lo más cerca posible de las paredes de la habitación.',
    err_radar: 'Error del radar',
    err_radar_cover_desc: 'Compruebe si la cubierta del radar está atascada.',
    sensor_maintain: 'Mantenimiento del sensor',
    already_used: '{0} horas en uso',
    already_clean: 'Ya limpio',
    err_backcharge: 'No se pudo volver a la base de carga',
    err_backcharge_desc1: 'Quite cualquier obstáculo cercano a la base de carga.',
    err_backcharge_desc2: 'Compruebe si la conexión entre el aspirador con mopa y la base de carga es correcta.',
    name_invalid: 'El nombre no puede contener caracteres especiales.',
    rug_check_tip: 'El cepillo yel cepillo lateral deben limpiarse de forma habitual para evitar detecciones incorrectas.',
    tip_new_map_discover: 'Se ha encontrado un nuevo mapa. ¿Quiere establecerlo como mapa actual?',
    end_cleaning: 'Limpieza finalizada',
    partitionEditing: 'Edición de divisiones del área ',
    saved_map: 'Mapa guardado',
    operator_fail: 'Error en el ajuste',
    remove: 'Eliminar',
    cleand: 'Área de limpieza',
    clean_time: 'Tiempo de limpieza',
    battery: 'Nivel de batería restante',
    sweep_record: 'Registros de limpieza',
    timing_sweep: 'Limpieza reservada',
    double_sweep: 'Limpieza secundaria',
    virtual_wall: 'Ajuste de pared virtual/área restringida',
    map_rest: 'Restablecer el mapa',
    consumable_material_statistics: 'Información consumible',
    remote_control: 'Control remoto',
    no_schedule: 'No hay reserva actualmente',
    time_clean_disturb_tip: 'El modo No molestar se ha activado y el dispositivo ha estado en estado de hibernación',
    delete_saved_map: 'Restablecer el mapa o no',
    side_bursh: 'Cepillo lateral',
    main_bursh: 'Cepillo giratorio',
    filter: 'Filtro de pantalla',
    start_time: 'Hora de inicio',
    end_time: 'Hora de finalización',
    collect_dust_now: 'Recoja el polvo inmediatamente',
    del_cur_timing: '¿Seguro que desea eliminar la limpieza reservada?',
    name_cannot_empty: 'El nombre no puede estar vacío',
    custom_name: 'Autodefinir',
    room_name: 'Habitación{0}',
    add_wall: 'Agregar pared virtual',
    add_zone: 'Añadir área de limpieza y barrido limitada',
    more_than_forbid_length: 'Solo pueden configurar como máximo {0} áreas restringidas y muros virtuales',
    reset_name: 'Cambiando el nombre',
    map: 'Mapa',
    map_x: 'Mapa{0}',
    current_map: 'Mapa actual',
    merge: 'Combinación de áreas',
    segmentation: 'División de área',
    monday: 'Lunes',
    tuesday: 'Martes',
    wednesday: 'Miércoles',
    thursday: 'Jueves',
    friday: 'Viernes',
    saturday: 'Sábado',
    sunday: 'Domingo',
    everyday: 'Todos los días',
    repeat: 'Repetir',
    no_repeat: 'No repetir',
    global_clean: 'Limpieza global',
    zone_clean: 'Limpieza de áreas',
    fix_point_clean: 'Limpieza de punto fijo',
    no_clean_record: 'No hay registros de limpieza actualmente',
    stop_charge: 'Pausar recarga',
    charging: 'Cargando',
    charge: 'Recarga',
    silent: 'Silencioso',
    standard: 'Estándar',
    strong: 'Resistente',
    charging_btn: 'Cargando',
    work_sleep: 'Hibernando',
    work_pause: 'Pausa',
    work_cleaning: 'Limpieza',
    work_recharge: 'Recargándose',
    work_charging: 'Cargando',
    work_fault: 'Error',
    work_remote_control: 'Controlado de forma remota',
    work_full_charged: 'Carga realizada',
    err_low_battery_charge: 'El dispositivo tiene un nivel de batería bajo. Iniciar la recarga',
    err_load_battery_shut_down: 'Nivel de batería demasiado bajo. La máquina se apaga automáticamente',
    err_roller_brush: 'El cepillo principal está atascado',
    err_brush: 'El cepillo lateral está atascado',
    err_radar_desc: 'Compruebe si el radar está atascado (no hay datos del radar)',
    err_no_dust: 'El depósito de agua 2 e 1 está extraído',
    err_full_dust_box: 'Limpie el depósito de polvo y el filtro de pantalla',
    err_no_water: 'Agua insuficiente',
    err_area_not_arrival: 'No se puede llegar al área designada',
    err_restricted_desc: 'Mueva el dispositivo fuera del área restringida antes de comenzar',
    err_cliff_desc: 'Limpie el sensor de precipicio y aléjese de la zona peligrosa para iniciar',
    err_water_pump: 'La bomba de agua funciona de forma anómala',
    err_not_enough_two_room: 'Seleccione dos áreas adyacentes para la combinación',
    err_not_enough_split: 'Seleccione un área para la división',
    err_not_enough_rename: 'Seleccione un área para cambiar el nombre',
    err_incline_desc: 'Encienda la máquina en un terreno nivelado',
    err_radar_top_desc: 'Verifique si el radar está oculto y muévalo a una nueva posición para comenzar (el radar tiene pocos datos válidos)',
    err_wall_sensor: 'El sensor de seguimiento de la pared no funciona normalmente',
    err_main_brush: 'Parece que algo no va bien con el cepillo principal (circuito abierto o cortocircuito)',
    err_side_brush: 'El cepillo lateral funciona de forma anómala',
    err_fan: 'El ventilador funciona de forma anómala',
    err_dust_box: 'El depósito para polvo está lleno. Se recomienda limpiar el depósito para polvo y el filtro de pantalla.',
    err_no_water_box: 'Vuelva a colocar el depósito de agua 2 en 1 y la pantalla del filtro, y confirme que la pantalla del filtro y el depósito de agua 2 en 1 están instalados en su lugar',
    err_charge: 'La recarga ha fallado, no se ha encontrado la torre de carga de recogida de polvo',
    event_no_disturb: 'El modo No molestar se ha activado y las indicaciones de voz se han desactivado',
    err_low_battery_do_charge: 'Nivel de batería bajo. Se recomienda cargar',
    hint: 'Pista',
    finish_clean_to_recharge: '¿Desea finalizar la limpieza actual y empezar a recargar?',
    cancel: 'Cancelar',
    confirm: 'Aceptar',
    save: 'Guardar',
    sensor_desc: 'Retire el polvo una vez cada {0} horas de uso',
    disturb_tips_setting: 'Ajuste del período de tiempo de No molestar',
    disturb_tips_des: 'Modo No molestar: la limpieza del punto de interrupción no se llevará a cabo en este período de tiempo, y se reducirán las indicaciones de voz y el brillo del indicador',
    add_area: 'Agregar área',
    map_editing: 'Edición de mapas',
    mode_setting: 'Configuración de modo',
    mopping_water: 'Cantidad de agua para fregar',
    custom_mode: 'Modo personalizado',
    cleanUpBy_area: 'Llevar a cabo la limpieza de acuerdo con el modo definido para cada área',
    my_map: 'Mi mapa',
    area_cleaning: 'Limpieza del área de división',
    sweep: 'Barrer donde se está apuntando',
    focus_cleaning: 'Limpieza local',
    clickTo_clean: 'Haga clic en un punto del mapa para limpiar 1,2 m x1,2 m',
    Inplace_execution: 'Lleve a cabo inmediatamente una limpieza local de 1,5 × 1,5 m',
    sweeper_work: 'El robot de barrido está funcionando. La operación actual finalizará la tarea de limpieza',
    operationCleaning_task: 'La operación actual finalizará esta tarea de limpieza',
    voiceAndVolume: 'Voz y volumen',
    consumable_timing: 'Sincronización de consumibles',
    NoMap: 'Actualmente no hay ningún mapa disponible. Realice una limpieza automática completa una vez desde la base de carga. El dispositivo volverá automáticamente a la base de carga para cargarse cuando se complete la limpieza.',
    prohibit: 'área restringida',
    voice_Setting: 'Volumen de voz',
    voice_Using: 'En uso',
    voice_Downing: 'Descargando',
    voice_Start_Down: 'Descargar',
    voice_Language_Setting: 'Idioma de voz del dispositivo',
    product_description: 'Manual del producto',
    edge_sweep: 'Limpieza de seguimiento de bordes',
    zone_edit: 'Editar el área',
    robot_search: 'Buscar robot',
    never_collect_dust: 'No recoger nunca el polvo',
    clean_1_collect_dust: 'Recoge el polvo automáticamente después de una sola limpieza',
    clean_2_collect_dust: 'Recoge el polvo automáticamente después de limpiar dos veces',
    clean_3_collect_dust: 'Recoge el polvo automáticamente después de limpiar tres veces',
    add_mop_forbidZone: 'Agregar área restringida de limpieza con mopa',
    has_same_timing: 'Ha establecido una reserva repetida',
    err_no_dust_package: 'La bolsa para el polvo no está en su sitio',
    mopping_only: 'Solo limpieza con mopa',
    isZoning: 'Se pueden configurar como máximo 5 áreas divididas',
    noMap_prompt: 'Actualmente no hay ningún mapa disponible. Realice una limpieza automática una vez',
    empty_mode: 'Borrar modo',
    suction: 'Fuerza de succión',
    small: 'Pequeño',
    in: 'Mediano',
    big: 'Grande',
    cleaning_range: 'Alcance de limpieza',
    regular_mode: 'Modo normal',
    custom_open: 'Configúrelo en el modo personalizado en el editor de mapas y luego enciéndaloConfigúrelo en el modo personalizado en el editor de mapas y luego enciéndalo',
    customized_area: 'Primero personaliza el área',
    no_set: 'Si no se define ningún área personalizada, el robot llevará a cabo la limpieza en modo normal',
    empty_set: 'Tras borrar el modo, el robot llevará a cabo la limpieza en modo normal',
    mop_notInstalled: 'Paño sin instalar',
    recharge_text: '¿Desea finalizar la limpieza actual y empezar a recargar?',
    Split_Time_Tips: 'Después de la división del área, las limpiezas reservadas relevantes se establecerán automáticamente como limpieza global reservada.',
    Merge_Time_Tips: 'Después de la combinación de áreas, las limpiezas reservadas correspondientes se establecerán automáticamente como la limpieza global reservada.',
    isMop_take: 'El volumen de agua de limpieza solo funciona si el paño está instalado.',
    global_take: 'El barrido de seguimiento de bordes solo funciona en el modo de limpieza global',
    Mopping_area: 'Limpieza con mopa en área restringida',
    Sweeping_area: 'Área de limpieza y barrido limitada',
    point_sweeping: 'Barrido en el modo «Barrido donde está apuntando»',
    following_sweeping: 'Realizando la limpieza de seguimiento de bordes',
    total_sweeping: 'Realizando la limpieza global',
    room_sweeping: 'Limpieza de un área',
    double_sweeping: 'Realizando la limpieza secundaria',
    area_sweeping: 'Limpieza de la zona dividida',
    local_sweeping: 'Limpieza in situ en punto fijo',
    RemoveMop_rack: 'Se recomienda retirar el soporte de la tela de la mopa para evitar la humedad y que se produzcan daños en el suelo de madera',
    resetTxt: 'Restaurar los ajustes de fábrica',
    resetTxtPrompt: 'Una vez restaurados los ajustes de fábrica, el dispositivo se eliminará de la lista de dispositivos y se borrarán todos los datos relacionados con el dispositivo.',
    reset_prompt: '¿Está seguro de que desea restablecer los consumibles?',
    continue_find_charge: 'Continuar recarga',
    reset: 'Restablecer'
  };
  exports.default = _default;
},10037,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    cleand: "Pulito",
    clean_time: "Tempo di pulizia",
    battery: "Livello batteria",
    full_charge: "Intera",
    clean_mode: "Modalità di pulizia",
    water_level: "Regola portata acqua",
    sweep: "Aspirapolvere",
    sweep_mop: "Aspirapolvere e lavapavimenti",
    mop: "Lavapavimenti",
    silent: "Silenzioso",
    standard: "Standard",
    work_cleaning: "Pulizia...",
    work_charging: "Ricarica...",
    work_pause: "In pausa",
    work_full_charged: "Carica completa",
    work_sleep: "Sospensione...",
    work_shutdown: "Spento",
    sweep_record: "Cronologia pulizia",
    timing_sweep: "Pulizia programmata",
    edge_sweep: "Pulizia lungo i bordi",
    double_sweep: "Pulizia secondaria",
    no_disturb: "DND",
    pressurize: "Super aspirazione per tappeti",
    dust_collect_manage: "Gestione raccolta polvere",
    voice_enable: "Voce attivata/disattivata",
    volume_setting: "Regola volume",
    memory_map: "Ricorda mappa",
    virtual_wall: "Parete virtuale/area limitata",
    map_list: "Elenco mappe",
    zone_edit: "Modifica area",
    map_rest: "Ripristina mappa",
    device_mark: "Livellamento dispositivo",
    consumable_material_statistics: "Materiali di consumo",
    robot_search: "Ricerca aspirapolvere/lavapavimenti...",
    remote_control: "Telecomando",
    loading: "Caricamento...",
    load_fail: "Impossibile caricare",
    show_only_30_clean_record: "Mostra solo registrazioni degli ultimi {0} giorni",
    total_area: "Area totale",
    total_duration: "Durata totale",
    total_count: "Tempi totali",
    zone_clean: "Pulizia area",
    fix_point_clean: "Pulizia macchia",
    no_clean_record: "Nessuna cronologia pulizia",
    no_schedule: "Attualmente nessuna programmazione",
    x_schedule: "Attività programmate: {0}",
    time_clean_disturb_tip: "Periodo DND: le pulizie programmate non verranno eseguite dalle {0} alle {1}.",
    monday: "Lun",
    tuesday: "Mar",
    wednesday: "Mer",
    thursday: "Gio",
    friday: "Ven",
    saturday: "Sab",
    sunday: "Dom",
    workday: "Giorni lavorativi",
    weekday: "Fine settimana",
    everyday: "Ogni giorno",
    no_repeat: "Non ripetere",
    repeat: "Ripeti",
    timing_mode: "Modalità di programmazione",
    gear: "Aspirazione",
    timing_time: "Orario programmato",
    tomorrow: "Domani",
    save_data: "Salvataggio...",
    remove: "Elimina",
    repeat_sweep_once_only: "Una volta attivata, la pulizia verrà ripetuta (solo una volta).",
    no_disturb_time: "DND {0}-{1}",
    no_disturb_disable: "DND non abilitata",
    start_time: "Ora di inizio",
    end_time: "Ora di fine",
    min_house: "Appartamento piccolo",
    med_house: "Appartamento medio",
    max_house: "Appartamento grande",
    collect_dust_now: "Raccogli polvere adesso",
    volume_percent: "Volume {0}",
    ping_loading: "Controllo rete...",
    add_wall: "Aggiungi parete virtuale",
    add_zone: "Aggiungi area limitata",
    current_map: "Mappa corrente",
    reset_name: "Rinomina",
    set_map: "Imposta come mappa corrente",
    already_set_current_map: "Già impostata come mappa corrente",
    merge: "Unisci",
    segmentation: "Dividi",
    custom_name: "Personalizza",
    add_name: "Aggiungi nome",
    room_name_length_limit: "I nomi delle stanze non possono superare i 12 caratteri",
    delete_saved_map: "Ripristinare la mappa corrente adesso?",
    mark_device_by_land: "Livella dispositivo in base a posizione corrente",
    device_mark_success: "Livellamento dispositivo completato",
    side_bursh: "Spazzola laterale",
    main_bursh: "Spazzola principale",
    can_use_x_day: "Durata residua: {0} h",
    remain_percent: "{0}% residua",
    materail_reset: "Ripristina materiale di consumo",
    buy_now: "Acquista adesso",
    confirm_reset_material: "Ripristinare il materiale di consumo adesso?",
    not_local_network: "Prima di attivare la funzione telecomando, assicurarsi che il telefono e l'aspirapolvere/lavapavimenti siano connessi alla stessa rete Wi-Fi.",
    tip_find_robot: "Cercare l'aspirapolvere/lavapavimenti in base al suono.",
    tip_sweep_nearby: "Pulire all'interno di una piccola area vicino all'aspirapolvere/lavapavimenti.",
    hint: "Nota",
    wait_load: "Attendere il caricamento dei dati.",
    err_none: "Nessun errore",
    err_main_wheel: "Errore ruote principali",
    err_wheel: "Verificare che le ruote principali non siano bloccate.",
    err_side_wheel: "Errore paraurti",
    err_side_wheel_desc: "Verificare che il paraurti non sia bloccato.",
    err_radar_top: "Errore parte superiore radar",
    err_radar_top_desc: "Verificare che la parte superiore del radar non sia coperta o bloccata.",
    err_bumper: "Errore sensore di collisione",
    err_bumper_desc: "Pulire il sensore di collisione.",
    err_wall_sensor: "Errore sensore parete",
    err_right_sensor_desc: "Pulire il sensore parete.",
    err_main_brush: "Errore spazzola principale",
    err_roller_brush: "Verificare che la spazzola principale non sia aggrovigliata o bloccata.",
    err_side_brush: "Errore spazzola laterale",
    err_brush: "Verificare che la spazzola laterale non sia aggrovigliata o bloccata.",
    err_fan: "Errore ventola",
    err_radar_cover: "Errore coperchio radar",
    err_radar_cover_desc: "Verificare che il coperchio del radar non sia bloccato.",
    err_dust_box_desc: "Pulire il vano polvere e il filtro, quindi assicurarsi che siano installati in posizione.",
    err_full_dust_box: "Pulire il vano polvere e il filtro.",
    err_device_trapped: "L'aspirapolvere/lavapavimenti è bloccato. Spostarlo in un'altra posizione, quindi riavviarlo.",
    err_restricted: "Impossibile avviare il dispositivo in un'area limitata.",
    err_restricted_desc: "Spostare l'aspirapolvere/lavapavimenti fuori dall'area limitata, quindi avviarlo.",
    err_cliff: "Errore sensore ostacolo",
    err_water_pump: "Errore pompa dell'acqua",
    err_charge: "Impossibile tornare alla stazione di ricarica. Stazione di ricarica per la raccolta della polvere non trovata.",
    err_no_dust_package: "Nessun contenitore della polvere installato",
    err_start_incline: "L'aspirapolvere/lavapavimenti non è su una superficie piana.",
    err_dust_fan: "Errore ventola stazione di ricarica per la raccolta della polvere",
    event_no_disturb: "Modalità DND attivata",
    event_no_disturb_desc: "Impossibile riprendere ed eseguire le pulizie programmate.",
    err_incline: "L'aspirapolvere/lavapavimenti è inclinato",
    err_incline_desc: "Spostare l'aspirapolvere/lavapavimenti su una superficie piana per avviarlo.",
    err_low_battery_do_charge: "Batteria scarica. Si consiglia di ricaricarla.",
    err_low_battery_disable_sweep: "Impossibile eseguire la pulizia quando il livello della batteria è troppo basso.",
    err_leave_to_power_off: "Per spegnere l'aspirapolvere/lavapavimenti, allontanarlo dalla stazione di ricarica, quindi riprovare.",
    err_cliff_desc: "Pulire il sensore di dislivello e spostare l'aspirapolvere/lavapavimenti su una superficie piana per avviarlo.",
    err_area_not_arrival: "Impossibile raggiungere l'area specificata.",
    err_no_water: "Il livello dell'acqua è basso. Aggiungere acqua.",
    err_start_incline_desc: "Posizionare l'aspirapolvere/lavapavimenti su una superficie piana, quindi avviarlo.",
    err_load_battery_shut_down: "Batteria scarica. Il dispositivo si spegnerà a breve.",
    err_low_battery_charge: "Batteria scarica. Verrà avviato il ritorno alla stazione di ricarica.",
    map_x: "Mappa {0}",
    map: "Mappa",
    operator_success: "Configurazione completata",
    operator_fail: "Impossibile eseguire la configurazione",
    err_no_mop: "Nessun panno lavapavimenti installato. Verificare che il panno lavapavimenti sia installato in posizione.",
    err_not_enough_split: "Selezionare una stanza da dividere",
    err_not_enough_two_room: "Selezionare due stanze adiacenti da unire",
    err_not_enough_rename: "Selezionare una stanza da rinominare",
    finish_clean_to_zone: "Il passaggio alla pulizia a zone interromperà l'attività in corso.",
    finish_clean_to_spot: "Il passaggio alla pulizia macchia interromperà l'attività in corso.",
    finish_charge_to_zone: "Il passaggio alla pulizia a zone interromperà il processo di ricarica.",
    finish_charge_to_spot: "Il passaggio alla pulizia macchia interromperà il processo di ricarica.",
    start_end_time_same: "L'ora di inizio e l'ora di fine non possono essere identiche.",
    stop_clean: "L'attivazione dell'editor delle aree interromperà l'attività corrente.",
    remote_will_cancel_current: "Il passaggio alla modalità telecomando interromperà l'attività corrente.",
    remote_disable_by_fault: "Errore aspirapolvere/lavapavimenti. Impossibile utilizzare il telecomando.",
    exit_remote_fail: "Impossibile uscire dalla modalità telecomando",
    side_bursh_desc: "La spazzola laterale dirige sporco e detriti dagli angoli verso la spazzola principale. Nel tempo, si usurerà e perderà la propria efficacia. Pertanto, si consiglia di sostituirla al massimo ogni {0} ore di funzionamento.",
    main_bursh_desc: "La spazzola principale dirige sporco e detriti nel vano polvere dell'aspirapolvere/lavapavimenti. Nel tempo, si usurerà e perderà la propria efficacia. Pertanto, si consiglia di sostituirla al massimo ogni {0} ore di funzionamento.",
    filter_desc: "Il filtro del vano polvere utilizza materiale filtrante di grado H11 al fine di impedire che la polvere fuoriesca dal vano e penetri all'interno del motore dell'aspirapolvere/lavapavimenti. Nel tempo, si intaserà e perderà la propria efficacia. Pertanto, si consiglia di sciacquarlo con acqua ogni due settimane e sostituirlo al massimo ogni {0} ore di funzionamento.",
    err_load_map_fail: "Impossibile caricare la mappa.",
    working_can_not_edit: "Impossibile usare l'editor delle aree mentre l'aspirapolvere/lavapavimenti sta pulendo.",
    can_not_do_mark_in_work: "Impossibile eseguire l'operazione mentre il dispositivo è in pausa o un'attività è in corso.",
    setting_once_only: "Impostazione valida una sola volta",
    name_cannot_empty: "Il nome non può essere vuoto",
    room_name_can_not_same: "Il nome non può essere duplicato",
    back_avoid_tip: "Durante l'inversione dell'aspirapolvere/lavapavimenti, evitare di farlo cadere.",
    load_fail_retry: "Impossibile caricare. Toccare per riprovare.",
    machine_inside: "Le aree limitate non possono includere l'area della stazione di ricarica per la raccolta della polvere o l'area dell'aspirapolvere/lavapavimenti.",
    finish_clean_to_sweep: "Il passaggio alla modalità aspirapolvere interromperà l'attività corrente.",
    finish_clean_to_sweep_mop: "Il passaggio alla modalità aspirapolvere e lavapavimenti interromperà l'attività corrente.",
    finish_clean_to_mop: "Il passaggio alla modalità lavapavimenti interromperà l'attività corrente.",
    switch_sweep_mode_tip: "Il passaggio al metodo di pulizia interromperà l'attività corrente.",
    stop_charge_to_virtualwall: "L'impostazione di una parete virtuale/area limitata interromperà il ritorno alla stazione di ricarica.",
    stop_work_to_virtualwall: "L'impostazione di una parete virtuale/area limitata interromperà l'attività in corso.",
    del_cur_timing: "Eliminare il programma corrente adesso?",
    set_will_stop_back_charge: "L'operazione interromperà il ritorno dell'aspirapolvere/lavapavimenti alla stazione di ricarica.",
    set_will_stop_work: "L'esecuzione di questa azione interromperà l'attività corrente.",
    exit_with_not_save: "Annullare le modifiche non salvate e uscire adesso?",
    room_name: "Stanza {0}",
    global_clean: "Pulizia completa",
    confirm: "OK",
    cancel: "Annulla",
    save: "Salva",
    work_free: "Disponibile",
    work_fault: "Errore",
    work_recharge: "Ritorno...",
    work_remote_control: "Tramite telecomando",
    charge: "Stazione di ricarica",
    charging: "Ricarica...",
    charging_btn: "Ricarica",
    start_clean: "Avvia",
    pause_clean: "Pausa",
    continue_clean: "Riprendi",
    never_collect_dust: "Non raccogliere mai la polvere",
    clean_3_collect_dust: "Raccogli polvere dopo 3 pulizie",
    clean_2_collect_dust: "Raccogli polvere dopo due pulizie",
    clean_1_collect_dust: "Raccogli polvere dopo una pulizia",
    no_disturb_setting: "Impostazioni DND",
    stop_work_to_reset_map: "Il ripristino della mappa interromperà l'attività in corso.",
    full_speed: "Turbo",
    stop_charge: "Interrompi ritorno",
    tip_device_mark: "Posizionare l'aspirapolvere/lavapavimenti su una superficie piana e non spostarlo durante il processo di calibrazione. L'aspirapolvere/lavapavimenti si riavvierà automaticamente.",
    zone_clean_tips: "Pulire all'interno dell'area a zone.",
    ctrl_fail: "Impossibile eseguire",
    ctrling: "Esecuzione in corso...",
    mins: "{0} min",
    has_same_timing: "Programma già esistente",
    finish_clean_to_recharge: "Terminare la pulizia corrente e tornare alla stazione di ricarica?",
    err_no_dust: "Il vano polvere 2 in 1 con il serbatoio dell'acqua è stato rimosso",
    err_dust_box: "Il vano polvere è pieno. Si consiglia di pulirlo.",
    too_small_to_split: "Impossibile eseguire la divisione. Ingrandisci l'area della stanza da dividere.",
    line_need_close_to_wall: "Le estremità della linea di divisione devono essere il più vicino possibile alle pareti della stanza.",
    more_than_forbid_length: "È possibile impostare fino a {0} aree limitate e pareti virtuali.",
    time_out: "Timeout operazione",
    wait_operate: "Esecuzione in corso, attendere…   ",
    ctl_success: "Eseguito correttamente",
    drawline_to_split: "Tracciare una linea sullo schermo per dividere la stanza",
    no_area: "La mappa corrente non dispone di informazioni sulla stanza e non può essere modificata.",
    filter: "Filtro del vano polvere",
    delete_current_map: "Eliminare la mappa?",
    select_x_zones: "Aree selezionate: {0}",
    spot_tips: "Pulire l'area entro {0} metri attorno al punto delle coordinate",
    middle: "Medio",
    strong: "Turbo",
    err_no_water_box: "Nessun vano polvere 2 in 1 con il serbatoio dell'acqua installato. Iniziare dopo averlo installato.",
    err_radar: "Errore radar",
    err_radar_desc: "Verificare se il radar è bloccato.",
    err_backcharge: "Impossibile ritornare alla stazione di ricarica",
    err_backcharge_desc1: "Rimuovere eventuali ostacoli accanto alla stazione di ricarica per la raccolta della polvere",
    err_backcharge_desc2: "Controllare se la connessione tra l'aspirapolvere/lavapavimenti e la stazione di ricarica per la raccolta della polvere è normale",
    name_invalid: "Il nome non può contenere caratteri speciali.",
    rug_check_tip: "La spazzola e la spazzola laterale devono essere pulite regolarmente per evitare un rilevamento errato.",
    tip_new_map_discover: "È stata rilevata una nuova mappa, impostarla come mappa corrente?",
    no_map: "Ancora nessuna mappa disponibile"
  };
  exports.default = _default;
},10040,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: 'Robot odkurzający, zamiatający i myjący Mi Home',
    operator_success: 'Konfigurowanie zakończyło się pomyślnie',
    ctrl_fail: 'Nie można zrealizować',
    ctrling: 'Wykonywanie...',
    loading: 'Wczytywanie...',
    load_fail: 'Nie można wczytać',
    load_fail_retry: 'Nie można wczytać — dotknij, aby spróbować ponownie.',
    mins: '{0} min',
    no_disturb: 'Tryb DND',
    pressurize: 'Czyszczenie wtórne',
    voice_enable: 'Głos wł./wył.',
    volume_setting: 'Dopasuj głośność',
    memory_map: 'Zapamiętaj mapę',
    map_list: 'Lista map',
    device_mark: 'Ustawianie urządzenia',
    x_schedule: 'Zaplanowane zadania: {0}',
    setting_once_only: 'Ustawienie jest ważne jeden raz',
    repeat_sweep_once_only: 'Po włączeniu czyszczenie zostanie powtórzone tylko raz.',
    no_disturb_time: 'DND {0}-{1}',
    no_disturb_disable: 'Tryb DND jest wyłączony',
    volume_percent: 'Pojemność {0}',
    mark_device_by_land: 'Ustaw urządzenie zgodnie z bieżącą lokalizacją',
    dust_collect_manage: 'Zarządzanie opróżnianiem z kurzu',
    min_house: 'Małe mieszkanie',
    med_house: 'Średnie mieszkanie',
    max_house: 'Duże mieszkanie',
    tip_sweep_nearby: 'Sprzątanie na małej powierzchni w pobliżu odkurzacza z mopem.',
    can_use_x_day: 'Pozostały okres użytkowania: {0} godz.',
    remain_percent: 'Pozostało {0}%',
    materail_reset: 'Resetuj materiał eksploatacyjny',
    buy_now: 'Kup już teraz',
    side_bursh_desc: 'Szczotka kątowa kieruje kurz i śmieci z narożników do szczotki głównej. Z czasem ulega zużyciu i traci skuteczność. Dlatego warto ją wymieniać co {0} godzin roboczych lub częściej.',
    main_bursh_desc: 'Szczotka główna kieruje kurz i śmieci do komory odkurzacza z mopem. Z czasem ulega zużyciu i traci skuteczność. Dlatego warto ją wymieniać co {0} godzin roboczych lub częściej.',
    filter_desc: 'Aby zapobiec wydostawaniu się kurzu z pojemnika i przedostawaniu się go do wnętrza silnika odkurzacza z mopem, w filtrze pojemnika kurzu zastosowano materiał filtracyjny klasy H11. Z czasem zatyka się on i traci swoją skuteczność. Dlatego też zaleca się płukanie filtra wodą co dwa tygodnie i wymianę co {0} godzin pracy lub mniej.',
    no_disturb_setting: 'Ustawienia DND (nie przeszkadzać)',
    not_local_network: 'Przed włączeniem funkcji zdalnego sterowania należy się upewnić, że zarówno telefon, jak i odkurzacz są podłączone do tej samej sieci Wi-Fi.',
    ping_loading: 'Sprawdzanie sieci...',
    remote_will_cancel_current: 'Przełączenie na zdalne sterowanie zatrzyma bieżące zadanie.',
    remote_disable_by_fault: 'Wystąpił błąd odkurzacza z mopem. Nie można użyć zdalnego sterowania.',
    exit_remote_fail: 'Nie można wyjść ze zdalnego sterowania',
    add_name: 'Dodaj nazwę',
    room_name_length_limit: 'Nazwa pomieszczenia nie może mieć więcej niż 12 znaków',
    back_avoid_tip: 'Nie należy upuszczać odkurzacza z mopem podczas jego odwracania.',
    room_name_can_not_same: 'Nazwa nie może być powielona',
    switch_sweep_mode_tip: 'Zmiana metody czyszczenia zatrzyma bieżące zadanie.',
    can_not_do_mark_in_work: 'Nie można wykonać tej operacji w czasie przerwy lub w trakcie realizacji zadania.',
    set_map: 'Ustaw bieżącą mapę',
    already_set_current_map: 'Mapa już ustawiona jako bieżąca',
    set_will_stop_back_charge: 'Ta operacja zatrzyma procedurę powrotu odkurzacza z mopem do stacji w celu ładowania.',
    set_will_stop_work: 'Wykonanie tego działania zatrzyma bieżące zadanie.',
    working_can_not_edit: 'Edytor obszaru nie może być używany podczas działania odkurzacza z mopem.',
    drawline_to_split: 'Narysuj linię na ekranie, aby podzielić pomieszczenie',
    workday: 'Dni robocze',
    weekday: 'Weekend',
    timing_mode: 'Tryb harmonogramu',
    gear: 'Siła ssania',
    timing_time: 'Zaplanowany czas',
    tomorrow: 'Jutro {0}',
    save_data: 'Zapisywanie...',
    exit_with_not_save: 'Czy odrzucić niezapisane zmiany i opuścić teraz?',
    start_end_time_same: 'Czas rozpoczęcia i czas zakończenia nie mogą być takie same.',
    total_area: 'Całkowita powierzchnia',
    total_duration: 'Całkowity czas trwania',
    total_count: 'Całkowita liczba razy',
    show_only_30_clean_record: 'Pokazuj tylko zapisy dla ostatnich {0} dni',
    date_format: 'MM/dd hh:mm',
    dev_page: 'Strona urządzenia',
    full_charge: 'Pełny',
    start_clean: 'Uruchom',
    pause_clean: 'Wstrzymaj',
    clean_mode: 'Tryb czyszczenia',
    water_level: 'Regulacja ilości wody',
    continue_clean: 'Wznów',
    sweep: 'Odkurzacz',
    sweep_mop: 'Odkurzacz z mopem',
    mop: 'Mop',
    middle: 'Średnio',
    full_speed: 'Turbo',
    work_free: 'Dostępny',
    work_shutdown: 'Wyłączony',
    err_none: 'Brak błędów',
    err_side_wheel_desc: 'Sprawdź, czy zderzak nie jest zablokowany.',
    err_bumper_desc: 'Przetrzyj czujnik zderzeniowy.',
    err_right_sensor_desc: 'Przetrzyj czujnik ścian.',
    err_load_map_fail: 'Nie udało się załadować mapy',
    err_wheel: 'Sprawdź, czy główne koła nie są zablokowane.',
    err_main_wheel: 'Błąd głównych kół',
    err_side_wheel: 'Błąd zderzaka',
    err_incline: 'Odkurzacz z mopem jest przechylony',
    tip_device_mark: 'Umieść odkurzacz z mopem na równej powierzchni i nie przesuwaj go podczas procesu kalibracji. Odkurzacz z mopem uruchomi się automatycznie.',
    err_start_incline_desc: 'Aby rozpocząć sprzątanie, umieść odkurzacz z mopem na równej powierzchni.',
    err_radar_top: 'Błąd górnej części czujnika laserowego',
    err_bumper: 'Błąd czujnika zderzeniowego',
    err_radar_cover: 'Błąd pokrywy czujnika laserowego',
    err_dust_box_desc: 'Wyczyść pojemnik na kurz i filtr oraz sprawdź, czy są zamontowane na miejscu.',
    err_device_trapped: 'Odkurzacz z mopem zablokował się. Przenieś go w nowe miejsce, a następnie uruchom ponownie.',
    err_start_incline: 'Odkurzacz z mopem nie stopi na równej powierzchni.',
    err_restricted: 'Nie można uruchomić w obszarze zabronionym.',
    err_cliff: 'Błąd czujnika przeszkód',
    event_no_disturb_desc: 'Nie można wznowić i przeprowadzić zaplanowanego sprzątania.',
    err_no_mop: 'Nie zainstalowano wkładu myjącego. Sprawdź, czy jest on zainstalowana na miejscu.',
    err_low_battery_disable_sweep: 'Nie można sprzątać przy zbyt niskim poziomie naładowania akumulatora',
    err_dust_fan: 'Błąd wentylatora stacji ładowania do odbierania kurzu',
    err_leave_to_power_off: 'Jeżeli konieczne jest wyłączenie odkurzacza z mopem, należy odsunąć go od stacji ładującej i spróbować ponownie.',
    finish_clean_to_zone: 'Przełączenie na sprzątanie strefowe zatrzyma bieżące zadanie.',
    finish_clean_to_spot: 'Przełączenie na sprzątanie punktowe zatrzyma bieżące zadanie.',
    finish_charge_to_zone: 'Przełączenie na sprzątanie strefowe zatrzyma proces ładowania.',
    finish_charge_to_spot: 'Przełączenie na sprzątanie punktowe zatrzyma proces ładowania.',
    finish_clean_to_sweep: 'Przełączenie na tryb odkurzania zatrzyma bieżące zadanie.',
    finish_clean_to_sweep_mop: 'Przełączenie na tryb odkurzania i mycia na mokro zatrzyma bieżące zadanie.',
    finish_clean_to_mop: 'Przełączenie na tryb mycia na mokro zatrzyma bieżące zadanie.',
    stop_clean: 'Wejście do edytora obszarów zatrzyma bieżące zadanie.',
    wait_load: 'Poczekaj na wczytanie danych.',
    device_mark_success: 'Zakończono poziomowanie urządzenia',
    tip_find_robot: 'Znajdź odkurzacz z mopem w oparciu o dźwięk.',
    confirm_reset_material: 'Czy zresetować materiały eksploatacyjne?',
    stop_work_to_reset_map: 'Resetowanie mapy zatrzyma bieżące zadanie.',
    stop_charge_to_virtualwall: 'Powrót do stacji w celu naładowania, ustawienie wirtualnej ściany / zabronionego obszaru zatrzyma ten proces',
    stop_work_to_virtualwall: 'Ustawienie wirtualnej ściany / zabronionego obszaru zatrzyma bieżące zadanie.',
    spot_tips: 'Wyczyścić obszar w promieniu {0} m od punktu koordynacyjnego',
    zone_clean_tips: 'Czyszczenie w obszarze strefowym.',
    delete_current_map: 'Usunąć mapę?',
    select_x_zones: 'Wybrane obszary: {0}',
    machine_inside: 'Zabronione obszary nie mogą obejmować stacji ładującej z odbieraniem kurzu ani odkurzacza z mopem.',
    wait_operate: 'Wykonywanie, proszę czekać…',
    ctl_success: 'Wykonano pomyślnie',
    no_map: 'Brak dostępnych map',
    time_out: 'Przekroczenie czasu operacji',
    no_area: 'Bieżąca mapa nie ma informacji na temat pomieszczenia i nie można jej edytować.',
    too_small_to_split: 'Nie można podzielić obszaru, należy najpierw go powiększyć.',
    line_need_close_to_wall: 'Końce linii dzielącej muszą znajdować się jak najbliżej ścian.',
    err_radar: 'Błąd czujnika laserowego',
    err_radar_cover_desc: 'Sprawdź, czy pokrywa czujnika laserowego nie jest zablokowana.',
    sensor_maintain: 'Konserwacja czujnika',
    already_used: ' {0) godzin używania',
    already_clean: 'Już wyczyszczone',
    err_backcharge: 'Nie może wrócić do stacji w celu ładowania',
    err_backcharge_desc1: 'Usuń przeszkody w pobliżu stacji ładującej z odbieraniem kurzu',
    err_backcharge_desc2: 'Sprawdź, czy połączenie pomiędzy odkurzaczem z mopem a stacją ładującą z odbieraniem kurzu jest prawidłowe.',
    name_invalid: 'Nazwa nie może zawierać znaków specjalnych.',
    rug_check_tip: 'Szczotka i szczotka boczna muszą być czyszczone regularnie, aby zapobiegać nieprawidłowemu wykrywaniu.',
    tip_new_map_discover: 'Znaleziono nową mapę, czy ustawić ja jako bieżącą?',
    end_cleaning: 'Koniec czyszczenia',
    partitionEditing: 'Edycja ścianki działowej',
    saved_map: 'Mapa zapisana',
    operator_fail: 'Niepowodzenie ustawiania',
    remove: 'Usuń',
    cleand: 'Obszar czyszczenia',
    clean_time: 'Czas czyszczenia',
    battery: 'Pozostały poziom naładowania baterii',
    sweep_record: 'Zapis czyszczenia',
    timing_sweep: 'Czyszczenie zarezerwowane',
    double_sweep: 'Czyszczenie wtórne',
    virtual_wall: 'Ustawienia wirtualnej ściany/obszaru zabronionego',
    map_rest: 'Resetuj mapę',
    consumable_material_statistics: 'Informacje o elementach zużywających się',
    remote_control: 'Pilot zdalnego sterowania',
    no_schedule: 'Aktualnie nie ma rezerwacji',
    time_clean_disturb_tip: 'Tryb Nie przeszkadzaj został aktywowany i urządzenie było w stanie hibernacji',
    delete_saved_map: 'Zresetować mapę, czy nie',
    side_bursh: 'Szczotka boczna',
    main_bursh: 'Szczotka rolkowa',
    filter: 'Siatka filtra',
    start_time: 'Czas rozpoczęcia',
    end_time: 'Czas zakończenia',
    collect_dust_now: 'Natychmiast odbierz kurz',
    del_cur_timing: 'Czy na pewno chcesz usunąć zarezerwowane czyszczenie?',
    name_cannot_empty: 'Nazwa nie może być pusta',
    custom_name: 'Własna definicja',
    room_name: 'Pomieszczenie{0}',
    add_wall: 'Dodaj wirtualną ścianę',
    add_zone: 'Dodaj zastrzeżony obszar zamiatania i mycia',
    more_than_forbid_length: 'Możesz ustawić maksymalnie {0} obszarów zabronionych i ścian wirtualnych',
    reset_name: 'Zmiana nazwy',
    map: 'Mapa',
    map_x: 'Mapa{0}',
    current_map: 'Aktualna mapa',
    merge: 'Połączenie obszaru',
    segmentation: 'Podzielenie obszaru',
    monday: 'Poniedziałek',
    tuesday: 'Wtorek',
    wednesday: 'Środa',
    thursday: 'Czwartek',
    friday: 'Piątek',
    saturday: 'Sobota',
    sunday: 'Niedziela',
    everyday: 'Codziennie',
    repeat: 'Powtórz',
    no_repeat: 'Nie powtarzaj',
    global_clean: 'Czyszczenie ogólne',
    zone_clean: 'Czyszczenie obszaru',
    fix_point_clean: 'Czyszczenie ze stałym punktem',
    no_clean_record: 'Aktualnie nie ma zapisów czyszczenia',
    stop_charge: 'Przerwij ponowne ładowanie',
    charging: 'Ładowanie',
    charge: 'Naładuj ponownie',
    silent: 'Cichy',
    standard: 'Standardowy',
    strong: 'Intensywny',
    charging_btn: 'Ładowanie',
    work_sleep: 'Hibernacja',
    work_pause: 'Pauza',
    work_cleaning: 'Czyszczenie',
    work_recharge: 'Trwa ponowne ładowanie',
    work_charging: 'Ładowanie',
    work_fault: 'Usterka',
    work_remote_control: 'Sterowany zdalnie',
    work_full_charged: 'Ładowanie wykonane',
    err_low_battery_charge: 'Niski poziom naładowania baterii urządzenia. Rozpocznij ponowne ładowanie',
    err_load_battery_shut_down: 'Za niski poziom naładowania baterii. Urządzenie wyłączy się automatycznie.',
    err_roller_brush: 'Szczotka główna jest zablokowana',
    err_brush: 'Szczotka boczna jest zablokowana',
    err_radar_desc: 'Sprawdź, czy nie został zablokowany radar (brak danych radaru)',
    err_no_dust: 'Wyciągnięty zbiornik na wodę dwa w jednym',
    err_full_dust_box: 'Wyczyść pojemnik na kurz i siatkę filtra',
    err_no_water: 'Niewystarczająca ilość wody',
    err_area_not_arrival: 'Nie można osiągnąć wyznaczanego obszaru',
    err_restricted_desc: 'Przed uruchomieniem usuń urządzenie z obszaru zabronionego',
    err_cliff_desc: 'Wytrzyj czujnik klifowy i odsuń od niebezpiecznego obszaru w celu uruchomienia',
    err_water_pump: 'Nieprawidłowy stan pompy wody',
    err_not_enough_two_room: 'Wybierz dwa przylegające obszary do połączenia',
    err_not_enough_split: 'Wybierz obszar do podziału',
    err_not_enough_rename: 'Wybierz obszar do zmiany nazwy',
    err_incline_desc: 'Uruchom urządzenie na poziomie podłoża',
    err_radar_top_desc: 'Sprawdź, czy radar nie jest zasłonięty i przestaw z nowe położenie, aby uruchomić (mało prawidłowych danych z radaru)',
    err_wall_sensor: 'Nienormalne działanie czujnika śledzenia ściany',
    err_main_brush: 'Wygląda, że wystąpił problem ze szczotką główną (przerwa w obwodzie lub zwarcie)',
    err_side_brush: 'Nieprawidłowy stan szczotki bocznej',
    err_fan: 'Nieprawidłowe działanie wentylatora',
    err_dust_box: 'Pojemnik na kurz jest pełny. Zalecane jest wyczyszczenie pojemnika na kurz i siatki filtra',
    err_no_water_box: 'Wymień zbiornik na wodę dwa w jednym i siatkę filtra oraz sprawdź, czy jest zainstalowana na swoim miejscu siatka filtra i zbiornik na wodę dwa w jednym',
    err_charge: 'Ponowne ładowanie nie powiodło się, nie znaleziono ładowarki z funkcją odbierania kurzu',
    event_no_disturb: 'Tryb Nie przeszkadzaj został aktywowany i podpowiedzi głosowe zostały dezaktywowane',
    err_low_battery_do_charge: 'Niski poziom naładowania baterii. Zalecane jest ładowanie',
    hint: 'Wskazówka',
    finish_clean_to_recharge: 'Czy chcesz przerwać aktualne czyszczenie i rozpocząć ponownie ładowanie?',
    cancel: 'Anuluj',
    confirm: 'OK',
    save: 'Zapisz',
    sensor_desc: 'Usuń kurz co {0} godzin używania',
    disturb_tips_setting: 'Ustawienia okresu czasu Nie przeszkadzaj',
    disturb_tips_des: 'Tryb Nie przeszkadzaj: w tym czasie nie będzie prowadzone czyszczenie puntu przerwania oraz zredukowane będą powiadomienia głosowe i jasność wskaźnika',
    add_area: 'Dodaj obszar',
    map_editing: 'Edycja mapy',
    mode_setting: 'Ustawienie trybu',
    mopping_water: 'Ilość wody do mycia',
    custom_mode: 'Tryb niestandardowy',
    cleanUpBy_area: 'Wykonywanie czyszczenia, zgodnie z ustawieniem trybu dla każdego obszaru',
    my_map: 'Moja mapa',
    area_cleaning: 'Czyszczenie obszaru podzielonego',
    sweep: 'Zamiataj, kiedy skierowany na',
    focus_cleaning: 'Czyszczenie w miejscu',
    clickTo_clean: 'Kliknij punkt na mapie, aby czyścić 1,2 m x 1,2 m',
    Inplace_execution: 'Natychmiastowe wykonanie czyszczenia w miejscu 1,5 m x 1,5 m',
    sweeper_work: 'Robot zamiatający pracuje. Bieżąca operacja zakończy zadanie czyszczenia',
    operationCleaning_task: 'Bieżąca operacja zakończy to zadanie czyszczenia',
    voiceAndVolume: 'Głos i poziom głosu',
    consumable_timing: 'Chronometraż materiałów podlegających zużyciu ',
    NoMap: 'Aktualnie nie jest dostępna żadna mapa. Wykonaj automatyczne czyszczenie zaraz o wyjściu ze stacji ładowania. Po zakończeniu czyszczenia urządzenie automatycznie powróci do stacji ładowania celem naładowania',
    prohibit: 'obszaru zabronionego',
    voice_Setting: 'Poziom głosu',
    voice_Using: 'W użyciu',
    voice_Downing: 'Pobieranie',
    voice_Start_Down: 'Pobierz',
    voice_Language_Setting: 'Język głosu urządzenia',
    product_description: 'Instrukcja produktu',
    edge_sweep: 'Czyszczenie ze śledzeniem krawędzi',
    zone_edit: 'Edytuj obszar',
    robot_search: 'Poszukaj robota',
    never_collect_dust: 'Nigdy nie odbieraj kurzu',
    clean_1_collect_dust: 'Automatycznie odbierz kurz po pojedynczym czyszczeniu',
    clean_2_collect_dust: 'Automatycznie odbierz kurz po dwukrotnym czyszczeniu',
    clean_3_collect_dust: 'Automatycznie odbierz kurz po czyszczeniu trzy razy',
    add_mop_forbidZone: 'Dodaj obszar zabroniony dla mycia',
    has_same_timing: 'Ustawiłeś powtórną rezerwację',
    err_no_dust_package: 'Worek pyłowy nie jest na swoim miejscu',
    mopping_only: 'Tylko mycie',
    isZoning: 'Można ustawić do 5 obszarów podzielonych',
    noMap_prompt: 'Aktualnie nie jest dostępna żadna mapa. Wykonaj jeden raz automatyczne czyszczenie',
    empty_mode: 'Tryb czyszczenia',
    suction: 'Siła ssania',
    small: 'Mały',
    in: 'Średni',
    big: 'Duży',
    cleaning_range: 'Zakres czyszczenia',
    regular_mode: 'Tryb normalny',
    custom_open: 'Ustaw go w trybie niestandardowym w edytorze map, a następnie włącz go',
    customized_area: 'Najpierw dostosuj obszar',
    no_set: 'Jeżeli nie został ustawiony żaden niestandardowy obszar, robot wykona czyszczenie w trybie normalnym',
    empty_set: 'Po usunięciu, robot wykona czyszczenie w trybie normalnym',
    mop_notInstalled: 'Niezainstalowany mop',
    recharge_text: 'Czy chcesz przerwać aktualne czyszczenie i rozpocząć ponownie ładowanie?',
    Split_Time_Tips: 'Po podzieleniu obszarów odpowiednie zarezerwowane czyszczenia zostaną automatycznie ustawione jako zarezerwowane czyszczenia ogólne.',
    Merge_Time_Tips: 'Po połączeniu obszarów odpowiednie zarezerwowane czyszczenia zostaną automatycznie ustawione jako zarezerwowane czyszczenia ogólne.',
    isMop_take: 'Ilość wody do mycia jest brana pod uwagę, wyłącznie po zainstalowaniu mopa',
    global_take: 'Zamiatanie ze śledzeniem krawędzi działa jedynie w trybie czyszczenia globalnego',
    Mopping_area: 'Obszar zabroniony dla mycia',
    Sweeping_area: 'Zastrzeżony obszar zamiatania i mycia',
    point_sweeping: 'Zamiatanie w trybie „Zamiataj, kiedy skierowany na”',
    following_sweeping: 'Wykonywanie czyszczenia ze śledzeniem krawędzi',
    total_sweeping: 'Wykonywanie czyszczenia ogólnego',
    room_sweeping: 'Czyszczenie obszaru',
    double_sweeping: 'Wykonywanie drugiego czyszczenia',
    area_sweeping: 'Czyszczenie podzielonego obszaru',
    local_sweeping: 'Czyszczenie stałego punktu w pierwotnym miejscu',
    RemoveMop_rack: 'Aby uniknąć zawilgocenia i uszkodzenia drewnianej podłogi, zaleca się wyjęcie wspornika szmaty mopa',
    resetTxt: 'Przywróć ustawienia fabryczne',
    resetTxtPrompt: 'Po przywróceniu ustawień fabrycznych urządzenie zostanie uśnięte z listy urządzeń i wszystkie dane dotyczące urządzenia zostaną wykasowane',
    reset_prompt: 'Czy na pewno chcesz zresetować ustawienia materiałów podlegających zużyciu?',
    continue_find_charge: 'Kontynuuj ładowanie',
    reset: 'Resetuj'
  };
  exports.default = _default;
},10043,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    cleand: "Terminado",
    clean_time: "Tempo de limpeza",
    battery: "Nível da bateria",
    full_charge: "Cheia",
    clean_mode: "Modo de limpeza",
    water_level: "Ajustar a saída de água",
    sweep: "Aspirar",
    sweep_mop: "Aspirar e esfregar",
    mop: "Esfregão",
    silent: "Silencioso",
    standard: "Padrão",
    work_cleaning: "Limpando...",
    work_charging: "Carregando...",
    work_pause: "Pausado",
    work_full_charged: "Totalmente carregada",
    work_sleep: "Repousando...",
    work_shutdown: "Desligar",
    sweep_record: "Histórico de limpeza",
    timing_sweep: "Limpeza agendada",
    edge_sweep: "Limpeza dos cantos",
    double_sweep: "Limpeza secundária",
    no_disturb: "Não perturbe",
    pressurize: "Turbo para tapete",
    dust_collect_manage: "Gerenciamento da aspiração de pó",
    voice_enable: "Voz ligada/desligada",
    volume_setting: "Ajustar volume",
    memory_map: "Lembrar mapa",
    virtual_wall: "Parede virtual/área restrita",
    map_list: "Lista de mapas",
    zone_edit: "Editar área",
    map_rest: "Redefinir mapa",
    device_mark: "Nivelamento do dispositivo",
    consumable_material_statistics: "Consumíveis",
    robot_search: "Procurando o aspirador e esfregão robô",
    remote_control: "Controle remoto",
    loading: "Carregando...",
    load_fail: "Não foi possível carregar",
    show_only_30_clean_record: "Mostrar apenas os registros dos últimos {0} dias",
    total_area: "Área total",
    total_duration: "Duração total",
    total_count: "Total de vezes",
    zone_clean: "Limpar área",
    fix_point_clean: "Limpeza de mancha",
    no_clean_record: "Sem histórico de limpeza",
    no_schedule: "Nenhum agendamento no momento",
    x_schedule: "Tarefas agendadas: {0}",
    time_clean_disturb_tip: "Período Não perturbe. As limpezas agendadas não serão realizadas entre {0} e {1}.",
    monday: "Seg.",
    tuesday: "Ter.",
    wednesday: "Qua.",
    thursday: "Qui.",
    friday: "Sex.",
    saturday: "Sáb.",
    sunday: "Dom.",
    workday: "Dias úteis",
    weekday: "Finais de semana",
    everyday: "Todos os dias",
    no_repeat: "Não repetir",
    repeat: "Repetir",
    timing_mode: "Modo da agenda",
    gear: "Sucção",
    timing_time: "Hora agendada",
    tomorrow: "Amanhã",
    save_data: "Salvando...",
    remove: "Excluir",
    repeat_sweep_once_only: "Quando se ativa a repetição da limpeza, ela é válida apenas uma vez.",
    no_disturb_time: "Não perturbe de {0} a {1}",
    no_disturb_disable: "Não perturbe não ativado",
    start_time: "Hora de início",
    end_time: "Hora de término",
    min_house: "Apartamento pequeno",
    med_house: "Apartamento médio",
    max_house: "Apartamento grande",
    collect_dust_now: "Aspirar pó agora",
    volume_percent: "Volume {0}",
    ping_loading: "Verificando a rede...",
    add_wall: "Adicionar parede virtual",
    add_zone: "Adicionar área restrita",
    current_map: "Mapa atual",
    reset_name: "Renomear",
    set_map: "Definir como mapa atual",
    already_set_current_map: "Já definido como mapa atual",
    merge: "Mesclar",
    segmentation: "Dividir",
    custom_name: "Personalizar",
    add_name: "Adicionar nome",
    room_name_length_limit: "O nome do cômodo não pode ter mais de 12 caracteres",
    delete_saved_map: "Redefinir o mapa atual agora?",
    mark_device_by_land: "Nivele o dispositivo com base na localização atual",
    device_mark_success: "Nivelamento do dispositivo concluído",
    side_bursh: "Escova lateral",
    main_bursh: "Escova principal",
    can_use_x_day: "Vida útil restante: {0} h",
    remain_percent: "{0}% restante",
    materail_reset: "Reiniciar acessório",
    buy_now: "Comprar agora",
    confirm_reset_material: "Reiniciar este acessório agora?",
    not_local_network: "Antes de abrir a função controle remoto, verifique se o telefone e o aspirador e esfregão robô estão conectados à mesma rede Wi-Fi.",
    tip_find_robot: "Procure o aspirador e esfregão robô ouvindo seu som.",
    tip_sweep_nearby: "Limpar uma área pequena perto do aspirador e esfregão robô.",
    hint: "Observação",
    wait_load: "Aguarde o carregamento dos dados.",
    err_none: "Nenhum erro",
    err_main_wheel: "Erro das rodas principais",
    err_wheel: "Verifique se as rodas principais estão obstruídas.",
    err_side_wheel: "Erro de amortecedor",
    err_side_wheel_desc: "Verifique se o amortecedor está obstruído.",
    err_radar_top: "Erro de cobertura do radar",
    err_radar_top_desc: "Verifique se o radar está coberto ou preso.",
    err_bumper: "Erro no sensor de colisão",
    err_bumper_desc: "Limpe o sensor de obstáculos.",
    err_wall_sensor: "Erro no sensor de parede",
    err_right_sensor_desc: "Limpe o sensor de parede.",
    err_main_brush: "Erro da escova principal",
    err_roller_brush: "Verifique se a escova principal está enrolada ou presa.",
    err_side_brush: "Erro da escova lateral",
    err_brush: "Verifique se a escova lateral está enrolada ou presa.",
    err_fan: "Erro do ventilador",
    err_radar_cover: "Erro de tampa do radar",
    err_radar_cover_desc: "Verifique se a cobertura do radar está obstruída.",
    err_dust_box_desc: "Limpe o compartimento para poeira e o filtro, e verifique se a instalação está correta.",
    err_full_dust_box: "Limpe o compartimento para poeira e o filtro.",
    err_device_trapped: "O aspirador e esfregão robô está preso, coloque-o em outro local e comece novamente.",
    err_restricted: "Não é possível começar em uma área restrita.",
    err_restricted_desc: "Comece depois de colocar o aspirador e esfregão robô fora da área restrita..",
    err_cliff: "Erro no sensor de obstáculo",
    err_water_pump: "Erro da bomba de água",
    err_charge: "Não foi possível voltar à base para carregar pois a base de carregamento do aspirador de pó não foi encontrada.",
    err_no_dust_package: "Saco de pó não instalado",
    err_start_incline: "O aspirador e esfregão robô não está em uma superfície nivelada.",
    err_dust_fan: "Erro do ventilador da base de carregamento do aspirador de pó",
    event_no_disturb: "O modo Não perturbe foi ativado",
    event_no_disturb_desc: "Não foi possível retomar e realizar as limpezas agendadas.",
    err_incline: "O aspirador e esfregão robô está inclinado",
    err_incline_desc: "Mova o aspirador e esfregão robô para uma superfície nivelada para começar.",
    err_low_battery_do_charge: "Bateria fraca, é recomendável recarregar.",
    err_low_battery_disable_sweep: "Não é possível limpar se a bateria estiver muito baixa.",
    err_leave_to_power_off: "Se o aspirador e esfregão robô precisar ser desligado, remova-o da base de carregamento e tente novamente..",
    err_cliff_desc: "Limpe o sensor de declive e coloque o aspirador e esfregão robô em uma superfície nivelada para começar.",
    err_area_not_arrival: "Não é possível chegar na área especificada.",
    err_no_water: "O nível da água está baixo; adicione mais água.",
    err_start_incline_desc: "Para iniciar, coloque o aspirador e esfregão robô em uma superfície plana, então comece.",
    err_load_battery_shut_down: "Pouca bateria, desligando em breve.",
    err_low_battery_charge: "Pouca bateria, começando a voltar à base para carregar.",
    map_x: "Mapa {0}",
    map: "Mapa",
    operator_success: "Configurado com sucesso",
    operator_fail: "Não foi possível configurar",
    err_no_mop: "Sem mop pad instalado, verifique se o mop pad está instalado corretamente..",
    err_not_enough_split: "Selecione um cômodo para dividi-lo",
    err_not_enough_two_room: "Selecione dois cômodos adjacentes para combiná-los",
    err_not_enough_rename: "Selecione um cômodo para renomeá-lo",
    finish_clean_to_zone: "Mudar para limpeza por zona interromperá a tarefa atual que está em andamento.",
    finish_clean_to_spot: "Mudar para limpeza por lugar interromperá a tarefa atual que está em andamento.",
    finish_charge_to_zone: "Mudar para limpeza por zona interromperá o processo de carregamento.",
    finish_charge_to_spot: "Mudar para limpeza por lugar interromperá o processo de carregamento.",
    start_end_time_same: "As horas de início e de término não podem ser idênticas.",
    stop_clean: "Entrar no editor de área interromperá a tarefa atual.",
    remote_will_cancel_current: "Mudar para o controle remoto interromperá a tarefa atual.",
    remote_disable_by_fault: "Erro do aspirador e esfregão robô, não é possível usar o controle remoto.",
    exit_remote_fail: "Não é possível sair do controle remoto",
    side_bursh_desc: "Direciona a sujeira e detritos dos cantos para a escova principal. Com o tempo, ela se desgastará e perderá sua eficiência. Recomendamos substituir a escova lateral a cada {0} horas de operação ou menos.",
    main_bursh_desc: "Direciona a sujeira e detritos para o compartimento para poeira do aspirador e esfregão robô. Com o tempo, ela se desgastará e perderá sua eficiência. Recomendamos substituir a escova a cada {0} horas de operação ou menos.",
    filter_desc: "O compartimento para poeira filtra usa material de filtro tipo H11 para evitar que o pó saia do compartimento e entre no motor do aspirador e esfregão robô. Com o tempo, ele se entupirá e perderá sua eficiência. Recomendamos enxaguar o filtro com água a cada duas semanas e substituí-lo a cada {0} horas de operação ou menos.",
    err_load_map_fail: "Não foi possível carregar o mapa.",
    working_can_not_edit: "O editor de área não pode ser usado enquanto o aspirador e esfregão robô está limpando..",
    can_not_do_mark_in_work: "Não é possível realizar esta operação enquanto estiver em pausa ou com uma tarefa em andamento.",
    setting_once_only: "A configuração é válida uma vez",
    name_cannot_empty: "O nome não pode estar em branco",
    room_name_can_not_same: "O nome não pode ser duplicado",
    back_avoid_tip: "Evite derrubar o aspirador e esfregão robô durante a reversão.",
    load_fail_retry: "Não foi possível carregar. Toque para tentar de novo.",
    machine_inside: "A base de carregamento ou aspirador e esfregão robô não podem estar em áreas restritas.",
    finish_clean_to_sweep: "Passar para o modo de aspirador interromperá a tarefa atual.",
    finish_clean_to_sweep_mop: "Passar para o modo de aspirador e esfregão interromperá a tarefa atual.",
    finish_clean_to_mop: "Passar para o modo de esfregão interromperá a tarefa atual.",
    switch_sweep_mode_tip: "Mudar o método de limpeza interromperá a tarefa atual.",
    stop_charge_to_virtualwall: "Voltando à base para carregar. Configurar uma parede virtual/área restrita interromperá o retorno.",
    stop_work_to_virtualwall: "Definir uma parede virtual/área restrita interromperá a tarefa atual que está em andamento.",
    del_cur_timing: "Excluir o agendamento atual agora?",
    set_will_stop_back_charge: "Esta operação interromperá a volta do aspirador e esfregão robô à base para carregar.",
    set_will_stop_work: "Realizar esta ação interromperá a tarefa atual.",
    exit_with_not_save: "Descartar as alterações não salvas e sair agora?",
    room_name: "Cômodo: {0}",
    global_clean: "Limpeza geral",
    confirm: "OK",
    cancel: "Cancelar",
    save: "Salvar",
    work_free: "Disponível",
    work_fault: "Erro",
    work_recharge: "Voltando...",
    work_remote_control: "Por controle remoto",
    charge: "Base",
    charging: "Carregando...",
    charging_btn: "Carregando",
    start_clean: "Iniciar",
    pause_clean: "Pausar",
    continue_clean: "Retomar",
    never_collect_dust: "Nunca aspirar pó",
    clean_3_collect_dust: "Aspirar pó após limpar 3 vezes",
    clean_2_collect_dust: "Aspirar pó após limpar duas vezes",
    clean_1_collect_dust: "Aspirar pó após limpar uma vez",
    no_disturb_setting: "Configurações de Não perturbe",
    stop_work_to_reset_map: "Redefinir o mapa interromperá a tarefa atual que está em andamento.",
    full_speed: "Turbo",
    stop_charge: "Pausar o retorno",
    tip_device_mark: "Coloque o aspirador sobre uma superfície nivelada e não o mova durante o processo de calibração. O aspirador será reiniciado automaticamente.",
    zone_clean_tips: "Limpar na área da zona.",
    ctrl_fail: "Impossível executar",
    ctrling: "Executando...",
    mins: "{0} min",
    has_same_timing: "Agendamento existente.",
    finish_clean_to_recharge: "Terminar a limpeza atual e voltar para à estação de carregamento para carregar?",
    err_no_dust: "O compartimento para poeira 2 em 1 com reservatório de água foi removido",
    err_dust_box: "O compartimento para poeira está cheio. É recomendável limpá-lo.",
    too_small_to_split: "Não foi possível dividir. Aumente a área do cômodo a ser dividido.",
    line_need_close_to_wall: "As extremidades da linha de divisão devem estar o mais próximo possível das paredes do cômodo.",
    more_than_forbid_length: "É possível definir até {0} de áreas restritas e paredes virtuais.",
    time_out: "Limite de tempo da operação",
    wait_operate: "Executando, aguarde…",
    ctl_success: "Executado",
    drawline_to_split: "Desenhe uma linha na tela para dividir o cômodo",
    no_area: "O mapa atual não tem informações do cômodo e não pode ser editado.",
    filter: "Filtro do compartimento para poeira",
    delete_current_map: "Excluir o mapa?",
    select_x_zones: "Áreas selecionadas: {0}",
    spot_tips: "Limpar a área dentro de {0} m em torno da coordenada",
    middle: "Média",
    strong: "Turbo",
    err_no_water_box: "Não há compartimento para poeira 2 em 1 com reservatório de água instalado. Inicie depois de instalar.",
    err_radar: "Erro do radar",
    err_radar_desc: "Verifique se o radar está obstruído.",
    err_backcharge: "Não foi possível voltar à base para carregar",
    err_backcharge_desc1: "Remova todos os obstáculos perto da base de carregamento de coleta de poeira",
    err_backcharge_desc2: "Verifique se a conexão entre o aspirador e esfregão e a base de carregamento de coleta de poeira está normal.",
    name_invalid: "O nome não pode ter caracteres especiais.",
    rug_check_tip: "A escoba e a escova lateral precisam ser limpas regularmente para evitar detecção incorreta.",
    tip_new_map_discover: "Um novo mapa foi encontrado. Definir como mapa atual?",
    no_map: "Nenhum mapa disponível ainda"
  };
  exports.default = _default;
},10046,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: 'Робот для сбора пыли, подметания и мытья полов Mi Home',
    operator_success: 'Настройка выполнена успешно',
    ctrl_fail: 'Не удалось выполнить',
    ctrling: 'Выполнение...',
    loading: 'Загрузка...',
    load_fail: 'Не удалось загрузить',
    load_fail_retry: 'Не удалось загрузить, коснитесь, чтобы повторить попытку.',
    mins: '{0} мин',
    no_disturb: 'Режим "Не беспокоить',
    pressurize: 'Повышение мощности на ковре',
    voice_enable: 'Голосовое включение и выключение',
    volume_setting: 'Настройка громкости',
    memory_map: 'Запоминание карты',
    map_list: 'Список карт',
    device_mark: 'Регулировка уровня устройства',
    x_schedule: 'Запланировано задач: {0}',
    setting_once_only: 'Настройка действительна только один раз',
    repeat_sweep_once_only: 'После включения уборка запустится повторно. Запуск происходит единожды.',
    no_disturb_time: 'Режим "Не беспокоить": {0}–{1}',
    no_disturb_disable: 'Режим "Не беспокоить" не включен',
    volume_percent: 'Громкость {0}',
    mark_device_by_land: 'Регулировать уровень устройства на основе данных текущего местоположения',
    dust_collect_manage: 'Управление очисткой от пыли',
    min_house: 'Небольшое помещение',
    med_house: 'Помещение среднего размера',
    max_house: 'Большое помещение',
    tip_sweep_nearby: 'Уборка небольшой области вокруг робота-пылесоса с функцией влажной уборки.',
    can_use_x_day: 'Оставшийся срок службы: {0} ч',
    remain_percent: 'Осталось {0}%',
    materail_reset: 'Сбросить данные о расходном материале',
    buy_now: 'Купить',
    side_bursh_desc: 'Боковая щетка направляет грязь и мусор из углов в направлении основной щетки. Со временем ее эффективность будет снижаться ввиду износа. Поэтому рекомендуется заменять боковую щетку после {0} ч работы или раньше.',
    main_bursh_desc: 'Основная щетка направляет грязь и мусор в контейнер для пыли робота-пылесоса с функцией влажной уборки. Со временем ее эффективность будет снижаться ввиду износа. Поэтому рекомендуется заменять основную щетку после {0} ч работы или раньше.',
    filter_desc: 'В фильтре контейнера для пыли используется материал класса H11, чтобы предотвратить попадание пыли в мотор робота-пылесоса с функцией влажной уборки. Со временем эффективность этого материала будет снижаться из-за загрязнения. Поэтому рекомендуется промывать фильтр водой каждые две недели и заменять его после {0} ч работы или раньше.',
    no_disturb_setting: 'Настройки режима "Не беспокоить',
    not_local_network: 'Прежде чем запустить дистанционное управление, убедитесь, что телефон и робот-пылесос с функцией влажной уборки подключены к одной и той же сети Wi-Fi.',
    ping_loading: 'Проверка сети...',
    remote_will_cancel_current: 'Переключение на дистанционное управление прервет выполнение текущей задачи.',
    remote_disable_by_fault: 'Ошибка работы робота-пылесоса с функцией влажной уборки. Невозможно использовать дистанционное управление.',
    exit_remote_fail: 'Не удалось выйти из режима дистанционного управления.',
    add_name: 'Добавить имя',
    room_name_length_limit: 'Имя комнаты не может содержать более 12 символов',
    back_avoid_tip: 'Постарайтесь не ронять робот-пылесос с функцией влажной уборки, когда поворачиваете его.',
    room_name_can_not_same: 'Это поле не должно повторяться',
    switch_sweep_mode_tip: 'Переключение метода уборки прервет выполнение текущей задачи.',
    can_not_do_mark_in_work: 'Невозможно выполнить эту операцию, пока работа устройства приостановлена или выполняется уборка.',
    set_map: 'Назначить как активную карту',
    already_set_current_map: 'Уже назначена как активная карта',
    set_will_stop_back_charge: 'Это действие прервет возвращение робота-пылесоса с функцией влажной уборки на док-станцию для зарядки.',
    set_will_stop_work: 'Это действие прервет выполнение текущей задачи.',
    working_can_not_edit: 'Редактор площади уборки невозможно использовать, пока робот-пылесос с функцией влажной уборки выполняет уборку.',
    drawline_to_split: 'Проведите линию на экране для разделения комнаты',
    workday: 'В рабочие дни',
    weekday: 'В выходные',
    timing_mode: 'Режим расписания',
    gear: 'Мощность всасывания',
    timing_time: 'Назначенное время',
    tomorrow: 'Завтра{0}',
    save_data: 'Сохранение...',
    exit_with_not_save: 'Отменить несохраненные изменения и выйти?',
    start_end_time_same: 'Время начала и время окончания не могут совпадать.',
    total_area: 'Общая площадь',
    total_duration: 'Общая длительность',
    total_count: 'Общее время',
    show_only_30_clean_record: 'Показывать записи только за последние {0} дней',
    date_format: 'ММ/ДД чч:мм',
    dev_page: 'Страница разработки',
    full_charge: 'Полный',
    start_clean: 'Начать',
    pause_clean: 'Приостановить',
    clean_mode: 'Режим уборки',
    water_level: 'Настроить подачу воды',
    continue_clean: 'Продолжить',
    sweep: 'Пылесос',
    sweep_mop: 'Пылесос и влажная уборка',
    mop: 'Влажная уборка',
    middle: 'Средний',
    full_speed: 'Турбо',
    work_free: 'Доступно',
    work_shutdown: 'Выключен',
    err_none: 'Ошибок нет',
    err_side_wheel_desc: 'Проверьте, возможно, бампер застрял.',
    err_bumper_desc: 'Протрите датчик столкновения.',
    err_right_sensor_desc: 'Протрите датчик стены.',
    err_load_map_fail: 'Не удалось загрузить карту.',
    err_wheel: 'Проверьте, возможно, основные колеса застряли.',
    err_main_wheel: 'Ошибка основных колес',
    err_side_wheel: 'Ошибка бампера',
    err_incline: 'Робот-пылесос с функцией влажной уборки наклонен',
    tip_device_mark: 'Расположите робот-пылесос с функцией влажной уборки на ровной поверхности и не передвигайте его до окончания процесса калибровки. Устройство перезапустится автоматически.',
    err_start_incline_desc: 'Расположите робот-пылесос с функцией влажной уборки на ровной поверхности и запустите его.',
    err_radar_top: 'Ошибка радара',
    err_bumper: 'Ошибка датчика столкновения',
    err_radar_cover: 'Ошибка крышки радара',
    err_dust_box_desc: 'Очистите контейнер для пыли и фильтр. Установите их на место.',
    err_device_trapped: 'Робот-пылесос с функцией влажной уборки застрял. Переместите его в другое место и запустите снова.',
    err_start_incline: 'Робот-пылесос с функцией влажной уборки находится на неровной поверхности.',
    err_restricted: 'Невозможно запустить устройство в запретной зоне.',
    err_cliff: 'Ошибка датчика препятствий',
    event_no_disturb_desc: 'Невозможно продолжить и выполнить запланированные уборки.',
    err_no_mop: 'Не установлена насадка для влажной уборки. Установите ее на место.',
    err_low_battery_disable_sweep: 'Невозможно выполнять уборку, пока уровень заряда аккумулятора слишком низкий.',
    err_dust_fan: 'Ошибка вентилятора док-станции в процессе очистки от пыли.',
    err_leave_to_power_off: 'Если необходимо выключить робот-пылесос с функцией влажной уборки, уберите его с док-станции и повторите попытку.',
    finish_clean_to_zone: 'Переключение в режим уборки зонированной площади прервет выполнение текущей задачи.',
    finish_clean_to_spot: 'Переключение в режим точечной уборки прервет выполнение текущей задачи.',
    finish_charge_to_zone: 'Переключение в режим уборки зонированной площади приведет к остановке зарядки аккумулятора.',
    finish_charge_to_spot: 'Переключение в режим точечной уборки приведет к остановке зарядки аккумулятора.',
    finish_clean_to_sweep: 'Переключение в режим чистки пылесосом прервет выполнение текущей задачи.',
    finish_clean_to_sweep_mop: 'Переключение в режим чистки пылесосом и влажной уборки прервет выполнение текущей задачи.',
    finish_clean_to_mop: 'Переключение в режим влажной уборки прервет выполнение текущей задачи.',
    stop_clean: 'Вход в редактор площади уборки прервет выполнение текущей задачи.',
    wait_load: 'Подождите, пока загрузятся данные.',
    device_mark_success: 'Регулировка уровня устройства завершена',
    tip_find_robot: 'Ищите робот-пылесос с функцией влажной уборки по звуку.',
    confirm_reset_material: 'Сбросить данные о расходном материале?',
    stop_work_to_reset_map: 'Сброс настроек карты прервет выполнение текущей задачи.',
    stop_charge_to_virtualwall: 'Возвращение на док-станцию для зарядки. Установка виртуальной стены/запретной зоны прервет текущее действие.',
    stop_work_to_virtualwall: 'Установка виртуальной стены/запретной зоны прервет выполнение текущей задачи.',
    spot_tips: 'Убрать область в пределах {0} м от заданной точки',
    zone_clean_tips: 'Уборка зонированной площади.',
    delete_current_map: 'Удалить карту?',
    select_x_zones: 'Выбранные области: {0}',
    machine_inside: 'В запретную зону не должны попадать зарядная док-станция или сам робот-пылесос с функцией влажной уборки.',
    wait_operate: 'Подождите, операция выполняется...',
    ctl_success: 'Выполнено успешно',
    no_map: 'Все еще нет доступной карты',
    time_out: 'Время на выполнение операции истекло',
    no_area: 'Текущая карта не содержит информации о комнатах, и ее нельзя изменить.',
    too_small_to_split: 'Не удалось разделить. Увеличьте площадь разделяемой комнаты.',
    line_need_close_to_wall: 'Концы разделительной линии должны быть заданы максимально близко к стенам комнаты.',
    err_radar: 'Ошибка радара',
    err_radar_cover_desc: 'Проверьте, возможно, крышку радара заклинило.',
    sensor_maintain: 'Обслуживание датчиков',
    already_used: 'Используется в течение {0} часов',
    already_clean: 'Уже очищено',
    err_backcharge: 'Не удалось вернуться на док-станцию для зарядки',
    err_backcharge_desc1: 'Уберите возможные препятствия рядом с зарядной док-станцией с функцией сбора пыли',
    err_backcharge_desc2: 'Проверьте соединение между роботом-пылесосом с функцией влажной уборки и зарядной док-станцией с функцией сбора пыли',
    name_invalid: 'В имени не должно быть специальных символов.',
    rug_check_tip: 'Основную и боковую щетки необходимо регулярно чистить во избежание неправильного обнаружения.',
    tip_new_map_discover: 'Обнаружена новая карта. Назначить ее как активную?',
    end_cleaning: 'Завершить уборку',
    partitionEditing: 'Радактирование разделов',
    saved_map: 'Карта сохранена',
    operator_fail: 'Настройка не удалась',
    remove: 'Удалить',
    cleand: 'Зона уборки',
    clean_time: 'Время уборки',
    battery: 'Оставшийся уровень заряда батареи',
    sweep_record: 'Записи об уборке',
    timing_sweep: 'Запланированная уборка',
    double_sweep: 'Вторичная уборка',
    virtual_wall: 'Настройки «Виртуальная стена/запрещенная зона»',
    map_rest: 'Сбросить карту',
    consumable_material_statistics: 'Информация о расходных материалах',
    remote_control: 'Удаленный контроллер',
    no_schedule: 'В настоящее время уборка не запланирована',
    time_clean_disturb_tip: 'Режим «Не беспокоить» был активирован, и устройство находилось в состоянии гибернации',
    delete_saved_map: 'Сбросить карту или нет',
    side_bursh: 'Боковая щетка',
    main_bursh: 'Вращающаяся щетка',
    filter: 'Фильтрующая сетка',
    start_time: 'Время начала',
    end_time: 'Время окончания',
    collect_dust_now: 'Немедленно соберите пыль',
    del_cur_timing: 'Вы уверены, что хотите удалить запланированную уборку?',
    name_cannot_empty: 'Наименование не может быть пустым',
    custom_name: 'Самоопределяемая комната',
    room_name: 'Комната{0}',
    add_wall: 'Добавить виртуальную стену',
    add_zone: 'Добавить зону запрета сухой и влажной уборки',
    more_than_forbid_length: 'Вы можете установить не более {0} запрещенных зон и виртуальных стен',
    reset_name: 'Переименование',
    map: 'Карта',
    map_x: 'Карта{0}',
    current_map: 'Текущая карта',
    merge: 'Объединение зон',
    segmentation: 'Разделение зон',
    monday: 'Понедельник',
    tuesday: 'Вторник',
    wednesday: 'Среда',
    thursday: 'Четверг',
    friday: 'Пятница',
    saturday: 'Суббота',
    sunday: 'Воскресенье',
    everyday: 'Ежедневно',
    repeat: 'Повторить',
    no_repeat: 'Не повторять',
    global_clean: 'Полная уборка',
    zone_clean: 'Уборка зоны',
    fix_point_clean: 'Уборка заданной территории',
    no_clean_record: 'В настоящее время записей о чистке нет',
    stop_charge: 'Пауза подзарядки',
    charging: 'Зарядка',
    charge: 'Подзарядка',
    silent: 'Тихий',
    standard: 'Стандартный',
    strong: 'Мощный',
    charging_btn: 'Зарядка',
    work_sleep: 'Гибернация',
    work_pause: 'Пауза',
    work_cleaning: 'Уборка',
    work_recharge: 'На подзарядке',
    work_charging: 'Зарядка',
    work_fault: 'Неисправность',
    work_remote_control: 'Дистанционное управление',
    work_full_charged: 'Зарядка выполнена',
    err_low_battery_charge: 'Устройство имеет низкий уровень заряда батареи. Начать подзарядку',
    err_load_battery_shut_down: 'Слишком низкий уровень заряда батареи. Прибор автоматически выключается',
    err_roller_brush: 'Основная щетка застряла',
    err_brush: 'Боковая щетка застряла',
    err_radar_desc: 'Проверьте, не застрял ли радар (нет данных радара)',
    err_no_dust: 'Отсутствует емкость для воды "два в одном"',
    err_full_dust_box: 'Очистить пылесборник и фильтрующую сетку',
    err_no_water: 'Недостаточное количество воды',
    err_area_not_arrival: 'Назначенная зона недоступна',
    err_restricted_desc: 'Перед запуском переместите устройство из запрещенной зоны',
    err_cliff_desc: 'Протрите датчик перепада и уберите прибор из опасной зоны, чтобы начать работу',
    err_water_pump: 'Водяной насос неисправен',
    err_not_enough_two_room: 'Выберите две смежные зоны для объединения',
    err_not_enough_split: 'Выберите зону для разделения',
    err_not_enough_rename: 'Выберите зону для переименования',
    err_incline_desc: 'Запустите прибор на ровном участке',
    err_radar_top_desc: 'Проверьте, не перекрыт ли радар, и переместите его в новое положение для запуска (радар имеет мало достоверных данных)',
    err_wall_sensor: 'Датчик для движения вдоль стены показывает неисправность',
    err_main_brush: 'Похоже, что-то не так с основной щеткой (разомкнутая цепь или короткое замыкание)',
    err_side_brush: 'Боковая щетка неисправна',
    err_fan: 'Вентилятор неисправен',
    err_dust_box: 'Пылесборник полон. Рекомендуется очистить пылесборник и фильтрующую сетку',
    err_no_water_box: 'Замените емкость для воды "два в одном" и фильтрующую сетку и убедитесь, что фильтрующая сетка и емкость для воды "два в одном" установлены корректно',
    err_charge: 'Подзарядка не удалась, зарядная база пылесоса не найдена',
    event_no_disturb: 'Режим «Не беспокоить» был активирован, а голосовая подсказка отключена',
    err_low_battery_do_charge: 'Низкий уровень заряда батареи. Рекомендуется зарядка',
    hint: 'Подсказка',
    finish_clean_to_recharge: 'Вы хотите закончить текущую уборку и начать подзарядку?',
    cancel: 'Отмена',
    confirm: 'OK',
    save: 'Сохранить',
    sensor_desc: 'Очищайте прибор от пыли через каждые {0} часов использования',
    disturb_tips_setting: 'Настройка времени в режиме «Не беспокоить»',
    disturb_tips_des: 'Режим «Не беспокоить»: в этот период уборка узких мест выполняться не будет, а громкость голосовой подсказки и яркость индикатора будет уменьшена',
    add_area: 'Добавить зону',
    map_editing: 'Редактирование карты',
    mode_setting: 'Настройка режима',
    mopping_water: 'Количество воды для мытья пола',
    custom_mode: 'Пользовательский режим',
    cleanUpBy_area: 'Выполнять уборку в соответствии с режимом, установленным для каждой зоны',
    my_map: 'Моя карта',
    area_cleaning: 'Деление на зоны и уборка',
    sweep: 'Подметать там, куда вы указываете.',
    focus_cleaning: 'Уборка на месте',
    clickTo_clean: 'Нажмите на точку на карте для уборки 1.2 м x 1.2 м',
    Inplace_execution: 'Немедленно выполнить уборку на площади размером 1,5 x 1,5 м',
    sweeper_work: 'Робот-пылесос работает. Текущая операция завершит задачу уборки',
    operationCleaning_task: 'Текущая операция завершит эту задачу по уборке',
    voiceAndVolume: 'Голосовое управление и громкость',
    consumable_timing: 'Срок службы расходных материалов ',
    NoMap: 'В настоящее время карта недоступна. Выполните однократно автоматическую очистку на зарядной станции. После завершения очистки устройство автоматически вернется на зарядную станцию для зарядки.',
    prohibit: 'запрещенная зона»',
    voice_Setting: 'Громкость голосового управления',
    voice_Using: 'Используется',
    voice_Downing: 'Загрузка',
    voice_Start_Down: 'Загрузить',
    voice_Language_Setting: 'Язык голосового управления',
    product_description: 'Руководство по эксплуатации',
    edge_sweep: 'Уборка вдоль кромок ',
    zone_edit: 'Редактирование зоны',
    robot_search: 'Поиск робота',
    never_collect_dust: 'Никогда не собирать пыль',
    clean_1_collect_dust: 'Автоматически собирать пыль после однократной уборки',
    clean_2_collect_dust: 'Автоматически собирать пыль после двукратной уборки',
    clean_3_collect_dust: 'Автоматически собирать пыль после трех уборок',
    add_mop_forbidZone: 'Добавить запрещенную зону для влажной уборки',
    has_same_timing: 'Вы устанавливаете повторяющуюся уборку',
    err_no_dust_package: 'Мешок для пыли не на месте',
    mopping_only: 'Только влажная уборка',
    isZoning: 'Можно настроить не более 5 поделенных зон',
    noMap_prompt: 'В настоящее время карта недоступна. Выполните однократно автоматическую чистку',
    empty_mode: 'Удалить режим',
    suction: 'Всасывающая сила',
    small: 'Маленький',
    in: 'Средний',
    big: 'Большой',
    cleaning_range: 'Объем уборки',
    regular_mode: 'Обычный режим',
    custom_open: 'Пожалуйста, установите его в пользовательском режиме в редакторе карт, а затем включите',
    customized_area: 'Пожалуйста, сначала настройте область',
    no_set: 'Если пользовательская зона не задана, робот будет выполнять уборку в обычном режиме',
    empty_set: 'После удаления робот будет выполнять уборку в обычном режиме',
    mop_notInstalled: 'Швабра не установлена',
    recharge_text: 'Вы хотите закончить текущую уборку и начать подзарядку?',
    Split_Time_Tips: 'После разделения зон соответствующие запланированные уборки будут автоматически установлены в качестве запланированной полной уборки.',
    Merge_Time_Tips: 'После объединения зон соответствующие запланированные уборки будут автоматически установлены в качестве запланированной полной уборки.',
    isMop_take: 'Учет расхода воды для мытья полов работает, только когда установлена швабра',
    global_take: 'Очистка вдоль кромок осуществляется только в режиме полной уборки',
    Mopping_area: 'Запрещенная зона для влажной уборки',
    Sweeping_area: 'Зона запрета сухой и влажной уборки',
    point_sweeping: 'Подметание в режиме «Подметать там, куда вы указываете»',
    following_sweeping: 'Выполнение очистки вдоль кромок',
    total_sweeping: 'Выполнение полной уборки',
    room_sweeping: 'Уборка зоны',
    double_sweeping: 'Выполняется дополнительная уборка',
    area_sweeping: 'Уборка поделенной зоны',
    local_sweeping: 'Уборка заданной территории на месте',
    RemoveMop_rack: 'Рекомендуется снимать крепление для тряпки во избежание попадания влаги и повреждения деревянного пола',
    resetTxt: 'Восстановить заводские настройки',
    resetTxtPrompt: 'После восстановления заводских настроек устройство будет удалено из списка устройств, а все связанные с ним данные будут очищены',
    reset_prompt: 'Вы уверены, что хотите сбросить настройки расходных материалов?',
    continue_find_charge: 'Продолжить подзарядку',
    reset: 'Сброс'
  };
  exports.default = _default;
},10049,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: 'Mi Home toz toplama, süpürme ve silme robotu',
    operator_success: 'Başarıyla yapılandırıldı',
    ctrl_fail: 'Gerçekleştirilemedi',
    ctrling: 'Gerçekleştiriliyor...',
    loading: 'Yükleniyor...',
    load_fail: 'Yüklenemedi',
    load_fail_retry: 'Yüklenemedi, tekrar denemek için dokunun.',
    mins: '{0} dakika',
    no_disturb: 'DND (Rahatsız Etme)',
    pressurize: 'Halı desteği',
    voice_enable: 'Ses kapalı/açık',
    volume_setting: 'Sesi ayarla',
    memory_map: 'Haritayı anımsa',
    map_list: 'Harita listesi',
    device_mark: 'Cihaz düzeyi ayarlanıyor',
    x_schedule: 'Planlanmış görevler: {0}',
    setting_once_only: 'Bu ayar bir kez için geçerlidir',
    repeat_sweep_once_only: 'Etkinleştirildiğinde yalnızca bir kez geçerli olmak üzere temizlik tekrarlanır.',
    no_disturb_time: 'DND {0}-{1}',
    no_disturb_disable: 'DND modu etkin değil',
    volume_percent: 'Ses düzeyi {0}',
    mark_device_by_land: 'Cihaz düzeyini geçerli konuma göre ayarla',
    dust_collect_manage: 'Toz alma yönetimi',
    min_house: 'Küçük apartman dairesi',
    med_house: 'Orta apartman dairesi',
    max_house: 'Büyük apartman dairesi',
    tip_sweep_nearby: 'Temizlik robotunun çevresindeki küçük bir alanı temizleyin.',
    can_use_x_day: 'Kalan hizmet ömrü: {0} saat',
    remain_percent: '%{0} kaldı',
    materail_reset: 'Sarf malzemesini sıfırla',
    buy_now: 'Şimdi satın al',
    side_bursh_desc: 'Yan fırça, kiri ve birikintileri köşelerden alarak ana fırçaya yönlendirir. Zaman içinde yan fırça yıpranır ve verimliliğini kaybeder. Bu nedenle yan fırçanın, çalıştırıldığı her {0} (veya daha az) saatte bir değiştirilmesi önerilir.',
    main_bursh_desc: 'Ana fırça, kir ve birikintileri temizlik robotunun toz haznesine yönlendirir. Zaman içinde ana fırça yıpranır ve verimliliğini kaybeder. Bu nedenle ana fırçanın, çalıştırıldığı her {0} (veya daha az) saatte bir değiştirilmesi önerilir.',
    filter_desc: 'Toz haznesi, tozun hazneden dışarı çıkmasını ve temizlik robotunun motoruna girmesini engellemek için H11 sınıfı filtre malzemesi kullanır. Zaman içinde filtre tıkanır ve verimliliğini kaybeder. Bu nedenle, filtrenin iki haftada bir suyla durulanması ve çalıştırıldığı her {0} (veya daha az) saatte bir değiştirilmesi önerilir.',
    no_disturb_setting: 'DND ayarları',
    not_local_network: 'Uzaktan kumanda işlevini açmadan önce lütfen telefonun ve temizlik robotunun aynı Wi-Fi ağına bağlı olduğundan emin olun.',
    ping_loading: 'Ağ kontrol ediliyor...',
    remote_will_cancel_current: 'Uzaktan kumandaya geçiş yapmak geçerli görevi durdurur.',
    remote_disable_by_fault: 'Temizlik robotunda hata oluştu; uzaktan kumanda kullanılamıyor.',
    exit_remote_fail: 'Uzaktan kumandadan çıkılamadı',
    add_name: 'Ad ekle',
    room_name_length_limit: 'Oda adı 12 karakterden uzun olamaz',
    back_avoid_tip: 'Lütfen temizlik robotunu döndürürken yere düşürmemeye dikkat edin.',
    room_name_can_not_same: 'Ad yinelenemez',
    switch_sweep_mode_tip: 'Temizlik yöntemini değiştirmek geçerli görevi durdurur.',
    can_not_do_mark_in_work: 'Duraklatma sırasında veya devam eden bir görev olduğunda bu işlem sürdürülemez.',
    set_map: 'Geçerli harita olarak ayarla',
    already_set_current_map: 'Zaten geçerli harita olarak ayarlanmış',
    set_will_stop_back_charge: 'Bu işlem temizlik robotunun şarj için standa geri dönmesini durdurur.',
    set_will_stop_work: 'Bu işlemi sürdürmek geçerli görevi durdurur.',
    working_can_not_edit: 'Temizlik robotu temizlik yaparken alan düzenleyici kullanılamaz.',
    drawline_to_split: 'Lütfen odayı bölmek için ekranda bir çizgi çizin',
    workday: 'İş günleri',
    weekday: 'Haftasonu',
    timing_mode: 'Plan modu',
    gear: 'Emiş',
    timing_time: 'Planlanmış zaman',
    tomorrow: 'Yarın {0}',
    save_data: 'Kaydediliyor...',
    exit_with_not_save: 'Kaydedilmemiş değişiklikler silinsin ve çıkılsın mı?',
    start_end_time_same: 'Başlangıç zamanı ve bitiş zamanı aynı olamaz.',
    total_area: 'Toplam alan',
    total_duration: 'Toplam süre',
    total_count: 'Toplam sayı',
    show_only_30_clean_record: 'Yalnızca son {0} güne ilişkin kayıtları göster',
    date_format: 'AA/gg ss:dd',
    dev_page: 'Geliştirme Sayfası',
    full_charge: 'Tam',
    start_clean: 'Başlat',
    pause_clean: 'Duraklat',
    clean_mode: 'Temizleme modu',
    water_level: 'Su çıkışını ayarla',
    continue_clean: 'Devam et',
    sweep: 'Süpürge',
    sweep_mop: 'Süpürge ve paspas',
    mop: 'Paspas',
    middle: 'Orta',
    full_speed: 'Turbo',
    work_free: 'Kullanılabilir',
    work_shutdown: 'Kapalı',
    err_none: 'Hata yok',
    err_side_wheel_desc: 'Lütfen tamponun sıkışıp sıkışmadığını kontrol edin.',
    err_bumper_desc: 'Lütfen çarpışma sensörünü silin.',
    err_right_sensor_desc: 'Lütfen duvar sensörünü silin.',
    err_load_map_fail: 'Harita yüklenemedi.',
    err_wheel: 'Lütfen ana tekerleklerin sıkışıp sıkışmadığını kontrol edin.',
    err_main_wheel: 'Ana tekerlek hatası',
    err_side_wheel: 'Tampon hatası',
    err_incline: 'Temizlik robotu dengesiz',
    tip_device_mark: 'Lütfen temizlik robotunu düz bir yüzeye yerleştirin ve kalibrasyon işlemi sırasında hareket ettirmeyin. Temizlik robotu otomatik olarak yeniden başlar.',
    err_start_incline_desc: 'Temizlik robotunu başlatmak için lütfen düz bir yüzeye yerleştirin.',
    err_radar_top: 'Radar tepesi hatası',
    err_bumper: 'Çarpışma sensörü hatası',
    err_radar_cover: 'Radar kapağı hatası',
    err_dust_box_desc: 'Lütfen toz haznesi ile filtreyi temizleyin ve düzgün yerleştirildiklerinden emin olun.',
    err_device_trapped: 'Temizlik robotu sıkıştı, lütfen robotu yeni bir konuma yerleştirin ve tekrar başlayın.',
    err_start_incline: 'Temizlik robotu düz bir yüzeyde değil.',
    err_restricted: 'Sınırlanmış bir alanda başlatılamaz.',
    err_cliff: 'Engel sensörü hatası',
    event_no_disturb_desc: 'Planlanmış temizlikler sürdürülemiyor ve gerçekleştirilemiyor.',
    err_no_mop: 'Süpürge pedi yerleştirilmemiş, lütfen süpürge pedinin yerine düzgün yerleştirilip yerleştirilmediğini kontrol edin.',
    err_low_battery_disable_sweep: 'Pil seviyesi çok düşükken temizlik yapılamaz.',
    err_dust_fan: 'Toz alma şarj standı fan hatası',
    err_leave_to_power_off: 'Temizlik robotunun kapatılması gerekiyorsa lütfen şarj standından uzaklaştırın ve tekrar deneyin.',
    finish_clean_to_zone: 'Ayrılmış alan temizliğine geçiş yapmak devam eden geçerli görevi durdurur.',
    finish_clean_to_spot: 'Nokta temizliğine geçiş yapmak devam eden geçerli görevi durdurur.',
    finish_charge_to_zone: 'Ayrılmış alan temizliğine geçiş yapmak şarj etmeyi durdurur.',
    finish_charge_to_spot: 'Nokta temizliğine geçiş yapmak şarj etmeyi durdurur.',
    finish_clean_to_sweep: 'Süpürme moduna geçiş yapmak geçerli görevi durdurur.',
    finish_clean_to_sweep_mop: 'Süpürme ve paspaslama moduna geçiş yapmak geçerli görevi durdurur.',
    finish_clean_to_mop: 'Paspaslama moduna geçiş yapmak geçerli görevi durdurur.',
    stop_clean: 'Alan düzenleyiciye girmek geçerli görevi durdurur.',
    wait_load: 'Lütfen verilerin yüklenmesini bekleyin.',
    device_mark_success: 'Cihaz düzeyi ayarlandı',
    tip_find_robot: 'Lütfen sesi takip ederek temizlik robotunu arayın.',
    confirm_reset_material: 'Bu sarf malzemesi şimdi sıfırlansın mı?',
    stop_work_to_reset_map: 'Haritayı sıfırlamak devam eden geçerli görevi durdurur.',
    stop_charge_to_virtualwall: 'Şarj için standa geri dönülüyor, bir sanal duvar/sınırlanmış alan ayarlamak bu işlemi durdurur.',
    stop_work_to_virtualwall: 'Bir sanal duvar/sınırlanmış alan ayarlamak devam eden geçerli görevi durdurur.',
    spot_tips: 'Koordinat noktası çevresindeki {0} m alanı temizle',
    zone_clean_tips: 'Ayrılmış alan içinde temizlik yapın.',
    delete_current_map: 'Harita silinsin mi?',
    select_x_zones: 'Seçilen alanlar: {0}',
    machine_inside: 'Sınırlanmış bir alanda toz alma şarj standı veya temizlik robotu bulunamaz.',
    wait_operate: 'Gerçekleştiriliyor, lütfen bekleyin…',
    ctl_success: 'Başarıyla gerçekleştirildi',
    no_map: 'Henüz harita yok',
    time_out: 'İşlem zaman aşımı',
    no_area: 'Mevcut harita oda bilgisi içermiyor ve düzenlenemiyor.',
    too_small_to_split: 'Bölünemedi, lütfen odadaki bölünecek alanı genişletin.',
    line_need_close_to_wall: 'Bölme çizgisinin uçları odanın duvarlarına olabildiğince yakın olmalıdır.',
    err_radar: 'Radar hatası',
    err_radar_cover_desc: 'Lütfen radar kapağının sıkışıp sıkışmadığını kontrol edin.',
    sensor_maintain: 'Sensör bakımı',
    already_used: '{0} saat kullanıldı',
    already_clean: 'Zaten temiz',
    err_backcharge: 'Şarj için standa geri dönülemedi',
    err_backcharge_desc1: 'Lütfen toz alma şarj standının yakınındaki engelleri kaldırın',
    err_backcharge_desc2: 'Lütfen temizlik robotu ile toz alma şarj standı arasındaki bağlantının normal olup olmadığını kontrol edin',
    name_invalid: 'Ad, özel karakterler içeremez.',
    rug_check_tip: 'Hatalı algılamalardan kaçınmak için fırça ve yan fırçanın düzenli olarak temizlenmesi gerekir.',
    tip_new_map_discover: 'Yeni bir harita bulundu, geçerli harita olarak ayarlansın mı?',
    end_cleaning: 'Temizlemeyi sonlandır',
    partitionEditing: 'Bölüm düzenleme',
    saved_map: 'Harita kaydedildi',
    operator_fail: 'Ayar başarısız',
    remove: 'Sil',
    cleand: 'Alan temizleniyor',
    clean_time: 'Temizleme süresi',
    battery: 'Kalan pil seviyesi',
    sweep_record: 'Temizleme kayıtları',
    timing_sweep: 'Zaman ayırmalı temizleme',
    double_sweep: 'İkincil temizleme',
    virtual_wall: 'Sanal duvar/kısıtlanmış alan ayarı',
    map_rest: 'Haritayı sıfırla',
    consumable_material_statistics: 'Sarf malzemesi bilgileri',
    remote_control: 'Uzaktan kumanda',
    no_schedule: 'Mevcut durumda ayrılmış bir zaman yok',
    time_clean_disturb_tip: 'Rahatsız Etmeyin modu etkinleştirildi ve cihaz uyku modunda',
    delete_saved_map: 'Haritanın sıfırlanıp sıfırlanmayacağı',
    side_bursh: 'Yan fırça',
    main_bursh: 'Döner fırça',
    filter: 'Filtre',
    start_time: 'Başlatma zamanı',
    end_time: 'Bitirme zamanı',
    collect_dust_now: 'Tozu derhal toplayın',
    del_cur_timing: 'Zaman ayırmalı temizlemeyi silmek istediğinizden emin misiniz?',
    name_cannot_empty: 'Ad alanı boş olamaz',
    custom_name: 'Kendiliğinden tanımla',
    room_name: 'Oda{0}',
    add_wall: 'Sanal duvar ekle',
    add_zone: 'Bir kısıtlanmış süpürme ve silme alanı ekle',
    more_than_forbid_length: 'En fazla {0} kısıtlanmış alan ve sanal duvar ayarlayabilirsiniz',
    reset_name: 'Yeniden adlandırılıyor',
    map: 'Harita',
    map_x: 'Harita{0}',
    current_map: 'Geçerli harita',
    merge: 'Alan kombinasyonu',
    segmentation: 'Alan bölümü',
    monday: 'Pazartesi',
    tuesday: 'Salı',
    wednesday: 'Çarşamba',
    thursday: 'Perşembe',
    friday: 'Cuma',
    saturday: 'Cumartesi',
    sunday: 'Pazar',
    everyday: 'Her gün',
    repeat: 'Yinele',
    no_repeat: 'Yineleme',
    global_clean: 'Genel temizlik',
    zone_clean: 'Alan temizliği',
    fix_point_clean: 'Sabit nokta temizliği',
    no_clean_record: 'Mevcut durumda temizleme kaydı yok',
    stop_charge: 'Yeniden şarjı duraklat',
    charging: 'Şarj oluyor',
    charge: 'Şarj Et',
    silent: 'Sessiz',
    standard: 'Standart',
    strong: 'Güçlü',
    charging_btn: 'Şarj oluyor',
    work_sleep: 'Uykuda',
    work_pause: 'Duraklat',
    work_cleaning: 'Temizleniyor',
    work_recharge: 'Yeniden şarj ediliyor',
    work_charging: 'Şarj oluyor',
    work_fault: 'Hata',
    work_remote_control: 'Uzaktan kontrol ediliyor',
    work_full_charged: 'Şarj tamamlandı',
    err_low_battery_charge: 'Cihaz pil seviyesi düşük. Yeniden şarjı başlat',
    err_load_battery_shut_down: 'Çok düşük pil seviyesi. Makine otomatik kapatılır',
    err_roller_brush: 'Ana fırçada takılma var',
    err_brush: 'Yan fırçada takılma var',
    err_radar_desc: 'Lütfen radarda takılma olup olmadığını kontrol edin (radar verisi yok)',
    err_no_dust: 'İkisi bir arada su haznesi dışarıda',
    err_full_dust_box: 'Toz haznesini ve filtreyi temizleyin',
    err_no_water: 'Yetersiz su',
    err_area_not_arrival: 'Belirtilen alana ulaşılamıyor',
    err_restricted_desc: 'Başlamadan önce lütfen cihazı kısıtlanmış alanın dışına çıkarın',
    err_cliff_desc: 'Başlatmak için lütfen eğim sensörünü silin ve tehlikeli alandan uzaklaşın',
    err_water_pump: 'Su pompası anormal',
    err_not_enough_two_room: 'Kombinasyon için lütfen bitişik alanları seçin',
    err_not_enough_split: 'Lütfen bölüm için bir alan seçin',
    err_not_enough_rename: 'Yeniden adlandırmak için lütfen bir alan seçin',
    err_incline_desc: 'Lütfen makineyi zemin seviyesinde başlatın',
    err_radar_top_desc: 'Lütfen radarda engel olup olmadığını kontrol edin ve cihazı başlatmak için yeni bir konuma getirin (radarda çok az geçerli veri mevcut)',
    err_wall_sensor: 'Duvarı takip eden sensör anormal',
    err_main_brush: 'Ana fırça ile ilgili bir sorun var gibi görünüyor (açık devre veya kısa devre)',
    err_side_brush: 'Yan fırça anormal',
    err_fan: 'Fan anormal',
    err_dust_box: 'Toz haznesi dolu. Toz haznesinin ve filtrenin temizlenmesi önerilir',
    err_no_water_box: 'Lütfen ikisi bir arada su haznesini ve filtreyi yerine takın ve filtre ile ikisi bir arada su haznesinin yerine takıldığını teyit edin',
    err_charge: 'Şarj işlemi başarısız oldu, toz toplama şarj noktası bulunamadı',
    event_no_disturb: 'Rahatsız Etmeyin modu etkinleştirildi ve sesli ikazlar devre dışı bırakıldı',
    err_low_battery_do_charge: 'Düşük pil seviyesi. Cihazın şarj edilmesi önerilir',
    hint: 'Püf noktası',
    finish_clean_to_recharge: 'Devam eden temizliği sonlandırarak yeniden şarjı başlatmak istiyor musunuz?',
    cancel: 'İptal',
    confirm: 'Tamam',
    save: 'Kaydet',
    sensor_desc: 'Her {0} saatlik kullanımda tozları temizleyin',
    disturb_tips_setting: 'Rahatsız Etmeyin modu zaman ayarı',
    disturb_tips_des: 'Rahatsız Etmeyin modu: bu zaman diliminde kalınan yerden temizleme işlemine devam edilmez ve sesli istemler ile gösterge parlaklığı düşürülür',
    add_area: 'Alan ekle',
    map_editing: 'Harita Düzenleme',
    mode_setting: 'Mod ayarı',
    mopping_water: 'Silme suyu miktarı',
    custom_mode: 'Özel mod',
    cleanUpBy_area: 'Her alan için ayarlanan moda göre temizleme işlemi gerçekleştirin',
    my_map: 'Haritam',
    area_cleaning: 'Bölümlü alan temizliği',
    sweep: 'İşaret edilen yeri süpür',
    focus_cleaning: 'Yerinde temizlik',
    clickTo_clean: "1,2mx1,2m'lik alanı temizlemek için haritada bir noktaya tıklayın",
    Inplace_execution: 'Hemen 1,5mx1,5m yerinde temizlik yap',
    sweeper_work: 'Süpürme robotu çalışıyor. Mevcut işlem, temizleme işlemini sonlandıracaktır',
    operationCleaning_task: 'Mevcut işlem bu temizleme görevini sonlandıracak',
    voiceAndVolume: 'Ses ve ses düzeyi',
    consumable_timing: 'Sarf malzemelerinin zamanlaması ',
    NoMap: 'Harita şu anda kullanılamıyor. Lütfen otomatik temizliği şarj alanından bir seferde tamamlayın. Temizleme işlemi tamamlandığında cihaz otomatik olarak şarj alanına dönecektir.',
    prohibit: 'kısıtlanmış alan ayarı',
    voice_Setting: 'Ses düzeyi',
    voice_Using: 'Kullanımda',
    voice_Downing: 'İndiriliyor',
    voice_Start_Down: 'İndir',
    voice_Language_Setting: 'Cihaz sesi dili',
    product_description: 'Ürün Kılavuzu',
    edge_sweep: 'Kenarları takip eden temizlik ',
    zone_edit: 'Alanı düzenle',
    robot_search: 'Robotu ara',
    never_collect_dust: 'Tozları hiçbir zaman toplama',
    clean_1_collect_dust: 'Tek temizlik sonrasında tozları otomatik topla',
    clean_2_collect_dust: 'İki temizlik sonrasında tozları otomatik topla',
    clean_3_collect_dust: 'Üç temizlik sonrasında tozları otomatik topla',
    add_mop_forbidZone: 'Silme için kısıtlanmış alan ekle',
    has_same_timing: 'Yinelenen bir zaman ayırma ayarı yaptınız',
    err_no_dust_package: 'Toz torbası yerinde değil',
    mopping_only: 'Yalnızca silme',
    isZoning: 'En fazla 5 bölünmüş alan ayarlanabilir',
    noMap_prompt: 'Harita şu anda kullanılamıyor. Lütfen bir defa otomatik temizlemeyi gerçekleştirin',
    empty_mode: 'Temizleme modu',
    suction: 'Emiş kuvveti',
    small: 'Küçük',
    in: 'Orta',
    big: 'Küçük',
    cleaning_range: 'Temizleme kapsamı',
    regular_mode: 'Normal mod',
    custom_open: 'Lütfen bunu harita düzenleyicideki özel modda ayarlayın ve ardından açın',
    customized_area: 'Lütfen önce alanı özelleştirin',
    no_set: 'Herhangi bir özel alan ayarlanmadığında, robot, normal modda temizlik yapacaktır',
    empty_set: 'Temizleme sonrasında, robot, normal modda temizlik yapacaktır',
    mop_notInstalled: 'Silme bezi takılı değil',
    recharge_text: 'Devam eden temizliği sonlandırarak yeniden şarjı başlatmak istiyor musunuz?',
    Split_Time_Tips: 'Alan bölme sonrasında, ilgili zaman ayırmalı temizleme işlemleri otomatik biçimde zaman ayarlamalı genel temizlik olarak ayarlanacaktır.',
    Merge_Time_Tips: 'Alan kombinasyonu sonrasında, ilgili zaman ayırmalı temizleme işlemleri otomatik biçimde zaman ayarlamalı genel temizlik olarak ayarlanacaktır.',
    isMop_take: 'Silme suyu miktarı yalnızca silme bezi takılı olduğunda çalışır',
    global_take: 'Kenarları takip eden süpürme yalnızca genel temizlik modunda çalışır',
    Mopping_area: 'Kısıtlanmış alan siliniyor',
    Sweeping_area: 'Kısıtlanmış süpürme ve silme alanı',
    point_sweeping: '"İşaret edilen yeri süpür" modunda süpürüyor',
    following_sweeping: 'Kenarları takip eden temizlik yapılıyor',
    total_sweeping: 'Genel temizlik yapılıyor',
    room_sweeping: 'Bir alan temizleniyor',
    double_sweeping: 'İkincil temizleme yapılıyor',
    area_sweeping: 'Bölünmüş alanı temizleme',
    local_sweeping: 'Sabit noktalı yerinde temizleme',
    RemoveMop_rack: 'Ahşap zeminlerde nem ve zarar oluşmasının önlenmesi için silme bezi desteğinin çıkarılması önerilir',
    resetTxt: 'Fabrika ayarlarını geri yükleyin',
    resetTxtPrompt: 'Fabrika ayarları geri yüklendikten sonra cihaz, cihaz listesinden kaldırılacak ve II cihazı ile ilgili veriler temizlenecektir.',
    reset_prompt: 'Sarf malzemelerini sıfırlamak istediğinizden emin misiniz?',
    continue_find_charge: 'Şarj etmeye devam et',
    reset: 'Sıfırla'
  };
  exports.default = _default;
},10052,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: 'Mi Homeロボット掃除機',
    operator_success: 'セットアップが完了しました',
    ctrl_fail: '実行できません',
    ctrling: '実行中…',
    loading: '読み込み中…',
    load_fail: '読み込みできません',
    load_fail_retry: '読み込みに失敗した場合は、再試行をタップしてください',
    mins: '{0}分',
    no_disturb: 'サイレントモード',
    pressurize: 'カーペットブースター',
    voice_enable: '音声起動',
    volume_setting: '音量調整',
    memory_map: 'メモリマップ',
    map_list: 'マップリスト',
    device_mark: 'デバイスの水平調整',
    x_schedule: '{0}件の作業が予約済みです',
    setting_once_only: '設定は1回のみ有効です',
    repeat_sweep_once_only: '起動後、クリーニング動作を繰り返します（1回のみ有効）',
    no_disturb_time: '{0}-{1}サイレントモード',
    no_disturb_disable: 'サイレントモードは起動していません',
    volume_percent: '音量{0}％',
    mark_device_by_land: '現在のフロアに合わせてデバイスを水平にします',
    dust_collect_manage: '集塵管理',
    min_house: 'お部屋のサイズ（小）',
    med_house: 'お部屋のサイズ（中）',
    max_house: 'お部屋のサイズ（大）',
    tip_sweep_nearby: 'デバイス附近の小範囲を掃除する',
    can_use_x_day: '推定使用可能時間{0}',
    remain_percent: '残り｛0}%',
    materail_reset: '消耗品のリセット',
    buy_now: 'すぐに購入する',
    side_bursh_desc: 'サイドブラシは角のゴミを掃き、メインブラシにゴミを送り込みますが、使用を続けるうちに消耗され、クリーニング効果に影響します。作業時間が{0}時間に達したら、一度交換することをお勧めします。',
    main_bursh_desc: 'メインブラシは掃除ロボットのコアパーツであり、高速回転してゴミをダストボックスに巻き込みますが、使用を続けるうちに消耗され、クリーニング効果に影響します。作業時間が{0}時間に達したら、一度交換することをお勧めします。',
    filter_desc: 'ダストボックスフィルターにはH11グレードのフィルター材を採用しており、ダストボックスに吸い込まれたゴミが外に出ないよう効果的に防止します。 ただし、一定期間使用を続けていると詰まってしまう恐れがありますので、2週間に一度は水洗いし、作業時間が{0}時間に達したら、一度交換することをお勧めします。',
    no_disturb_setting: 'サイレントモード設定',
    not_local_network: 'リモコン機能に入る前に、スマートフォンとデバイスを同じWi-Fiに接続してください',
    ping_loading: 'ネットワークをチェックしています…',
    remote_will_cancel_current: 'リモコン機能に切り替えると、現在の作業が停止します',
    remote_disable_by_fault: 'デバイスにエラーが発生しており、リモート機能は使用できません',
    exit_remote_fail: 'リモコン機能を終了できませんでした',
    add_name: '名前の追加',
    room_name_length_limit: '部屋名は12文字以内としてください',
    back_avoid_tip: '後退後、クリフを越えないようにしてください',
    room_name_can_not_same: '名前は重複できません',
    switch_sweep_mode_tip: 'クリーニング方法を切り替えると、現在の作業が停止します',
    can_not_do_mark_in_work: '作業中または一時停止中に本操作を実行することはできません',
    set_map: '現在のマップとして設定する',
    already_set_current_map: '現在のマップとして設定されました',
    set_will_stop_back_charge: '本操作を実行すると、リターン充電が停止します',
    set_will_stop_work: '本操作を実行すると、現在の作業が停止します',
    working_can_not_edit: 'デバイスが稼働しているため、エリア編集はできません',
    drawline_to_split: '画面に線を引いて部屋を分割してください',
    workday: '平日',
    weekday: '週末',
    timing_mode: '予約モード',
    gear: 'ギア',
    timing_time: '予約時間',
    tomorrow: '明日{0}',
    save_data: '保存中…',
    exit_with_not_save: '変更が保存されていません。終了しますか？',
    start_end_time_same: '開始時間と終了時間を同じにすることはできません',
    total_area: '合計面積',
    total_duration: '合計時間',
    total_count: '合計回数',
    show_only_30_clean_record: '{0}日以内の記録のみを表示する',
    date_format: 'MM月dd日hh:mm',
    dev_page: '開発ページ',
    full_charge: 'フル',
    start_clean: 'クリーニングを開始する',
    pause_clean: 'クリーニングを一時停止する',
    clean_mode: 'クリーニングモード',
    water_level: '水量調整',
    continue_clean: 'クリーニングを続ける',
    sweep: 'スイープ',
    sweep_mop: 'スイープ＆モップ',
    mop: 'モップ',
    middle: 'ミドル',
    full_speed: 'ターボ',
    work_free: 'アイドル',
    work_shutdown: 'オフ',
    err_none: '問題なし',
    err_side_wheel_desc: 'バンパーが動いているか確認してください',
    err_bumper_desc: '衝突センサーを拭いてください',
    err_right_sensor_desc: '右側の壁沿いセンサーを拭いてください',
    err_load_map_fail: 'マップの読み込みに失敗しました',
    err_wheel: '主輪が動いているか確認してください',
    err_main_wheel: '主輪エラー',
    err_side_wheel: '衝突センサーエラー',
    err_incline: 'デバイスが傾いています',
    tip_device_mark: 'デバイスを水平な場所に置いて下さい。水平になるまで動かさないで下さい。デバイスは自動的に再始動します',
    err_start_incline_desc: '必要な場合は、水平な場所に置いてから起動させてください',
    err_radar_top: 'レーダートップエラー',
    err_bumper: '衝突センサーエラー',
    err_radar_cover: 'レーダーカバーエラー',
    err_dust_box_desc: 'ダストボックスとフィルターを掃除し、所定の位置に取り付けられていることを確認してください',
    err_device_trapped: 'デバイスが停止した場合は、新しい位置に移動してから再起動させてください',
    err_start_incline: 'デバイスが水平に置かれていません',
    err_restricted: '除外エリアでは起動できません',
    err_cliff: 'クリフセンサーエラー',
    event_no_disturb_desc: 'クリーニングを継続せず、予定済みの作業を実行しません',
    err_no_mop: 'モップが設置されていない場合は、モップが正しい位置に設置されるよう確認してください',
    err_low_battery_disable_sweep: 'バッテリー残量低下のため、クリーニングできません',
    err_dust_fan: '集塵ファンエラー',
    err_leave_to_power_off: 'オフにする必要がある場合は、集塵・充電スタンドから離れて再度お試しください',
    finish_clean_to_zone: '作業中、「エリアクリーニング」モードに切り替えると、作業を停止します',
    finish_clean_to_spot: '作業中、「スポットクリーニング」モードに切り替えると、作業を停止します',
    finish_charge_to_zone: '充電中、「エリアクリーニング」モードに切り替えると、作業を停止します',
    finish_charge_to_spot: '充電中、「スポットクリーニング」モードに切り替えると、動作を停止します',
    finish_clean_to_sweep: '「スイープ」モードに切り替えると、作業を停止します',
    finish_clean_to_sweep_mop: '「スイープ＆モップ」モードに切り替えると、作業を停止します',
    finish_clean_to_mop: '「モップ」モードに切り替えると、作業を停止します',
    stop_clean: 'エリア編集に入ると、現在の作業を停止します',
    wait_load: 'データの読み込みが完了するまでお待ちください',
    device_mark_success: 'デバイスの水平調節が完了しました',
    tip_find_robot: '音を聞いてデバイスを探してください',
    confirm_reset_material: '消耗品のリセットを確認しますか？',
    stop_work_to_reset_map: '作業中、マップをリセットすると作業を停止します',
    stop_charge_to_virtualwall: 'リターン充電中、バーチャルウォール/除外エリアを設定するとリターン充電を停止します',
    stop_work_to_virtualwall: '作業中、バーチャルウォールを設定すると作業を停止します',
    spot_tips: '座標点から{0}メートル以内のエリアをクリーニングします',
    zone_clean_tips: '範囲内のエリアをクリーニングします',
    delete_current_map: 'マップを削除しますか？',
    select_x_zones: '{0}エリアが選択されました',
    machine_inside: '除外エリアでは、集塵・充電スタンドやデバイスがカバーされません',
    wait_operate: '操作中です、今しばらくお待ちください...',
    ctl_success: '操作に成功しました',
    no_map: '現時点ではマップはありません',
    time_out: '操作タイムアウト',
    no_area: '現在のマップには部屋の情報がなく、編集できません',
    too_small_to_split: '分割に失敗しました。 部屋を大きく分割してください',
    line_need_close_to_wall: '分割ラインの両端はできるだけ部屋の壁に近づけてください',
    err_radar: 'レーダー異常',
    err_radar_cover_desc: 'レーダーカバーが詰まっていないか確認してください',
    sensor_maintain: 'センサーのメンテナンス',
    already_used: '{0}時間作業しました',
    already_clean: 'クリーニングが完了しています',
    err_backcharge: 'リターン充電に失敗しました',
    err_backcharge_desc1: '集塵・充電スタンド付近の障害物を取り除いてください',
    err_backcharge_desc2: 'デバイスが集塵・充電スタンドに正しく接続されているか確認してください',
    name_invalid: '名前には特殊文字を含めることはできません',
    rug_check_tip: '誤検出を防ぐために、メインブラシとサイドブラシを定期的に清掃してください',
    tip_new_map_discover: '新しいマップが見つかりました。現在のマップとして設定しますか？',
    end_cleaning: 'クリーニングの終了',
    partitionEditing: 'エリア分割の編集',
    saved_map: 'マップを保存しました',
    operator_fail: '設定に失敗しました',
    remove: '削除',
    cleand: 'クリーニング面積',
    clean_time: 'クリーニング時間',
    battery: 'バッテリー残量',
    sweep_record: 'クリーニング記録',
    timing_sweep: 'クリーニングの予約',
    double_sweep: '2回クリーニング',
    virtual_wall: 'バーチャルウォール/除外エリアの設定',
    map_rest: 'マップのリセット',
    consumable_material_statistics: '消耗品の状態',
    remote_control: 'リモコン',
    no_schedule: '予約なし',
    time_clean_disturb_tip: 'おやすみモードがオンとなっており、デバイスはスリープ状態です',
    delete_saved_map: 'マップをリセットしますか？',
    side_bursh: 'エッジクリーニングブラシ',
    main_bursh: 'ローラーブラシ',
    filter: 'フィルター',
    start_time: '開始時間',
    end_time: '終了時間',
    collect_dust_now: 'ただちに集塵',
    del_cur_timing: '本当にクリーニング予約を削除しますか？',
    name_cannot_empty: '名前を空欄にすることはできません',
    custom_name: 'カスタム',
    room_name: '部屋{0}',
    add_wall: 'バーチャルウォールの追加',
    add_zone: 'スイープ・モップ除外エリアを追加',
    more_than_forbid_length: '最大{0}の除外エリアとバーチャルウォールを設定',
    reset_name: '名前の変更',
    map: 'マップ',
    map_x: 'マップ{0}',
    current_map: '現在のマップ',
    merge: 'エリアの合併',
    segmentation: 'エリアの分割',
    monday: '月曜日',
    tuesday: '火曜日',
    wednesday: '水曜日',
    thursday: '木曜日',
    friday: '金曜日',
    saturday: '土曜日',
    sunday: '日曜日',
    everyday: '毎日',
    repeat: 'リピートする',
    no_repeat: 'リピートしない',
    global_clean: '全面クリーニング',
    zone_clean: 'エリアクリーニング',
    fix_point_clean: 'スポットクリーニング',
    no_clean_record: 'クリーニング記録はありません',
    stop_charge: 'リターン充電の一時停止',
    charging: '充電中',
    charge: 'リターン充電',
    silent: '静か',
    standard: '標準',
    strong: '協力',
    charging_btn: '充電中',
    work_sleep: 'スリープ中',
    work_pause: '一時停止',
    work_cleaning: 'クリーニング中',
    work_recharge: 'リターン充電中',
    work_charging: '充電中',
    work_fault: '故障',
    work_remote_control: 'リモートコントロール中',
    work_full_charged: '充電完了',
    err_low_battery_charge: 'ローバッテリーです。リターン充電を開始します',
    err_load_battery_shut_down: 'ローバッテリーにより、自動シャットダウンしました',
    err_roller_brush: 'メインブラシが動きません',
    err_brush: 'サイドブラシが動きません',
    err_radar_desc: 'レーダーが詰まっていないか確認してください（レーダーのデータなし）',
    err_no_dust: '一体型水タンクを取り出します',
    err_full_dust_box: 'ダストボックスとフィルターの掃除',
    err_no_water: '水不足',
    err_area_not_arrival: '指定エリアに到達できません',
    err_restricted_desc: '除外エリアから移動して起動してください',
    err_cliff_desc: 'クリフセンサーを拭いて、危険な場所から離して起動してください',
    err_water_pump: '水ポンプに異常があります',
    err_not_enough_two_room: '隣接する2つのエリアを選択して合併してください',
    err_not_enough_split: '分割するエリアを選択してください',
    err_not_enough_rename: 'エリアを1つ選択して名前を変更してください',
    err_incline_desc: 'マシンを水平な面に置いてから起動させてください',
    err_radar_top_desc: 'レーダーが遮断されていないか確認し、新しい位置で起動させてください（有効なレーダーデータ不足）',
    err_wall_sensor: '壁沿いセンサーエラー',
    err_main_brush: 'メインブラシに問題があるようです（開回路またはショート）',
    err_side_brush: 'サイドブラシエラー',
    err_fan: 'ファンエラー',
    err_dust_box: 'ダストボックスがいっぱいになりました。ダストボックスとフィルターの掃除をお勧めします',
    err_no_water_box: '一体型水タンクとフィルターを戻し、古田―と一体型水タンクが正しい場所に設置されていることを確認してください',
    err_charge: '自動充電できませんでした。集塵・充電スタンドを見つけられませんでした',
    event_no_disturb: 'おやすみモードがオンの場合、音声ガイドはオフになります',
    err_low_battery_do_charge: 'ローバッテリーです。充電してください',
    hint: 'ヒント',
    finish_clean_to_recharge: '現在のクリーニングを終了してリターン充電を開始しますか？',
    cancel: 'キャンセル',
    confirm: '決定',
    save: '保存',
    sensor_desc: '{0} 時間使用後にごみを取り除いてください',
    disturb_tips_setting: 'おやすみ時間の設定',
    disturb_tips_des: 'おやすみモード：この時間帯はブレークポイントクリーニングは行われず、音声ガイドとインジケータが次第に弱くなります',
    add_area: 'エリアの追加',
    map_editing: 'マップの編集',
    mode_setting: 'モードの設定',
    mopping_water: 'モップ水量',
    custom_mode: 'カスタムモード',
    cleanUpBy_area: '各エリアに設定したモードでクリーニング',
    my_map: 'マイマップ',
    area_cleaning: 'エリアクリーニング',
    sweep: '指示に従ってクリーニング',
    focus_cleaning: 'その場クリーニング',
    clickTo_clean: 'マップのポイントをクリックすると、1.2mx1.2mの範囲をクリーニングします',
    Inplace_execution: 'ただちにその場で1.5m x 1.5mのその場クリーニングを実行',
    sweeper_work: 'ロボット掃除機は作業中です。現在の操作で、今回のクリーニング作業は終了となります',
    operationCleaning_task: '現在の操作で、今回のクリーニング作業は終了します',
    voiceAndVolume: '音声・音量',
    consumable_timing: '消耗品の交換タイミング',
    NoMap: '現在マップがありません。まずオートクリーニングを実施してください。充電ステーションから出発し、クリーニング完了後、自動的に充電ステーションに戻って充電を開始します',
    prohibit: '除外エリアの設定',
    voice_Setting: '音声ボリューム',
    voice_Using: '使用中',
    voice_Downing: 'ダウンロード中',
    voice_Start_Down: 'ダウンロード',
    voice_Language_Setting: 'デバイス言語',
    product_description: '製品取扱説明書',
    edge_sweep: 'エッジクリーニング',
    zone_edit: 'エリアの編集',
    robot_search: 'ロボット掃除機を探す',
    never_collect_dust: '永遠にダストが溜まりません',
    clean_1_collect_dust: '1回のクリーニング後、自動集塵します',
    clean_2_collect_dust: '2回のクリーニング後、自動集塵します',
    clean_3_collect_dust: '3回のクリーニング後、自動集塵します',
    add_mop_forbidZone: 'モップ除外エリアの追加',
    has_same_timing: '予約したクリーニングは重複しています',
    err_no_dust_package: 'ダストバッグの位置がずれています',
    mopping_only: 'モップのみ',
    isZoning: '最大5つのエリアを設定',
    noMap_prompt: '現在マップがありません。まずはオートクリーニングを実行してください',
    empty_mode: 'クリアモード',
    suction: '吸引力',
    small: '小',
    in: '中',
    big: '大',
    cleaning_range: 'クリーニング範囲',
    regular_mode: 'レギュラーモード',
    custom_open: 'マップエディタでカスタムモードに設定してからオンにしてください',
    customized_area: '最初にエリアをカスタマイズしてください',
    no_set: 'カスタムエリアを設定していない場合、通常のモードでクリーニングします',
    empty_set: 'クリアにした後、ロボットは通常モードでクリーニングします',
    mop_notInstalled: 'モップが設置されていません',
    recharge_text: '現在のクリーニングを終了してリターン充電を開始しますか？',
    Split_Time_Tips: 'エリアが分割されると、関連するクリーニング予約が自動的に全面クリーニングに設定されます。',
    Merge_Time_Tips: 'エリアを合併すると、関連するクリーニング予約が自動的に全面クリーニングに設定されます。',
    isMop_take: 'スイープ・モップの水量はモップを設置した後に有効です',
    global_take: 'エッジクリーニングは全面クリーニングモードでのみ有効です',
    Mopping_area: 'モップ除外エリア',
    Sweeping_area: 'スイープ・モップ除外エリア',
    point_sweeping: '指示に従ってスイープ中',
    following_sweeping: 'エッジクリーニング中',
    total_sweeping: '全面クリーニング中',
    room_sweeping: 'エリアのクリーニング中',
    double_sweeping: '二次クリーニング中',
    area_sweeping: 'エリアのクリーニング中',
    local_sweeping: '設定ポイントのクリーニング中',
    RemoveMop_rack: '木の床が濡れて損傷することを防ぐため、モップスタンドを取り外してください',
    resetTxt: '初期設定に戻す',
    resetTxtPrompt: '初期設定に戻すと、デバイスリストから削除され、デバイス関連の全データが消去されます',
    reset_prompt: '本当に消耗品の交換タイミングをリセットしますか？',
    continue_find_charge: 'リターン充電を継続する',
    reset: 'リセット'
  };
  exports.default = _default;
},10055,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    device_name: '미지아 먼지 수거 로봇 청소기',
    operator_success: '설정 성공',
    ctrl_fail: '작동 실패',
    ctrling: '작동 중 …',
    loading: '로딩 중…',
    load_fail: '로딩 실패',
    load_fail_retry: '로딩 실패, 재시도 클릭',
    mins: '{0}분',
    no_disturb: '방해 금지',
    pressurize: '카펫 증압',
    voice_enable: '음성 스위치',
    volume_setting: '음량 조절',
    memory_map: '지도 기억',
    map_list: '지도 리스트',
    device_mark: '청소기 레벨링',
    x_schedule: '{0}개 청소가 예약되었습니다',
    setting_once_only: '설정은 한 번만 유효합니다',
    repeat_sweep_once_only: '시작 후 청소를 반복하며, 한 번만 유효합니다',
    no_disturb_time: '{0}-{1} 방해 금지',
    no_disturb_disable: '방해 금지가 활성화되지 않았습니다',
    volume_percent: '음량 {0}%',
    mark_device_by_land: '현재 지형에 따라 청소기를 레벨링합니다',
    dust_collect_manage: '먼지 수거 관리',
    min_house: '가정용 소형',
    med_house: '가정용 중형',
    max_house: '가정용 대형',
    tip_sweep_nearby: '청소기 근처의 작은 범위 구역을 청소합니다',
    can_use_x_day: '{0}시간 동안 사용 가능할 것으로 예상됩니다',
    remain_percent: '{0}% 남음',
    materail_reset: '소모품 재설정',
    buy_now: '지금 구매하기',
    side_bursh_desc: '사이드 브러쉬는 모서리 쓰레기를 청소하고 쓰레기를 메인 브러쉬로 보내는 데 사용됩니다. 하지만 작동 시간이 길수록 사이드 브러쉬가 마손되어 청소 효과에 영향을 미치므로 {0}시간 이하로 작동한 후 교체하는 것이 좋습니다.',
    main_bursh_desc: '로봇 청소기의 핵심 청소부품인 사이드 브러쉬는 고속으로 회전하여 쓰레기를 먼지통에 넣습니다. 하지만 작동 시간이 길수록 메인 브러쉬가 마손되므로 {0}시간 이하로 작동한 후 교체하는 것이 좋습니다.',
    filter_desc: '먼지통 필터는 H11등급 필터 소재를 사용해 먼지통의 먼지가 빠져 나가는 것을 효과적으로 방지합니다. 하지만 일정 시간 작동하면 막힐 수 있으므로 2주마다 물로 세척하고 {0}시간 이하로 작동한 후 교체하는 것이 좋습니다.',
    no_disturb_setting: '방해 금지 설정',
    not_local_network: '리모컨 기능에 진입하기 전에 휴대폰과 청소기를 동일한 WiFi에 연결하세요',
    ping_loading: '네트워크 확인 중…',
    remote_will_cancel_current: '리모컨 기능으로 전환하면 현재 작업이 중지됩니다',
    remote_disable_by_fault: '청소기 고장으로 원격으로 제어할 수 없습니다',
    exit_remote_fail: '원격 제어 종료 실패',
    add_name: '이름 추가',
    room_name_length_limit: '방 이름은 12자 이내이어야 합니다',
    back_avoid_tip: '후진 조작 시 낭떠러지를 피하세요',
    room_name_can_not_same: '이름은 중복될 수 없습니다',
    switch_sweep_mode_tip: '청소 방식을 전환하면 현재 작업이 중지됩니다',
    can_not_do_mark_in_work: '작업 중이거나 일시정지 상태에서는 해당 작업을 수행할 수 없습니다',
    set_map: '현재 지도로 설정',
    already_set_current_map: '현재 지도로 설정되었습니다',
    set_will_stop_back_charge: '이 작업을 수행하면 재충전이 중지됩니다',
    set_will_stop_work: '이 작업을 수행하면 현재 작업이 중지됩니다',
    working_can_not_edit: '청소기가 작동 중이므로 구역을 편집할 수 없습니다',
    drawline_to_split: '방을 분할하기 위해 화면에 선을 그리세요',
    workday: '작업일',
    weekday: '주말',
    timing_mode: '예약 모드',
    gear: '기어',
    timing_time: '예약 시간',
    tomorrow: '내일 {0}',
    save_data: '저장 중…',
    exit_with_not_save: '변경이 저장되지 않았습니다. 종료하시겠습니까?',
    start_end_time_same: '시작 시간과 종료 시간이 같을 수 없습니다',
    total_area: '총 면적',
    total_duration: '총 시간',
    total_count: '총 횟수',
    show_only_30_clean_record: '최근 {0}일 동안의 기록만 표시',
    date_format: 'MM월 dd일  hh:mm',
    dev_page: '개발 페이지',
    full_charge: '가득',
    start_clean: '청소 시작',
    pause_clean: '청소 일시정지',
    clean_mode: '청소 모드',
    water_level: '물 공급량 조절',
    continue_clean: '계속 청소',
    sweep: '쓸기 ',
    sweep_mop: '쓸기 및 닦기',
    mop: '닦기',
    middle: '일반',
    full_speed: '터보',
    work_free: '사용 가능',
    work_shutdown: '끄기',
    err_none: '고장 없음',
    err_side_wheel_desc: '범퍼가 끼었는지 확인하세요',
    err_bumper_desc: '전면 충돌 방지 센서를 닦으세요',
    err_right_sensor_desc: '우측 벽면 센서를 닦으세요',
    err_load_map_fail: '지도 로딩 실패',
    err_wheel: '메인 바퀴가 끼었는지 확인하세요',
    err_main_wheel: '메인 바퀴 이상',
    err_side_wheel: '범퍼 이상',
    err_incline: '청소기가 기울어져 있습니다',
    tip_device_mark: '청소기를 평평한 바닥에 놓고 레벨링하는 동안 옮기지 마세요. 청소기가 자동으로 다시 시작합니다',
    err_start_incline_desc: '시작해야 할 때는 평평한 바닥에 놓고 시작하세요',
    err_radar_top: '레이더 상단 이상',
    err_bumper: '충돌 방지 센서 이상',
    err_radar_cover: '레이더 커버 이상',
    err_dust_box_desc: '먼지통과 필터를 청소하고 먼지통과 필터가 제자리에 놓였는지 확인하세요',
    err_device_trapped: '청소기가 막혔습니다. 새 위치로 옮긴 후 다시 시작하세요',
    err_start_incline: '청소기가 평평한 바닥에 있지 않습니다',
    err_restricted: '금지 구역에서는 시작할 수 없습니다',
    err_cliff: '추락 방지 센서 이상',
    event_no_disturb_desc: '예약 청소를 계속해서 수행할 수 없습니다',
    err_no_mop: '걸레가 장착되지 않았습니다. 걸레가 제자리에 장착되었는지 확인하세요',
    err_low_battery_disable_sweep: '배터리 부족, 청소할 수 없습니다',
    err_dust_fan: '먼지 수거 스테이션 팬 이상',
    err_leave_to_power_off: '청소기를 꺼야 할 경우 먼지 수거 충전 스테이션에서 분리한 후 다시 시도하세요',
    finish_clean_to_zone: '작동 중에 "맞춤 구역 청소" 모드로 전환하면 작업이 중지됩니다',
    finish_clean_to_spot: '작동 중에 "스팟 청소" 모드로 전환하면 작업이 중지됩니다',
    finish_charge_to_zone: '충전 중에 "맞춤 구역 청소" 모드로 전환하면 작업이 중지됩니다',
    finish_charge_to_spot: '충전 중에 "스팟 청소" 모드로 전환하면 작업이 중지됩니다',
    finish_clean_to_sweep: '"쓸기" 모드로 전환하면 작업이 중지됩니다',
    finish_clean_to_sweep_mop: '"쓸기 및 닦기" 모드로 전환하면 작업이 중지됩니다',
    finish_clean_to_mop: '"닦기" 모드로 전환하면 작업이 중지됩니다',
    stop_clean: '구역 편집으로 진입하면 현재 작업이 중지됩니다',
    wait_load: '데이터 로드가 완료될 때까지 기다리세요',
    device_mark_success: '청소기 레벨링 완료',
    tip_find_robot: '소리에 따라 청소기를 찾으세요.',
    confirm_reset_material: '소모품을 재설정하시겠습니까?',
    stop_work_to_reset_map: '작업 중에 지도를 재설정하면 작업이 중지됩니다',
    stop_charge_to_virtualwall: '재충전 중에 가상 벽/금지 구역을 설정하면 재충전이 중지됩니다',
    stop_work_to_virtualwall: '작업 중에 가상 벽/금지 구역을 설정하면 작업이 일시정지됩니다',
    spot_tips: '좌표점 {0}미터 이내의 구역을 청소합니다',
    zone_clean_tips: '맞춤 청소 범위 내 구역을 청소합니다',
    delete_current_map: '지도 삭제?',
    select_x_zones: '{0}개 구역을 선택했습니다',
    machine_inside: '금지 구역은 먼지 수거 충전 스테이션 또는 청소기를 사용할 수 없습니다',
    wait_operate: '작동 중, 기다리세요…',
    ctl_success: '작동 성공',
    no_map: '지도가 없습니다',
    time_out: '작동 시간 초과',
    no_area: '현재 지도에는 방 정보가 없으며 편집할 수 없습니다',
    too_small_to_split: '분할 실패, 분할할 방의 면적을 늘리세요',
    line_need_close_to_wall: '분할선의 양 끝은 되도록 방의 벽에 가까워야 합니다',
    err_radar: '레이더 이상',
    err_radar_cover_desc: '레이더 커버가 걸렸는지 확인하세요',
    sensor_maintain: '센서 유지보수',
    already_used: '{0}시간 동안 작동했습니다',
    already_clean: '청소했습니다',
    err_backcharge: '재충전 실패',
    err_backcharge_desc1: '먼지 수거 충전 스테이션 근처의 장애물을 제거하세요',
    err_backcharge_desc2: '청소기와 먼지 수거 충전 스테이션이 정상적으로 연결되었는지 확인하세요',
    name_invalid: '이름에는 특수문자를 사용할 수 없습니다',
    rug_check_tip: '잘못 감지하지 않도록 메인 브러쉬와 사이드 브러쉬를 정기적으로 청소해야 합니다',
    tip_new_map_discover: '새 지도를 찾았습니다. 현재 지도로 설정하시겠습니까?',
    end_cleaning: '청소 종료',
    partitionEditing: '구역 분할 편집',
    saved_map: '지도 저장 완료',
    operator_fail: '설정 실패',
    remove: '삭제',
    cleand: '청소 면적',
    clean_time: '청소 시간',
    battery: '남은 배터리',
    sweep_record: '청소 기록',
    timing_sweep: '청소 예약',
    double_sweep: '2차 청소',
    virtual_wall: '가상 벽/금지 구역 설정',
    map_rest: '지도 재설정',
    consumable_material_statistics: '소모품 상황',
    remote_control: '리모컨',
    no_schedule: '예약이 없습니다.',
    time_clean_disturb_tip: '방해 금지 모드가 활성화되었으며, 장치가 휴면 상태로 진입합니다.',
    delete_saved_map: '지도를 재설정하시겠습니까?',
    side_bursh: '사이드 브러쉬',
    main_bursh: '롤러 브러쉬',
    filter: '필터',
    start_time: '시작 시간',
    end_time: '종료 시간',
    collect_dust_now: '지금 먼지 수거하기',
    del_cur_timing: '이 청소 예약을 삭제하시겠습니까?',
    name_cannot_empty: '명칭은 비워둘 수 없습니다.',
    custom_name: '사용자 정의',
    room_name: '방{0}',
    add_wall: '가상 벽 추가',
    add_zone: '쓸기 및 닦기 금지 구역 추가',
    more_than_forbid_length: '최대 {0}개의 금지 구역과 가상 벽을 설정할 수 있습니다.',
    reset_name: '이름 바꾸기',
    map: '지도',
    map_x: '지도{0}',
    current_map: '현재 지도',
    merge: '구역 병합',
    segmentation: '구역 분할',
    monday: '월요일',
    tuesday: '화요일',
    wednesday: '수요일',
    thursday: '목요일',
    friday: '금요일',
    saturday: '토요일',
    sunday: '일요일',
    everyday: '매일',
    repeat: '반복',
    no_repeat: '반복하지 않음',
    global_clean: '전체 청소',
    zone_clean: '구역 청소',
    fix_point_clean: '스팟 청소',
    no_clean_record: '청소 기록이 없습니다.',
    stop_charge: '재충전 일시정지',
    charging: '충전 중',
    charge: '재충전',
    silent: '저소음',
    standard: '표준',
    strong: '강력',
    charging_btn: '충전 중',
    work_sleep: '휴면 중',
    work_pause: '일시정지',
    work_cleaning: '청소 중',
    work_recharge: '재충전 중',
    work_charging: '충전 중',
    work_fault: '고장',
    work_remote_control: '원격 제어 중',
    work_full_charged: '충전 완료',
    err_low_battery_charge: '배터리 부족, 재충전 시작',
    err_load_battery_shut_down: '배터리 부족, 자동 종료',
    err_roller_brush: '메인 브러쉬가 걸렸습니다.',
    err_brush: '사이드 브러쉬가 걸렸습니다.',
    err_radar_desc: '레이더가 걸렸는지 확인하세요. (레이더 데이터 없음)',
    err_no_dust: '투인원 물탱크 제거',
    err_full_dust_box: '먼지통과 필터 청소',
    err_no_water: '물 공급량 부족',
    err_area_not_arrival: '지정 구역에 도달할 수 없습니다.',
    err_restricted_desc: '금지 구역을 벗어나 다시 시작하세요.',
    err_cliff_desc: '추락 방지 센서를 닦고 위험 구역을 벗어나 시작하세요.',
    err_water_pump: '펌프 이상',
    err_not_enough_two_room: '병합할 인접 구역 두 개를 선택하세요.',
    err_not_enough_split: '분할할 구역을 선택하세요.',
    err_not_enough_rename: '이름을 바꿀 구역을 선택하세요.',
    err_incline_desc: '청소기를 평평한 바닥에 놓고 다시 시작하세요.',
    err_radar_top_desc: '레이더가 차단되었는지 확인하고 새로운 위치로 옮겨서 시작하세요. (레이더 유효 데이터가 적음)',
    err_wall_sensor: '벽면 센서 이상',
    err_main_brush: '메인 브러쉬에 문제가 발생한 것 같습니다. (개회로 또는 단락)',
    err_side_brush: '사이드 브러쉬 이상',
    err_fan: '팬 이상',
    err_dust_box: '먼지통이 가득 찼으므로 먼지통과 필터를 청소하는 것이 좋습니다.',
    err_no_water_box: '투인원 물탱크와 필터를 원래대로 장착하고, 필터와 투인원 물탱크가 올바르게 장착되었는지 확인하세요.',
    err_charge: '재충전 실패, 먼지 수거 충전 스테이션을 찾지 못했습니다.',
    event_no_disturb: '방해 금지 모드가 켜져 있고, 음성 안내가 꺼져 있습니다.',
    err_low_battery_do_charge: '배터리 부족, 충전하시는 것이 좋습니다.',
    hint: '팁',
    finish_clean_to_recharge: '현재 청소를 종료하고 재충전을 시작하시겠습니까?',
    cancel: '취소',
    confirm: '확인',
    save: '저장',
    sensor_desc: '{0}시간 사용하면 먼지를 청소해야 합니다.',
    disturb_tips_setting: '방해 금지 시간대 설정',
    disturb_tips_des: '방해 금지 모드 : 이 시간대에는 중단 지점 청소를 수행하지 않으며, 음성 안내 및 표시등 밝기가 감소됩니다.',
    add_area: '구역 추가',
    map_editing: '지도 편집',
    mode_setting: '모드 설정',
    mopping_water: '닦기 물 공급량',
    custom_mode: '사용자 정의 모드',
    cleanUpBy_area: '각 구역 설정 모드에 따라 청소',
    my_map: '내 지도',
    area_cleaning: '맞춤 구역 청소',
    sweep: '맞춤 청소',
    focus_cleaning: '제자리 청소',
    clickTo_clean: '지도 상의 한 지점을 클릭하면 1.2mx1.2m 청소를 수행합니다.',
    Inplace_execution: '즉시 제자리에서 1.5mx1.5m 구역 청소 수행',
    sweeper_work: '로봇 청소기가 작동 중이며, 현재 작업으로 이번 청소 임무가 종료됩니다.',
    operationCleaning_task: '현재 작업으로 이번 청소 임무가 종료됩니다',
    voiceAndVolume: '음성 및 음량',
    consumable_timing: '소모품 타이밍',
    NoMap: '현재 지도가 없으므로 먼저 완전 자동 청소를 1회 수행하세요. 충전 스테이션에서 출발해 청소를 완료한 후 자동으로 충전 스테이션으로 돌아가 충전합니다.',
    prohibit: '금지 구역 설정',
    voice_Setting: '음성 음량',
    voice_Using: '사용 중',
    voice_Downing: '다운로드 중',
    voice_Start_Down: '다운로드',
    voice_Language_Setting: '장치 음성 언어',
    product_description: '제품 설명서',
    edge_sweep: '가장자리 청소 ',
    zone_edit: '구역 편집',
    robot_search: '로봇 찾기',
    never_collect_dust: '먼지를 수거할 필요가 없습니다.',
    clean_1_collect_dust: '1회 청소 후 자동 먼지 수거',
    clean_2_collect_dust: '2회 청소 후 자동 먼지 수거',
    clean_3_collect_dust: '3회 청소 후 자동 먼지 수거',
    add_mop_forbidZone: '닦기 금지 구역 추가',
    has_same_timing: '설정하신 청소 예약이 중복되었습니다.',
    err_no_dust_package: '먼지 여과망 위치가 올바르지 않습니다.',
    mopping_only: '닦기만',
    isZoning: '최대 5개의 맞춤 구역을 설정할 수 있습니다.',
    noMap_prompt: '현재 지도가 없으므로 먼저 자동 청소를 1회 수행하세요.',
    empty_mode: '비우기 모드',
    suction: '흡입력',
    small: '소',
    in: '중',
    big: '대',
    cleaning_range: '청소 범위',
    regular_mode: '일반 모드',
    custom_open: '지도 편집기에서 사용자 지정 모드로 설정 한 다음 켜십시오.',
    customized_area: '먼저 영역을 사용자 지정하십시오',
    no_set: '사용자 정의가 설정되지 않은 구역은 일반 모드에 따라 청소합니다.',
    empty_set: '비운 후 로봇 청소기는 일반 모드에 따라 청소합니다.',
    mop_notInstalled: '걸레 미장착',
    recharge_text: '현재 청소를 종료하고 재충전을 시작하시겠습니까?',
    Split_Time_Tips: '구역이 분할되면, 관련 청소 예약은 자동으로 전체 청소 예약으로 설정됩니다.',
    Merge_Time_Tips: '구역이 병합되면, 관련 청소 예약은 자동으로 전체 청소 예약으로 설정됩니다.',
    isMop_take: '닦기 물 공급량은 걸레를 장착한 후에만 적용됩니다.',
    global_take: '가장자리 청소는 전체 청소 모드에서만 유효합니다.',
    Mopping_area: '닦기 금지 구역',
    Sweeping_area: '쓸기 및 닦기 금지 구역',
    point_sweeping: '맞춤 청소 쓸기 중',
    following_sweeping: '가장자리 청소 중',
    total_sweeping: '전체 청소 중',
    room_sweeping: '구역 청소 중',
    double_sweeping: '2차 청소 중',
    area_sweeping: '맞춤 구역 청소 중',
    local_sweeping: '원래 구역 스팟 청소 중',
    RemoveMop_rack: '나무 바닥 손상을 방지하기 위해 젖은 걸레판을 제거하는 것이 좋습니다.',
    resetTxt: '초기화',
    resetTxtPrompt: '장치가 초기화되면, 장치 목록에서 제거되고 장치 관련 모든 데이터가 지워집니다.',
    reset_prompt: '소모품을 재설정하시겠습니까?',
    continue_find_charge: '계속 재충전',
    reset: '재설정'
  };
  exports.default = _default;
},10058,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    SLEEP: 1,
    IDLE: 2,
    PAUSE: 3,
    SWEEP: 4,
    BACK_CHARGE: 5,
    CHARGE: 6,
    FAULT: 7,
    REMOTE: 8,
    FULL: 9,
    POWER_OFF: 10,
    PAUSE_BACK_CHARGE: 11
  };
  exports.default = _default;
},10061,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _SpecConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _MaterialConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _RemoteConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _StatusConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _MapOpConst = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _AppConst = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _RPCConst = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _LdStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _default = (0, _objectSpread2.default)({}, _SpecConsts.default, _MaterialConsts.default, _Colors.default, _RPCConst.default, {
    RemoteConsts: _RemoteConsts.default,
    StatusConsts: _StatusConsts.default,
    MapOpConst: _MapOpConst.default,
    AppConst: _AppConst.default,
    LdStyles: _LdStyles.default
  });

  exports.default = _default;
},10064,[14305,14314,10067,10070,10073,10061,10076,10079,10082,10085,10088]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var PROP = {
    AUTO_AREA: 'autoArea',
    AUTO_BOOST: 'autoBoost',
    BATTERY_LEVEL: 'batteryLevel',
    SENSOR_LEFT_TIME: 'sensorLeftTime',
    SENSOR_LEFT_LEVEL: 'sensorLeftLevel',
    MAIN_BRUSH_LEFT_TIME: 'mainBrushLeftTime',
    MAIN_BRUSH_LIFE_LEVEL: 'mainBrushLifeLevel',
    SIDE_BRUSH_LEFT_TIME: 'sideBrushLeftTime',
    SIDE_BRUSH_LIFE_LEVEL: 'sideBrushLifeLevel',
    CHARGING_STATE: 'chargingState',
    CLEAN_AREA: 'cleanArea',
    CLEAN_PATH: 'cleanPath',
    CLEAN_COUNTS: 'cleanCounts',
    DOUBLE_CLEAN: 'doubleClean',
    EDGE_SWEEP: 'edgeSweep',
    FAN_LEVEL: 'fanLevel',
    FAULT: 'fault',
    FILTER_LEFT_TIME: 'filterLeftTime',
    FILTER_LIFE_LEVEL: 'filterLifeLevel',
    FIRMWARE_REVISION: 'firmwareRevision',
    FORBID_MODE: 'forbidMode',
    MOP: 'mop',
    MUTE: 'mute',
    MAP_MEMORY: 'mapMemory',
    STATUS: 'status',
    SWEEP_TYPE: 'sweepType',
    TIMING: 'timing',
    TOTAL_CLEAN_AREAS: 'totalCleanAreas',
    TOTAL_CLEAN_TIME: 'totalCleanTime',
    UID: 'uid',
    VOLUME: 'volume',
    WATER_LEVEL: 'waterLevel',
    WORKING_TIME: 'workingTime',
    WORK_STATION_FREQ: 'workStationFreq',
    RESTRICTED_ZONE: 'restrictedZone',
    DOWNLOAD_MAP: 'downloadMap',
    SWEEP_MODE: 'sweepMode',
    CLEAN_INFO: 'cleanInfo',
    NEW_MAP_DISCOVER: 'newMapDiscover',
    CUSTOM_SWITCH: 'customSwitch',
    CURRENT_VOICE: 'currentVoice',
    VOICE_UPDATE_PROGRESS: 'voiceUpdateProgress',
    RENEW_FAN: 'renewFan'
  };
  var ACTION = {
    CONTINUE_SWEEP: 'continueSweep',
    DELETE_MAP: 'deleteMap',
    DEVICE_CORRECTING: 'deviceCorrecting',
    FIND_ROBOT: 'findRobot',
    PAUSE: 'pause',
    REMOTE_CONTROL: 'remoteControl',
    REQUEST_PATH: 'requestPath',
    RESET_SENSOR_LIFE: 'resetSensorLife',
    RESET_MAIN_BRUSH_LIFE: 'resetMainBrushLife',
    RESET_SIDE_BRUSH_LIFE: 'resetSideBrushLife',
    RESET_FILTER_LIFE: 'resetFilterLife',
    START_CHARGE: 'startCharge',
    START_DUST: 'startDust',
    START_ROOM_SWEEP: 'startRoomSweep',
    START_SWEEP: 'startSweep',
    STOP_FIND_CHARGE: 'stopFindCharge',
    STOP_SWEEPING: 'stopSweeping',
    CHANGE_MAP_NAME: 'changeMapName',
    CHANGE_AREA_NAME: 'changeAreaName',
    DELETE_MAP_LIST: 'deleteMapList',
    SET_AUTO_AREA: 'setAutoArea',
    SET_CURRENT_MAP: 'setCurrentMap',
    RESET_CURRENT_MAP: 'resetCurrentMap',
    HANDLE_NEW_MAP: 'handleNewMap',
    CUSTOM_MAP_MODE: 'customMapMode',
    UPDATE_NEW_VOICE: 'updateNewVoice',
    RESET_FACTORY: 'resetFactory',
    PAUSE_FIND_CHARGE: 'pauseFindCharge',
    CONTINUE_FIND_CHARGE: 'continueFindCharge'
  };
  var EVENT = {
    CLEAN_FINISHED: 'cleanFinished',
    ENTER_SILENT_MODE: 'enterSilentMode',
    LOW_BATTERY: 'lowBattery',
    LOW_BAT_WARN: 'lowBatWarn',
    LOW_POWER_TO_CLEAN: 'lowPowerToClean',
    LOW_WATER_LEVEL: 'lowWaterLevel',
    MOP_PLUG_IN: 'mopPlugIn',
    MOP_PLUG_OUT: 'mopPlugOut',
    POWEROFF_ON_CHARGER: 'poweroffOnCharger',
    REBOOT: 'reboot',
    RESTART_AND_BUILDMAP: 'restartAndBuildmap',
    RESUME_TASK: 'resumeTask',
    TIME_TO_WORK: 'timeToWork',
    MAP_UPDATE: 'mapUpdate',
    DUST_NO_BAG: 'dustNoBag',
    DUST_NO_FAN: 'dustNoFan',
    DELETE_MAP: 'deleteMap',
    REMOVE_MOP: 'removeMop'
  };
  var _default = {
    PROP: PROP,
    ACTION: ACTION,
    EVENT: EVENT
  };
  exports.default = _default;
},10067,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    SIDE_BURSH: 1,
    MAIN_BURSH: 2,
    FILTER: 3
  };
  exports.default = _default;
},10070,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    CHARGE: 3000,
    CLEAN: 3001,
    PAUSE: 3002,
    FORWARD: 3005,
    BACK: 3006,
    TURN_LEFT: 3007,
    TURN_RIGHT: 3008,
    EXIT_REMOTE: 4000
  };
  exports.default = _default;
},10073,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var Colors = {
    mainColor: '#5696FF',
    mainDarkColor: '#427AD4',
    secondColor: '#666666',
    backgroundColor: '#F7F7F7'
  };
  var _default = {
    Colors: Colors
  };
  exports.default = _default;
},10076,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    AREA_MERGE: 11,
    AREA_SPLIT: 12,
    AREA_RENAME: 13,
    MAPLIST_SET: 21,
    MAPLIST_RENAME: 22,
    MAPLIST_DELETE: 23,
    FORBIDEN_SET: 31,
    MAP_RESET: 41
  };
  exports.default = _default;
},10079,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    APP_INIT: "APP_INIT",
    APP_PAUSE: "APP_PAUSE",
    APP_RESUME: "APP_RESUME",
    PAGE_INIT: "PAGE_INIT",
    PAGE_PAUSE: "PAGE_PAUSE",
    PAGE_RESUME: "PAGE_RESUME"
  };
  exports.default = _default;
},10082,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var METHOD = {
    CHANGE_MAP_NAME: 'changeMapName',
    CHANGE_AREA_NAME: 'changeAreaName',
    DELETE_MAP_LIST: 'deleteMapList',
    SET_AUTO_AREA: 'setAutoArea',
    SET_CURRENT_MAP: 'setCurrentMap',
    RESET_CURRENT_MAP: 'resetCurrentMap',
    RESTRICTED_ZONE: 'restrictedZone'
  };
  var _default = {
    METHOD: METHOD
  };
  exports.default = _default;
},10085,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    ldNavigationRadius: 18,
    textTipColor: 'rgba(120, 120, 120, 1)',
    mainColor: '#5696FF'
  };
  exports.default = _default;
},10088,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "protocal", {
    enumerable: true,
    get: function get() {
      return _protocal.default;
    }
  });
  Object.defineProperty(exports, "SpecApi", {
    enumerable: true,
    get: function get() {
      return _SpecApi.default;
    }
  });
  Object.defineProperty(exports, "LocalApi", {
    enumerable: true,
    get: function get() {
      return _LocalApi.default;
    }
  });
  Object.defineProperty(exports, "CloudApi", {
    enumerable: true,
    get: function get() {
      return _CloudApi.default;
    }
  });

  var _protocal = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _SpecApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LocalApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _CloudApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
},10091,[14305,10094,10097,10394,10397]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    action: {
      changeMapName: {
        aiid: 3,
        siid: 11
      },
      continueSweep: {
        aiid: 12,
        siid: 7
      },
      deleteMap: {
        aiid: 1,
        siid: 11
      },
      deviceCorrecting: {
        aiid: 16,
        siid: 7
      },
      findRobot: {
        aiid: 3,
        siid: 7
      },
      pause: {
        aiid: 5,
        siid: 2
      },
      remoteControl: {
        aiid: 9,
        siid: 7
      },
      requestPath: {
        aiid: 2,
        siid: 11
      },
      resetMainBrushLife: {
        aiid: 1,
        siid: 9
      },
      resetSideBrushLife: {
        aiid: 1,
        siid: 10
      },
      resetFilterLife: {
        aiid: 1,
        siid: 8
      },
      resetSensorLife: {
        aiid: 1,
        siid: 13
      },
      startCharge: {
        aiid: 1,
        siid: 3
      },
      startDust: {
        aiid: 13,
        siid: 7
      },
      startRoomSweep: {
        aiid: 6,
        siid: 2
      },
      startSweep: {
        aiid: 1,
        siid: 12
      },
      stopFindCharge: {
        aiid: 10,
        siid: 7
      },
      stopSweeping: {
        aiid: 2,
        siid: 2
      },
      changeAreaName: {
        siid: 11,
        aiid: 4
      },
      deleteMapList: {
        siid: 11,
        aiid: 5
      },
      setAutoArea: {
        siid: 11,
        aiid: 6
      },
      setCurrentMap: {
        siid: 11,
        aiid: 7
      },
      resetCurrentMap: {
        siid: 11,
        aiid: 8
      },
      handleNewMap: {
        siid: 11,
        aiid: 9
      },
      customMapMode: {
        siid: 11,
        aiid: 10
      },
      updateNewVoice: {
        siid: 7,
        aiid: 17
      },
      resetFactory: {
        siid: 7,
        aiid: 18
      },
      pauseFindCharge: {
        siid: 7,
        aiid: 19
      },
      continueFindCharge: {
        siid: 7,
        aiid: 20
      }
    },
    event: {
      2.2: 'lowWaterLevel',
      3.1: 'lowBattery',
      7.10: 'mopPlugIn',
      7.11: 'mopPlugOut',
      7.12: 'reboot',
      7.2: 'poweroffOnCharger',
      11.1: 'restartAndBuildmap',
      7.4: 'enterSilentMode',
      7.5: 'timeToWork',
      7.6: 'lowPowerToClean',
      7.7: 'resumeTask',
      7.8: 'cleanFinished',
      7.9: 'lowBatWarn',
      11.2: 'mapUpdate',
      7.16: 'dustNoBag',
      7.17: 'dustNoFan',
      11.3: 'deleteMap',
      7.19: 'removeMop',
      removeMop: {
        eiid: 19,
        siid: 7
      },
      deleteMap: {
        eiid: 3,
        siid: 11
      },
      mapUpdate: {
        eiid: 2,
        siid: 11
      },
      cleanFinished: {
        eiid: 8,
        siid: 7,
        push: false
      },
      enterSilentMode: {
        eiid: 4,
        siid: 7
      },
      lowBatWarn: {
        eiid: 9,
        siid: 7
      },
      lowBattery: {
        eiid: 1,
        siid: 3,
        push: false
      },
      lowPowerToClean: {
        eiid: 6,
        siid: 7
      },
      lowWaterLevel: {
        eiid: 2,
        siid: 2,
        push: false
      },
      mopPlugIn: {
        eiid: 10,
        siid: 7,
        push: false
      },
      mopPlugOut: {
        eiid: 11,
        siid: 7,
        push: false
      },
      poweroffOnCharger: {
        eiid: 2,
        siid: 7
      },
      reboot: {
        eiid: 12,
        siid: 7,
        push: false
      },
      restartAndBuildmap: {
        eiid: 3,
        siid: 7,
        push: false
      },
      resumeTask: {
        eiid: 7,
        siid: 7,
        push: false
      },
      timeToWork: {
        eiid: 5,
        siid: 7,
        push: false
      },
      dustNoBag: {
        siid: 7,
        eiid: 16
      },
      dustNoFan: {
        siid: 7,
        eiid: 17
      }
    },
    prop: {
      1.1: 'manufacturer',
      1.2: 'model',
      1.3: 'serialNumber',
      1.4: 'firmwareRevision',
      10.1: 'sideBrushLeftTime',
      10.2: 'sideBrushLifeLevel',
      2.1: 'status',
      2.11: 'workingTime',
      2.12: 'roomIds',
      2.13: 'sweepType',
      2.2: 'fault',
      11.5: 'mapMemory',
      2.4: 'fanLevel',
      2.8: 'mute',
      2.9: 'volume',
      3.1: 'batteryLevel',
      3.2: 'chargingState',
      7.1: 'mop',
      '7.10': 'timing',
      7.11: 'cleanArea',
      7.13: 'uid',
      7.14: 'autoBoost',
      7.17: 'forbidMode',
      7.18: 'waterLevel',
      11.1: 'downloadMap',
      '7.20': 'totalCleanTime',
      7.21: 'totalCleanAreas',
      11.2: 'cleanPath',
      11.3: 'restrictedZone',
      11.4: 'autoArea',
      7.26: 'cleanCounts',
      7.27: 'doubleClean',
      7.28: 'edgeSweep',
      7.3: 'workStationFreq',
      8.1: 'filterLifeLevel',
      8.2: 'filterLeftTime',
      9.1: 'mainBrushLeftTime',
      9.2: 'mainBrushLifeLevel',
      12.1: 'sweepMode',
      12.2: 'cleanInfo',
      11.7: 'newMapDiscover',
      11.8: 'customSwitch',
      7.29: 'currentVoice',
      '7.30': 'voiceUpdateProgress',
      7.32: 'renewFan',
      13.1: 'sensorLeftTime',
      13.2: 'sensorLeftLevel',
      sensorLeftTime: {
        piid: 1,
        siid: 13,
        push: false
      },
      sensorLeftLevel: {
        piid: 2,
        siid: 13,
        push: false
      },
      firmwareRevision: {
        piid: 4,
        siid: 1,
        push: false
      },
      autoArea: {
        piid: 4,
        siid: 11,
        push: false
      },
      cleanPath: {
        piid: 2,
        siid: 11,
        push: false
      },
      restrictedZone: {
        piid: 3,
        siid: 11,
        push: false
      },
      downloadMap: {
        piid: 1,
        siid: 11,
        push: false
      },
      autoBoost: {
        piid: 14,
        siid: 7
      },
      batteryLevel: {
        piid: 1,
        siid: 3
      },
      mainBrushLeftTime: {
        piid: 1,
        siid: 9,
        push: false
      },
      mainBrushLifeLevel: {
        piid: 2,
        siid: 9,
        push: false
      },
      sideBrushLeftTime: {
        piid: 1,
        siid: 10,
        push: false
      },
      sideBrushLifeLevel: {
        piid: 2,
        siid: 10,
        push: false
      },
      chargingState: {
        piid: 2,
        siid: 3,
        push: false
      },
      cleanArea: {
        piid: 11,
        siid: 7
      },
      cleanCounts: {
        piid: 26,
        siid: 7,
        push: false
      },
      doubleClean: {
        piid: 27,
        siid: 7
      },
      edgeSweep: {
        piid: 28,
        siid: 7
      },
      fanLevel: {
        piid: 4,
        siid: 2
      },
      fault: {
        piid: 2,
        siid: 2
      },
      filterLeftTime: {
        piid: 2,
        siid: 8,
        push: false
      },
      filterLifeLevel: {
        piid: 1,
        siid: 8,
        push: false
      },
      forbidMode: {
        piid: 17,
        siid: 7,
        push: false
      },
      mop: {
        piid: 1,
        siid: 7,
        push: false
      },
      mute: {
        piid: 8,
        siid: 2
      },
      mapMemory: {
        piid: 5,
        siid: 11
      },
      status: {
        piid: 1,
        siid: 2
      },
      sweepType: {
        piid: 13,
        siid: 2
      },
      timing: {
        piid: 10,
        siid: 7,
        push: false
      },
      totalCleanAreas: {
        piid: 21,
        siid: 7,
        push: false
      },
      totalCleanTime: {
        piid: 20,
        siid: 7,
        push: false
      },
      uid: {
        piid: 13,
        siid: 7,
        push: false
      },
      volume: {
        piid: 9,
        siid: 2
      },
      waterLevel: {
        piid: 18,
        siid: 7
      },
      workStationFreq: {
        piid: 3,
        siid: 7
      },
      workingTime: {
        piid: 11,
        siid: 2
      },
      sweepMode: {
        piid: 1,
        siid: 12
      },
      cleanInfo: {
        piid: 2,
        siid: 12,
        push: false
      },
      newMapDiscover: {
        piid: 7,
        siid: 11
      },
      customSwitch: {
        piid: 8,
        siid: 11
      },
      currentVoice: {
        piid: 29,
        siid: 7
      },
      voiceUpdateProgress: {
        piid: 30,
        siid: 7
      },
      renewFan: {
        piid: 32,
        siid: 7
      }
    }
  };
  exports.default = _default;
},10094,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var _spec = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _protocal = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var isLoading = false;

  function flatShake() {
    return _regenerator.default.async(function flatShake$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (isLoading) {
              _context.next = 3;
              break;
            }

            isLoading = true;
            return _context.abrupt("return", Promise.resolve(0));

          case 3:
            _logger.default.warn('command too busy');

            return _context.abrupt("return", _ApiCode.default.ONING);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  function specS(name, value) {
    return _regenerator.default.async(function specS$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", specSet(name, value).then(function (code) {
              return +code === 0;
            }).catch(function () {
              return false;
            }));

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    });
  }

  function specA(name, value) {
    var silent,
        _args3 = arguments;
    return _regenerator.default.async(function specA$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            silent = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : false;
            return _context3.abrupt("return", specAction(name, value, silent).then(function (code) {
              return +code === 0;
            }).catch(function () {
              return false;
            }));

          case 2:
          case "end":
            return _context3.stop();
        }
      }
    });
  }

  function syncP(propNames) {
    var silent,
        datasource,
        _args4 = arguments;
    return _regenerator.default.async(function syncP$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            silent = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : false;
            datasource = _args4.length > 2 ? _args4[2] : undefined;
            return _context4.abrupt("return", syncProps(propNames, silent, datasource).catch(function () {}));

          case 3:
          case "end":
            return _context4.stop();
        }
      }
    });
  }

  function specSetNoFlatShake(name, value) {
    var _ref, piid, siid, params;

    return _regenerator.default.async(function specSetNoFlatShake$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _ref = _protocal.default.prop[name] || {}, piid = _ref.piid, siid = _ref.siid;

            if (!(!piid || !siid)) {
              _context5.next = 4;
              break;
            }

            _logger.default.warn("specSet find " + name + " in protocal fail");

            return _context5.abrupt("return", _ApiCode.default.INVALID_SPEC);

          case 4:
            params = {
              piid: piid,
              siid: siid,
              did: _miot.Device.deviceID,
              value: value
            };
            return _context5.abrupt("return", _spec.default.setPropertiesValue([params]).then(function (res) {
              isLoading = false;

              var _ref2 = res[0] || {},
                  code = _ref2.code;

              _logger.default.info("specSet sucess, params:" + JSON.stringify(params) + "\n res:" + JSON.stringify(res) + " -> " + code);

              return +code;
            }).catch(function (err) {
              isLoading = false;

              _logger.default.warn("specSet fail, params:" + JSON.stringify(params) + "\n err:" + JSON.stringify(err) + "\n");

              return _ApiCode.default.EXCEPTION;
            }));

          case 6:
          case "end":
            return _context5.stop();
        }
      }
    });
  }

  function specSet(name, value) {
    var _ref3, piid, siid, params;

    return _regenerator.default.async(function specSet$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _ref3 = _protocal.default.prop[name] || {}, piid = _ref3.piid, siid = _ref3.siid;

            if (!(!piid || !siid)) {
              _context6.next = 4;
              break;
            }

            _logger.default.warn("specSet find " + name + " in protocal fail");

            return _context6.abrupt("return", _ApiCode.default.INVALID_SPEC);

          case 4:
            params = {
              piid: piid,
              siid: siid,
              did: _miot.Device.deviceID,
              value: value
            };
            return _context6.abrupt("return", flatShake().then(function (code) {
              if (code === _ApiCode.default.ONING) {
                return code;
              }

              return _spec.default.setPropertiesValue([params]).then(function (res) {
                isLoading = false;

                var _ref4 = res[0] || {},
                    code = _ref4.code;

                _logger.default.info("specSet sucess, params:" + JSON.stringify(params) + "\n res:" + JSON.stringify(res) + " -> " + code);

                return +code;
              }).catch(function (err) {
                isLoading = false;

                _logger.default.warn("specSet fail, params:" + JSON.stringify(params) + "\n err:" + JSON.stringify(err) + "\n");

                return _ApiCode.default.EXCEPTION;
              });
            }));

          case 6:
          case "end":
            return _context6.stop();
        }
      }
    });
  }

  function specGet(name) {
    var datasource,
        _ref5,
        siid,
        piid,
        params,
        _args7 = arguments;

    return _regenerator.default.async(function specGet$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            datasource = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : 1;
            _ref5 = _protocal.default.prop[name] || {}, siid = _ref5.siid, piid = _ref5.piid;

            if (!(!siid || !piid)) {
              _context7.next = 5;
              break;
            }

            _logger.default.warn("specGet find " + name + " in protocal fail");

            return _context7.abrupt("return", Promise.reject("specGet find " + name + " in protocal fail"));

          case 5:
            params = {
              siid: siid,
              piid: piid,
              did: _miot.Device.deviceID
            };
            return _context7.abrupt("return", _spec.default.getPropertiesValue([params], datasource).then(function (res) {
              var result = parseGetResult(res);

              _logger.default.info("specGet success, datasource:" + datasource + " params:" + JSON.stringify(params) + "\n res:" + JSON.stringify(res) + " -> " + JSON.stringify(result));

              return result;
            }).catch(function (err) {
              _logger.default.warn("specGet fail, datasource:" + datasource + " params:" + JSON.stringify(params) + "\n err:" + JSON.stringify(err) + "\n");

              throw err;
            }));

          case 7:
          case "end":
            return _context7.stop();
        }
      }
    });
  }

  function specAction(name, value) {
    var silent,
        _ref6,
        siid,
        aiid,
        params,
        _args8 = arguments;

    return _regenerator.default.async(function specAction$(_context8) {
      while (1) {
        switch (_context8.prev = _context8.next) {
          case 0:
            silent = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : false;
            _ref6 = _protocal.default.action[name] || {}, siid = _ref6.siid, aiid = _ref6.aiid;

            if (!(!siid || !aiid)) {
              _context8.next = 5;
              break;
            }

            _logger.default.warn("specAction find " + name + " in protocal fail");

            return _context8.abrupt("return", _ApiCode.default.INVALID_SPEC);

          case 5:
            params = {
              siid: siid,
              aiid: aiid,
              did: _miot.Device.deviceID,
              in: value || []
            };
            return _context8.abrupt("return", _spec.default.doAction(params).then(function (result) {
              var code = result.code;

              if (!silent || +code !== 0) {
                _logger.default.info("spec action success, params:" + JSON.stringify(params) + "\n res:" + JSON.stringify(result) + "\n");
              }

              return code;
            }).catch(function (err) {
              _logger.default.warn("spec action fail, params:" + JSON.stringify(params) + "\n err:" + JSON.stringify(err) + "\n");

              return _ApiCode.default.EXCEPTION;
            }));

          case 7:
          case "end":
            return _context8.stop();
        }
      }
    });
  }

  function syncProps(propNames) {
    var silent,
        datasource,
        params,
        _args9 = arguments;
    return _regenerator.default.async(function syncProps$(_context9) {
      while (1) {
        switch (_context9.prev = _context9.next) {
          case 0:
            silent = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : false;
            datasource = _args9.length > 2 ? _args9[2] : undefined;

            if (!(!propNames || !Array.isArray(propNames))) {
              _context9.next = 5;
              break;
            }

            _logger.default.info('sync props fail, params must be array');

            return _context9.abrupt("return", Promise.reject('propNames must be array'));

          case 5:
            params = propNames.map(function (name) {
              var _ref7 = _protocal.default.prop[name] || {},
                  siid = _ref7.siid,
                  piid = _ref7.piid;

              if (siid && piid) {
                return {
                  siid: siid,
                  piid: piid,
                  did: _miot.Device.deviceID
                };
              }

              return null;
            }).filter(function (item) {
              return item != null;
            });
            return _context9.abrupt("return", _spec.default.getPropertiesValue(params, datasource).then(function (res) {
              var result = parseGetResult(res);

              if (!silent) {}

              return result;
            }).catch(function (err) {
              _logger.default.warn("sync props fail, params:" + JSON.stringify(params) + "\n err:" + JSON.stringify(err) + "\n");

              throw err;
            }));

          case 7:
          case "end":
            return _context9.stop();
        }
      }
    });
  }

  function preHandleCode(code) {
    if (+code === 0) {
      return 0;
    } else {
      var c = "" + code;
      c = c.substr(-3);
      c = +c;

      if (c === 0) {
        return _ApiCode.default.UNKNOWN;
      }

      return c;
    }
  }

  function specActionSyncProp(actionName, value, silent, targetPropName, targetPropValue, targetPropFailValue) {
    return _regenerator.default.async(function specActionSyncProp$(_context10) {
      while (1) {
        switch (_context10.prev = _context10.next) {
          case 0:
            _logger.default.info("action: " + actionName + ", prop: " + targetPropName + ", propValue: " + targetPropValue + ", failValue: " + targetPropFailValue);

            return _context10.abrupt("return", specAction(actionName, value, silent).then(function (code) {
              var c = preHandleCode(code);

              if (c === _ApiCode.default.SUCCESS || c === _ApiCode.default.TIME_OUT || c === _ApiCode.default.UNKNOWN) {
                return _FunUtils.default.wait(2000).then(function () {
                  return _FunUtils.default.retry(function () {
                    return specGet(targetPropName, 2).then(function (res) {
                      var valueMatch = false;

                      if (res) {
                        if (Array.isArray(targetPropValue)) {
                          valueMatch = targetPropValue.indexOf(res[targetPropName]) >= 0;
                        } else {
                          valueMatch = res[targetPropName] === targetPropValue;
                        }

                        return valueMatch || targetPropFailValue && res[targetPropName] !== targetPropFailValue;
                      }

                      return false;
                    }).catch(function () {
                      return false;
                    });
                  }, 2, {
                    delay: 1750
                  }).then(function (success) {
                    if (success) {
                      return _ApiCode.default.SUCCESS;
                    }

                    return _ApiCode.default.FAIL;
                  });
                });
              } else {
                return c;
              }
            }).catch(function (err) {
              _logger.default.warn("spec Action and sync prop fail, " + JSON.stringify(err));

              return _ApiCode.default.EXCEPTION;
            }).then(function (ret) {
              return +ret === _ApiCode.default.SUCCESS;
            }));

          case 2:
          case "end":
            return _context10.stop();
        }
      }
    });
  }

  function parseGetResult(res) {
    var result = {};
    res.forEach(function (item) {
      var _ref8 = item || {},
          code = _ref8.code,
          siid = _ref8.siid,
          piid = _ref8.piid,
          value = _ref8.value;

      if (+code === 0 && value !== undefined) {
        result[_protocal.default.prop[siid + "." + piid]] = value;
      }
    });
    return result;
  }

  var _default = {
    specGet: specGet,
    specSet: specSet,
    specS: specS,
    specActionSyncProp: specActionSyncProp,
    specAction: specAction,
    specA: specA,
    syncProps: syncProps,
    syncP: syncP,
    specSetNoFlatShake: specSetNoFlatShake
  };
  exports.default = _default;
},10097,[14305,14674,10074,10287,10094,10100,10103,10106]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _miot = _$$_REQUIRE(_dependencyMap[1]);

  var _smarthome = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var logger = console;

  logger.debug = function () {};

  logger.trace = function () {};

  var methods = ['info', 'warn', 'log', 'error'];
  methods.forEach(function (method) {
    var f = logger[method];

    logger[method] = function () {
      var log = Array.prototype.slice.call(arguments);

      _smarthome.default.reportLog(_miot.Device.model, log);
    };
  });

  if (window) {
    window.logger = logger;
  }

  if (global) {
    global.logger = logger;
  }

  var _default = logger;
  exports.default = _default;
},10100,[14305,10074,10065]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var API_CODE = {
    SUCCESS: 0,
    ONING: 1,
    OFFLINE: 11,
    TIME_OUT: 36,
    OPERATION_FAIL: 100,
    DEVICE_UNBIND: 905,
    UNKNOWN: -4004,
    FAIL: -1,
    CANCEL: -100,
    EXCEPTION: -1000,
    INVALID_SPEC: -1001,
    WAIT_TIME_OUT: -1002
  };
  var _default = API_CODE;
  exports.default = _default;
},10103,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _common = _$$_REQUIRE(_dependencyMap[2]);

  function sequence(tasks) {
    var result, spromise;
    return _regenerator.default.async(function sequence$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            result = [];
            spromise = Promise.resolve();
            tasks.forEach(function (task) {
              spromise = spromise.then(task).then(function (res) {
                return {
                  data: res
                };
              }).catch(function (err) {
                return {
                  err: err
                };
              }).then(function (r) {
                result.push(r);
                return result;
              });
            });
            return _context.abrupt("return", spromise);

          case 4:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  function wait() {
    var timeout,
        _args2 = arguments;
    return _regenerator.default.async(function wait$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            timeout = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 1000;
            return _context2.abrupt("return", new Promise(function (resolve) {
              return setTimeout(function () {
                resolve(0);
              }, timeout);
            }));

          case 2:
          case "end":
            return _context2.stop();
        }
      }
    });
  }

  var taskComplete = true;

  function debounce(task) {
    return _regenerator.default.async(function debounce$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            if (taskComplete) {
              _context3.next = 2;
              break;
            }

            return _context3.abrupt("return", Promise.reject('task not complete'));

          case 2:
            taskComplete = false;
            Promise.all([task(), wait(400)]).then(function () {
              taskComplete = true;
            }).catch(function () {
              taskComplete = true;
            });
            return _context3.abrupt("return", Promise.resolve(0));

          case 5:
          case "end":
            return _context3.stop();
        }
      }
    });
  }

  function retry(task) {
    var count,
        opt,
        _ref,
        _ref$delay,
        delay,
        _args4 = arguments;

    return _regenerator.default.async(function retry$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            count = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : 3;
            opt = _args4.length > 2 ? _args4[2] : undefined;
            _ref = opt || {}, _ref$delay = _ref.delay, delay = _ref$delay === undefined ? 1000 : _ref$delay;

            _common.logger.info("retry, count: " + count + ", opt: " + JSON.stringify(opt));

            return _context4.abrupt("return", task().then(function (s) {
              return s;
            }).catch(function () {
              return false;
            }).then(function (success) {
              if (success) {
                return true;
              }

              if (count - 1 > 0) {
                return wait(delay).then(function () {
                  return retry(task, count - 1, {
                    delay: delay
                  });
                });
              } else {
                return false;
              }
            }).catch(function () {
              return false;
            }));

          case 5:
          case "end":
            return _context4.stop();
        }
      }
    });
  }

  var _default = {
    sequence: sequence,
    wait: wait,
    retry: retry,
    debounce: debounce
  };
  exports.default = _default;
},10106,[14305,14674,10109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Consts", {
    enumerable: true,
    get: function get() {
      return _Consts.default;
    }
  });
  Object.defineProperty(exports, "localString", {
    enumerable: true,
    get: function get() {
      return _localString.default;
    }
  });
  Object.defineProperty(exports, "logger", {
    enumerable: true,
    get: function get() {
      return _logger.default;
    }
  });
  Object.defineProperty(exports, "globalData", {
    enumerable: true,
    get: function get() {
      return _GlobalData.default;
    }
  });
  Object.defineProperty(exports, "globalStyle", {
    enumerable: true,
    get: function get() {
      return _GlobalStyle.default;
    }
  });
  Object.defineProperty(exports, "Policy", {
    enumerable: true,
    get: function get() {
      return _Policy.default;
    }
  });
  Object.defineProperty(exports, "PushDelegate", {
    enumerable: true,
    get: function get() {
      return _PushDelegate.default;
    }
  });
  Object.defineProperty(exports, "Theme", {
    enumerable: true,
    get: function get() {
      return _Theme.default;
    }
  });

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _GlobalData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _GlobalStyle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _Policy = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _PushDelegate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Theme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));
},10109,[14305,10064,10016,10100,10112,10115,10118,10388,10391]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var GlobalData = {
    isNew: true,
    accept: false
  };
  var _default = GlobalData;
  exports.default = _default;
},10112,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    switchStyle: {
      onTintColor: 'blue'
    },
    page: {
      flex: 1,
      justifyContent: 'center',
      flexDirection: 'column'
    }
  };
  exports.default = _default;
},10115,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _miot = _$$_REQUIRE(_dependencyMap[0]);

  var en_normal = {
    agreementURL: _$$_REQUIRE(_dependencyMap[1]),
    privacyURL: _$$_REQUIRE(_dependencyMap[2])
  };
  var en_gdpr = {
    agreementURL: _$$_REQUIRE(_dependencyMap[3]),
    privacyURL: _$$_REQUIRE(_dependencyMap[4])
  };
  var files = {
    'zhimi.vacuum.xa1-h': {
      zh: {
        agreementURL: _$$_REQUIRE(_dependencyMap[5]),
        privacyURL: _$$_REQUIRE(_dependencyMap[6])
      },
      en: {
        agreementURL: _$$_REQUIRE(_dependencyMap[7]),
        privacyURL: _$$_REQUIRE(_dependencyMap[8])
      }
    },
    'gdyimu.vacuum.r1': {
      zh: {
        agreementURL: _$$_REQUIRE(_dependencyMap[5]),
        privacyURL: _$$_REQUIRE(_dependencyMap[6])
      },
      en: {
        agreementURL: _$$_REQUIRE(_dependencyMap[7]),
        privacyURL: _$$_REQUIRE(_dependencyMap[8])
      }
    },
    'zhimi.vacuum.xa1': {
      zh: {
        agreementURL: _$$_REQUIRE(_dependencyMap[5]),
        privacyURL: _$$_REQUIRE(_dependencyMap[6])
      },
      en_normal: en_normal,
      en_gdpr: en_gdpr,
      fr_gdpr: {
        agreementURL: _$$_REQUIRE(_dependencyMap[9]),
        privacyURL: _$$_REQUIRE(_dependencyMap[10])
      },
      ar: {
        agreementURL: _$$_REQUIRE(_dependencyMap[11]),
        privacyURL: _$$_REQUIRE(_dependencyMap[12])
      },
      be: {
        agreementURL: _$$_REQUIRE(_dependencyMap[13]),
        privacyURL: _$$_REQUIRE(_dependencyMap[14])
      },
      bg: {
        agreementURL: _$$_REQUIRE(_dependencyMap[15]),
        privacyURL: _$$_REQUIRE(_dependencyMap[16])
      },
      cs: {
        agreementURL: _$$_REQUIRE(_dependencyMap[17]),
        privacyURL: _$$_REQUIRE(_dependencyMap[18])
      },
      de: {
        agreementURL: _$$_REQUIRE(_dependencyMap[19]),
        privacyURL: _$$_REQUIRE(_dependencyMap[20])
      },
      el: {
        agreementURL: _$$_REQUIRE(_dependencyMap[21]),
        privacyURL: _$$_REQUIRE(_dependencyMap[22])
      },
      es: {
        agreementURL: _$$_REQUIRE(_dependencyMap[23]),
        privacyURL: _$$_REQUIRE(_dependencyMap[24])
      },
      la: {
        agreementURL: _$$_REQUIRE(_dependencyMap[25]),
        privacyURL: _$$_REQUIRE(_dependencyMap[26])
      },
      et: {
        agreementURL: _$$_REQUIRE(_dependencyMap[27]),
        privacyURL: _$$_REQUIRE(_dependencyMap[28])
      },
      fr: {
        agreementURL: _$$_REQUIRE(_dependencyMap[29]),
        privacyURL: _$$_REQUIRE(_dependencyMap[30])
      },
      he: {
        agreementURL: _$$_REQUIRE(_dependencyMap[31]),
        privacyURL: _$$_REQUIRE(_dependencyMap[32])
      },
      hr: {
        agreementURL: _$$_REQUIRE(_dependencyMap[33]),
        privacyURL: _$$_REQUIRE(_dependencyMap[34])
      },
      hu: {
        agreementURL: _$$_REQUIRE(_dependencyMap[35]),
        privacyURL: _$$_REQUIRE(_dependencyMap[36])
      },
      id: {
        agreementURL: _$$_REQUIRE(_dependencyMap[37]),
        privacyURL: _$$_REQUIRE(_dependencyMap[38])
      },
      it: {
        agreementURL: _$$_REQUIRE(_dependencyMap[39]),
        privacyURL: _$$_REQUIRE(_dependencyMap[40])
      },
      ko: {
        agreementURL: _$$_REQUIRE(_dependencyMap[41]),
        privacyURL: _$$_REQUIRE(_dependencyMap[42])
      },
      lt: {
        agreementURL: _$$_REQUIRE(_dependencyMap[43]),
        privacyURL: _$$_REQUIRE(_dependencyMap[44])
      },
      lv: {
        agreementURL: _$$_REQUIRE(_dependencyMap[45]),
        privacyURL: _$$_REQUIRE(_dependencyMap[46])
      },
      ms: {
        agreementURL: _$$_REQUIRE(_dependencyMap[47]),
        privacyURL: _$$_REQUIRE(_dependencyMap[48])
      },
      my: {
        agreementURL: _$$_REQUIRE(_dependencyMap[49]),
        privacyURL: _$$_REQUIRE(_dependencyMap[50])
      },
      nl: {
        agreementURL: _$$_REQUIRE(_dependencyMap[51]),
        privacyURL: _$$_REQUIRE(_dependencyMap[52])
      },
      pl: {
        agreementURL: _$$_REQUIRE(_dependencyMap[53]),
        privacyURL: _$$_REQUIRE(_dependencyMap[54])
      },
      pt: {
        agreementURL: _$$_REQUIRE(_dependencyMap[55]),
        privacyURL: _$$_REQUIRE(_dependencyMap[56])
      },
      br: {
        agreementURL: _$$_REQUIRE(_dependencyMap[57]),
        privacyURL: _$$_REQUIRE(_dependencyMap[58])
      },
      ro: {
        agreementURL: _$$_REQUIRE(_dependencyMap[59]),
        privacyURL: _$$_REQUIRE(_dependencyMap[60])
      },
      ru: {
        agreementURL: _$$_REQUIRE(_dependencyMap[61]),
        privacyURL: _$$_REQUIRE(_dependencyMap[60])
      },
      sk: {
        agreementURL: _$$_REQUIRE(_dependencyMap[62]),
        privacyURL: _$$_REQUIRE(_dependencyMap[63])
      },
      sl: {
        agreementURL: _$$_REQUIRE(_dependencyMap[64]),
        privacyURL: _$$_REQUIRE(_dependencyMap[65])
      },
      th: {
        agreementURL: _$$_REQUIRE(_dependencyMap[66]),
        privacyURL: _$$_REQUIRE(_dependencyMap[67])
      },
      tr: {
        agreementURL: _$$_REQUIRE(_dependencyMap[68]),
        privacyURL: _$$_REQUIRE(_dependencyMap[69])
      },
      uk: {
        agreementURL: _$$_REQUIRE(_dependencyMap[70]),
        privacyURL: _$$_REQUIRE(_dependencyMap[71])
      },
      vi: {
        agreementURL: _$$_REQUIRE(_dependencyMap[72]),
        privacyURL: _$$_REQUIRE(_dependencyMap[73])
      },
      kr: {
        agreementURL: _$$_REQUIRE(_dependencyMap[74]),
        privacyURL: _$$_REQUIRE(_dependencyMap[75])
      },
      il: {
        agreementURL: _$$_REQUIRE(_dependencyMap[76]),
        privacyURL: _$$_REQUIRE(_dependencyMap[77])
      },
      lu: {
        agreementURL: _$$_REQUIRE(_dependencyMap[78]),
        privacyURL: _$$_REQUIRE(_dependencyMap[79])
      },
      bel: {
        agreementURL: _$$_REQUIRE(_dependencyMap[80]),
        privacyURL: _$$_REQUIRE(_dependencyMap[81])
      },
      ch: {
        agreementURL: _$$_REQUIRE(_dependencyMap[82]),
        privacyURL: _$$_REQUIRE(_dependencyMap[83])
      },
      us: {
        agreementURL: _$$_REQUIRE(_dependencyMap[84]),
        privacyURL: _$$_REQUIRE(_dependencyMap[85])
      },
      us_spanus: {
        agreementURL: _$$_REQUIRE(_dependencyMap[86]),
        privacyURL: _$$_REQUIRE(_dependencyMap[87])
      },
      jp: {
        agreementURL: _$$_REQUIRE(_dependencyMap[88]),
        privacyURL: _$$_REQUIRE(_dependencyMap[89])
      }
    }
  };
  var countryMap = {
    IE: ['en_gdpr', 'en_gdpr'],
    PH: ['en_normal', 'en_normal'],
    NZ: ['en_normal', 'en_normal'],
    SG: ['en_normal', 'en_normal'],
    KR: ['kr', 'ko'],
    RU: ['en_normal', 'ru'],
    TR: ['en_normal', 'tr'],
    SA: ['en_normal', 'ar'],
    QA: ['en_normal', 'ar'],
    AE: ['en_normal', 'ar'],
    OM: ['en_normal', 'ar'],
    IQ: ['en_normal', 'ar'],
    PK: ['en_normal', 'en_normal'],
    EG: ['en_normal', 'ar'],
    MA: ['en_normal', 'ar'],
    KE: ['en_normal', 'ar'],
    FR: ['en_gdpr', 'fr_gdpr'],
    ES: ['en_gdpr', 'es'],
    DE: ['en_gdpr', 'de'],
    PL: ['en_gdpr', 'pl'],
    DEFAULT: ['en_normal', 'en_normal'],
    CN: ['zh', 'zh'],
    US: ['us', 'us_spanus'],
    JP: ['en_normal', 'jp']
  };

  function getPolicy(countryCode, language) {
    var _Device$model = _miot.Device.model,
        model = _Device$model === undefined ? 'zhimi.vacuum.xa1' : _Device$model;

    if (model === 'gdyimu.vacuum.r1') {
      var lan = 'en';

      if (countryCode.toLowerCase() === 'cn' && language.toLowerCase() !== 'en') {
        lan = 'zh';
      }

      var modelFiles = files[model] || {};
      return modelFiles[lan] || {};
    } else if (model === 'zhimi.vacuum.xa1-h') {
      var _lan = 'en';

      if (countryCode.toLowerCase() === 'cn' && language.toLowerCase() !== 'en') {
        _lan = 'zh';
      }

      var _modelFiles = files[model] || {};

      return _modelFiles[_lan] || {};
    } else {
      var _lan2 = language.toLowerCase() || 'en';

      var cc = countryCode.toUpperCase();
      var cm = countryMap[cc] || countryMap.DEFAULT;

      var _modelFiles2 = files[model] || {};

      if (_lan2 === 'en') {
        return _modelFiles2[cm[0]] || {};
      } else {
        return _modelFiles2[cm[1]] || {};
      }
    }
  }

  var _default = {
    getPolicy: getPolicy
  };
  exports.default = _default;
},10118,[10074,10121,10124,10127,10130,10133,10136,10139,10142,10145,10148,10151,10154,10157,10160,10163,10166,10169,10172,10175,10178,10181,10184,10187,10190,10193,10196,10199,10202,10205,10208,10211,10214,10217,10220,10223,10226,10229,10232,10235,10238,10241,10244,10247,10250,10253,10256,10259,10262,10265,10268,10271,10274,10277,10280,10283,10286,10289,10292,10295,10298,10301,10304,10307,10310,10313,10316,10319,10322,10325,10328,10331,10334,10337,10340,10343,10346,10349,10352,10355,10358,10361,10364,10367,10370,10373,10376,10379,10382,10385]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var start = Date.now();

  _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  _$$_REQUIRE(_dependencyMap[2]);

  _$$_REQUIRE(_dependencyMap[3]);

  _$$_REQUIRE(_dependencyMap[4]);

  _$$_REQUIRE(_dependencyMap[5]);

  _$$_REQUIRE(_dependencyMap[6]);

  _$$_REQUIRE(_dependencyMap[7]);

  _$$_REQUIRE(_dependencyMap[8]);

  _$$_REQUIRE(_dependencyMap[9]);

  _$$_REQUIRE(_dependencyMap[10]);

  var GlobalPerformanceLogger = _$$_REQUIRE(_dependencyMap[11]);

  GlobalPerformanceLogger.markPoint('initializeCore_start', GlobalPerformanceLogger.currentTimestamp() - (Date.now() - start));
  GlobalPerformanceLogger.markPoint('initializeCore_end');
},10120,[14449,14452,14455,14470,14479,14485,14500,14524,14533,14536,14560,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "04bee2d389ff89e45df20f85f42f247f",
    "name": "license_en_normal",
    "type": "html"
  });
},10121,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "81460748532c3a2cfc526aa163bb40c1",
    "name": "privacy_en_normal",
    "type": "html"
  });
},10124,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "06a00f47285e196fb763becb676211d4",
    "name": "license_en_gdpr",
    "type": "html"
  });
},10127,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "fc18d3ca783dec415f2d719473001992",
    "name": "privacy_en_gdpr",
    "type": "html"
  });
},10130,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "7f11d63745b6c845c9bd67162d9d04ca",
    "name": "license_zh",
    "type": "html"
  });
},10133,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "3102029f26149696d4576e26c461654b",
    "name": "privacy_zh",
    "type": "html"
  });
},10136,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "1ebce08b6a6c49cd6ff8f9e687dfea46",
    "name": "license_en",
    "type": "html"
  });
},10139,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "0cb1df0c54cba846a49d20e4872602c6",
    "name": "privacy_en",
    "type": "html"
  });
},10142,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "3eaedae4271d77788931e06cc9a23e18",
    "name": "license_fr_gdpr",
    "type": "html"
  });
},10145,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "49a5a68d222ba03af2aefa1e323b6d7d",
    "name": "privacy_fr_gdpr",
    "type": "html"
  });
},10148,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "6c86c7f38618d5f68ad35288c5ee9f44",
    "name": "license_ar",
    "type": "html"
  });
},10151,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "39b765a91ee284cacf4a52442f93e9c9",
    "name": "privacy_ar",
    "type": "html"
  });
},10154,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_be",
    "type": "html"
  });
},10157,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_be",
    "type": "html"
  });
},10160,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_bg",
    "type": "html"
  });
},10163,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_bg",
    "type": "html"
  });
},10166,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_cs",
    "type": "html"
  });
},10169,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_cs",
    "type": "html"
  });
},10172,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "ff92c53f3c9eb1db7ca3f12dbfa4b262",
    "name": "license_de",
    "type": "html"
  });
},10175,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "0429f2bfb10cdd504ff9e94364abf45d",
    "name": "privacy_de",
    "type": "html"
  });
},10178,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_el",
    "type": "html"
  });
},10181,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_el",
    "type": "html"
  });
},10184,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "9e9805807bf81dc24da7a3aa111fbcc4",
    "name": "license_es",
    "type": "html"
  });
},10187,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "650e0195d77ea94f34d324f9990a43eb",
    "name": "privacy_es",
    "type": "html"
  });
},10190,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_es_LA",
    "type": "html"
  });
},10193,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_es_LA",
    "type": "html"
  });
},10196,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_et",
    "type": "html"
  });
},10199,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_et",
    "type": "html"
  });
},10202,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_fr",
    "type": "html"
  });
},10205,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_fr",
    "type": "html"
  });
},10208,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_he",
    "type": "html"
  });
},10211,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_he",
    "type": "html"
  });
},10214,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_hr",
    "type": "html"
  });
},10217,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_hr",
    "type": "html"
  });
},10220,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_hu",
    "type": "html"
  });
},10223,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_hu",
    "type": "html"
  });
},10226,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_id",
    "type": "html"
  });
},10229,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_id",
    "type": "html"
  });
},10232,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_it",
    "type": "html"
  });
},10235,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_it",
    "type": "html"
  });
},10238,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "8226e9f11bf13d2b5d3a980c9bde4419",
    "name": "license_ko",
    "type": "html"
  });
},10241,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "a2a48ebcde87e23a73ecb940649b2611",
    "name": "privacy_ko",
    "type": "html"
  });
},10244,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_lt",
    "type": "html"
  });
},10247,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_lt",
    "type": "html"
  });
},10250,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_lv",
    "type": "html"
  });
},10253,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_lv",
    "type": "html"
  });
},10256,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_ms",
    "type": "html"
  });
},10259,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_ms",
    "type": "html"
  });
},10262,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_my",
    "type": "html"
  });
},10265,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_my",
    "type": "html"
  });
},10268,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_nl",
    "type": "html"
  });
},10271,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_nl",
    "type": "html"
  });
},10274,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "f37f122a13a68abdf034f079b3e8d51a",
    "name": "license_pl",
    "type": "html"
  });
},10277,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "de7f08575fb9b38cf04d54648bc97a23",
    "name": "privacy_pl",
    "type": "html"
  });
},10280,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_pt",
    "type": "html"
  });
},10283,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_pt",
    "type": "html"
  });
},10286,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_pt_BR",
    "type": "html"
  });
},10289,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_pt_BR",
    "type": "html"
  });
},10292,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_ro",
    "type": "html"
  });
},10295,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "227e9cbfaf369632ec9a624c5841ae2e",
    "name": "privacy_ru",
    "type": "html"
  });
},10298,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "ab19dcc040c347d7f3da69824efe1c93",
    "name": "license_ru",
    "type": "html"
  });
},10301,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_sk",
    "type": "html"
  });
},10304,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_sk",
    "type": "html"
  });
},10307,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_sl",
    "type": "html"
  });
},10310,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_sl",
    "type": "html"
  });
},10313,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_th",
    "type": "html"
  });
},10316,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_th",
    "type": "html"
  });
},10319,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "b286a708695f0ae0b8416d2dcb885a14",
    "name": "license_tr",
    "type": "html"
  });
},10322,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "a1fb5a5ba06476f361af8e839ccdba03",
    "name": "privacy_tr",
    "type": "html"
  });
},10325,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_uk",
    "type": "html"
  });
},10328,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_uk",
    "type": "html"
  });
},10331,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_vi",
    "type": "html"
  });
},10334,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_vi",
    "type": "html"
  });
},10337,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "7d1fa272836aa06dc10e32644ca4835e",
    "name": "license_kr",
    "type": "html"
  });
},10340,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "33016a2a63d82f868224a666fcb6e722",
    "name": "privacy_kr",
    "type": "html"
  });
},10343,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_il",
    "type": "html"
  });
},10346,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_il",
    "type": "html"
  });
},10349,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_lu",
    "type": "html"
  });
},10352,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_lu",
    "type": "html"
  });
},10355,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_nl_fr_de",
    "type": "html"
  });
},10358,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_nl_fr_de",
    "type": "html"
  });
},10361,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "license_ch",
    "type": "html"
  });
},10364,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "d41d8cd98f00b204e9800998ecf8427e",
    "name": "privacy_ch",
    "type": "html"
  });
},10367,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "6897c001b37bf867d435ab0f1c7fc206",
    "name": "license_us",
    "type": "html"
  });
},10370,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "842a24ee8da5158478c5d91650ef4307",
    "name": "privacy_us",
    "type": "html"
  });
},10373,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "399026eb08b1092e0405c8f69caf61dc",
    "name": "license_spanus",
    "type": "html"
  });
},10376,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "f88920caa89572f7429b8375ffc18589",
    "name": "privacy_spanus",
    "type": "html"
  });
},10379,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "ea6e842a1e08dbf5444f2e73b0a856c0",
    "name": "license_jp",
    "type": "html"
  });
},10382,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/raw",
    "scales": [1],
    "hash": "142b249a0b2e5b88bf8439b7bbddd023",
    "name": "privacy_jp",
    "type": "html"
  });
},10385,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _protocal = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var PushDelegate = function PushDelegate() {
    var _this = this;

    (0, _classCallCheck2.default)(this, PushDelegate);

    this._getPushArr = function (propKeys, eventKeys) {
      var _protocal$prop = _protocal.default.prop,
          prop = _protocal$prop === undefined ? {} : _protocal$prop,
          _protocal$event = _protocal.default.event,
          event = _protocal$event === undefined ? {} : _protocal$event;
      var specProps = propKeys.reduce(function (result, key) {
        var _prop$key = prop[key],
            push = _prop$key.push,
            siid = _prop$key.siid,
            piid = _prop$key.piid;

        if (push !== false && siid && piid) {
          result.push("prop." + siid + "." + piid);
        }

        return result;
      }, []);
      var specEvents = eventKeys.reduce(function (result, key) {
        var _event$key = event[key],
            push = _event$key.push,
            siid = _event$key.siid,
            eiid = _event$key.eiid;

        if (push !== false && siid && eiid) {
          result.push("event." + siid + "." + eiid);
        }

        return result;
      }, []);
      var pushArr = specProps.concat(specEvents);
      return pushArr;
    };

    this.register = function (pushHandler, pushNames) {
      var _Device$getDeviceWifi;

      if (_this.msgSubscription) {
        return;
      }

      var _protocal$prop2 = _protocal.default.prop,
          prop = _protocal$prop2 === undefined ? {} : _protocal$prop2,
          _protocal$event2 = _protocal.default.event,
          event = _protocal$event2 === undefined ? {} : _protocal$event2;
      var propKeys = Object.keys(prop);
      var eventKeys = Object.keys(event);

      if (pushNames) {
        var _pushNames$props = pushNames.props,
            props = _pushNames$props === undefined ? [] : _pushNames$props,
            _pushNames$events = pushNames.events,
            events = _pushNames$events === undefined ? [] : _pushNames$events;
        propKeys = props;
        eventKeys = events;
      }

      _this.propNames = propKeys;
      _this.eventNames = eventKeys;
      _this.msgSubscription = null;

      var pushArr = _this._getPushArr(propKeys, eventKeys);

      _logger.default.info("subscribeMessages, push: " + pushArr);

      if (!pushArr || pushArr.length <= 0) {
        _logger.default.info("no push can register return");

        return;
      }

      _this._deviceStateListener = _miot.DeviceEvent.deviceReceivedMessages.addListener(function (device, messages, res) {
        if (pushHandler) {
          var pushMsg = _this._handlePush(res);

          pushHandler(pushMsg);
        }
      });

      (_Device$getDeviceWifi = _miot.Device.getDeviceWifi()).subscribeMessages.apply(_Device$getDeviceWifi, (0, _toConsumableArray2.default)(pushArr)).then(function (subscription) {
        _logger.default.info("subscribeMessages success, " + JSON.stringify(pushArr));

        _this.msgSubscription = subscription;
      }).catch(function (err) {
        _logger.default.warn("subscribeMessages fail, " + JSON.stringify(pushArr) + " err:" + JSON.stringify(err));
      });
    };

    this._handlePush = function (message) {
      var pushMsg = {
        event: {},
        prop: {}
      };
      pushMsg = message.reduce(function (result, msg) {
        var key = msg.key,
            value = msg.value,
            time = msg.time;

        if (!key) {
          return result;
        }

        var ids = key.split('.');

        if (!ids || ids.length < 3) {
          return result;
        }

        var isProp = key.indexOf('event') !== 0;
        var prefix = ids[0];
        var siid = ids[1];
        var iid = ids[2];
        var name = _protocal.default[prefix][siid + "." + iid];

        if (!name) {
          return result;
        }

        if (isProp) {
          result.prop[name] = {
            value: value[0],
            time: time
          };
        } else {
          result.event[name] = {
            value: value[0],
            time: time
          };
        }

        return result;
      }, pushMsg);
      var filterMsg = {
        prop: {},
        event: {}
      };

      var _ref = pushMsg || {},
          _ref$event = _ref.event,
          event = _ref$event === undefined ? {} : _ref$event,
          _ref$prop = _ref.prop,
          prop = _ref$prop === undefined ? {} : _ref$prop;

      _this.propNames.forEach(function (propName) {
        if (prop[propName] !== undefined) {
          filterMsg.prop[propName] = prop[propName];
        }
      });

      _this.eventNames.forEach(function (eventName) {
        if (event[eventName] !== undefined) {
          filterMsg.event[eventName] = event[eventName];
        }
      });

      _logger.default.info("handle push message result\n " + JSON.stringify(pushMsg));

      return filterMsg;
    };

    this.unregister = function () {
      if (_this._deviceStateListener) {
        _this._deviceStateListener.remove();

        _this._deviceStateListener = null;
      }

      if (_this.msgSubscription) {
        _this.msgSubscription.remove();

        _this.msgSubscription = null;
      }

      return {
        props: _this.propNames,
        events: _this.eventNames
      };
    };

    this._deviceStateListener = null;
    this.msgSubscription = null;
    this.propNames = [];
    this.eventNames = [];
  };

  exports.default = PushDelegate;
},10388,[14305,14359,14320,10074,10094,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[1]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var Colors = _Consts.default.Colors;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var _default = {
    init: function init() {
      _reactNativeUiKitten.RkTheme.setType('RkButton', 'normal', {
        container: {
          backgroundColor: '#F5F5F5',
          borderRadius: 21,
          width: width - 48,
          height: 42
        },
        content: {
          color: '#4C4C4C',
          fontSize: 13,
          fontFamily: 'System'
        }
      });

      _reactNativeUiKitten.RkTheme.setType('RkButton', 'major', {
        container: {
          backgroundColor: Colors.mainColor,
          borderRadius: 21,
          width: width - 48,
          height: 42
        },
        content: {
          color: '#FFFFFF',
          fontSize: 13,
          fontFamily: 'System'
        }
      });

      _reactNativeUiKitten.RkTheme.setType('RkButton', 'delete', {
        container: {
          backgroundColor: '#FFFFFF',
          borderRadius: 21,
          width: width - 48,
          height: 42
        },
        content: {
          color: '#F43F31',
          fontSize: 13,
          fontFamily: 'System'
        }
      });
    }
  };
  exports.default = _default;
},10391,[14305,11251,10033,10064]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _miot = _$$_REQUIRE(_dependencyMap[3]);

  var _protocal = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  function localMethod(method, args) {
    return _regenerator.default.async(function localMethod$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _logger.default.log("local method: " + method + ", " + JSON.stringify(args));

            return _context.abrupt("return", _miot.Device.getDeviceWifi().callMethodFromLocal(method, args).then(function (res) {
              _logger.default.info("call local method success, args: " + JSON.stringify(args) + ", result: " + JSON.stringify(res));

              return res;
            }).catch(function (err) {
              _logger.default.info("call local method falied, args: " + JSON.stringify(args) + ", result: " + JSON.stringify(err));

              return false;
            }));

          case 2:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  function localAction(name, value) {
    var params, v;
    return _regenerator.default.async(function localAction$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            params = _protocal.default.action[name];

            if (params) {
              _context2.next = 4;
              break;
            }

            _logger.default.log("local action " + name + " not exist");

            return _context2.abrupt("return", false);

          case 4:
            v = Array.isArray(value) ? value : [value];
            return _context2.abrupt("return", localMethod('action', (0, _objectSpread2.default)({
              did: _miot.Device.DeviceID
            }, params, {
              in: v
            })).then(function (res) {
              var _ref = res || {},
                  _ref$result = _ref.result;

              _ref$result = _ref$result === undefined ? {} : _ref$result;
              var code = _ref$result.code;
              return +code === 0;
            }).catch(function () {
              return false;
            }));

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    });
  }

  var _default = {
    localAction: localAction
  };
  exports.default = _default;
},10394,[14305,14314,14674,10074,10094,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var MIN_PAGE_SIZE = 100;
  var EXPIRE = 2505600;

  function loadCleanList() {
    var now, end, end0, p;
    return _regenerator.default.async(function loadCleanList$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            now = Math.ceil(Date.now() / 1000);
            end = now - EXPIRE;
            end0 = new Date(end * 1000);
            end0.setHours(0, 0, 1);
            end = Math.ceil(end0.getTime() / 1000);
            p = {
              did: _miot.Device.deviceID,
              uid: _miot.Service.account.ID,
              type: 'event',
              key: 'cleanFinish',
              time_start: end,
              time_end: now,
              limit: 500
            };
            return _context.abrupt("return", _miot.Service.callSmartHomeAPI('/user/get_user_device_data', p).then(function (res) {
              _logger.default.info("load clean list success: " + JSON.stringify(res));

              return res;
            }).catch(function (err) {
              _logger.default.warn("load clean list fail: " + JSON.stringify(err));

              return Promise.reject(err);
            }));

          case 7:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  function loadMapList() {
    var now, end, p;
    return _regenerator.default.async(function loadMapList$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            now = Math.ceil(Date.now() / 1000);
            end = now - EXPIRE;
            p = {
              did: _miot.Device.deviceID,
              uid: _miot.Service.account.ID,
              type: 'event',
              key: 'bakmap',
              time_start: end,
              time_end: now,
              limit: 10
            };
            return _context2.abrupt("return", _miot.Service.smarthome.getDeviceData(p).then(function (res) {
              _logger.default.info("load map list success: " + JSON.stringify(res));

              return res;
            }).catch(function (err) {
              _logger.default.warn("load map list fail: " + JSON.stringify(err));

              return Promise.reject(err);
            }));

          case 4:
          case "end":
            return _context2.stop();
        }
      }
    });
  }

  var _default = {
    loadCleanList: loadCleanList,
    loadMapList: loadMapList
  };
  exports.default = _default;
},10397,[14305,14674,10074,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var HomeHeadInfo = function (_React$Component) {
    (0, _inherits2.default)(HomeHeadInfo, _React$Component);

    function HomeHeadInfo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HomeHeadInfo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HomeHeadInfo).call(this, props));

      _this._handleLayout = function (event) {
        var width = event.nativeEvent.layout.width;

        _this.setState({
          left: width
        }, function () {
          setTimeout(function () {
            _this.setState({
              visible: true
            });
          }, 400);
        });
      };

      _this.state = {
        left: 0,
        visible: false
      };
      return _this;
    }

    (0, _createClass2.default)(HomeHeadInfo, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.setState = function () {};
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            _this$props$title = _this$props.title,
            title = _this$props$title === undefined ? '--' : _this$props$title,
            sup = _this$props.sup,
            desc = _this$props.desc,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["title", "sup", "desc"]);
        var left = this.state.left;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.itemContainer]
        }, other), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer,
          onLayout: this._handleLayout
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.headTitle
        }, title, _react.default.createElement(_reactNative.Text, {
          style: styles.sup
        }, sup))), _react.default.createElement(_reactNative.Text, {
          style: styles.headDesc
        }, desc)));
      }
    }]);
    return HomeHeadInfo;
  }(_react.default.Component);

  exports.default = HomeHeadInfo;
  HomeHeadInfo.propTypes = {
    title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    sup: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    desc: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
  };

  var styles = _reactNative.StyleSheet.create({
    itemContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    titleContainer: {
      flexDirection: 'row',
      alignItems: 'flex-start',
      marginLeft: 5
    },
    headTitle: {
      fontSize: 16,
      color: 'rgba(0, 0, 0, 0.8)',
      textAlign: 'center',
      alignSelf: 'center',
      fontFamily: 'Kmedium'
    },
    sup: {
      fontSize: 10,
      color: 'rgba(0, 0, 0, 0.6)',
      paddingLeft: 5
    },
    headDesc: {
      fontSize: 12,
      color: 'rgba(0, 0, 0, 0.6)',
      textAlign: 'center',
      alignSelf: 'center'
    }
  });
},10400,[14305,14344,14407,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _HandlerOnceTap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _api = _$$_REQUIRE(_dependencyMap[13]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ModeView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _UserApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _StatusConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _SweepModeConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var PROP = _Consts.default.PROP,
      ACTION = _Consts.default.ACTION,
      Colors = _Consts.default.Colors;
  var DIALOG_TIPS = {
    0: _localString.default.finish_clean_to_sweep,
    1: _localString.default.finish_clean_to_mop,
    2: _localString.default.finish_clean_to_sweep_mop,
    3: _localString.default.finish_clean_to_recharge
  };
  var WATER = {
    1: _localString.default.standard,
    2: _localString.default.middle,
    3: _localString.default.strong
  };
  var CLEAN_TYPE = {
    0: _localString.default.sweep,
    1: _localString.default.mop,
    2: _localString.default.sweep_mop
  };
  var FAULT = {
    1: {
      title: _localString.default.err_low_battery_charge
    },
    2: {
      title: _localString.default.err_load_battery_shut_down
    },
    3: {
      title: _localString.default.err_main_wheel,
      desc: _localString.default.err_wheel
    },
    4: {
      title: _localString.default.err_side_wheel,
      desc: _localString.default.err_side_wheel_desc
    },
    5: {
      title: _localString.default.err_incline,
      desc: _localString.default.err_incline_desc
    },
    6: {
      title: _localString.default.err_radar_top,
      desc: _localString.default.err_radar_top_desc
    },
    7: {
      title: _localString.default.err_bumper,
      desc: _localString.default.err_bumper_desc
    },
    8: {
      title: _localString.default.err_wall_sensor
    },
    9: {
      title: _localString.default.err_main_brush,
      desc: _localString.default.err_roller_brush
    },
    10: {
      title: _localString.default.err_side_brush,
      desc: _localString.default.err_brush
    },
    11: {
      title: _localString.default.err_fan
    },
    12: {
      title: _localString.default.err_radar_cover,
      desc: _localString.default.err_radar_cover_desc
    },
    13: {
      title: _localString.default.err_dust_box
    },
    14: {
      title: _localString.default.err_no_dust
    },
    15: {
      title: _localString.default.err_no_dust
    },
    16: {
      title: _localString.default.err_device_trapped
    },
    17: {
      title: _localString.default.err_start_incline,
      desc: _localString.default.err_start_incline_desc
    },
    18: {
      title: _localString.default.err_no_water_box
    },
    19: {
      title: _localString.default.err_no_water
    },
    20: {
      title: _localString.default.err_area_not_arrival
    },
    21: {
      title: _localString.default.err_restricted,
      desc: _localString.default.err_restricted_desc
    },
    22: {
      title: _localString.default.err_cliff,
      desc: _localString.default.err_cliff_desc
    },
    23: {
      title: _localString.default.err_water_pump
    },
    24: {
      title: _localString.default.err_charge
    },
    25: {
      title: _localString.default.err_water_pump
    },
    27: {
      title: _localString.default.err_radar,
      desc: _localString.default.err_radar_desc
    },
    28: {
      title: _localString.default.err_backcharge,
      desc: _localString.default.err_backcharge_desc1
    },
    29: {
      title: _localString.default.err_backcharge,
      desc: _localString.default.err_backcharge_desc2
    }
  };
  var EVENT = {
    enterSilentMode: {
      title: _localString.default.event_no_disturb,
      desc: _localString.default.event_no_disturb_desc
    },
    lowPowerToClean: {
      title: _localString.default.err_low_battery_disable_sweep
    },
    dustNoFan: {
      title: _localString.default.err_dust_fan
    },
    dustNoBag: {
      title: _localString.default.err_no_dust_package
    },
    removeMop: {
      title: _localString.default.RemoveMop_rack
    }
  };

  var CleanControl = function (_BaseComponent) {
    (0, _inherits2.default)(CleanControl, _BaseComponent);

    function CleanControl(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CleanControl);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CleanControl).call(this, props));

      _this._saveLastEvent = function () {
        var faultKey = _UserApi.default.getCacheKey('lastFault', false);

        var eventKey = _UserApi.default.getCacheKey('lastEvent', false);

        var data = {};
        data[faultKey] = _this.lastFault || 0;
        data[eventKey] = _this.lastEvent || null;

        _logger.default.info("save fault data, " + JSON.stringify(data));

        _Host.default.storage.save(data);
      };

      _this._getCleanStr = function (status) {
        var _this$props = _this.props,
            _this$props$sweepMode = _this$props.sweepMode,
            sweepMode = _this$props$sweepMode === undefined ? 0 : _this$props$sweepMode,
            cleanType = _this$props.cleanType;
        cleanType(status);

        switch (status) {
          case _StatusConsts.default.SWEEP:
            return _localString.default.pause_clean;

          case _StatusConsts.default.PAUSE:
            return _localString.default.continue_clean;

          case _StatusConsts.default.FAULT:
            if (sweepMode) {
              return _localString.default.continue_clean;
            }

            return _localString.default.start_clean;

          case _StatusConsts.default.BACK_CHARGE:
            if (sweepMode > 0) {
              return _localString.default.continue_clean;
            }

          default:
            return _localString.default.start_clean;
        }
      };

      _this._getRechargeStr = function (status) {
        var str;

        switch (status) {
          case _StatusConsts.default.PAUSE_BACK_CHARGE:
            str = _localString.default.continue_find_charge;
            break;

          case _StatusConsts.default.FULL:
            str = _localString.default.full_charge;
            break;

          case _StatusConsts.default.BACK_CHARGE:
            str = _localString.default.stop_charge;
            break;

          case _StatusConsts.default.CHARGE:
            str = _localString.default.charging_btn;
            break;

          case _StatusConsts.default.PAUSE_BACK_CHARGE:
            str = _localString.default.charge;
            break;

          default:
            str = _localString.default.charge;
            break;
        }

        return str;
      };

      _this._controlCharge = function (status) {
        switch (status) {
          case _StatusConsts.default.PAUSE:
          case _StatusConsts.default.SWEEP:
            _this.debounce(function () {
              return _api.SpecApi.specActionSyncProp(ACTION.START_CHARGE, [], false, PROP.STATUS, _StatusConsts.default.BACK_CHARGE).then(function (success) {
                if (success) {
                  var onPropChange = _this.props.onPropChange;
                  onPropChange({
                    status: _StatusConsts.default.BACK_CHARGE
                  });
                } else {
                  _this.showResult(false);
                }
              });
            });

            break;

          case _StatusConsts.default.PAUSE_BACK_CHARGE:
            _api.SpecApi.specA(ACTION.CONTINUE_FIND_CHARGE).then(function (success) {
              if (success) {
                var onPropChange = _this.props.onPropChange;
                onPropChange({
                  status: _StatusConsts.default.BACK_CHARGE
                });
              } else {
                _this.showResult(false);
              }
            });

            break;

          case _StatusConsts.default.BACK_CHARGE:
            _api.SpecApi.specA(ACTION.PAUSE_FIND_CHARGE).then(function (success) {
              if (success) {
                var onPropChange = _this.props.onPropChange;
                onPropChange({
                  status: _StatusConsts.default.PAUSE_BACK_CHARGE
                });
              } else {
                _this.showResult(false);
              }
            });

            break;

          case _StatusConsts.default.CHARGE:
          case _StatusConsts.default.FULL:
            break;

          default:
            _this.debounce(function () {
              return _api.SpecApi.specActionSyncProp(ACTION.START_CHARGE, [], false, PROP.STATUS, _StatusConsts.default.BACK_CHARGE).then(function (success) {
                if (success) {
                  var onPropChange = _this.props.onPropChange;
                  onPropChange({
                    status: _StatusConsts.default.BACK_CHARGE
                  });
                } else {
                  _this.showResult(false);
                }
              });
            });

            break;
        }
      };

      _this._controlClean = function () {
        var _this$props2 = _this.props,
            status = _this$props2.status,
            onPropChange = _this$props2.onPropChange,
            sweepMode = _this$props2.sweepMode;

        if (status === _StatusConsts.default.SWEEP) {
          return _api.SpecApi.specA(ACTION.PAUSE).then(function (success) {
            if (success) {
              onPropChange({
                status: _StatusConsts.default.PAUSE
              });
            }

            _this.showResult(success);
          });
        } else if (status === _StatusConsts.default.PAUSE || (status === _StatusConsts.default.FAULT || status === _StatusConsts.default.BACK_CHARGE) && sweepMode) {
          return _api.SpecApi.specA(ACTION.CONTINUE_SWEEP).then(function (success) {
            if (success) {
              onPropChange({
                status: _StatusConsts.default.SWEEP
              });
            }

            _this.showResult(success);
          });
        } else {
          var _sweepMode;

          var titleSweepMode;
          var value;

          if (_this.props.isSpot && _this.props.getSpot() == '{}') {
            _UIUtils.default.info(_localString.default.clickTo_clean);

            return;
          }

          if (_this.props.getZone() != '[]') {
            value = _this.props.getZone();
            _sweepMode = _SweepModeConsts.default.AREA_CLEAN;
            titleSweepMode = 2;
          } else if (_this.props.getSpot() != '{}') {
            value = _this.props.getSpot();
            _sweepMode = _SweepModeConsts.default.SPOT_CLEAN;
            titleSweepMode = 4;
          } else if (_this.props.getAreaClean() != '') {
            value = _this.props.getAreaClean();
            _sweepMode = _SweepModeConsts.default.AREA_CLEAN;
            titleSweepMode = 8;
          } else {
            _sweepMode = _SweepModeConsts.default.ALL_CLEAN;
            titleSweepMode = 1;
            value = '';
          }

          _this.debounce(function () {
            return _api.SpecApi.specActionSyncProp(ACTION.START_SWEEP, [_sweepMode, value], false, PROP.STATUS, _StatusConsts.default.SWEEP).then(function (success) {
              if (success) {
                _reactNative.DeviceEventEmitter.emit('isShowAdd', false);

                _this.props.closeView();

                _this.setState({
                  bottomNavIndex: null
                });

                onPropChange({
                  status: _StatusConsts.default.SWEEP,
                  sweepMode: titleSweepMode
                });
              } else {
                if (status !== _StatusConsts.default.FAULT) {
                  _this.showResult(false);
                }
              }
            });
          });
        }
      };

      _this.showResult = function (success) {
        if (!success) {
          _UIUtils.default.info(_localString.default.ctrl_fail);
        }
      };

      _this._renderWarn = function () {
        var fault = _this.state.fault;
        var event = _this.props.event;
        var showFault = +fault !== 0 && FAULT[fault];
        var showEvent = event && EVENT[event];
        var showWarn = showEvent || showFault;
        var warnInfo = showEvent ? EVENT[event] : FAULT[fault];

        var _ref = warnInfo || {},
            _ref$title = _ref.title,
            title = _ref$title === undefined ? '' : _ref$title,
            _ref$desc = _ref.desc,
            desc = _ref$desc === undefined ? null : _ref$desc;

        return showWarn ? _react.default.createElement(_reactNative.View, {
          style: styles.warn_container
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.warn_icon,
          source: _$$_REQUIRE(_dependencyMap[22])
        }), _react.default.createElement(_reactNative.View, {
          style: styles.warn_content
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: 2,
          style: styles.warn_title
        }, title), desc ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 2,
          style: styles.warn_desc
        }, desc) : null), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            if (showEvent) {
              _this.lastEvent = event;
              var onCloseEvent = _this.props.onCloseEvent;

              if (onCloseEvent) {
                onCloseEvent(event);
              }
            } else {
              _this.setState({
                fault: 0
              });
            }
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.warn_close
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[23])
        })))) : null;
      };

      _this._renderFanModel = function (sweepType) {
        var _this$props$fanLevel = _this.props.fanLevel,
            fanLevel = _this$props$fanLevel === undefined ? 1 : _this$props$fanLevel;

        if (sweepType != 1) {
          return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_Separator.default, {
            style: {
              marginHorizontal: 20
            }
          }), _react.default.createElement(_reactNative.View, {
            style: styles.modeFanBody
          }, _react.default.createElement(_ModeView.default, {
            selectedIcon: _$$_REQUIRE(_dependencyMap[24]),
            unSelectedIcon: _$$_REQUIRE(_dependencyMap[25]),
            value: fanLevel == 1 ? true : false,
            backgroundColor: '#5696FF',
            textColor: "#5696FF",
            text: _localString.default.silent,
            onPress: function onPress() {
              _this._changeFanLevel(1);
            }
          }), _react.default.createElement(_ModeView.default, {
            selectedIcon: _$$_REQUIRE(_dependencyMap[26]),
            unSelectedIcon: _$$_REQUIRE(_dependencyMap[27]),
            value: fanLevel == 2 ? true : false,
            text: _localString.default.standard,
            backgroundColor: '#5696FF',
            textColor: "#5696FF",
            onPress: function onPress() {
              _this._changeFanLevel(2);
            }
          }), _react.default.createElement(_ModeView.default, {
            selectedIcon: _$$_REQUIRE(_dependencyMap[28]),
            unSelectedIcon: _$$_REQUIRE(_dependencyMap[29]),
            value: fanLevel == 3 ? true : false,
            text: _localString.default.middle,
            backgroundColor: '#5696FF',
            textColor: "#5696FF",
            onPress: function onPress() {
              _this._changeFanLevel(3);
            }
          }), _react.default.createElement(_ModeView.default, {
            selectedIcon: _$$_REQUIRE(_dependencyMap[30]),
            unSelectedIcon: _$$_REQUIRE(_dependencyMap[31]),
            value: fanLevel == 4 ? true : false,
            backgroundColor: '#5696FF',
            textColor: "#5696FF",
            text: _localString.default.strong,
            onPress: function onPress() {
              _this._changeFanLevel(4);
            }
          })));
        }

        return null;
      };

      _this._changeFanLevel = function (level) {
        _this.debounce(function () {
          return _api.SpecApi.specS(PROP.FAN_LEVEL, level).then(function (success) {
            if (success) {
              var onPropChange = _this.props.onPropChange;
              onPropChange({
                fanLevel: level
              });
            } else {
              _this.showResult(success);
            }
          });
        });
      };

      _this._changeWaterLevel = function (level) {
        _this.debounce(function () {
          return _api.SpecApi.specS(PROP.WATER_LEVEL, level).then(function (success) {
            if (success) {
              var onPropChange = _this.props.onPropChange;
              onPropChange({
                waterLevel: level
              });
            } else {
              _this.showResult(success);
            }
          });
        });
      };

      _this._changeCleanMode = function (value) {
        var _this$props$sweepType = _this.props.sweepType,
            sweepType = _this$props$sweepType === undefined ? 0 : _this$props$sweepType;

        if (value === sweepType) {
          return;
        }

        _this.debounce(function () {
          var _this$props3 = _this.props,
              status = _this$props3.status,
              onPropChange = _this$props3.onPropChange;
          _this.curCleanMode = value;

          if (status == _StatusConsts.default.PAUSE || status == _StatusConsts.default.SWEEP) {
            _this.setState({
              tipsIndex: value,
              dialogVisiable: true
            });

            return Promise.resolve(0);
          } else {
            return _api.SpecApi.specS(PROP.SWEEP_TYPE, value).then(function (success) {
              if (success) {
                if (status === _StatusConsts.default.SWEEP || status === _StatusConsts.default.PAUSE) {
                  onPropChange({
                    status: _StatusConsts.default.IDLE,
                    sweepType: value
                  });
                } else {
                  onPropChange({
                    sweepType: value
                  });
                }
              } else {
                _this.showResult(success);
              }
            });
          }
        });
      };

      _this._renderCleanModeView = function () {
        var _this$props$sweepType2 = _this.props.sweepType,
            sweepType = _this$props$sweepType2 === undefined ? 2 : _this$props$sweepType2;
        return _react.default.createElement(_reactNative.View, {
          style: styles.modeBody
        }, _react.default.createElement(_ModeView.default, {
          selectedIcon: _$$_REQUIRE(_dependencyMap[32]),
          unSelectedIcon: _$$_REQUIRE(_dependencyMap[33]),
          value: sweepType == 0 ? true : false,
          text: _localString.default.sweep,
          backgroundColor: '#5696FF',
          textColor: "#5696FF",
          onPress: function onPress() {
            _this._changeCleanMode(0);
          }
        }), _react.default.createElement(_ModeView.default, {
          selectedIcon: _$$_REQUIRE(_dependencyMap[34]),
          unSelectedIcon: _$$_REQUIRE(_dependencyMap[35]),
          value: sweepType == 2 ? true : false,
          backgroundColor: '#5696FF',
          textColor: "#5696FF",
          text: _localString.default.sweep_mop,
          onPress: function onPress() {
            _this._changeCleanMode(2);
          }
        }), _react.default.createElement(_ModeView.default, {
          selectedIcon: _$$_REQUIRE(_dependencyMap[36]),
          unSelectedIcon: _$$_REQUIRE(_dependencyMap[37]),
          backgroundColor: '#5696FF',
          textColor: "#5696FF",
          value: sweepType == 1 ? true : false,
          text: _localString.default.mop,
          onPress: function onPress() {
            _this._changeCleanMode(1);
          }
        }));
      };

      _this._returnWaterModeView = function () {
        var _this$props4 = _this.props,
            _this$props4$waterLev = _this$props4.waterLevel,
            waterLevel = _this$props4$waterLev === undefined ? 1 : _this$props4$waterLev,
            _this$props4$sweepTyp = _this$props4.sweepType,
            sweepType = _this$props4$sweepTyp === undefined ? 0 : _this$props4$sweepTyp;
        return _react.default.createElement(_reactNative.View, {
          style: styles.modeBody
        }, _react.default.createElement(_ModeView.default, {
          selectedIcon: _$$_REQUIRE(_dependencyMap[38]),
          unSelectedIcon: _$$_REQUIRE(_dependencyMap[39]),
          disableIcon: _$$_REQUIRE(_dependencyMap[40]),
          backgroundColor: '#5696FF',
          value: waterLevel == 1 ? true : false,
          textColor: "#5696FF",
          text: _localString.default.standard,
          disable: sweepType == 0 ? false : true,
          onPress: function onPress() {
            _this._changeWaterLevel(1);
          }
        }), _react.default.createElement(_ModeView.default, {
          selectedIcon: _$$_REQUIRE(_dependencyMap[41]),
          unSelectedIcon: _$$_REQUIRE(_dependencyMap[42]),
          disableIcon: _$$_REQUIRE(_dependencyMap[43]),
          value: waterLevel == 2 ? true : false,
          backgroundColor: '#5696FF',
          text: _localString.default.middle,
          textColor: "#5696FF",
          disable: sweepType == 0 ? false : true,
          onPress: function onPress() {
            _this._changeWaterLevel(2);
          }
        }), _react.default.createElement(_ModeView.default, {
          selectedIcon: _$$_REQUIRE(_dependencyMap[44]),
          unSelectedIcon: _$$_REQUIRE(_dependencyMap[45]),
          disableIcon: _$$_REQUIRE(_dependencyMap[46]),
          value: waterLevel == 3 ? true : false,
          text: _localString.default.strong,
          backgroundColor: '#5696FF',
          textColor: "#5696FF",
          disable: sweepType == 0 ? false : true,
          onPress: function onPress() {
            _this._changeWaterLevel(3);
          }
        }));
      };

      _this._stopClean = function (value) {
        var onPropChange = _this.props.onPropChange;

        _this.debounce(function () {
          if (value == _StatusConsts.default.PAUSE) {
            return _api.SpecApi.specA(ACTION.START_CHARGE).then(function (success) {
              if (success) {
                onPropChange({
                  status: _StatusConsts.default.BACK_CHARGE
                });
              } else {
                _this.showResult(success);
              }
            });
          } else {
            return _api.SpecApi.specS(PROP.SWEEP_TYPE, value).then(function (success) {
              if (success) {
                onPropChange({
                  sweepType: value,
                  status: _StatusConsts.default.IDLE
                });
              } else {
                _this.showResult(success);
              }
            });
          }
        });
      };

      _this._renderDockStart = function (statusType) {
        var dockColor = _Host.default.isIOS ? '#ffffff' : 'transparent';
        var containerColor = _Host.default.isIOS ? 'transparent' : '#ffffff';
        return _react.default.createElement(_reactNative.View, {
          style: styles.body
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.dock_bg],
          onPress: function onPress() {
            return (0, _HandlerOnceTap.default)(function () {
              var _this$props5 = _this.props,
                  status = _this$props5.status,
                  onPropChange = _this$props5.onPropChange;

              if (status == _StatusConsts.default.PAUSE || status == _StatusConsts.default.SWEEP) {
                _this.setState({
                  isRecharge: true,
                  visible: true,
                  rechargeType: statusType
                });

                return false;
              }

              _reactNative.DeviceEventEmitter.emit('isShowAdd', false);

              _this.setState({
                bottomNavIndex: null
              });

              _this._controlCharge(statusType);
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.equipmentBtnLiChilder, styles.equipmentBtnLiImgBox]
        }, _react.default.createElement(_reactNative.Image, {
          style: [styles.textStyleIcon],
          resizeMode: "contain",
          source: _$$_REQUIRE(_dependencyMap[47])
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.textStyle, styles.equipmentBtnLiChilder, statusType === _StatusConsts.default.BACK_CHARGE ? styles.equipmentBtnActive : '']
        }, _this._getRechargeStr(statusType))), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.dock_bg],
          onPress: function onPress() {
            return (0, _HandlerOnceTap.default)(function () {
              _this._controlClean();
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.equipmentBtnLiChilder, styles.equipmentBtnLiImgBox]
        }, _react.default.createElement(_reactNative.Image, {
          style: [styles.textStyleIcon, styles.equipmentBtnLiChilder, statusType === _StatusConsts.default.SWEEP ? styles.equipmentBtnActive : ''],
          resizeMode: "contain",
          source: statusType === _StatusConsts.default.SWEEP ? _$$_REQUIRE(_dependencyMap[48]) : _$$_REQUIRE(_dependencyMap[49])
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.textStyle, styles.equipmentBtnLiChilder, statusType === _StatusConsts.default.SWEEP ? styles.equipmentBtnActive : '']
        }, _this._getCleanStr(statusType))));
      };

      _this.curCleanMode = 0;
      _this.state = {
        dialogVisiable: false,
        tipsIndex: 0,
        fault: 0,
        bottomNav: [{
          name: _localString.default.zone_clean
        }, {
          name: _localString.default.fix_point_clean
        }, {
          name: _localString.default.area_cleaning
        }],
        fixedPointTitle: null,
        fixedPointNav: [{
          img: _$$_REQUIRE(_dependencyMap[50]),
          title: _localString.default.sweep,
          subtitle: _localString.default.clickTo_clean
        }, {
          img: _$$_REQUIRE(_dependencyMap[51]),
          title: _localString.default.focus_cleaning,
          subtitle: _localString.default.Inplace_execution
        }],
        bottomNavIndex: null,
        visible: false,
        isMode: false,
        isRecharge: false,
        rechargeType: null
      };
      _this.lastFault = 0;
      _this.lastEvent = null;
      return _this;
    }

    (0, _createClass2.default)(CleanControl, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProp) {
        var _nextProp$event = nextProp.event,
            event = _nextProp$event === undefined ? null : _nextProp$event,
            status = nextProp.status,
            fault = nextProp.fault;
        var _this$props6 = this.props,
            oldStatus = _this$props6.status,
            oldFault = _this$props6.fault;

        if (status !== oldStatus) {
          this.oldStatus = oldStatus;
        }

        if (fault !== oldFault) {
          this.setState({
            fault: fault
          });
        }
      }
    }, {
      key: "bottomNavFun",
      value: function bottomNavFun(indedx, name) {
        var _this2 = this;

        if (this.props.onMap) {
          if (indedx == 2) {
            _UIUtils.default.info(_localString.default.noMap_prompt);
          }

          return;
        }

        this.isModeStop();
        this.setState({
          bottomNavIndex: indedx == this.state.bottomNavIndex ? null : indedx,
          fixedPointTitle: indedx == 1 ? name : null
        }, function () {
          if (_this2.state.bottomNavIndex == 2 && !_this2.state.isMode) {
            _reactNative.DeviceEventEmitter.emit('isShowAdd', true);
          } else {
            _reactNative.DeviceEventEmitter.emit('isShowAdd', false);
          }

          if (_this2.state.bottomNavIndex == 1 && !_this2.state.isMode) {
            _this2.setState({
              visible: true
            });
          }

          if (_this2.state.bottomNavIndex == 0) {
            _this2.props.setUpPartArea(true);
          } else {
            _this2.props.setUpPartArea(false);
          }
        });
        this.props.resetZoneView();
      }
    }, {
      key: "isModeStop",
      value: function isModeStop() {
        var _this$props7 = this.props,
            status = _this$props7.status,
            onPropChange = _this$props7.onPropChange;

        if (status == _StatusConsts.default.FAULT || status == _StatusConsts.default.PAUSE || status == _StatusConsts.default.SWEEP || status == _StatusConsts.default.BACK_CHARGE) {
          this.setState({
            isMode: true,
            visible: true
          });
          return false;
        }

        return true;
      }
    }, {
      key: "onDismissNavIndex",
      value: function onDismissNavIndex(index) {
        this.onDismiss();

        if (this.props.setSpot() != '{}' && index == 1) {
          this.props.setSpot();
        }
      }
    }, {
      key: "onDismiss",
      value: function onDismiss() {
        this.setState({
          visible: false,
          isMode: false,
          isRecharge: false,
          bottomNavIndex: null
        });
      }
    }, {
      key: "startPointSweeper",
      value: function startPointSweeper(index) {
        var _this3 = this;

        if (index == 0) {
          if (this.props.setSpot() != '{}') {
            this.props.setSpot();
          }
        } else if (index == 1) {
          var _this$props8 = this.props,
              status = _this$props8.status,
              onPropChange = _this$props8.onPropChange,
              sweepMode = _this$props8.sweepMode;
          this.props.setSpot();
          this.debounce(function () {
            return _api.SpecApi.specActionSyncProp(ACTION.START_SWEEP, [3, ''], false, PROP.STATUS, _StatusConsts.default.SWEEP).then(function (success) {
              if (success) {
                _this3.props.closeView();

                onPropChange({
                  status: _StatusConsts.default.SWEEP,
                  sweepMode: 3
                });
              } else {
                _this3.showResult(false);
              }
            });
          });
        }

        this.setState({
          visible: false
        });
      }
    }, {
      key: "stopSweeping",
      value: function stopSweeping() {
        var _this4 = this;

        _api.SpecApi.specA(ACTION.STOP_SWEEPING).then(function (success) {
          if (success) {
            _this4._stopClean(_this4.curCleanMode);

            _this4.setState({
              bottomNavIndex: null
            });

            _reactNative.DeviceEventEmitter.emit('isShowAdd', false);
          } else {
            _this4.showResult(false);
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var _this$props9 = this.props,
            status = _this$props9.status,
            _this$props9$sweepTyp = _this$props9.sweepType,
            sweepType = _this$props9$sweepTyp === undefined ? 0 : _this$props9$sweepTyp,
            _this$props9$waterLev = _this$props9.waterLevel,
            waterLevel = _this$props9$waterLev === undefined ? 1 : _this$props9$waterLev,
            _this$props9$sweepMod = _this$props9.sweepMode,
            sweepMode = _this$props9$sweepMod === undefined ? 0 : _this$props9$sweepMod;
        var _this$state$tipsIndex = this.state.tipsIndex,
            tipsIndex = _this$state$tipsIndex === undefined ? 0 : _this$state$tipsIndex;
        return _react.default.createElement(_reactNative.View, {
          style: styles.main
        }, _react.default.createElement(_reactNative.View, {
          style: styles.bottomNav
        }, this.state.bottomNav.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: index,
            onPress: function onPress() {
              _this5.bottomNavFun(index, item.name);
            },
            style: styles.bottomNavLi
          }, _react.default.createElement(_reactNative.Text, {
            style: [styles.bottomNavLiTitle, _this5.state.bottomNavIndex == index || sweepMode == 2 && index == 2 || sweepMode == 8 && index == 0 || (sweepMode == 3 || sweepMode == 4) && index == 1 ? styles.bottomNavLiActive : '']
          }, item.name));
        })), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.visible,
          title: this.state.fixedPointTitle,
          showTitle: this.state.fixedPointTitle && !this.state.isMode && !this.state.isRecharge ? true : false,
          showButton: false,
          onDismiss: function onDismiss(_) {
            return _this5.onDismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.fixedPoint
        }, this.state.bottomNavIndex == 1 && !this.state.isMode && !this.state.isRecharge ? _react.default.createElement(_reactNative.View, null, this.state.fixedPointNav.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            onPress: function onPress() {
              _this5.startPointSweeper(index);
            },
            activeOpacity: 0.3,
            style: styles.fixedPointLi,
            key: index
          }, _react.default.createElement(_reactNative.View, {
            style: styles.fixedPointLiImg
          }, _react.default.createElement(_reactNative.Image, {
            source: item.img,
            style: styles.fixedPointLiImgIcon,
            resizeMode: "contain"
          })), _react.default.createElement(_reactNative.View, {
            style: styles.fixedPointLiContent
          }, _react.default.createElement(_reactNative.Text, {
            style: styles.fixedPointLiTitle
          }, item.title), _react.default.createElement(_reactNative.Text, {
            style: styles.fixedPointLiSubtitle
          }, item.subtitle)));
        })) : null, this.state.isMode ? _react.default.createElement(_reactNative.View, {
          style: styles.isModeBox
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModePrompt
        }, _localString.default.sweeper_work), _react.default.createElement(_reactNative.View, {
          style: styles.isModeBtn
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.isModeBtnYex, styles.isModeBtnLi],
          onPress: function onPress() {
            _this5.setState({
              visible: false,
              isMode: false
            });

            _this5.stopSweeping();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModeBtnYesTxt
        }, _localString.default.confirm)), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.isModeBtnNo, styles.isModeBtnLi],
          onPress: function onPress() {
            _this5.onDismiss();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModeBtnNoTxt
        }, _localString.default.cancel)))) : null, this.state.isRecharge ? _react.default.createElement(_reactNative.View, {
          style: styles.isModeBox
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModePrompt
        }, _localString.default.recharge_text), _react.default.createElement(_reactNative.View, {
          style: styles.isModeBtn
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.isModeBtnYex, styles.isModeBtnLi],
          onPress: function onPress() {
            _this5.setState({
              visible: false,
              isRecharge: false
            });

            _reactNative.DeviceEventEmitter.emit('isShowAdd', false);

            _this5.setState({
              bottomNavIndex: null
            });

            _this5._controlCharge(_this5.state.rechargeType);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModeBtnYesTxt
        }, _localString.default.confirm)), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.isModeBtnNo, styles.isModeBtnLi],
          onPress: function onPress() {
            _this5.onDismiss();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModeBtnNoTxt
        }, _localString.default.cancel)))) : null)), this._renderWarn(), this._renderDockStart(status), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.dialogVisiable,
          title: _localString.default.hint,
          message: DIALOG_TIPS[tipsIndex],
          messageStyle: {
            alignSelf: 'center',
            fontFamily: 'System',
            textAlign: 'center'
          },
          onDismiss: function onDismiss() {
            _this5.setState({
              dialogVisiable: false
            });
          },
          canDismiss: true,
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: '#626364'
            },
            callback: function callback() {
              _this5.setState({
                dialogVisiable: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: Colors.mainColor
            },
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            callback: function callback() {
              _this5.setState({
                dialogVisiable: false
              });

              _api.SpecApi.specA(ACTION.STOP_SWEEPING).then(function (success) {
                if (success) {
                  _this5._stopClean(_this5.curCleanMode);
                } else {
                  _this5.showResult(false);
                }
              });
            }
          }]
        }));
      }
    }]);
    return CleanControl;
  }(_BaseComponent2.default);

  exports.default = CleanControl;

  var styles = _reactNative.StyleSheet.create({
    isModeBox: {
      marginTop: 30
    },
    isModeBtnYesTxt: {
      color: '#5C92FF',
      fontSize: 16
    },
    isModeBtnNoTxt: {
      color: '#B6BDCA',
      fontSize: 16
    },
    isModeBtn: {
      marginTop: 20,
      marginBottom: 50
    },
    isModeBtnLi: {
      height: 44,
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 20
    },
    isModeBtnYex: {
      borderRadius: 8,
      backgroundColor: 'rgba(92, 146, 255, 0.1)'
    },
    isModePrompt: {
      fontSize: 16,
      color: '#939AA9',
      textAlign: 'center',
      marginTop: 10
    },
    fixedPoint: {
      paddingHorizontal: 20
    },
    fixedPointLiImg: {
      width: 48,
      height: 48
    },
    fixedPointLiImgIcon: {
      width: '100%',
      height: '100%'
    },
    fixedPointLiContent: {
      flex: 1,
      paddingLeft: 10
    },
    fixedPointLiTitle: {
      fontSize: 18,
      color: '#03211C'
    },
    fixedPointLiSubtitle: {
      fontSize: 14,
      color: '#939AA9'
    },
    fixedPointLi: {
      backgroundColor: '#F3F5F8',
      borderRadius: 12,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      paddingVertical: 25,
      paddingHorizontal: 20,
      marginBottom: 20
    },
    bottomNav: {
      flexDirection: 'row'
    },
    bottomNavLi: {
      flex: 1,
      textAlign: 'center',
      alignItems: 'center',
      paddingVertical: 20
    },
    main: {
      elevation: 3,
      backgroundColor: '#fff',
      width: '100%'
    },
    equipmentBtnLiChilder: {
      flex: 1
    },
    equipmentBtnActive: {
      color: '#5C92FF'
    },
    bottomNavLiActive: {
      borderColor: '#5C92FF',
      color: '#5C92FF'
    },
    bottomNavLiTitle: {
      paddingHorizontal: 7,
      paddingVertical: 2,
      borderRadius: 12,
      borderWidth: 1,
      borderColor: '#fff',
      color: '#626772',
      fontSize: 14
    },
    equipmentBtnLiImgBox: {
      alignItems: 'flex-end',
      paddingRight: 8
    },
    body: {
      width: '100%',
      flexDirection: 'row'
    },
    error_txt_view: {
      marginLeft: 15
    },
    warn_container: {
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#FFFFFF',
      marginHorizontal: 10,
      marginBottom: 10,
      paddingLeft: 24,
      borderRadius: 10,
      elevation: 6,
      shadowOffset: {
        width: 0,
        height: 0
      },
      shadowColor: 'rgba(0,0,0,0.05)',
      shadowOpacity: 1,
      shadowRadius: 5
    },
    warn_icon: {
      width: 35,
      height: 30
    },
    warn_content: {
      flex: 1,
      paddingVertical: 2,
      marginLeft: 8,
      flexDirection: 'column',
      justifyContent: 'center'
    },
    warn_title: {
      color: '#000000',
      fontSize: 15,
      paddingBottom: 2
    },
    warn_desc: {
      color: '#999999',
      paddingTop: 2,
      fontSize: 12
    },
    warn_close: {
      width: 52,
      height: 60,
      alignItems: 'center',
      justifyContent: 'center'
    },
    dock_bg: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      paddingVertical: 14
    },
    textStyle: {
      flex: 1,
      fontSize: 15,
      color: '#000000'
    },
    textStyleIcon: {
      width: 32,
      height: 32
    },
    line: {
      height: 14,
      width: 0.5,
      backgroundColor: 'rgba(0,0,0,0.3)'
    },
    textStyle_333: {
      fontSize: 14,
      marginLeft: 20,
      marginRight: 9,
      color: '#333333',
      textAlign: 'center',
      textAlignVertical: 'center'
    },
    modeTitleDesc: {
      flex: 1
    },
    textStyle_666: {
      fontSize: 12,
      marginLeft: 9,
      marginRight: 20,
      color: '#666666',
      textAlign: 'center',
      textAlignVertical: 'center'
    },
    cleanModelBody: {},
    modeBody: {
      flexDirection: 'row',
      justifyContent: 'space-evenly',
      paddingHorizontal: 10,
      paddingVertical: 26
    },
    dialogContent: {
      width: '100%',
      marginBottom: 20,
      justifyContent: 'center',
      alignItems: 'center'
    },
    modeContainer: {
      marginHorizontal: 10,
      marginTop: 10,
      paddingTop: 18,
      flexDirection: 'column',
      borderRadius: 10,
      backgroundColor: '#FFFFFF',
      elevation: 6,
      shadowOffset: {
        width: 0,
        height: 0
      },
      shadowColor: 'rgba(0,0,0,0.05)',
      shadowOpacity: 1,
      shadowRadius: 5
    },
    modeFanBody: {
      paddingVertical: 26,
      paddingHorizontal: 10,
      flexDirection: 'row',
      justifyContent: 'space-between'
    }
  });
},10403,[14305,14320,14323,14371,14377,14386,10297,10033,10332,10755,10016,10406,10100,10091,10064,10409,10439,10035,10442,10061,10445,10448,10451,10454,10457,10460,10463,10466,10469,10472,10475,10478,10481,10484,10487,10490,10493,10496,10499,10502,10505,10508,10511,10514,10517,10520,10523,10526,10529,10532,10535,10538]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var isCalled = false,
      timer;

  var _default = HandlerOnceTap = function HandlerOnceTap(functionTobeCalled) {
    var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;

    if (!isCalled) {
      isCalled = true;
      clearTimeout(timer);
      timer = setTimeout(function () {
        isCalled = false;
      }, interval);
      return functionTobeCalled();
    }
  };

  exports.default = _default;
},10406,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNativeRootToast = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var curToast;

  function onHidden() {
    if (curToast) {
      curToast = null;
    }
  }

  function info(msg) {
    var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    curToast = _reactNativeRootToast.default.show(msg, (0, _objectSpread2.default)({
      shadow: false,
      position: _reactNativeRootToast.default.positions.CENTER,
      duration: _reactNativeRootToast.default.durations.SHORT,
      onHidden: onHidden,
      textStyle: {
        fontFamily: 'System'
      }
    }, opt));
    return curToast;
  }

  var _default = {
    info: info
  };
  exports.default = _default;
},10409,[14305,14314,10412]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _exportNames = {
    ToastContainer: true
  };
  Object.defineProperty(exports, "ToastContainer", {
    enumerable: true,
    get: function get() {
      return _ToastContainer.default;
    }
  });
  exports.default = undefined;

  var _Toast = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  Object.keys(_Toast).forEach(function (key) {
    if (key === "default" || key === "__esModule") return;
    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
    Object.defineProperty(exports, key, {
      enumerable: true,
      get: function get() {
        return _Toast[key];
      }
    });
  });

  var _ToastContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Toast.default;
  exports.default = _default;
},10412,[14305,14308,10415,10436]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Manager", {
    enumerable: true,
    get: function get() {
      return _reactNativeRootSiblings.default;
    }
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeRootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ToastContainer = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var Toast = function (_Component) {
    (0, _inherits2.default)(Toast, _Component);

    function Toast() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Toast);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Toast)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this._toast = null;

      _this.componentWillMount = function () {
        _this._toast = new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, _this.props, {
          duration: 0
        })));
      };

      _this.componentWillReceiveProps = function (nextProps) {
        _this._toast.update(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, nextProps, {
          duration: 0
        })));
      };

      _this.componentWillUnmount = function () {
        _this._toast.destroy();
      };

      return _this;
    }

    (0, _createClass2.default)(Toast, [{
      key: "render",
      value: function render() {
        return null;
      }
    }]);
    return Toast;
  }(_react.Component);

  Toast.displayName = 'Toast';
  Toast.propTypes = _ToastContainer.default.propTypes;
  Toast.positions = _ToastContainer.positions;
  Toast.durations = _ToastContainer.durations;

  Toast.show = function (message) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
      position: _ToastContainer.positions.BOTTOM,
      duration: _ToastContainer.durations.SHORT
    };
    return new _reactNativeRootSiblings.default(_react.default.createElement(_ToastContainer.default, (0, _extends2.default)({}, options, {
      visible: true
    }), message));
  };

  Toast.hide = function (toast) {
    if (toast instanceof _reactNativeRootSiblings.default) {
      toast.destroy();
    } else {}
  };

  var _default = Toast;
  exports.default = _default;
},10415,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10418,10436]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.setSiblingWrapper = setSiblingWrapper;
  exports.RootSiblingParent = RootSiblingParent;
  exports.RootSiblingPortal = RootSiblingPortal;
  exports.default = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  var _ChildrenWrapper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _wrapRootComponent3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var siblingWrapper = function siblingWrapper(sibling) {
    return sibling;
  };

  function renderSibling(sibling) {
    return siblingWrapper(sibling);
  }

  if (!global.__rootSiblingsInjected && !global.__rootSiblingsDisabled) {
    _reactNative.AppRegistry.setWrapperComponentProvider(function () {
      return Root;
    });

    global.__rootSiblingsInjected = true;
  }

  function setSiblingWrapper(wrapper) {
    siblingWrapper = wrapper;
  }

  var _wrapRootComponent = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
      Root = _wrapRootComponent.Root,
      defaultManager = _wrapRootComponent.manager;

  var uuid = 0;
  var managerStack = [defaultManager];
  var inactiveManagers = new Set();

  function getActiveManager() {
    for (var i = managerStack.length - 1; i >= 0; i--) {
      var manager = managerStack[i];

      if (!inactiveManagers.has(manager)) {
        return manager;
      }
    }

    return defaultManager;
  }

  var RootSiblingsManager = function () {
    function RootSiblingsManager(element, callback) {
      (0, _classCallCheck2.default)(this, RootSiblingsManager);
      this.id = "root-sibling-" + (uuid + 1);
      this.manager = getActiveManager();
      this.manager.update(this.id, element, callback);
      uuid++;
    }

    (0, _createClass2.default)(RootSiblingsManager, [{
      key: "update",
      value: function update(element, callback) {
        this.manager.update(this.id, element, callback);
      }
    }, {
      key: "destroy",
      value: function destroy(callback) {
        this.manager.destroy(this.id, callback);
      }
    }]);
    return RootSiblingsManager;
  }();

  exports.default = RootSiblingsManager;

  function RootSiblingParent(props) {
    var inactive = props.inactive;

    var _useState = (0, _react.useState)(function () {
      var _wrapRootComponent2 = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
          parentRoot = _wrapRootComponent2.Root,
          parentManager = _wrapRootComponent2.manager;

      managerStack.push(parentManager);

      if (inactive) {
        inactiveManagers.add(parentManager);
      }

      return {
        Root: parentRoot,
        manager: parentManager
      };
    }),
        _useState2 = (0, _slicedToArray2.default)(_useState, 1),
        sibling = _useState2[0];

    (0, _react.useEffect)(function () {
      return function () {
        if (sibling) {
          var index = managerStack.indexOf(sibling.manager);

          if (index > 0) {
            managerStack.splice(index, 1);
          }
        }
      };
    }, [sibling]);

    if (inactive && sibling && !inactiveManagers.has(sibling.manager)) {
      inactiveManagers.add(sibling.manager);
    } else if (!inactive && sibling && inactiveManagers.has(sibling.manager)) {
      inactiveManagers.delete(sibling.manager);
    }

    var Parent = sibling.Root;
    return _react.default.createElement(Parent, null, props.children);
  }

  function RootSiblingPortal(props) {
    var _useState3 = (0, _react.useState)(function () {
      return new RootSiblingsManager(null);
    }),
        _useState4 = (0, _slicedToArray2.default)(_useState3, 1),
        sibling = _useState4[0];

    sibling.update(props.children);
    (0, _react.useEffect)(function () {
      if (sibling) {
        return function () {
          return sibling.destroy();
        };
      }
    }, [sibling]);
    return null;
  }
},10418,[14308,14305,14347,14320,14323,10297,10033,10421,10424]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ChildrenWrapper;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function ChildrenWrapper(props) {
    return _react.default.createElement(_react.default.Fragment, null, props.children);
  }
},10421,[14305,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = wrapRootComponent;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _RootController = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _RootSiblings = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function wrapRootComponent(_Root, renderSibling) {
    var controller = new _RootController.default();
    return {
      Root: function Root(props) {
        return _react.default.createElement(_RootSiblings.default, {
          controller: controller,
          renderSibling: renderSibling
        }, _react.default.createElement(_Root, props));
      },
      manager: {
        update: function update(id, element, callback) {
          controller.update(id, element, callback);
        },
        destroy: function destroy(id, callback) {
          controller.destroy(id, callback);
        }
      }
    };
  }
},10424,[14305,10297,10427,10430]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.RootControllerChanges = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var RootControllerChanges;
  exports.RootControllerChanges = RootControllerChanges;

  (function (RootControllerChanges) {
    RootControllerChanges[RootControllerChanges["Insert"] = 0] = "Insert";
    RootControllerChanges[RootControllerChanges["Update"] = 1] = "Update";
    RootControllerChanges[RootControllerChanges["Remove"] = 2] = "Remove";
  })(RootControllerChanges || (exports.RootControllerChanges = RootControllerChanges = {}));

  var RootController = function () {
    function RootController() {
      (0, _classCallCheck2.default)(this, RootController);
      this.siblings = new Set();
      this.pendingActions = [];
      this.callback = null;
    }

    (0, _createClass2.default)(RootController, [{
      key: "update",
      value: function update(id, element, callback) {
        if (!this.siblings.has(id)) {
          this.emit(id, {
            change: RootControllerChanges.Insert,
            element: element,
            updateCallback: callback
          });
          this.siblings.add(id);
        } else {
          this.emit(id, {
            change: RootControllerChanges.Update,
            element: element,
            updateCallback: callback
          });
        }
      }
    }, {
      key: "destroy",
      value: function destroy(id, callback) {
        if (this.siblings.has(id)) {
          this.emit(id, {
            change: RootControllerChanges.Remove,
            element: null,
            updateCallback: callback
          });
          this.siblings.delete(id);
        } else if (callback) {
          callback();
        }
      }
    }, {
      key: "setCallback",
      value: function setCallback(callback) {
        this.callback = callback;
        this.pendingActions.forEach(function (_ref) {
          var id = _ref.id,
              action = _ref.action;
          callback(id, action);
        });
      }
    }, {
      key: "emit",
      value: function emit(id, action) {
        if (this.callback) {
          this.callback(id, action);
        } else {
          this.pendingActions.push({
            action: action,
            id: id
          });
        }
      }
    }]);
    return RootController;
  }();

  exports.default = RootController;
},10427,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _staticContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _RootController = _$$_REQUIRE(_dependencyMap[9]);

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default(props) {
      var _this;

      (0, _classCallCheck2.default)(this, _default);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).call(this, props));
      _this.updatedSiblings = new Set();
      _this.siblingsPool = [];
      _this.state = {
        siblings: []
      };
      return _this;
    }

    (0, _createClass2.default)(_default, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.props.controller.setCallback(function (id, change) {
          setImmediate(function () {
            return _this2.commitChange(id, change);
          });
        });
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        this.updatedSiblings.clear();
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_react.default.Fragment, null, this.props.children, this.renderSiblings());
      }
    }, {
      key: "commitChange",
      value: function commitChange(id, _ref) {
        var _this3 = this;

        var change = _ref.change,
            element = _ref.element,
            updateCallback = _ref.updateCallback;
        var siblings = Array.from(this.siblingsPool);
        var index = siblings.findIndex(function (sibling) {
          return sibling.id === id;
        });

        if (change === _RootController.RootControllerChanges.Remove) {
          if (index > -1) {
            siblings.splice(index, 1);
          } else {
            this.invokeCallback(updateCallback);
            return;
          }
        } else if (change === _RootController.RootControllerChanges.Update) {
          if (index > -1) {
            siblings.splice(index, 1, {
              element: element,
              id: id
            });
            this.updatedSiblings.add(id);
          } else {
            this.invokeCallback(updateCallback);
            return;
          }
        } else {
          if (index > -1) {
            siblings.splice(index, 1);
          }

          siblings.push({
            element: element,
            id: id
          });
          this.updatedSiblings.add(id);
        }

        this.siblingsPool = siblings;
        this.setState({
          siblings: siblings
        }, function () {
          return _this3.invokeCallback(updateCallback);
        });
      }
    }, {
      key: "invokeCallback",
      value: function invokeCallback(callback) {
        if (callback) {
          callback();
        }
      }
    }, {
      key: "renderSiblings",
      value: function renderSiblings() {
        var _this4 = this;

        return this.state.siblings.map(function (_ref2) {
          var id = _ref2.id,
              element = _ref2.element;
          return _react.default.createElement(_staticContainer.default, {
            key: "root-sibling-" + id,
            shouldUpdate: _this4.updatedSiblings.has(id)
          }, _this4.wrapSibling(element));
        });
      }
    }, {
      key: "wrapSibling",
      value: function wrapSibling(element) {
        var renderSibling = this.props.renderSibling;

        if (renderSibling) {
          return renderSibling(element);
        } else {
          return element;
        }
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
},10430,[14308,14305,14320,14323,14371,14377,14386,10297,10433,10427]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _$$_REQUIRE(_dependencyMap[6]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _default = function (_Component) {
    (0, _inherits2.default)(_default, _Component);

    function _default() {
      (0, _classCallCheck2.default)(this, _default);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(_default).apply(this, arguments));
    }

    (0, _createClass2.default)(_default, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return nextProps.shouldUpdate;
      }
    }, {
      key: "render",
      value: function render() {
        var child = this.props.children;
        return child === null || child === false ? null : _react.Children.only(child);
      }
    }]);
    return _default;
  }(_react.Component);

  exports.default = _default;
  _default.propTypes = {
    shouldUpdate: _propTypes.default.bool.isRequired
  };
},10433,[14305,14320,14323,14371,14377,14386,10297,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.durations = exports.positions = exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var TOAST_MAX_WIDTH = 0.8;
  var TOAST_ANIMATION_DURATION = 200;
  var positions = {
    TOP: 20,
    BOTTOM: -20,
    CENTER: 0
  };
  exports.positions = positions;
  var durations = {
    LONG: 3500,
    SHORT: 2000
  };
  exports.durations = durations;

  var styles = _reactNative.StyleSheet.create({
    defaultStyle: {
      position: 'absolute',
      left: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    containerStyle: {
      padding: 10,
      backgroundColor: '#000',
      opacity: 0.8,
      borderRadius: 5
    },
    shadowStyle: {
      shadowColor: '#000',
      shadowOffset: {
        width: 4,
        height: 4
      },
      shadowOpacity: 0.8,
      shadowRadius: 6,
      elevation: 10
    },
    textStyle: {
      fontSize: 16,
      color: '#fff',
      textAlign: 'center'
    }
  });

  var ToastContainer = function (_Component) {
    (0, _inherits2.default)(ToastContainer, _Component);

    function ToastContainer() {
      var _this;

      (0, _classCallCheck2.default)(this, ToastContainer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToastContainer).apply(this, arguments));

      _this.componentDidMount = function () {
        _reactNative.Dimensions.addEventListener('change', _this._windowChanged);

        if (_this.props.keyboardAvoiding) {
          _reactNative.Keyboard.addListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
        }

        if (_this.state.visible) {
          _this._showTimeout = setTimeout(function () {
            return _this._show();
          }, _this.props.delay);
        }
      };

      _this.componentDidUpdate = function (prevProps) {
        if (_this.props.visible !== prevProps.visible) {
          if (_this.props.visible) {
            clearTimeout(_this._showTimeout);
            clearTimeout(_this._hideTimeout);
            _this._showTimeout = setTimeout(function () {
              return _this._show();
            }, _this.props.delay);
          } else {
            _this._hide();
          }

          _this.setState({
            visible: _this.props.visible
          });
        }
      };

      _this.componentWillUnmount = function () {
        _this._hide();

        _reactNative.Dimensions.removeEventListener('change', _this._windowChanged);

        _reactNative.Keyboard.removeListener('keyboardDidChangeFrame', _this._keyboardDidChangeFrame);
      };

      _this._animating = false;
      _this._root = null;
      _this._hideTimeout = null;
      _this._showTimeout = null;
      _this._keyboardHeight = 0;

      _this._windowChanged = function (_ref) {
        var window = _ref.window;

        _this.setState({
          windowWidth: window.width,
          windowHeight: window.height
        });
      };

      _this._keyboardDidChangeFrame = function (_ref2) {
        var endCoordinates = _ref2.endCoordinates;

        _this.setState({
          keyboardScreenY: endCoordinates.screenY
        });
      };

      _this._show = function () {
        clearTimeout(_this._showTimeout);

        if (!_this._animating) {
          clearTimeout(_this._hideTimeout);
          _this._animating = true;

          _this._root.setNativeProps({
            pointerEvents: 'auto'
          });

          _this.props.onShow && _this.props.onShow(_this.props.siblingManager);

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: _this.props.opacity,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.out(_reactNative.Easing.ease)
          }).start(function (_ref3) {
            var finished = _ref3.finished;

            if (finished) {
              _this._animating = !finished;
              _this.props.onShown && _this.props.onShown(_this.props.siblingManager);

              if (_this.props.duration > 0) {
                _this._hideTimeout = setTimeout(function () {
                  return _this._hide();
                }, _this.props.duration);
              }
            }
          });
        }
      };

      _this._hide = function () {
        clearTimeout(_this._showTimeout);
        clearTimeout(_this._hideTimeout);

        if (!_this._animating) {
          if (_this._root) {
            _this._root.setNativeProps({
              pointerEvents: 'none'
            });
          }

          if (_this.props.onHide) {
            _this.props.onHide(_this.props.siblingManager);
          }

          _reactNative.Animated.timing(_this.state.opacity, {
            toValue: 0,
            duration: _this.props.animation ? TOAST_ANIMATION_DURATION : 0,
            easing: _reactNative.Easing.in(_reactNative.Easing.ease)
          }).start(function (_ref4) {
            var finished = _ref4.finished;

            if (finished) {
              _this._animating = false;
              _this.props.onHidden && _this.props.onHidden(_this.props.siblingManager);
            }
          });
        }
      };

      var _window = _reactNative.Dimensions.get('window');

      _this.state = {
        visible: _this.props.visible,
        opacity: new _reactNative.Animated.Value(0),
        windowWidth: _window.width,
        windowHeight: _window.height,
        keyboardScreenY: _window.height
      };
      return _this;
    }

    (0, _createClass2.default)(ToastContainer, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var props = this.props;
        var windowWidth = this.state.windowWidth;
        var offset = props.position;
        var _this$state = this.state,
            windowHeight = _this$state.windowHeight,
            keyboardScreenY = _this$state.keyboardScreenY;
        var keyboardHeight = Math.max(windowHeight - keyboardScreenY, 0);
        var position = offset ? (0, _defineProperty2.default)({}, offset < 0 ? 'bottom' : 'top', offset < 0 ? keyboardHeight - offset : offset) : {
          top: 0,
          bottom: keyboardHeight
        };
        return this.state.visible || this._animating ? _react.default.createElement(_reactNative.View, {
          style: [styles.defaultStyle, position],
          pointerEvents: "box-none"
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            typeof _this2.props.onPress === 'function' ? _this2.props.onPress() : null;
            _this2.props.hideOnPress ? _this2._hide() : null;
          }
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.containerStyle, {
            marginHorizontal: windowWidth * 0.09999999999999998
          }, props.containerStyle, props.backgroundColor && {
            backgroundColor: props.backgroundColor
          }, {
            opacity: this.state.opacity
          }, props.shadow && styles.shadowStyle, props.shadowColor && {
            shadowColor: props.shadowColor
          }],
          pointerEvents: "none",
          ref: function ref(ele) {
            return _this2._root = ele;
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.textStyle, props.textStyle, props.textColor && {
            color: props.textColor
          }]
        }, this.props.children)))) : null;
      }
    }]);
    return ToastContainer;
  }(_react.Component);

  ToastContainer.displayName = 'ToastContainer';
  ToastContainer.propTypes = (0, _objectSpread2.default)({}, _reactNative.ViewPropTypes, {
    containerStyle: _reactNative.ViewPropTypes.style,
    duration: _propTypes.default.number,
    visible: _propTypes.default.bool,
    position: _propTypes.default.number,
    animation: _propTypes.default.bool,
    shadow: _propTypes.default.bool,
    keyboardAvoiding: _propTypes.default.bool,
    backgroundColor: _propTypes.default.string,
    opacity: _propTypes.default.number,
    shadowColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    textStyle: _reactNative.Text.propTypes.style,
    delay: _propTypes.default.number,
    hideOnPress: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onHide: _propTypes.default.func,
    onHidden: _propTypes.default.func,
    onShow: _propTypes.default.func,
    onShown: _propTypes.default.func
  });
  ToastContainer.defaultProps = {
    visible: false,
    duration: durations.SHORT,
    animation: true,
    shadow: true,
    position: positions.BOTTOM,
    opacity: 0.8,
    delay: 0,
    hideOnPress: true,
    keyboardAvoiding: true
  };
  var _default = ToastContainer;
  exports.default = _default;
},10436,[14308,14305,14314,14317,14320,14323,14371,14377,14386,10297,10318,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var ModeView = function (_React$Component) {
    (0, _inherits2.default)(ModeView, _React$Component);

    function ModeView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ModeView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModeView).call(this, props));
      _this.state = {
        backgroundColor: 'white',
        pressState: 0
      };
      return _this;
    }

    (0, _createClass2.default)(ModeView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            _this$props$disable = _this$props.disable,
            disable = _this$props$disable === undefined ? true : _this$props$disable,
            _this$props$value = _this$props.value,
            value = _this$props$value === undefined ? false : _this$props$value,
            disableIcon = _this$props.disableIcon,
            selectedIcon = _this$props.selectedIcon,
            unSelectedIcon = _this$props.unSelectedIcon;

        if (this.props.selectedIcon === undefined || this.props.text === undefined || this.props.backgroundColor === undefined || this.props.value === undefined) {
          return null;
        }

        var textColor;
        var backgroundColor;
        var imageSource;

        if (value === true) {
          textColor = this.props.textColor;
          imageSource = selectedIcon;
          backgroundColor = this.props.backgroundColor;
        } else {
          textColor = '#7F7F7F';
          imageSource = this.state.pressState === 0 ? unSelectedIcon : selectedIcon;
          backgroundColor = this.state.backgroundColor;
        }

        return disable === true ? _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: this.props.onPress ? this.props.onPress : null,
          onPressIn: function onPressIn() {
            _this2.setState({
              backgroundColor: '#B0B6B8'
            });

            _this2.setState({
              pressState: 1
            });
          },
          onPressOut: function onPressOut() {
            _this2.setState({
              backgroundColor: 'white'
            });

            _this2.setState({
              pressState: 0
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.modeViewStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: backgroundColor
          }, styles.backgroundStyle]
        }, _react.default.createElement(_reactNative.Image, {
          style: [styles.imageStyle],
          source: imageSource
        })), this.props.text.length === 0 ? null : _react.default.createElement(_reactNative.Text, {
          allowFontScaling: false,
          style: [styles.textStyle, {
            color: textColor
          }]
        }, this.props.text))) : _react.default.createElement(_reactNative.View, {
          style: [styles.modeViewStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: value === true ? 'rgba(197,201,203,0.3)' : 'white',
            opacity: 0.3
          }, styles.backgroundStyle]
        }, _react.default.createElement(_reactNative.Image, {
          style: [styles.imageStyle],
          source: value === true ? disableIcon : unSelectedIcon
        })), this.props.text.length === 0 ? null : _react.default.createElement(_reactNative.Text, {
          allowFontScaling: false,
          style: [styles.textStyle, {
            color: '#CCCCCC'
          }]
        }, this.props.text));
      }
    }]);
    return ModeView;
  }(_react.default.Component);

  exports.default = ModeView;

  var styles = _reactNative.StyleSheet.create({
    modeViewStyle: {
      flexDirection: 'column',
      justifyContent: 'flex-start',
      width: 80,
      marginBottom: 0,
      opacity: 1
    },
    backgroundStyle: {
      borderRadius: 120,
      alignSelf: 'center',
      marginTop: 10
    },
    imageStyle: {
      alignSelf: 'center'
    },
    textStyle: {
      fontSize: 13,
      alignSelf: 'center',
      marginTop: 10,
      textAlign: 'center'
    }
  });
},10439,[14305,14320,14323,14371,14377,14386,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _miot = _$$_REQUIRE(_dependencyMap[1]);

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _common = _$$_REQUIRE(_dependencyMap[3]);

  function getCacheKey(name) {
    var nosession = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var userId = _miot.Service.account.ID;
    var deviceId = _miot.Device.deviceID;
    var session = _miot.Device.session;
    var cacheKey = "zhimi-vacuum-" + name + "-" + userId + "-" + deviceId;

    if (!nosession) {
      cacheKey += "-" + session;
    }

    return cacheKey;
  }

  function getUsedKey() {
    return getCacheKey('isUsed-2', true);
  }

  function loadSetting(key) {
    var nosession = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var k = getCacheKey(key, nosession);
    return _Host.default.storage.get(key).then(function (res) {
      _common.logger.info("load " + k + " res:" + res);

      return res;
    }).catch(function (e) {
      _common.logger.info("load " + k + " failed " + e);

      return null;
    });
  }

  function updateSetting(key) {
    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var nosession = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var k = getCacheKey(key, nosession);

    _common.logger.info("set " + k + " value: " + value);

    return _Host.default.storage.set(k, value);
  }

  function loadUsed() {
    var key = getUsedKey();

    _common.logger.info('load used');

    return _Host.default.storage.get(key).then(function (res) {
      _common.logger.info("load used, key: " + key + " used:" + res);

      if (res !== null && res !== undefined) {
        return +res === 1;
      }

      return false;
    }).catch(function (e) {
      _common.logger.info("load failed " + e);

      return false;
    });
  }

  function setIsUsed() {
    _common.globalData.isNew = false;
    var key = getUsedKey();

    _common.logger.info("set used, key: " + key);

    return _Host.default.storage.set(key, 1);
  }

  function loadPolicy() {
    return _miot.Service.smarthome.batchGetDeviceDatas([{
      did: _miot.Device.deviceID,
      props: ['prop.s_auth_config']
    }]).then(function (res) {
      _common.logger.info("load auth config: " + JSON.stringify(res));

      var alreadyAuthed = false;

      if (res && res[_miot.Device.deviceID]) {
        var result = res[_miot.Device.deviceID];
        var config;

        if (result && result['prop.s_auth_config']) {
          config = result['prop.s_auth_config'];
        }

        if (config) {
          try {
            var authJson = JSON.parse(config);
            alreadyAuthed = authJson.privacyAuthed && true;
          } catch (err) {
            _common.logger.info("parse policy json failed: " + err.toString());
          }
        }
      }

      return alreadyAuthed;
    }).catch(function (err) {
      _common.logger.info("load auth config failed: " + err.toString());

      _common.globalData.accept = false;
      return false;
    });
  }

  function setPolicy() {
    var accept = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
    var policy = {
      privacyAuthed: accept
    };
    return _miot.Service.smarthome.batchSetDeviceDatas([{
      did: _miot.Device.deviceID,
      props: {
        'prop.s_auth_config': JSON.stringify(policy)
      }
    }]).then(function () {
      _common.globalData.accept = accept;
      return true;
    }).catch(function () {
      return false;
    });
  }

  function refusePolicy() {
    return setPolicy(false);
  }

  function acceptPolicy() {
    return setPolicy(true);
  }

  var checkPolicy = function checkPolicy(afterAcceptPolicy) {
    loadPolicy().then(function (res) {
      if (!res) {
        _miot.Service.getServerName().then(function (country) {
          var options = _common.Policy.getPolicy(country.countryCode, _Host.default.locale.language);

          options.experiencePlanURL = options.agreementURL;
          options.hideUserExperiencePlan = true;
          options.hideAgreement = false;

          _Host.default.ui.alertLegalInformationAuthorization(options).then(function (result) {
            if (result) {
              acceptPolicy().then(function () {
                if (afterAcceptPolicy) {
                  afterAcceptPolicy();
                }
              }).catch(function (error) {
                return _common.logger.info("set prop.s_auth_flag", error);
              });
            }
          });
        }).catch(function (err) {
          _common.logger.info("service#getServiceName failed: " + err);
        });
      } else if (afterAcceptPolicy) {
        afterAcceptPolicy();
      }
    }).catch(function (err) {
      return err;
    });
  };

  var _default = {
    loadUsed: loadUsed,
    setIsUsed: setIsUsed,
    checkPolicy: checkPolicy,
    refusePolicy: refusePolicy,
    getCacheKey: getCacheKey,
    loadSetting: loadSetting,
    updateSetting: updateSetting
  };
  exports.default = _default;
},10442,[14305,10074,10035,10109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    ALL_CLEAN: 1,
    AREA_CLEAN: 2,
    CURRENT_SPOT_CLEAN: 3,
    SPOT_CLEAN: 4
  };
  exports.default = _default;
},10445,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _common = _$$_REQUIRE(_dependencyMap[8]);

  var BaseComponent = function (_React$Component) {
    (0, _inherits2.default)(BaseComponent, _React$Component);

    function BaseComponent(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BaseComponent);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BaseComponent).call(this, props));

      _this.checkProp = function (propName, now) {
        var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 500;
        var updateStamp = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var t = _this.propTimeStamp[propName] || 0;

        if (now - t > duration) {
          if (updateStamp) {
            _this.propTimeStamp[propName] = now;
          }

          return true;
        }

        return false;
      };

      _this.updateTimeStamp = function (propName) {
        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Date.now();

        if (propName) {
          if (Array.isArray(propName)) {
            propName.forEach(function (name) {
              _this.propTimeStamp[name] = timestamp;
            });
          } else {
            _this.propTimeStamp[propName] = timestamp;
          }
        }
      };

      _this.debounce = function (task) {
        var notip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

        _FunUtils.default.debounce(task).catch(function () {
          if (!notip) {
            _UIUtils.default.info(_common.localString.wait_operate);
          }
        });
      };

      _this.propTimeStamp = {};
      return _this;
    }

    return BaseComponent;
  }(_react.default.Component);

  exports.default = BaseComponent;
},10448,[14305,14320,14371,14377,14386,10297,10106,10409,10109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 35,
    "height": 30,
    "scales": [2, 3],
    "hash": "613475b53dc2d431050d565b92773eaa",
    "name": "ic_alarm",
    "type": "png"
  });
},10451,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 12,
    "height": 12,
    "scales": [2, 3],
    "hash": "d2b41a324f6cb283abbbbd4c2b88abc7",
    "name": "icon_close",
    "type": "png"
  });
},10454,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 50,
    "height": 50,
    "scales": [1, 2, 3],
    "hash": "46f8eb7c1726c90037d3742e0d15a26d",
    "name": "fan_silent_press",
    "type": "png"
  });
},10457,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 50,
    "height": 50,
    "scales": [1, 2, 3],
    "hash": "69de1e5f8ca5416a8a88d23dd7965a28",
    "name": "fan_silent",
    "type": "png"
  });
},10460,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 50,
    "height": 50,
    "scales": [1, 2, 3],
    "hash": "f1a5474b3fd46c48bf4324422cccf341",
    "name": "fan_normal_press",
    "type": "png"
  });
},10463,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 50,
    "height": 50,
    "scales": [1, 2, 3],
    "hash": "27bdcbb7818d4a9010ede99fb9530fbb",
    "name": "fan_normal",
    "type": "png"
  });
},10466,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 50,
    "height": 50,
    "scales": [1, 2, 3],
    "hash": "49133771a798bf55f1e2929516fd791b",
    "name": "fan_middle_press",
    "type": "png"
  });
},10469,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 50,
    "height": 50,
    "scales": [1, 2, 3],
    "hash": "6fe23f65034f680c638b73e42c9e4d1e",
    "name": "fan_middle",
    "type": "png"
  });
},10472,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 50,
    "height": 50,
    "scales": [1, 2, 3],
    "hash": "05b918a4071cdeef9393fe07e9a187ea",
    "name": "fan_max_press",
    "type": "png"
  });
},10475,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 50,
    "height": 50,
    "scales": [1, 2, 3],
    "hash": "62486a7abeb367de5cdbefd9d695e865",
    "name": "fan_max",
    "type": "png"
  });
},10478,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [1, 2, 3],
    "hash": "b5d39aaad939f9beacab484886b1669f",
    "name": "sweep_press",
    "type": "png"
  });
},10481,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [1, 2, 3],
    "hash": "cc9e8d65fd157e4b9205bf7fe2816976",
    "name": "sweep",
    "type": "png"
  });
},10484,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [1, 2, 3],
    "hash": "ceb96f05c7dbaf42998fd40644e03550",
    "name": "sweep_mop_press",
    "type": "png"
  });
},10487,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [1, 2, 3],
    "hash": "0a385235b436f9f4abd145b079230252",
    "name": "sweep_mop",
    "type": "png"
  });
},10490,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [1, 2, 3],
    "hash": "a0d3f9307c6b20e4ac637b5f44d6b98e",
    "name": "mop_press",
    "type": "png"
  });
},10493,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [1, 2, 3],
    "hash": "3d5635e430c7bc34796a1f8ae3f8ef9f",
    "name": "mop",
    "type": "png"
  });
},10496,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "66362aa31934c0eadbe6c517ee512f94",
    "name": "mop_normal_press",
    "type": "png"
  });
},10499,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "c11aafe3bcd564b5229376f55e38731b",
    "name": "mop_normal",
    "type": "png"
  });
},10502,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "290e183e2e0dbde6715ace5dadfa24b9",
    "name": "mop_normal_disable",
    "type": "png"
  });
},10505,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "03fa5f278b59db64a16d8db18cccb7d8",
    "name": "mop_middle_press",
    "type": "png"
  });
},10508,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "78e9ab6c03fbfadf474cd58e7a583445",
    "name": "mop_middle",
    "type": "png"
  });
},10511,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "5e726809205da35539e8d4aa5c239708",
    "name": "mop_middle_disable",
    "type": "png"
  });
},10514,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "0d3a361916bf6d1c3b03c557ebf11bf8",
    "name": "mop_max_press",
    "type": "png"
  });
},10517,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "2df9bdebe5b7f390013e28b06341313d",
    "name": "mop_max",
    "type": "png"
  });
},10520,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 56,
    "height": 56,
    "scales": [2, 3],
    "hash": "9dfbbce839aab012049ae8329694b621",
    "name": "mop_max_disable",
    "type": "png"
  });
},10523,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 96,
    "height": 96,
    "scales": [1],
    "hash": "a1dfd963a5af265dfc6d44735fd2af19",
    "name": "ic_machine_charge",
    "type": "png"
  });
},10526,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 96,
    "height": 96,
    "scales": [1],
    "hash": "0c01bb170981b6932b56afd4987322b9",
    "name": "ic_machine_suppend",
    "type": "png"
  });
},10529,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 96,
    "height": 96,
    "scales": [1],
    "hash": "5c12f52acfa51151a5ef3568ddccc00e",
    "name": "ic_machine_start",
    "type": "png"
  });
},10532,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 144,
    "height": 144,
    "scales": [1],
    "hash": "bd56977b2a203702e0a4dbe6934e5e38",
    "name": "ic_machine_appoint",
    "type": "png"
  });
},10535,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 144,
    "height": 144,
    "scales": [1],
    "hash": "d956cfcf169b09c3f1b7dda2179f39e1",
    "name": "ic_machine_key",
    "type": "png"
  });
},10538,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _ZoneClean = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _jsBase = _$$_REQUIRE(_dependencyMap[14]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[17]);

  var _ShowForbidZone = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _SpotClean = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _GestureView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _events = _$$_REQUIRE(_dependencyMap[21]);

  var _Robot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _api = _$$_REQUIRE(_dependencyMap[23]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _StatusConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _MapStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _RoomNameView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _MapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _BaseMap2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _MapComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var _AppConst = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

  var _CycleTask = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[35]));

  var _PathData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[36]));

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[37]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[38]));

  var _PathBeautify = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[39]));

  var _DevConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[40]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[41]));

  var screenWidth = _reactNative.Dimensions.get('window').width;

  var screenHeight = _reactNative.Dimensions.get('window').height;

  var MAP_DURATION = 3500;
  var PATH_DURATION = 1200;
  var winSuction = '',
      winHydraulic = '',
      winCustomSwitc = '',
      winSweepType = '';
  var PROP = _Consts.default.PROP,
      ACTION = _Consts.default.ACTION,
      Colors = _Consts.default.Colors;
  var op = 0;

  var MainMap = function (_BaseMap) {
    (0, _inherits2.default)(MainMap, _BaseMap);

    function MainMap(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MainMap);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MainMap).call(this, props));

      _this.handlePushMessage = function (msg) {
        if (msg.prop.waterLevel) {
          winHydraulic = msg.prop.waterLevel;

          _this.HydraulicIcon(msg.prop.waterLevel - 1);
        }

        if (msg.prop.fanLevel) {
          winSuction = msg.prop.fanLevel;

          _this.suctionIconImg(msg.prop.fanLevel - 1);
        }

        if (msg.prop.sweepType || msg.prop.sweepType == 0) {
          winSweepType = msg.prop.sweepType;

          _this.setState({
            sweepType: winSweepType
          });
        }

        if (msg.prop.renewFan) {
          _this.setState({
            renewFan: msg.prop.renewFan
          });
        }

        if (msg.prop.mop || msg.prop.mop == false) {
          _this.setState({
            ismop: msg.prop.mop
          });
        }

        if (msg.prop.customSwitch || msg.prop.customSwitch == false || msg.prop.customSwitch == 0) {
          winCustomSwitc = msg.prop.customSwitch == 0 || msg.prop.customSwitch == false ? false : true;

          if (winCustomSwitc) {
            _api.SpecApi.specSetNoFlatShake(PROP.DOUBLE_CLEAN, false);

            _api.SpecApi.specSetNoFlatShake(PROP.EDGE_SWEEP, false);
          }

          _this.setState({
            controlCustomShow: winCustomSwitc,
            customSwitch: winCustomSwitc
          });
        }
      };

      _this.handleNoChange = function () {
        _this.syncPath();
      };

      _this.syncPath = function () {
        var loop = _this._shouldLoop();

        _this.pathScheduler.start(_this._loadPath, loop, PATH_DURATION);
      };

      _this.onMapIdChanged = function () {
        _this._resetPathParams();

        _this.setState({
          configMachineLeft: 0,
          configMachineTop: 0,
          isArea: false,
          isSpot: false,
          selectAreaArray: []
        }, function () {
          _this.notifyAreaChanged([]);
        });
      };

      _this.afterHandleMap = function (res) {
        var ratio = res.ratio,
            noMap = res.noMap;
        var _this$mapData = _this.mapData,
            mapConfig = _this$mapData.mapConfig,
            _this$mapData$configC = _this$mapData.configChanged,
            configChanged = _this$mapData$configC === undefined ? false : _this$mapData$configC;
        var mapId = mapConfig.mapId,
            area = mapConfig.area,
            pathId = mapConfig.pathId;

        _MapStore.default.updateCurrent(mapId);

        var pos = _this._calcDockScreenPos(mapConfig, ratio);

        var zones = _this._calcZones(area, ratio);

        var machinePos = _this._calcMachineScreenPos(mapConfig, ratio);

        var oldRatio = _this.state.ratio;
        var other = {};

        if (noMap) {
          other = {
            path: '',
            beautifyPath: '',
            chargePileLeft: 0,
            chargePileTop: 0,
            isArea: false,
            isSpot: false,
            selectAreaArray: []
          };
        }

        var pathPos = {};

        if (oldRatio !== ratio || configChanged) {
          _logger.default.info("ratio changed: " + oldRatio + " -> " + ratio + ", configChanged: " + configChanged);

          pathPos = _this._calcPath(_this.originalPath, mapConfig, ratio);
        }

        _this.syncPath();

        _this.setState((0, _objectSpread2.default)({}, pos, zones, machinePos, {
          showLoading: false
        }, res, pathPos, other));

        if (noMap) {
          var onPropChange = _this.props.onPropChange;
          _this._spot = undefined;
          _this.zone = undefined;

          _this.notifyAreaChanged([]);

          if (onPropChange) {
            onPropChange({
              isArea: false,
              isSpot: false
            });
          }
        }
      };

      _this._resetMap = function () {
        _this.setState({
          exit: true
        }, function () {
          return _miot.Package.exit();
        });
      };

      _this._resetPathParams = function () {
        _this.startPos = 0;
        _this.PathId = 0;
        _this.originalPath = [];

        _this.setState({
          path: '',
          beautifyPath: '',
          machineLeft: 0,
          machineTop: 0
        });
      };

      _this.ishasAutoArea = function () {
        var _this$mapData$mapConf = _this.mapData.mapConfig;
        _this$mapData$mapConf = _this$mapData$mapConf === undefined ? {} : _this$mapData$mapConf;
        var _this$mapData$mapConf2 = _this$mapData$mapConf.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf2 === undefined ? [] : _this$mapData$mapConf2;
        return autoAreaValue;
      };

      _this.isMapShow = function () {
        var noMap = _this.state.noMap;
        return noMap;
      };

      _this._shouldLoop = function () {
        var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.status;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            appStatus = _assertThisInitialize.appStatus,
            pageStatus = _assertThisInitialize.pageStatus;

        var loop = (status === _StatusConsts.default.BACK_CHARGE || status === _StatusConsts.default.SWEEP) && appStatus !== _AppConst.default.APP_PAUSE && pageStatus !== _AppConst.default.PAGE_PAUSE;
        return loop;
      };

      _this.onAppStatusChange = function (appStatus, pageStatus) {
        if (_this.appStatus === appStatus && pageStatus === _this.pageStatus) {
          return;
        }

        _this.appStatus = appStatus;
        _this.pageStatus = pageStatus;

        if (appStatus === _AppConst.default.APP_PAUSE || pageStatus === _AppConst.default.PAGE_PAUSE) {
          _this.mapScheduler.stop();

          _this.pathScheduler.stop();
        } else if (appStatus === _AppConst.default.APP_RESUME && pageStatus === _AppConst.default.PAGE_RESUME) {
          var loop = _this._shouldLoop();

          _this.mapScheduler.start(_this._loadMap, loop, MAP_DURATION);

          _this.syncPath();
        } else {}
      };

      _this._loadMap = function () {
        return _this.loadMap();
      };

      _this._loadPathIndex = function () {
        if (!_this.pathIndex) {
          var id = "" + _Service.default.account.ID;
          var _Device$owner$ID = _miot.Device.owner.ID,
              ID = _Device$owner$ID === undefined ? 0 : _Device$owner$ID;
          var key = "com.zhimi.vacuum." + id + "." + ID + ".path.index";
          return _Host.default.storage.get(key).then(function (v) {
            return v;
          }).catch(function (err) {
            return null;
          }).then(function (val) {
            _logger.default.info("load " + key + " path time diff: " + val);

            if (val) {
              _this.timeDiff = +val;
            } else {
              _Host.default.storage.set(key, _this.timeDiff);
            }

            _this.pathIndex = "" + (parseInt(id.substr(-8), 10) + _this.timeDiff);
            return _this.pathIndex;
          });
        }

        return Promise.resolve(_this.pathIndex);
      };

      _this._calcPathIndex = function () {
        if (!_this.pathIndex) {
          var id = _Service.default.account.ID;

          if (id) {
            _this.pathIndex = parseInt(id, 10) + _this.timeDiff;
            _this.pathIndex = "" + _this.pathIndex;
          } else {
            return "" + (_this.timeDiff + 1000);
          }
        }

        return _this.pathIndex;
      };

      _this._loadPath = function () {
        return _this._loadPathIndex().then(function (index) {
          var path = {};
          path.StartPos = _this.startPos;
          path.PathID = _this.PathId;
          path.UID = index;
          return _api.SpecApi.specA(ACTION.REQUEST_PATH, [JSON.stringify(path)], false).then(function (success) {
            if (success) {
              return _FunUtils.default.wait(2000).then(function () {
                return _this._fetchPath(index);
              });
            } else {
              return _FunUtils.default.wait(1500).then(function () {
                return false;
              });
            }
          });
        });
      };

      _this._fetchPath = function (index) {
        return _this._fetchUrl(index).then(function (url) {
          if (!url) {
            return false;
          }

          var name = _this.nameGenerator.next('path');

          return _MapApi.default.fetchFile(url, name).then(function (res) {
            var code = res.code;

            if (code === 403) {
              return _this._fetchUrl(index, true).then(function () {
                return res;
              });
            }

            return res;
          }).then(function (result) {
            return _this._handlePath(result);
          });
        });
      };

      _this._handleOriginPath = function (_ref) {
        var code = _ref.code,
            data = _ref.data;

        if (+code === 0) {
          _this.pathData.parsePath(data);

          var _this$pathData = _this.pathData,
              _this$pathData$pathCo = _this$pathData.pathConfig,
              pathConfig = _this$pathData$pathCo === undefined ? {} : _this$pathData$pathCo,
              _this$pathData$data = _this$pathData.data,
              pd = _this$pathData$data === undefined ? [] : _this$pathData$data;
          var _pathConfig$pathLen = pathConfig.pathLen,
              pathLen = _pathConfig$pathLen === undefined ? 0 : _pathConfig$pathLen,
              pathId = pathConfig.pathId;

          if (_this.PathId != 0 && _this.PathId != pathId) {
            _logger.default.info("old pathId: " + _this.PathId + ", pathId: " + pathId);

            _this.PathId = pathId;

            _this._resetPathParams();

            return false;
          }

          _this.PathId = pathId;

          _this.getPath(pd, false, pathId);

          return pd.length === pathLen;
        }

        return false;
      };

      _this._handlePath = function (_ref2) {
        var code = _ref2.code,
            data = _ref2.data;

        if (+code === 0) {
          var mapData = JSON.parse(_jsBase.Base64.decode(data));

          var _ref3 = mapData || {},
              Data = _ref3.Data,
              PathId = _ref3.PathId,
              _ref3$DataLength = _ref3.DataLength,
              DataLength = _ref3$DataLength === undefined ? 0 : _ref3$DataLength,
              StartPos = _ref3.StartPos,
              PathSize = _ref3.PathSize;

          _logger.default.info("DataLength: " + DataLength + ", StartPos: " + StartPos + ", PathSize: " + PathSize + " oldStart: " + _this.startPos);

          if (Data !== '') {
            if (_this.PathId != 0 && _this.PathId != PathId) {
              _logger.default.info("old pathId: " + _this.PathId + ", pathId: " + PathId);

              _this.PathId = PathId;

              _this._resetPathParams();

              return false;
            }

            _this.PathId = PathId;

            if (_this.startPos <= StartPos) {
              var removeCount = _this.startPos - StartPos;
              var map = JSON.parse(mapData.Data);

              if (map.length > 0) {
                _this.startPos = DataLength + StartPos;

                _this.getPath(map, true, PathId, removeCount);
              }
            }

            return _this.startPos === PathSize;
          }
        } else {
          _logger.default.info("handle path, code: " + code);
        }

        return false;
      };

      _this._calcZones = function (area, ratio) {
        var mapConfig = _this.mapData.mapConfig;
        var status = _this.props.status;

        var _MapUtils$calcZones = _MapUtils.default.calcZones(area, mapConfig, ratio),
            forbidArray = _MapUtils$calcZones.forbidArray,
            spotArray = _MapUtils$calcZones.spotArray,
            zoneArray = _MapUtils$calcZones.zoneArray;

        if (status === _StatusConsts.default.IDLE || status === _StatusConsts.default.SLEEP || status === _StatusConsts.default.FAULT || status === _StatusConsts.default.BACK_CHARGE || status === _StatusConsts.default.CHARGE) {
          spotArray = [];
          zoneArray = [];
        }

        return {
          pointZone: spotArray,
          zone: zoneArray,
          forbid: forbidArray
        };
      };

      _this._calcPath = function (pathArr, mapConfig, ratio, pathId) {
        var _MapUtils$calcPathEnd = _MapUtils.default.calcPathEndPos(pathArr, mapConfig, ratio),
            x = _MapUtils$calcPathEnd.x,
            y = _MapUtils$calcPathEnd.y;

        var result = _this.pathBeautify.beautifyPath(pathArr, pathId);

        var beautifyPath = _MapUtils.default.calcPath(result, mapConfig, ratio, false);

        var res = {
          beautifyPath: beautifyPath
        };

        if (_DevConfig.default.getConfig('showOriginPath')) {
          res.path = _MapUtils.default.calcPath(pathArr, mapConfig, ratio, false);
        }

        if (x !== undefined && y !== undefined) {
          res.machineLeft = x;
          res.machineTop = y;
        }

        return res;
      };

      _this.getPath = function (mapPath) {
        var merge = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var pathId = arguments.length > 2 ? arguments[2] : undefined;
        var removeCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var mapConfig = _this.mapData.mapConfig;
        var _this$state$ratio = _this.state.ratio,
            ratio = _this$state$ratio === undefined ? 1 : _this$state$ratio;

        if (removeCount) {
          var l = _this.originalPath.length;

          _this.originalPath.splice(l - removeCount, removeCount);
        }

        _this.originalPath = merge ? [].concat((0, _toConsumableArray2.default)(_this.originalPath), (0, _toConsumableArray2.default)(mapPath)) : mapPath;

        var res = _this._calcPath(_this.originalPath, mapConfig, ratio, pathId);

        _this.setState((0, _objectSpread2.default)({}, res));
      };

      _this.getLDVirtualZone = function () {
        var _this$state = _this.state,
            isArea = _this$state.isArea,
            _this$state$zone = _this$state.zone,
            zone = _this$state$zone === undefined ? [] : _this$state$zone,
            ratio = _this$state.ratio,
            noMap = _this$state.noMap,
            _this$state$mapScale = _this$state.mapScale,
            mapScale = _this$state$mapScale === undefined ? 1.0 : _this$state$mapScale;
        var _this$mapData$mapConf3 = _this.mapData.mapConfig,
            _this$mapData$mapConf4 = _this$mapData$mapConf3.width,
            width = _this$mapData$mapConf4 === undefined ? 0 : _this$mapData$mapConf4,
            _this$mapData$mapConf5 = _this$mapData$mapConf3.height,
            height = _this$mapData$mapConf5 === undefined ? 0 : _this$mapData$mapConf5;
        var mode = _this.props.mode;

        if (noMap) {
          return null;
        }

        if (zone.length && mode === 2) {
          _logger.default.info("=== old zone clean area, zone: " + JSON.stringify(zone) + " ===");

          var zoneAreasArr = [];
          zone.map(function (item, index) {
            zoneAreasArr.push(_react.default.createElement(_ZoneClean.default, {
              zone: item.vertexs.length === 4 ? item.vertexs : [],
              key: index,
              mapScale: mapScale,
              isArea: isArea,
              areaActive: item.active,
              mapWidth: width * ratio,
              mapHeight: height * ratio
            }));
          });
          return zoneAreasArr;
        } else if (isArea) {
          if (_this.state.forbidWallArray == undefined) {
            return null;
          } else if (_this.state.forbidWallArray.length == 0) {
            return null;
          } else {
            return _this.state.forbidWallArray;
          }
        }

        return null;
      };

      _this.getVirtualZone = function () {
        var _this$state2 = _this.state,
            isArea = _this$state2.isArea,
            _this$state2$zone = _this$state2.zone,
            zone = _this$state2$zone === undefined ? [] : _this$state2$zone,
            ratio = _this$state2.ratio,
            noMap = _this$state2.noMap,
            _this$state2$mapScale = _this$state2.mapScale,
            mapScale = _this$state2$mapScale === undefined ? 1.0 : _this$state2$mapScale;
        var _this$mapData$mapConf6 = _this.mapData.mapConfig,
            _this$mapData$mapConf7 = _this$mapData$mapConf6.width,
            width = _this$mapData$mapConf7 === undefined ? 0 : _this$mapData$mapConf7,
            _this$mapData$mapConf8 = _this$mapData$mapConf6.height,
            height = _this$mapData$mapConf8 === undefined ? 0 : _this$mapData$mapConf8;
        var mode = _this.props.mode;

        if (noMap) {
          return null;
        }

        if (isArea) {
          _logger.default.info('=== crate zone clean area ===');

          return _react.default.createElement(_ZoneClean.default, {
            ref: function ref(_ref4) {
              return _this.zone = _ref4;
            },
            zone: [],
            isArea: isArea,
            mapScale: mapScale,
            mapWidth: width * ratio,
            mapHeight: height * ratio
          });
        } else if (zone.length === 4 && mode === 2) {
          _logger.default.info("=== old zone clean area, zone: " + JSON.stringify(zone) + " ===");

          return _react.default.createElement(_ZoneClean.default, {
            zone: zone.length === 4 ? zone : [],
            mapScale: mapScale,
            isArea: isArea,
            mapWidth: width * ratio,
            mapHeight: height * ratio
          });
        }

        _this.zone = undefined;
        return null;
      };

      _this._deleteWallFun = function (position) {
        var forbidWallArray = _this.state.forbidWallArray;
        var temp = [];

        for (var i = 0; i < forbidWallArray.length; i++) {
          temp.push(forbidWallArray[i]);
        }

        for (var _i = 0; _i < _this.areaBlockAreRef.length; _i++) {
          if (_this.areaBlockAreRef[_i]._returnPosition() == position) {
            temp.splice(_i, 1);

            _this.areaBlockAreRef.splice(_i, 1);

            break;
          }
        }

        _this.setState({
          forbidWallArray: temp
        });
      };

      _this._getSpotZone = function () {
        var _this$state3 = _this.state,
            isSpot = _this$state3.isSpot,
            _this$state3$spotLeft = _this$state3.spotLeft,
            spotLeft = _this$state3$spotLeft === undefined ? 0 : _this$state3$spotLeft,
            _this$state3$spotTop = _this$state3.spotTop,
            spotTop = _this$state3$spotTop === undefined ? 0 : _this$state3$spotTop,
            _this$state3$pointZon = _this$state3.pointZone,
            pointZone = _this$state3$pointZon === undefined ? [] : _this$state3$pointZon,
            noMap = _this$state3.noMap,
            _this$state3$zone = _this$state3.zone,
            zone = _this$state3$zone === undefined ? [] : _this$state3$zone;

        if (noMap) {
          return null;
        }

        var mode = _this.props.mode;

        if (isSpot && spotLeft !== 0 && spotTop !== 0 || pointZone.length === 4 && mode === 4 || zone.length && zone[0].vertexs.length && mode === 3) {
          var tempPointArray = pointZone;

          if (mode === 3) {
            tempPointArray = zone[0].vertexs;
          }

          return _react.default.createElement(_SpotClean.default, {
            ref: function ref(_ref5) {
              return _this._spot = _ref5;
            },
            mode: mode,
            pointArray: mode === 4 || mode === 3 ? tempPointArray : [],
            marginLeft: spotLeft,
            marginTop: spotTop
          });
        }

        _this._spot = undefined;
        return null;
      };

      _this.getForbidZone = function () {
        var _this$state4 = _this.state,
            _this$state4$forbid = _this$state4.forbid,
            forbid = _this$state4$forbid === undefined ? [] : _this$state4$forbid,
            noMap = _this$state4.noMap;

        if (noMap) {
          return null;
        }

        if (_this.mapImage) {
          var forbidArray = [];

          for (var i = 0; i < forbid.length; i++) {
            forbidArray.push(_react.default.createElement(_ShowForbidZone.default, {
              key: i,
              zone: forbid[i].vertexs,
              forbidIndex: i + 1,
              forbidType: forbid[i].forbidType,
              tag: forbid[i].tag
            }));
          }

          return forbidArray;
        }

        return null;
      };

      _this._onTouchMap = function (x, y) {
        var _this$state5 = _this.state,
            _this$state5$selectAr = _this$state5.selectAreaArray,
            selectAreaArray = _this$state5$selectAr === undefined ? [] : _this$state5$selectAr,
            ratio = _this$state5.ratio;
        var _this$mapData2 = _this.mapData,
            mapConfig = _this$mapData2.mapConfig,
            data = _this$mapData2.data;
        var width = mapConfig.width,
            height = mapConfig.height;

        var id = _MapUtils.default.calcAreaId(data, x, y, width, height, ratio);

        if (id <= 0) {
          return;
        }

        var index = selectAreaArray.indexOf(id);
        var areaArray;

        if (index >= 0) {
          _this.setState({
            isAddArea: 2
          });

          areaArray = selectAreaArray.filter(function (item) {
            return item !== id;
          });
        } else {
          _this.setState({
            isAddArea: 1
          });

          areaArray = [].concat((0, _toConsumableArray2.default)(selectAreaArray), [id]);
        }

        _this.setState({
          selectAreaArray: areaArray
        }, function () {
          _this._refreshMap;
        });

        _this.notifyAreaChanged(areaArray);
      };

      _this._getAreaClean = function () {
        var _this$mapData$mapConf9 = _this.mapData.mapConfig.mapId,
            mapId = _this$mapData$mapConf9 === undefined ? 0 : _this$mapData$mapConf9;
        var _this$state$selectAre = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre === undefined ? [] : _this$state$selectAre;
        var value = {};
        value.mapId = mapId;
        value.segmentId = (0, _toConsumableArray2.default)(selectAreaArray);

        _this.clearSelectArea();

        if (selectAreaArray.length === 0) {
          return '';
        }

        return JSON.stringify(value);
      };

      _this.clearSelectArea = function () {
        var _this$state$selectAre2 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre2 === undefined ? [] : _this$state$selectAre2;

        if (selectAreaArray.length <= 0) {
          return;
        }

        _this.setState({
          selectAreaArray: []
        }, _this._refreshMap);

        _this.notifyAreaChanged([]);
      };

      _this.notifyAreaChanged = function (areaArray) {
        var onSelectAreaChanged = _this.props.onSelectAreaChanged;

        if (onSelectAreaChanged) {
          onSelectAreaChanged(areaArray);
        }
      };

      _this._refreshMap = function () {
        var _this$state6 = _this.state,
            _this$state6$selectAr = _this$state6.selectAreaArray,
            selectAreaArray = _this$state6$selectAr === undefined ? [] : _this$state6$selectAr,
            ratio = _this$state6.ratio;
        var _this$mapData3 = _this.mapData,
            mapStr = _this$mapData3.mapStr,
            _this$mapData3$mapCon = _this$mapData3.mapConfig,
            width = _this$mapData3$mapCon.width,
            height = _this$mapData3$mapCon.height,
            colorMap = _this$mapData3.colorMap;

        _this._genMapImage(mapStr, width, height, ratio, colorMap, selectAreaArray).then(function (success) {
          if (success) {
            _this.forceUpdate();
          }
        });
      };

      _this._getZoneData = function () {
        var mapConfig = _this.mapData.mapConfig;
        var height = mapConfig.height,
            resolution = mapConfig.resolution,
            xMin = mapConfig.xMin,
            yMin = mapConfig.yMin,
            mapId = mapConfig.mapId;
        var ratio = _this.state.ratio;
        var areaInfoArray = [];

        if (_this.areaBlockAreRef.length) {
          for (var i = 0; i < _this.areaBlockAreRef.length; i++) {
            var areaInfo = {};
            var testFirstZone = _this.areaBlockAreRef[i];
            var value = testFirstZone.returnXY();

            var leftTop = _MapUtils.default.screenToDevice(value[0][0], value[0][1], height, xMin, yMin, resolution, ratio);

            var rightTop = _MapUtils.default.screenToDevice(value[1][0], value[1][1], height, xMin, yMin, resolution, ratio);

            var leftBottom = _MapUtils.default.screenToDevice(value[2][0], value[2][1], height, xMin, yMin, resolution, ratio);

            var rightBottom = _MapUtils.default.screenToDevice(value[3][0], value[3][1], height, xMin, yMin, resolution, ratio);

            var zoneArray = [[leftTop.x, leftTop.y], [rightTop.x, rightTop.y], [rightBottom.x, rightBottom.y], [leftBottom.x, leftBottom.y]];
            areaInfo.name = '测试';
            areaInfo.id = 300 + testFirstZone._returnPosition();
            areaInfo.tag = "zone" + areaInfo.id;
            areaInfo.vertexs = zoneArray;
            areaInfo.active = testFirstZone.returnCleanActive() == 2 ? 'depth' : 'normal';
            areaInfo.mode = 'area';
            areaInfoArray.push(areaInfo);
          }

          var sendData = {
            'MapId': mapId,
            "ExtraAreas": areaInfoArray
          };
          return JSON.stringify(sendData);
        }

        return '[]';
      };

      _this._getZoneData_Old = function () {
        var mapConfig = _this.mapData.mapConfig;
        var height = mapConfig.height,
            resolution = mapConfig.resolution,
            xMin = mapConfig.xMin,
            yMin = mapConfig.yMin,
            mapId = mapConfig.mapId;
        var ratio = _this.state.ratio;
        var areaInfo = {};

        if (_this.zone) {
          var value = _this.zone.returnXY();

          var leftTop = _MapUtils.default.screenToDevice(value[0][0], value[0][1], height, xMin, yMin, resolution, ratio);

          var rightTop = _MapUtils.default.screenToDevice(value[1][0], value[1][1], height, xMin, yMin, resolution, ratio);

          var leftBottom = _MapUtils.default.screenToDevice(value[2][0], value[2][1], height, xMin, yMin, resolution, ratio);

          var rightBottom = _MapUtils.default.screenToDevice(value[3][0], value[3][1], height, xMin, yMin, resolution, ratio);

          var zoneArray = [[leftTop.x, leftTop.y], [rightTop.x, rightTop.y], [rightBottom.x, rightBottom.y], [leftBottom.x, leftBottom.y]];
          areaInfo.MapId = mapId;
          areaInfo.ExtraAreas = {};
          areaInfo.ExtraAreas.name = '测试';
          areaInfo.ExtraAreas.id = 300;
          areaInfo.ExtraAreas.tag = 'zone';
          areaInfo.ExtraAreas.vertexs = zoneArray;
          areaInfo.ExtraAreas.active = _this.props.isDoubleClean === true ? 'depth' : 'normal';
          areaInfo.ExtraAreas.mode = 'area';
          return JSON.stringify(areaInfo);
        }

        return '{}';
      };

      _this._setZone = function () {
        var _this$state7 = _this.state,
            _this$state7$isSpot = _this$state7.isSpot,
            isSpot = _this$state7$isSpot === undefined ? false : _this$state7$isSpot,
            _this$state7$noMap = _this$state7.noMap,
            noMap = _this$state7$noMap === undefined ? true : _this$state7$noMap,
            _this$state7$isArea = _this$state7.isArea,
            isArea = _this$state7$isArea === undefined ? false : _this$state7$isArea;
        var _this$props = _this.props,
            _this$props$status = _this$props.status,
            status = _this$props$status === undefined ? 0 : _this$props$status,
            onPropChange = _this$props.onPropChange;

        if (!isSpot && !noMap) {
          switch (status) {
            case _StatusConsts.default.PAUSE:
            case _StatusConsts.default.SWEEP:
              _this.curClean = 2;

              _this.setState({
                dialogStr: _localString.default.finish_clean_to_zone,
                dialogVisiable: true
              });

              break;

            case _StatusConsts.default.BACK_CHARGE:
              _this.curClean = 2;

              _this.setState({
                dialogStr: _localString.default.finish_charge_to_zone,
                dialogVisiable: true
              });

              break;

            default:
              onPropChange({
                isSpot: false,
                isArea: !isArea
              });

              _this.setState({
                isArea: !isArea,
                isSpot: false
              });

              break;
          }
        }
      };

      _this._setBorder = function (position) {
        for (var i = 0; i < _this.areaBlockAreRef.length; i++) {
          if (_this.areaBlockAreRef[i]) {
            if (_this.areaBlockAreRef[i]._returnPosition() == position) {
              _this.areaBlockAreRef[i].setShowBorder(true);
            } else {
              _this.areaBlockAreRef[i].setShowBorder(false);
            }
          }
        }
      };

      _this._showMachine = function () {
        var _this$state8 = _this.state,
            machineLeft = _this$state8.machineLeft,
            machineTop = _this$state8.machineTop,
            configMachineLeft = _this$state8.configMachineLeft,
            configMachineTop = _this$state8.configMachineTop,
            _this$state8$chargePi = _this$state8.chargePileLeft,
            chargePileLeft = _this$state8$chargePi === undefined ? 0 : _this$state8$chargePi,
            _this$state8$chargePi2 = _this$state8.chargePileTop,
            chargePileTop = _this$state8$chargePi2 === undefined ? 0 : _this$state8$chargePi2;
        var status = _this.props.status;
        var _this$mapData$mapConf10 = _this.mapData.mapConfig,
            _this$mapData$mapConf11 = _this$mapData$mapConf10.width,
            width = _this$mapData$mapConf11 === undefined ? 0 : _this$mapData$mapConf11,
            _this$mapData$mapConf12 = _this$mapData$mapConf10.height,
            height = _this$mapData$mapConf12 === undefined ? 0 : _this$mapData$mapConf12;

        if (width > 10 && height > 10) {
          if (chargePileLeft !== 0 && chargePileTop !== 0 && (status == _StatusConsts.default.CHARGE || status == _StatusConsts.default.FULL)) {
            return _react.default.createElement(_Robot.default, {
              status: status,
              center: {
                x: chargePileLeft,
                y: chargePileTop
              },
              style: {
                position: 'absolute'
              }
            });
          } else if (_this.mapImage && machineLeft && machineTop) {
            return _react.default.createElement(_Robot.default, {
              status: status,
              center: {
                x: machineLeft,
                y: machineTop
              },
              style: {
                position: 'absolute'
              }
            });
          } else if (_this.mapImage && configMachineLeft && configMachineTop) {
            return _react.default.createElement(_Robot.default, {
              status: status,
              center: {
                x: configMachineLeft,
                y: configMachineTop
              },
              style: {
                position: 'absolute'
              }
            });
          }
        }

        return null;
      };

      _this._getSpotPosition = function () {
        var mapConfig = _this.mapData.mapConfig;
        var height = mapConfig.height,
            resolution = mapConfig.resolution,
            xMin = mapConfig.xMin,
            yMin = mapConfig.yMin,
            mapId = mapConfig.mapId;
        var _this$state$ratio2 = _this.state.ratio,
            ratio = _this$state$ratio2 === undefined ? 1 : _this$state$ratio2;
        var areaInfo = {};

        if (_this._spot) {
          var value = _this._spot.returnSpotXY();

          var pageX = value[0];
          var pageY = value[1];
          var zoneWidth = value[2];
          var zoneHeight = value[3];

          var lt = _MapUtils.default.screenToDevice(pageX, pageY, height, xMin, yMin, resolution, ratio);

          var rt = _MapUtils.default.screenToDevice(pageX + zoneWidth, pageY, height, xMin, yMin, resolution, ratio);

          var lb = _MapUtils.default.screenToDevice(pageX, pageY + zoneHeight, height, xMin, yMin, resolution, ratio);

          var rb = _MapUtils.default.screenToDevice(pageX + zoneWidth, pageY + zoneHeight, height, xMin, yMin, resolution, ratio);

          var zoneArray = [[lt.x, lt.y], [rt.x, rt.y], [rb.x, rb.y], [lb.x, lb.y]];
          areaInfo.MapId = mapId;
          areaInfo.ExtraAreas = {};
          areaInfo.ExtraAreas.name = '定点';
          areaInfo.ExtraAreas.id = 301;
          areaInfo.ExtraAreas.tag = 'zone';
          areaInfo.ExtraAreas.vertexs = zoneArray;
          areaInfo.ExtraAreas.active = _this.props.isDoubleClean === true ? 'depth' : 'normal';
          areaInfo.ExtraAreas.mode = 'point';
          var data = JSON.stringify(areaInfo);
          return data;
        }

        return '{}';
      };

      _this._getCharegPile = function () {
        var _this$state9 = _this.state,
            _this$state9$chargePi = _this$state9.chargePileLeft,
            chargePileLeft = _this$state9$chargePi === undefined ? 0 : _this$state9$chargePi,
            _this$state9$chargePi2 = _this$state9.chargePileTop,
            chargePileTop = _this$state9$chargePi2 === undefined ? 0 : _this$state9$chargePi2,
            _this$state9$chargePi3 = _this$state9.chargePileDeg,
            chargePileDeg = _this$state9$chargePi3 === undefined ? 0 : _this$state9$chargePi3;

        if (chargePileLeft !== 0 && chargePileTop !== 0) {
          return _react.default.createElement(_reactNative.View, {
            pointerEvents: "none",
            style: [{
              position: 'absolute',
              transform: [{
                translateX: chargePileLeft - 8
              }, {
                translateY: chargePileTop - 11
              }, {
                rotate: chargePileDeg + "deg"
              }]
            }]
          }, _react.default.createElement(_reactNative.Image, {
            source: _$$_REQUIRE(_dependencyMap[42])
          }));
        }

        return null;
      };

      _this._calcDockScreenPos = function (mapConfig, ratio) {
        var pos = _MapUtils.default.calcDockPos(mapConfig, ratio);

        var _pos$x = pos.x,
            x = _pos$x === undefined ? 0 : _pos$x,
            _pos$y = pos.y,
            y = _pos$y === undefined ? 0 : _pos$y,
            _pos$angle = pos.angle,
            angle = _pos$angle === undefined ? 0 : _pos$angle;
        return {
          chargePileLeft: x,
          chargePileTop: y,
          chargePileDeg: angle
        };
      };

      _this._calcMachineScreenPos = function (mapConfig, ratio) {
        var pos = _MapUtils.default.calcMachinePos(mapConfig, ratio);

        var machineLeft = pos.machineLeft,
            machineTop = pos.machineTop;
        return {
          configMachineLeft: machineLeft,
          configMachineTop: machineTop
        };
      };

      _this.resetZoneView = function () {
        _this.setState({
          forbidWallArray: [],
          isArea: false,
          isSpot: false,
          isPartArea: false
        });

        _this.areaBlockNum = 0;
        _this.areaBlockAreRef = [];

        _this.clearSelectArea();
      };

      _this._closeZoneView = function () {
        _this.setState({
          isArea: false,
          isSpot: false,
          isPartArea: false,
          zone: [],
          path: '',
          beautifyPath: '',
          forbidWallArray: []
        });

        _this.areaBlockNum = 0;
        _this.areaBlockAreRef = [];
      };

      _this._dismissStopSweepDialog = function () {
        _this.setState({
          dialogVisiable: false,
          showLoading: true
        }, function () {
          _api.SpecApi.specA(ACTION.STOP_SWEEPING).then(function (success) {
            _this.setState({
              showLoading: false
            });

            var onPropChange = _this.props.onPropChange;

            if (success) {
              if (_this.curClean === 1) {
                onPropChange({
                  isSpot: true,
                  status: _StatusConsts.default.IDLE
                });

                _this.setState({
                  isSpot: true
                });

                _this.clearSelectArea();
              } else if (_this.curClean === 2) {
                onPropChange({
                  isArea: true,
                  status: _StatusConsts.default.IDLE
                });

                _this.setState({
                  isArea: true,
                  zone: []
                });

                _this.clearSelectArea();
              }

              _this.curClean = 0;
            } else {
              _UIUtils.default.info(_localString.default.operator_fail);
            }
          });
        });
      };

      _this._renderMap = function () {
        var _this$mapData$mapConf13 = _this.mapData.mapConfig,
            width = _this$mapData$mapConf13.width,
            height = _this$mapData$mapConf13.height,
            autoAreaValue = _this$mapData$mapConf13.autoAreaValue;
        var _this$state10 = _this.state,
            noMap = _this$state10.noMap,
            ratio = _this$state10.ratio;

        if (noMap) {
          setTimeout(function () {
            if (noMap) {
              _this.props.isnoMap(noMap);
            }
          }, 5000);
        }

        if (!noMap && _this.mapImage) {
          _this.props.isnoMap(noMap);

          return _react.default.createElement(_MapComponent.default, {
            noFlicker: true,
            width: width,
            height: height,
            ratio: ratio,
            source: {
              uri: _this.mapImage
            }
          });
        } else {
          _this.state.isShowAdd = false;
        }

        return null;
      };

      _this._renderBeautifyPath = function () {
        var _this$state11 = _this.state,
            _this$state11$beautif = _this$state11.beautifyPath,
            beautifyPath = _this$state11$beautif === undefined ? '' : _this$state11$beautif,
            noMap = _this$state11.noMap;

        if (!noMap && !beautifyPath) {
          return _react.default.createElement(_reactNativeSvg.Path, {
            d: beautifyPath,
            fill: "none",
            stroke: "#FF0000",
            strokeWidth: 1
          });
        }

        return null;
      };

      _this._handleClick = function (event) {
        var _event$nativeEvent = event.nativeEvent,
            locationX = _event$nativeEvent.locationX,
            locationY = _event$nativeEvent.locationY;

        _this.showSpotView(event);

        var status = _this.props.status;
        var _this$state12 = _this.state,
            isSpot = _this$state12.isSpot,
            isArea = _this$state12.isArea,
            isPartArea = _this$state12.isPartArea;

        if (status != _StatusConsts.default.SWEEP && status != _StatusConsts.default.BACK_CHARGE && status != _StatusConsts.default.PAUSE && !isSpot && !isArea && isPartArea) {
          _this._onTouchMap(locationX, locationY);
        }
      };

      _this._onScaleEnd = function (event, style) {
        var mapScale = (0, _events.scales)(style);

        _this.setState({
          mapScale: mapScale
        });
      };

      _this.marginLeft = 0.0;
      _this.marginTop = 0.0;
      _this.startPos = 0;
      _this.PathId = 0;
      _this.curClean = 0;
      _this.originalPath = [];
      _this.areaBlockAreRef = [];

      var _assertThisInitialize2 = (0, _assertThisInitialized2.default)(_this),
          state = _assertThisInitialize2.state;

      _this.mapViewHeight = screenHeight - 250;
      _this.state = (0, _objectSpread2.default)({}, state, {
        exit: false,
        showLoading: false,
        dialogStr: '',
        dialogVisiable: false,
        path: '',
        beautifyPath: '',
        isArea: false,
        isSpot: false,
        isPartArea: false,
        zone: [],
        forbid: [],
        pointZone: [],
        machineLeft: 0,
        machineTop: 0,
        spotLeft: 0,
        spotTop: 0,
        chargePileLeft: 0,
        chargePileTop: 0,
        chargePileDeg: 0,
        noMap: true,
        mapScale: 1.0,
        rightNav: [{
          name: _localString.default.add_area,
          img: _$$_REQUIRE(_dependencyMap[43])
        }, {
          name: _localString.default.map_editing,
          img: _$$_REQUIRE(_dependencyMap[44])
        }, {
          name: _localString.default.mode_setting,
          img: _$$_REQUIRE(_dependencyMap[45])
        }],
        isShowAdd: false,
        isMode: false,
        mainVisible: false,
        customSwicthType: false,
        ismop: false,
        suctionLi: [{
          img: _$$_REQUIRE(_dependencyMap[46])
        }, {
          img: _$$_REQUIRE(_dependencyMap[47])
        }, {
          img: _$$_REQUIRE(_dependencyMap[48])
        }, {
          img: _$$_REQUIRE(_dependencyMap[49])
        }],
        waterVolume: [{
          img: _$$_REQUIRE(_dependencyMap[50])
        }, {
          img: _$$_REQUIRE(_dependencyMap[51])
        }, {
          img: _$$_REQUIRE(_dependencyMap[52])
        }],
        rightNavIndex: null,
        suctionImg: null,
        suctionIndex: null,
        suctionTxt: null,
        HydraulicImg: null,
        HydraulicIndex: null,
        HydraulicTxt: null,
        editList: [{
          img: _$$_REQUIRE(_dependencyMap[53]),
          name: _localString.default.prohibit
        }, {
          img: _$$_REQUIRE(_dependencyMap[54]),
          name: _localString.default.partitionEditing
        }, {
          img: _$$_REQUIRE(_dependencyMap[55]),
          name: _localString.default.custom_mode
        }, {
          img: _$$_REQUIRE(_dependencyMap[56]),
          name: _localString.default.my_map
        }],
        forbidWallArray: [],
        customSwitch: null,
        controlCustomShow: false,
        sweepType: null,
        renewFan: null,
        isMap: false,
        isCustom: false,
        isShowCustom: true,
        modeNum: null,
        isAddArea: 0
      });
      _this.areaBlockNum = 0;
      _this.mapScheduler = new _CycleTask.default(3000, false, 0);
      _this.pathScheduler = new _CycleTask.default(2000, false, 100);
      _this.pathData = new _PathData.default();
      _this.pathBeautify = new _PathBeautify.default();
      _this.timeDiff = Date.now() % 86400000;
      _this.pathIndex = 0;
      return _this;
    }

    (0, _createClass2.default)(MainMap, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.syncProps();

        _PushManager.default.addObserver('MainMapObserve', this.handlePushMessage, {
          props: [PROP.RENEW_FAN, PROP.FAN_LEVEL, PROP.WATER_LEVEL, PROP.CUSTOM_SWITCH, PROP.MOP, PROP.SWEEP_TYPE]
        });

        this.isShowAdd = _reactNative.DeviceEventEmitter.addListener('isShowAdd', function (msg) {
          if (msg) {
            _this2.setCleanZone();
          } else {
            _this2.resetZoneView();
          }

          _this2.setState({
            isShowAdd: msg
          });
        });
        this._deleteWall = _reactNative.DeviceEventEmitter.addListener('_deleteWall', function (msg) {
          _this2._deleteWallFun(msg);
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _PushManager.default.removeObserver('MainMapObserve');

        this.isShowAdd.emitter.removeAllListeners('isShowAdd');

        this._deleteWall.emitter.removeAllListeners('_deleteWall');

        this.setState = function () {
          return;
        };
      }
    }, {
      key: "syncProps",
      value: function syncProps() {
        var _this3 = this;

        _api.SpecApi.syncProps([PROP.RENEW_FAN, PROP.FAN_LEVEL, PROP.WATER_LEVEL, PROP.CUSTOM_SWITCH, PROP.MOP, PROP.SWEEP_TYPE]).then(function (msg) {
          _this3.suctionIconImg(!msg.fanLevel ? msg.renewFan - 1 : msg.fanLevel - 1);

          _this3.HydraulicIcon(msg.waterLevel - 1);

          _this3.setState({
            sweepType: msg.sweepType,
            ismop: msg.mop,
            customSwitch: msg.customSwitch,
            controlCustomShow: msg.customSwitch,
            renewFan: msg.renewFan
          });

          winSuction = msg.fanLevel;
          winHydraulic = msg.waterLevel;
          winCustomSwitc = msg.customSwitch;
          winSweepType = msg.sweepType;
        });
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var status = nextProps.status;
        var oldStatus = this.props.status;

        if (status === oldStatus) {
          return;
        }

        var appStatus = this.appStatus,
            pageStatus = this.pageStatus;

        _logger.default.info("componentWillReceiveProps, oldStatus: " + oldStatus + ", status: " + status + ", appStatus: " + appStatus + ", pageStatus: " + pageStatus);

        if (appStatus !== _AppConst.default.APP_PAUSE && pageStatus !== _AppConst.default.PAGE_PAUSE) {
          if (oldStatus !== _StatusConsts.default.BACK_CHARGE && oldStatus !== _StatusConsts.default.SWEEP && (status === _StatusConsts.default.BACK_CHARGE || status === _StatusConsts.default.SWEEP)) {
            _logger.default.info('componentWillReceiveProps, start loop load map');

            this.mapScheduler.start(this._loadMap, true, MAP_DURATION);
          }

          if ((oldStatus === _StatusConsts.default.BACK_CHARGE || oldStatus === _StatusConsts.default.SWEEP) && status !== _StatusConsts.default.BACK_CHARGE && status !== _StatusConsts.default.SWEEP) {
            _logger.default.info('componentWillReceiveProps, pause loop load map');

            this.mapScheduler.pause();
            this.pathScheduler.pause();
          }
        }
      }
    }, {
      key: "setUpPartArea",
      value: function setUpPartArea(index) {
        var _this4 = this;

        var _this$mapData$mapConf14 = this.mapData.mapConfig;
        _this$mapData$mapConf14 = _this$mapData$mapConf14 === undefined ? {} : _this$mapData$mapConf14;
        var _this$mapData$mapConf15 = _this$mapData$mapConf14.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf15 === undefined ? [] : _this$mapData$mapConf15;

        if (autoAreaValue.length <= 0) {
          this.setState({
            isMap: index
          }, function () {
            _this4.props.isPartArea(_this4.state.isMap, _localString.default.NoMap);
          });
          return;
        }

        this.setState({
          isPartArea: index
        });
      }
    }, {
      key: "startLoadMap",
      value: function startLoadMap() {
        var loop = this._shouldLoop();

        this.mapScheduler.start(this._loadMap, loop, MAP_DURATION);
      }
    }, {
      key: "setCleanZone",
      value: function setCleanZone() {
        var _this5 = this;

        var _this$state13 = this.state,
            _this$state13$isArea = _this$state13.isArea,
            isArea = _this$state13$isArea === undefined ? false : _this$state13$isArea,
            _this$state13$isSpot = _this$state13.isSpot,
            isSpot = _this$state13$isSpot === undefined ? false : _this$state13$isSpot,
            _this$state13$zone = _this$state13.zone,
            zone = _this$state13$zone === undefined ? [] : _this$state13$zone,
            ratio = _this$state13.ratio,
            _this$state13$noMap = _this$state13.noMap,
            noMap = _this$state13$noMap === undefined ? true : _this$state13$noMap,
            _this$state13$mapScal = _this$state13.mapScale,
            mapScale = _this$state13$mapScal === undefined ? 1.0 : _this$state13$mapScal,
            _this$state13$forbidW = _this$state13.forbidWallArray,
            forbidWallArray = _this$state13$forbidW === undefined ? [] : _this$state13$forbidW;
        var _this$mapData$mapConf16 = this.mapData.mapConfig,
            _this$mapData$mapConf17 = _this$mapData$mapConf16.width,
            width = _this$mapData$mapConf17 === undefined ? 0 : _this$mapData$mapConf17,
            _this$mapData$mapConf18 = _this$mapData$mapConf16.height,
            height = _this$mapData$mapConf18 === undefined ? 0 : _this$mapData$mapConf18;
        var _this$props2 = this.props,
            mode = _this$props2.mode,
            _this$props2$status = _this$props2.status,
            status = _this$props2$status === undefined ? 0 : _this$props2$status,
            onPropChange = _this$props2.onPropChange;

        if (noMap) {
          return null;
        }

        this.areaBlockNum++;

        if (this.areaBlockNum == 1) {
          this.setState({
            isArea: true
          });

          if (!isSpot && !noMap) {
            switch (status) {
              case _StatusConsts.default.PAUSE:
              case _StatusConsts.default.SWEEP:
                this.curClean = 2;
                this.setState({
                  dialogStr: _localString.default.finish_clean_to_zone
                });
                break;

              case _StatusConsts.default.BACK_CHARGE:
                this.curClean = 2;
                this.setState({
                  dialogStr: _localString.default.finish_charge_to_zone
                });
                break;

              default:
                onPropChange({
                  isSpot: false,
                  isArea: !isArea
                });

                if (!isArea) {
                  this.clearSelectArea();
                }

                this.setState({
                  isArea: !isArea,
                  isSpot: false
                });
                break;
            }
          }
        }

        if (forbidWallArray.length >= 5) {
          _UIUtils.default.info(_localString.default.isZoning);

          return false;
        }

        var temp = [];

        for (var i = 0; i < forbidWallArray.length; i++) {
          temp.push(forbidWallArray[i]);
        }

        temp.push(_react.default.createElement(_ZoneClean.default, {
          ref: function ref(_ref6) {
            if (_ref6) {
              var forbidView = _ref6;

              _this5.areaBlockAreRef.push(forbidView);
            }
          },
          key: this.areaBlockNum,
          zone: [],
          isAreaIndex: this.areaBlockNum,
          isAreaName: this.areaBlockNum,
          isArea: true,
          mapScale: mapScale,
          mapWidth: width * ratio,
          mapHeight: height * ratio,
          setBorder: this._setBorder
        }));

        this._setBorder(this.areaBlockNum);

        this.setState({
          forbidWallArray: temp
        });
      }
    }, {
      key: "_setSpot",
      value: function _setSpot(index) {
        var autoAreaValue = this.mapData.mapConfig.autoAreaValue;
        this.setState({
          rightNavIndex: index,
          mainVisible: index == 2 || index == 1 ? true : false
        });

        if (index == 2) {
          this.syncProps();
        }

        if (index == 0) {
          this.setCleanZone();
        }
      }
    }, {
      key: "setLdSpot",
      value: function setLdSpot() {
        var _this$state14 = this.state,
            _this$state14$isArea = _this$state14.isArea,
            isArea = _this$state14$isArea === undefined ? false : _this$state14$isArea,
            _this$state14$noMap = _this$state14.noMap,
            noMap = _this$state14$noMap === undefined ? true : _this$state14$noMap,
            _this$state14$isSpot = _this$state14.isSpot,
            isSpot = _this$state14$isSpot === undefined ? false : _this$state14$isSpot;
        var _this$props3 = this.props,
            status = _this$props3.status,
            onPropChange = _this$props3.onPropChange;

        if (!isArea && !noMap) {
          switch (status) {
            case _StatusConsts.default.PAUSE:
            case _StatusConsts.default.SWEEP:
              this.curClean = 1;
              this.setState({
                dialogStr: _localString.default.finish_clean_to_spot
              });
              break;

            case _StatusConsts.default.BACK_CHARGE:
              this.curClean = 1;
              this.setState({
                dialogStr: _localString.default.finish_charge_to_spot
              });
              break;

            default:
              onPropChange({
                isArea: false,
                isSpot: !isSpot
              });
              this.setState({
                isSpot: !isSpot,
                isArea: false,
                spotLeft: 0,
                spotTop: 0
              });

              if (!isSpot) {
                this._spot = undefined;
                this.clearSelectArea();
              }

              break;
          }
        }
      }
    }, {
      key: "HydraulicIcon",
      value: function HydraulicIcon(index) {
        var img = '',
            Test = '';

        switch (index) {
          case 0:
            img = _$$_REQUIRE(_dependencyMap[57]);
            Test = _localString.default.small;
            break;

          case 1:
            img = _$$_REQUIRE(_dependencyMap[58]);
            Test = _localString.default.in;
            break;

          case 2:
            img = _$$_REQUIRE(_dependencyMap[59]);
            Test = _localString.default.big;
            break;
        }

        this.setState({
          HydraulicImg: img,
          HydraulicIndex: index,
          HydraulicTxt: Test
        });
      }
    }, {
      key: "_changeWaterLevel",
      value: function _changeWaterLevel(level) {
        var _this6 = this;

        if (!this.state.ismop || this.state.customSwitch) {
          return;
        }

        _api.SpecApi.specSetNoFlatShake(PROP.WATER_LEVEL, level).then(function (success) {
          if (success) {
            var onPropChange = _this6.props.onPropChange;
            onPropChange({
              waterLevel: level
            });
          }
        });
      }
    }, {
      key: "suctionIconImg",
      value: function suctionIconImg(index) {
        var img = '',
            test = '';

        switch (index) {
          case 0:
            img = _$$_REQUIRE(_dependencyMap[60]);
            test = _localString.default.silent;
            break;

          case 1:
            img = _$$_REQUIRE(_dependencyMap[61]);
            test = _localString.default.standard;
            break;

          case 2:
            img = _$$_REQUIRE(_dependencyMap[62]);
            test = _localString.default.middle;
            break;

          case 3:
            img = _$$_REQUIRE(_dependencyMap[63]);
            test = _localString.default.strong;
            break;
        }

        this.setState({
          suctionImg: img,
          suctionIndex: index,
          suctionTxt: test
        });
      }
    }, {
      key: "_changeFanLevel",
      value: function _changeFanLevel(level) {
        var _this7 = this;

        _api.SpecApi.specSetNoFlatShake(PROP.FAN_LEVEL, level).then(function (success) {
          if (success) {
            var onPropChange = _this7.props.onPropChange;

            if (level == 0) {
              _this7.mopFunClick(1);
            }

            onPropChange({
              fanLevel: level
            });
          }
        });
      }
    }, {
      key: "mopFunClick",
      value: function mopFunClick(sweepValue) {
        _api.SpecApi.specSetNoFlatShake(PROP.SWEEP_TYPE, sweepValue).then(function (success) {});
      }
    }, {
      key: "customSwitchFunction",
      value: function customSwitchFunction(value) {
        _api.SpecApi.specSetNoFlatShake(PROP.CUSTOM_SWITCH, value).then(function (success) {
          if (success) {}
        });
      }
    }, {
      key: "editListFun",
      value: function editListFun(index) {
        var _this$props4 = this.props,
            navigation = _this$props4.navigation,
            status = _this$props4.status;

        if (this.state.noMap && index < 3) {
          return;
        }

        if (status == _StatusConsts.default.PAUSE && index != 0 || status == _StatusConsts.default.SWEEP || status == _StatusConsts.default.BACK_CHARGE) {
          this.setState({
            isMode: true,
            mainVisible: true,
            rightNavIndex: null
          });
          return;
        }

        this.setState({
          rightNavIndex: null,
          mainVisible: false
        }, function () {
          switch (index) {
            case 0:
              navigation.navigate('VirtualWall', {
                title: _localString.default.virtual_wall,
                status: status
              });
              break;

            case 1:
              navigation.navigate('ZoneEdit');
              break;

            case 2:
              navigation.navigate('CustomMade');
              break;

            case 3:
              navigation.navigate('MapList');
              break;
          }
        });
      }
    }, {
      key: "showSpotView",
      value: function showSpotView(event) {
        var _event$nativeEvent2 = event.nativeEvent,
            locationX = _event$nativeEvent2.locationX,
            locationY = _event$nativeEvent2.locationY;
        var isSpot = this.state.isSpot;

        if (isSpot) {
          this.setState({
            spotLeft: locationX,
            spotTop: locationY
          });
        }
      }
    }, {
      key: "customClick",
      value: function customClick() {
        var _this8 = this;

        var status = this.props.status;

        if (status == _StatusConsts.default.PAUSE || status == _StatusConsts.default.SWEEP || status == _StatusConsts.default.BACK_CHARGE) {
          this.setState({
            isMode: true,
            mainVisible: true,
            rightNavIndex: null
          });
          return;
        }

        var mapConfig = this.mapData.mapConfig;
        var _mapConfig$autoAreaVa = mapConfig.autoAreaValue,
            autoAreaValue = _mapConfig$autoAreaVa === undefined ? [] : _mapConfig$autoAreaVa;

        if (autoAreaValue.length != 0) {
          for (var i = 0; i < autoAreaValue.length; i++) {
            if (autoAreaValue[i].fanLevel) {
              this.setState({
                isCustom: false
              });
              break;
            }

            if (i + 1 == autoAreaValue.length) {
              this.setState({
                isCustom: true
              });
              return false;
            }
          }
        } else {
          this.setState({
            isCustom: true
          });
          return;
        }

        this.setState({
          customSwitch: !this.state.customSwitch
        }, function () {
          _this8.setState({
            sweepType: _this8.state.customSwitch ? false : _this8.state.sweepType
          });
        });
      }
    }, {
      key: "modeSettingClick",
      value: function modeSettingClick() {
        if (this.state.sweepType != 1) {
          if (winSuction != this.state.suctionIndex + 1) {
            this._changeFanLevel(this.state.suctionIndex + 1);
          }
        }

        if (winHydraulic != this.state.HydraulicIndex + 1) {
          this._changeWaterLevel(this.state.HydraulicIndex + 1);
        }

        if (winSweepType != this.state.sweepType) {
          this.mopFunClick(this.state.sweepType);
        }

        if (winCustomSwitc != this.state.customSwitch) {
          if (this.state.customSwitch) {
            this._changeFanLevel(this.state.renewFan);
          }

          this.customSwitchFunction(this.state.customSwitch);
        }

        this.onDismiss();
      }
    }, {
      key: "onDismiss",
      value: function onDismiss() {
        this.setState({
          mainVisible: false,
          isMode: false,
          isCustom: false
        });

        if (this.state.rightNavIndex == 2) {
          this.syncProps();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this9 = this;

        var _this$mapData4 = this.mapData,
            mapConfig = _this$mapData4.mapConfig,
            colorMap = _this$mapData4.colorMap;
        var _mapConfig$width = mapConfig.width,
            width = _mapConfig$width === undefined ? 0 : _mapConfig$width,
            _mapConfig$height = mapConfig.height,
            height = _mapConfig$height === undefined ? 0 : _mapConfig$height,
            _mapConfig$autoAreaVa2 = mapConfig.autoAreaValue,
            autoAreaValue = _mapConfig$autoAreaVa2 === undefined ? [] : _mapConfig$autoAreaVa2;
        var _this$state15 = this.state,
            selectAreaArray = _this$state15.selectAreaArray,
            _this$state15$exit = _this$state15.exit,
            exit = _this$state15$exit === undefined ? false : _this$state15$exit,
            _this$state15$ratio = _this$state15.ratio,
            ratio = _this$state15$ratio === undefined ? 1 : _this$state15$ratio;
        var minWidth = -width * ratio / 2;
        var maxWidth = screenWidth - width * ratio / 2;
        var minHeight = -height * ratio / 2;
        var maxHeight = height * ratio / 2;

        var showOriginPath = _DevConfig.default.getConfig('showOriginPath');

        var mode = this.props.mode;

        if (exit) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            height: '100%',
            width: '100%',
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, !this.state.isMap ? _react.default.createElement(_GestureView.default, {
          style: {
            justifyContent: 'center',
            alignSelf: 'center'
          },
          ref: function ref(c) {
            _this9.gestures = c;
          },
          draggable: {
            x: {
              min: minWidth,
              max: maxWidth
            },
            y: {
              min: minHeight,
              max: maxHeight
            }
          },
          scalable: {
            min: 0.7,
            max: 1.5
          },
          rotatable: false,
          clickable: this.props.animatedValue._value == 0 ? true : false,
          singleRotatable: false,
          onScaleEnd: this._onScaleEnd,
          onStart: function onStart(event) {},
          onClick: this._handleClick
        }, _react.default.createElement(_reactNative.View, null, this._renderMap(), _react.default.createElement(_reactNativeSvg.Svg, {
          style: {
            position: 'absolute'
          },
          height: screenHeight * 2,
          width: screenWidth * 2
        }, showOriginPath ? _react.default.createElement(_reactNativeSvg.Path, {
          d: this.state.path,
          fill: "none",
          stroke: "#FF0000",
          strokeWidth: 1
        }) : null, _react.default.createElement(_reactNativeSvg.Path, {
          d: this.state.beautifyPath,
          fill: "none",
          stroke: "#FFFFFF",
          strokeWidth: 1
        })), _react.default.createElement(_RoomNameView.default, {
          iscustomSwitch: this.state.controlCustomShow ? mode == 2 || mode == 3 || mode == 4 ? false : true : false,
          selectAreaArray: selectAreaArray,
          colorMap: colorMap,
          areaCenter: this.areaCenter,
          autoAreaValue: autoAreaValue,
          isAddArea: this.state.isAddArea
        }), this.getForbidZone(), this._getCharegPile(), this._showMachine(), this.getLDVirtualZone(), this._getSpotZone())) : null, _react.default.createElement(_reactNative.View, {
          pointerEvents: this.props.animatedValue._value == 0 ? "auto" : "none",
          style: {
            right: 16,
            bottom: 20,
            position: 'absolute'
          }
        }, this.state.rightNav.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: index,
            activeOpacity: 0.3,
            onPress: function onPress() {
              _this9._setSpot(index);
            },
            style: {
              alignItems: 'center',
              marginTop: 20,
              display: index == 0 ? _this9.state.isShowAdd ? 'flex' : 'none' : 'flex'
            }
          }, _react.default.createElement(_reactNative.Image, {
            source: item.img,
            style: styles.leftNavIcon,
            resizeMode: "contain"
          }), _react.default.createElement(_reactNative.Text, {
            style: styles.leftNavTitle
          }, item.name));
        })), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.dialogVisiable,
          title: _localString.default.hint,
          message: this.state.dialogStr,
          onDismiss: function onDismiss() {
            return _this9.setState({
              dialogVisiable: false
            });
          },
          cancelable: true,
          messageStyle: {
            alignSelf: 'center',
            textAlign: 'center',
            fontFamily: 'System'
          },
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: Colors.secondColor
            },
            callback: function callback() {
              _this9.setState({
                dialogVisiable: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: Colors.mainColor
            },
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            callback: function callback() {
              _this9._dismissStopSweepDialog();
            }
          }]
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.mainVisible,
          showTitle: false,
          showButton: false,
          onDismiss: function onDismiss(_) {
            return _this9.onDismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.AbstractDialogBox
        }, this.state.rightNavIndex == 2 ? _react.default.createElement(_reactNative.View, {
          style: styles.modeSetting
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.modeTopTitle, styles.modeSettingTitle]
        }, _localString.default.regular_mode), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.modeTopTitle
        }, _localString.default.suction, _react.default.createElement(_reactNative.Text, {
          style: [styles.modeTopSubtitle, this.state.sweepType == 1 ? styles.modeTopSubtitleActive : '']
        }, " ", this.state.sweepType == 1 ? _localString.default.mopping_only : this.state.suctionTxt)), _react.default.createElement(_reactNative.View, {
          style: [styles.suctionBox, {
            opacity: !this.state.customSwitch ? this.state.sweepType != 1 ? 1 : .5 : .5
          }]
        }, this.state.suctionLi.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            style: [styles.suctionLi, _this9.state.suctionIndex == index && (_this9.state.sweepType == 0 || _this9.state.sweepType == 2) ? styles.suctionActive : ''],
            key: index,
            onPress: function onPress() {
              if (_this9.state.customSwitch || _this9.state.sweepType == 1) {
                return;
              }

              _this9.suctionIconImg(index);
            }
          }, _react.default.createElement(_reactNative.Image, {
            source: _this9.state.suctionIndex == index && (_this9.state.sweepType == 0 || _this9.state.sweepType == 2) ? _this9.state.suctionImg : item.img,
            resizeMode: "contain",
            style: styles.suctionLiIcon
          }));
        }))), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: [styles.modeTopTitle, styles.modeTopTitleTwo]
        }, _localString.default.mopping_water, _react.default.createElement(_reactNative.Text, {
          style: [styles.modeTopSubtitle, this.state.ismop ? '' : styles.onMop]
        }, " ", this.state.ismop ? this.state.HydraulicTxt : _localString.default.mop_notInstalled)), _react.default.createElement(_reactNative.View, {
          style: [styles.suctionBox, {
            opacity: this.state.ismop ? !this.state.customSwitch ? 1 : .5 : .5
          }]
        }, this.state.waterVolume.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            style: [styles.suctionLi, _this9.state.HydraulicIndex == index ? styles.suctionActive : ''],
            key: index,
            onPress: function onPress() {
              if (!_this9.state.ismop || _this9.state.customSwitch) {
                return;
              }

              _this9.HydraulicIcon(index);
            }
          }, _react.default.createElement(_reactNative.Image, {
            source: _this9.state.HydraulicIndex == index ? _this9.state.HydraulicImg : item.img,
            resizeMode: "contain",
            style: styles.suctionLiIcon
          }));
        }))), _react.default.createElement(_reactNative.View, {
          style: [styles.customMode]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.customModeTxte
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.customModeTitle
        }, _localString.default.mopping_only)), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.customModeImg],
          onPress: function onPress() {
            if (_this9.state.ismop && !_this9.state.customSwitch) {
              var st = _this9.state.suctionIndex < 0 ? _this9.state.renewFan - 1 : _this9.state.suctionIndex;

              _this9.suctionIconImg(st);

              _this9.setState({
                sweepType: _this9.state.sweepType == 1 ? 2 : 1
              });
            }
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: this.state.sweepType == 1 ? _$$_REQUIRE(_dependencyMap[64]) : _$$_REQUIRE(_dependencyMap[65]),
          resizeMode: "contain",
          style: styles.customModeImgIcon
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.customMode
        }, _react.default.createElement(_reactNative.View, {
          style: styles.customModeTxte
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.customModeTitle
        }, _localString.default.custom_mode), _react.default.createElement(_reactNative.Text, {
          style: styles.customModeSubTitle
        }, _localString.default.cleanUpBy_area), this.state.isCustom ? _react.default.createElement(_reactNative.Text, {
          style: [styles.customModeSubTitle, {
            color: 'red'
          }]
        }, _localString.default.custom_open) : null), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.customModeImg,
          onPress: function onPress() {
            var st = _this9.state.suctionIndex < 0 ? _this9.state.renewFan - 1 : _this9.state.suctionIndex;

            _this9.suctionIconImg(st);

            _this9.customClick();
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: this.state.customSwitch ? _$$_REQUIRE(_dependencyMap[64]) : _$$_REQUIRE(_dependencyMap[65]),
          resizeMode: "contain",
          style: styles.customModeImgIcon
        }))), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.customModeBtn,
          onPress: function onPress() {
            _this9.modeSettingClick();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.customModeBtnTxt
        }, _localString.default.confirm))) : null, this.state.rightNavIndex == 1 ? _react.default.createElement(_reactNative.View, {
          style: styles.mapEdit
        }, _react.default.createElement(_reactNative.View, {
          style: styles.editLi
        }, this.state.editList.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            style: styles.editLiChilder,
            key: index,
            onPress: function onPress() {
              _this9.editListFun(index);
            }
          }, _react.default.createElement(_reactNative.Image, {
            source: item.img,
            resizeMode: "contain",
            style: {
              width: 40,
              height: 40,
              opacity: index < 3 ? _this9.state.noMap ? .5 : index > 0 && autoAreaValue.length == 0 ? .5 : 1 : 1
            }
          }), _react.default.createElement(_reactNative.Text, {
            style: styles.editLiChilderTxt
          }, item.name));
        }))) : null, this.state.isMode ? _react.default.createElement(_reactNative.View, {
          style: styles.isModeBox
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModePrompt
        }, _localString.default.sweeper_work), _react.default.createElement(_reactNative.View, {
          style: styles.isModeBtn
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.isModeBtnYex, styles.isModeBtnLi],
          onPress: function onPress() {
            _this9.setState({
              mainVisible: false,
              isMode: false
            });

            _api.SpecApi.specA(ACTION.STOP_SWEEPING).then(function (success) {
              if (success) {
                _this9._stopClean(_this9.curCleanMode);

                _this9.setState({
                  bottomNavIndex: null
                });

                _reactNative.DeviceEventEmitter.emit('isShowAdd', false);
              }
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModeBtnYesTxt
        }, _localString.default.confirm)), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.isModeBtnNo, styles.isModeBtnLi],
          onPress: function onPress() {
            _this9.onDismiss();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModeBtnNoTxt
        }, _localString.default.cancel)))) : null)));
      }
    }]);
    return MainMap;
  }(_BaseMap2.default);

  exports.default = MainMap;

  var styles = _reactNative.StyleSheet.create({
    onMop: {
      color: '#B6BDCA'
    },
    isModeBox: {
      marginTop: 30
    },
    isModeBtnYesTxt: {
      color: '#5C92FF',
      fontSize: 16
    },
    isModeBtnNoTxt: {
      color: '#B6BDCA',
      fontSize: 16
    },
    isModeBtn: {
      marginTop: 20,
      marginBottom: 50
    },
    isModeBtnLi: {
      height: 44,
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 20
    },
    isModeBtnYex: {
      borderRadius: 8,
      backgroundColor: 'rgba(92, 146, 255, 0.1)'
    },
    isModePrompt: {
      fontSize: 16,
      color: '#939AA9',
      textAlign: 'center',
      marginTop: 10
    },
    goMap: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 24,
      paddingVertical: 10,
      paddingHorizontal: 20
    },
    goMapContent: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    goMapIcon: {
      width: 14,
      height: 14
    },
    goMapContentIcon: {
      width: 24,
      height: 24
    },
    goMapContentTxt: {
      color: '#626772',
      fontSize: 14,
      marginLeft: 8
    },
    mapEdit: {
      paddingVertical: 20
    },
    editLi: {
      flexDirection: 'row'
    },
    editLiChilder: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      paddingBottom: 11,
      paddingTop: 16
    },
    editLiChilderIcon: {
      width: 40,
      height: 40
    },
    editLiChilderTxt: {
      fontSize: 12,
      color: '#626772',
      marginTop: 12
    },
    customModeBtn: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#5C92FF',
      height: 44,
      borderRadius: 8,
      marginTop: 40
    },
    suctionActive: {
      backgroundColor: '#ffff',
      borderColor: '#5C92FF'
    },
    customModeBtnTxt: {
      color: '#fff',
      fontSize: 16
    },
    customModeTitle: {
      fontSize: 16,
      color: '#B6BDCA'
    },
    customModeTxte: {
      flex: 1
    },
    customModeImgIcon: {
      width: 64,
      height: 32
    },
    customModeImg: {
      width: 64,
      height: 32
    },
    customModeSubTitle: {
      fontSize: 12,
      color: '#B6BDCA'
    },
    customMode: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 40
    },
    AbstractDialogBox: {
      paddingHorizontal: 20
    },
    modeTopTitleTwo: {
      marginTop: 40
    },
    suctionLiIcon: {
      width: 30,
      height: 30
    },
    suctionLi: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 27,
      borderWidth: 1,
      borderColor: '#eee'
    },
    suctionBox: {
      flexDirection: 'row',
      height: 48,
      borderRadius: 27,
      backgroundColor: '#eee',
      marginTop: 20
    },
    modeTopSubtitle: {
      fontSize: 14,
      color: '#5C92FF'
    },
    modeTopSubtitleActive: {
      color: '#B6BDCA'
    },
    modeSettingTitle: {
      marginBottom: 10
    },
    modeTopTitle: {
      fontSize: 16,
      color: '#939AA9'
    },
    modeSetting: {
      paddingVertical: 40
    },
    leftNavIcon: {
      width: 40,
      height: 40
    },
    leftNavTitle: {
      textAlign: 'center',
      paddingTop: 4,
      color: '#626772',
      fontSize: 12
    }
  });
},10541,[14305,14359,14314,14320,14323,14371,14377,14374,14386,10297,11485,10033,10544,10074,11552,10100,10016,10755,11555,11558,10547,11540,11564,10091,10064,10409,10061,11618,11627,11630,11672,11678,11693,10082,11702,10106,11705,10062,10035,11708,11624,11711,11714,11717,11720,11723,11726,11729,11732,11735,11738,11741,11744,11747,11750,11753,11756,11759,11762,11765,11768,11771,11774,11777,11780,11783]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _GestureView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _events = _$$_REQUIRE(_dependencyMap[12]);

  var _math = _$$_REQUIRE(_dependencyMap[13]);

  var _ramda = _$$_REQUIRE(_dependencyMap[14]);

  var ZoneClean = function (_React$Component) {
    (0, _inherits2.default)(ZoneClean, _React$Component);
    (0, _createClass2.default)(ZoneClean, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        _logger.default.info('=== Zone Clean UNSAFE_componentWillMount ===');

        this.getData();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(prop) {
        _logger.default.info("=== UNSAFE_componentWillReceiveProps, oldProp: " + JSON.stringify(this.props) + ", newProp: " + JSON.stringify(prop) + ", ===");

        var _this$props = this.props,
            oldW = _this$props.mapWidth,
            oldH = _this$props.mapHeight,
            _this$props$zone = _this$props.zone,
            oldZ = _this$props$zone === undefined ? [] : _this$props$zone;
        var mapWidth = prop.mapWidth,
            mapHeight = prop.mapHeight,
            _prop$zone = prop.zone,
            zone = _prop$zone === undefined ? [] : _prop$zone;

        if (mapWidth !== oldW || mapHeight !== oldH || zone.length !== oldZ.length) {
          setImmediate(this.getData);
        }

        return true;
      }
    }]);

    function ZoneClean(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ZoneClean);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ZoneClean).call(this, props));

      _this.getData = function () {
        var _this$props2 = _this.props,
            _this$props2$zone = _this$props2.zone,
            zone = _this$props2$zone === undefined ? [] : _this$props2$zone,
            mapWidth = _this$props2.mapWidth,
            mapHeight = _this$props2.mapHeight,
            _this$props2$left = _this$props2.left,
            left = _this$props2$left === undefined ? 0 : _this$props2$left;

        _logger.default.info("=== zone clean, getData: " + JSON.stringify(zone) + " ===");

        if (zone.length < 4) {
          _this.marginLeft = mapWidth / 2 - 74 + left;
          _this.marginTop = mapHeight / 2 - 54;
          _this.svgWidth = 148;
          _this.svgHeight = 106;
          _this.myAngle = 0;
        } else {
          _this.insideWidth = Math.sqrt(Math.pow(zone[1][0] - zone[0][0], 2) + Math.pow(zone[1][1] - zone[0][1], 2));
          _this.insideHeight = Math.sqrt(Math.pow(zone[0][0] - zone[3][0], 2) + Math.pow(zone[0][1] - zone[3][1], 2));
          _this.svgWidth = _this.insideWidth + 48;
          _this.svgHeight = _this.insideHeight + 48;
          _this.insideOriginX = (zone[0][0] + zone[1][0] + zone[2][0] + zone[3][0]) / 4;
          _this.insideOriginY = (zone[0][1] + zone[1][1] + zone[2][1] + zone[3][1]) / 4;
          _this.marginLeft = _this.insideOriginX - _this.insideWidth / 2 - 24;
          _this.marginTop = _this.insideOriginY - _this.insideHeight / 2 - 24;
          var v1 = {};
          v1.x = 1;
          v1.y = 0;
          var v2 = {};
          v2.x = zone[1][0] - zone[0][0];
          v2.y = zone[1][1] - zone[0][1];
          var directFlag = zone[1][1] < zone[0][1] ? true : false;
          var v1_v2_1 = v2.x * v1.x + v2.y * v1.y;
          var v1_v2_2 = Math.sqrt(v2.x * v2.x + v2.y * v2.y);
          var arcthea = 0;

          if (v1_v2_2) {
            arcthea = Math.acos(v1_v2_1 / v1_v2_2);
          }

          _this.myAngle = (0, _math.toDeg)(arcthea);

          if (directFlag) {
            _this.myAngle = 360 - _this.myAngle;
          }
        }

        _this.draggable = {
          x: {
            min: -40,
            max: mapWidth - 80
          },
          y: {
            min: -40,
            max: mapHeight - 80
          }
        };

        _this.setState({
          showBorder: _this.props.isArea,
          left: _this.marginLeft,
          top: _this.marginTop,
          rotate: _this.myAngle,
          svgWidth: _this.svgWidth,
          svgHeight: _this.svgHeight,
          outWidth: _this.svgWidth - 24,
          outHeight: _this.svgHeight - 24,
          insideWidth: _this.svgWidth - 48,
          insideHeight: _this.svgHeight - 48,
          isRotate: false
        });
      };

      _this._rotatePoint = function (v, angle) {
        var _ref = v || {},
            x = _ref.x,
            y = _ref.y;

        if (x === undefined || y === undefined) {
          return {
            x: 0,
            y: 0
          };
        }

        var rad = -angle * Math.PI / 180;
        var xt = x * Math.cos(rad) - y * Math.sin(rad);
        var yt = x * Math.sin(rad) + y * Math.cos(rad);
        return {
          x: xt,
          y: yt
        };
      };

      _this._showBorder = function () {
        var _this$props3 = _this.props,
            _this$props3$isArea = _this$props3.isArea,
            isArea = _this$props3$isArea === undefined ? false : _this$props3$isArea,
            _this$props3$zone = _this$props3.zone,
            zone = _this$props3$zone === undefined ? [] : _this$props3$zone;

        if (_this.state.showBorder) {
          return _react.default.createElement(_reactNativeSvg.Rect, {
            ref: function ref(component) {
              return _this._rect = component;
            },
            x: "12",
            y: "12",
            width: _this.state.outWidth,
            height: _this.state.outHeight,
            fill: "transparent",
            strokeWidth: "1",
            stroke: "#FFFFFF"
          });
        }
      };

      _this._showImage = function () {
        var _this$props4 = _this.props,
            _this$props4$isArea = _this$props4.isArea,
            isArea = _this$props4$isArea === undefined ? false : _this$props4$isArea,
            _this$props4$zone = _this$props4.zone,
            zone = _this$props4$zone === undefined ? [] : _this$props4$zone;

        if (_this.state.showBorder) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              position: 'absolute',
              width: '100%',
              height: '100%'
            }
          }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, _this._deletePanResponder.panHandlers, {
            source: _$$_REQUIRE(_dependencyMap[15]),
            style: [{
              position: 'absolute',
              top: 0,
              left: 0,
              width: 20,
              height: 20
            }]
          })), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, _this._rotatePanResponder.panHandlers, {
            source: _$$_REQUIRE(_dependencyMap[16]),
            style: [{
              width: 20,
              height: 20,
              position: 'absolute',
              right: 0
            }]
          })), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, _this._scalePanResponder.panHandlers, {
            style: [{
              width: 20,
              height: 20,
              position: 'absolute',
              bottom: 0,
              right: 0
            }],
            source: _$$_REQUIRE(_dependencyMap[17])
          })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, _this._addPanResponder.panHandlers, {
            style: {
              position: 'absolute',
              bottom: 0,
              left: 0,
              width: 20,
              height: 20,
              backgroundColor: '#5C92FF',
              borderRadius: 20,
              alignItems: 'center',
              justifyContent: 'center'
            }
          }), _react.default.createElement(_reactNative.Text, {
            style: {
              color: '#fff',
              fontSize: 12
            }
          }, _this.state.num)));
        }
      };

      _this._returnChildren = function () {
        return _react.default.createElement(_reactNative.View, _this._panResponder.panHandlers, _react.default.createElement(_reactNativeSvg.Svg, {
          ref: function ref(_ref2) {
            return _this._svg = _ref2;
          },
          width: _this.state.svgWidth,
          height: _this.state.svgHeight
        }, _this._showBorder(), _react.default.createElement(_reactNativeSvg.Rect, {
          x: "24",
          y: "24",
          width: _this.state.insideWidth,
          height: _this.state.insideHeight,
          stroke: "#5C92FF",
          fill: "#5C92FF",
          fillOpacity: _this.state.num == 1 ? 0.2 : 0.4
        })), _this._showImage());
      };

      _this._scalePanResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetResponder: function onMoveShouldSetResponder() {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          _this._svgW = _this.svgWidth;
          _this._svgH = _this.svgHeight;
          _this._originLeft = _this.marginLeft;
          _this._originTop = _this.marginTop;
        },
        onPanResponderMove: function onPanResponderMove(evt, g) {
          var rotate = _this.state.rotate;
          var _this$props$mapScale = _this.props.mapScale,
              mapScale = _this$props$mapScale === undefined ? 1.0 : _this$props$mapScale;

          var p = _this._rotatePoint({
            x: g.dx / mapScale,
            y: g.dy / mapScale
          }, rotate);

          var w = _this._svgW + p.x;
          var h = _this._svgH + p.y;
          w = Math.max(80, w);
          h = Math.max(80, h);

          var rp = _this._rotatePoint({
            x: w - _this._svgW,
            y: h - _this._svgH
          }, -rotate);

          var diffX = (w - _this._svgW - rp.x) / 2;
          var diffY = (h - _this._svgH - rp.y) / 2;
          _this.svgWidth = w;
          _this.svgHeight = h;

          _this.setScaleNativeProps(_this._originLeft - diffX, _this._originTop - diffY, w, h);
        }
      });
      _this._rotatePanResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return false;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {
          return false;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {
          return true;
        },
        onResponderTerminationRequest: function onResponderTerminationRequest() {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          _this.setState({
            isRotate: true
          });
        },
        onPanResponderEnd: function onPanResponderEnd() {
          _this.setState({
            isRotate: false
          });
        }
      });
      _this._deletePanResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return false;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {
          return false;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {
          return true;
        },
        onResponderTerminationRequest: function onResponderTerminationRequest() {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          _reactNative.DeviceEventEmitter.emit('_deleteWall', _this.props.isAreaIndex);
        }
      });
      _this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {
          return false;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          if (_this.props.isArea) {
            _this.props.setBorder(_this.props.isAreaIndex);
          }
        }
      });
      _this._addPanResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {
          return false;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          _this.setState({});
        }
      });

      if (_this.props.areaActive == 'depth') {
        _this.state = {
          num: 2
        };
      } else {
        _this.state = {
          num: 1
        };
      }

      return _this;
    }

    (0, _createClass2.default)(ZoneClean, [{
      key: "returnCleanActive",
      value: function returnCleanActive() {
        return this.state.num;
      }
    }, {
      key: "returnXY",
      value: function returnXY() {
        var originX = this.marginLeft + this.state.svgWidth / 2;
        var originY = this.marginTop + this.state.svgHeight / 2;
        var lt = {
          x: this.marginLeft + 24,
          y: this.marginTop + 24
        };
        var rb = {
          x: this.marginLeft + this.state.svgWidth - 24,
          y: this.marginTop + this.state.svgHeight - 24
        };
        var rt = {
          x: rb.x,
          y: lt.y
        };
        var lb = {
          x: lt.x,
          y: rb.y
        };
        var rotate = this.myAngle < 0 ? this.myAngle + 360 : this.myAngle;
        var leftTop = (0, _math.getRotatePosition)(lt.x, lt.y, originX, originY, rotate);
        var rightTop = (0, _math.getRotatePosition)(rt.x, rt.y, originX, originY, rotate);
        var bottomLeft = (0, _math.getRotatePosition)(lb.x, lb.y, originX, originY, rotate);
        var bottomRight = (0, _math.getRotatePosition)(rb.x, rb.y, originX, originY, rotate);
        return [leftTop, rightTop, bottomLeft, bottomRight];
      }
    }, {
      key: "setScaleNativeProps",
      value: function setScaleNativeProps(left, top, width, height) {
        this.marginLeft = left;
        this.marginTop = top;
        this.setState({
          left: left,
          top: top,
          svgWidth: width,
          svgHeight: height,
          outWidth: width - 24,
          outHeight: height - 24,
          insideWidth: width - 48,
          insideHeight: height - 48
        });
      }
    }, {
      key: "_returnPosition",
      value: function _returnPosition() {
        var isAreaIndex = this.props.isAreaIndex;
        return isAreaIndex;
      }
    }, {
      key: "setShowBorder",
      value: function setShowBorder(isShow) {
        this.setState({
          showBorder: isShow
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props5 = this.props,
            isArea = _this$props5.isArea,
            _this$props5$mapScale = _this$props5.mapScale,
            mapScale = _this$props5$mapScale === undefined ? 1.0 : _this$props5$mapScale;
        var isRotate = this.state.isRotate;
        var draggable = isArea && !isRotate ? this.draggable : false;
        return _react.default.createElement(_GestureView.default, {
          ref: function ref(_ref3) {
            return _this2._root = _ref3;
          },
          disable: !isArea,
          draggable: draggable,
          scalable: false,
          rotatable: false,
          outterScale: mapScale,
          singleRotatable: isRotate,
          style: {
            position: 'absolute',
            left: this.marginLeft,
            top: this.marginTop,
            transform: [{
              translateX: 0
            }, {
              translateY: 0
            }, {
              rotate: this.myAngle + "deg"
            }],
            alignItems: 'flex-end'
          },
          onEnd: function onEnd(event, gestureState, styles) {
            var left = styles.left,
                top = styles.top;
            var currentRotate = (0, _events.angles)(styles);
            var r = parseFloat(currentRotate.replace('deg', ''));

            if (currentRotate) {
              _this2.marginLeft = left;
              _this2.marginTop = top;
              _this2.myAngle = r;

              _this2.setState({
                left: left,
                top: top,
                isRotate: false,
                rotate: r
              });
            } else {
              _this2.marginLeft = left;
              _this2.marginTop = top;

              _this2.setState({
                left: left,
                top: top,
                isRotate: false
              });
            }
          }
        }, this._returnChildren());
      }
    }]);
    return ZoneClean;
  }(_react.default.Component);

  exports.default = ZoneClean;
},10544,[14305,14344,14320,14371,14377,14323,14386,10297,11485,10033,10100,10547,11540,11537,10550,11543,11546,11549]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ramda = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[14]);

  var _math = _$$_REQUIRE(_dependencyMap[15]);

  var _events = _$$_REQUIRE(_dependencyMap[16]);

  var Gestures = function (_Component) {
    (0, _inherits2.default)(Gestures, _Component);

    function Gestures(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Gestures);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Gestures).call(this, props));

      _this.sytleCompare = function (o, n) {
        var _o$left = o.left,
            l = _o$left === undefined ? 0 : _o$left,
            _o$top = o.top,
            t = _o$top === undefined ? 0 : _o$top;
        var _n$left = n.left,
            nl = _n$left === undefined ? 0 : _n$left,
            _n$top = n.top,
            nt = _n$top === undefined ? 0 : _n$top;
        var rotate = (0, _events.angles)(o);
        var nrotate = (0, _events.angles)(n);
        var scale = (0, _events.scales)(o);
        var nscale = (0, _events.scales)(n);
        return l === nl && t === nt && rotate === nrotate && scale === nscale;
      };

      _this.canRotate = function () {
        var _this$props = _this.props,
            rotatable = _this$props.rotatable,
            singleRotatable = _this$props.singleRotatable;
        return rotatable || singleRotatable;
      };

      _this.onRotate = function (event) {
        var _this$props2 = _this.props,
            onRotateStart = _this$props2.onRotateStart,
            onRotateChange = _this$props2.onRotateChange,
            rotatable = _this$props2.rotatable,
            singleRotatable = _this$props2.singleRotatable;
        var _this$state = _this.state,
            isRotatingNow = _this$state.isRotatingNow,
            style = _this$state.style;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            initialTouches = _assertThisInitialize.initialTouches,
            anchor = _assertThisInitialize.anchor;

        if (rotatable || singleRotatable) {
          var events = (0, _events.getTouches)(event);
          var isSingle = singleRotatable && events.length < 2;
          var currentAngle = isSingle ? (0, _math.angle)(events, anchor) : (0, _math.angle)(events);
          var initialAngle = initialTouches.length > 1 ? (0, _math.angle)(initialTouches) : currentAngle;

          if (isSingle) {
            initialAngle = (0, _math.angle)(initialTouches, anchor);
          }

          var newAngle = currentAngle - initialAngle;
          var diffAngle = _this.prevAngle - newAngle;
          _this.rotateStyles = {
            rotate: (0, _events.getAngle)(event, style, diffAngle)
          };
          _this.prevAngle = newAngle;

          if (!isRotatingNow) {
            onRotateStart(event, style);

            _this.setState({
              isRotatingNow: true
            });
          } else {
            onRotateChange(event, style);
          }
        }
      };

      _this.canScale = function () {
        var scalable = _this.props.scalable;
        return scalable !== false;
      };

      _this.onScale = function (event) {
        var _this$props3 = _this.props,
            onScaleStart = _this$props3.onScaleStart,
            onScaleChange = _this$props3.onScaleChange,
            scalable = _this$props3.scalable;
        var _this$state2 = _this.state,
            isScalingNow = _this$state2.isScalingNow,
            style = _this$state2.style;

        var _assertThisInitialize2 = (0, _assertThisInitialized2.default)(_this),
            initialTouches = _assertThisInitialize2.initialTouches;

        var isObject = _ramda.default.is(Object, scalable);

        if (isObject || scalable) {
          var currentDistance = (0, _math.distance)((0, _events.getTouches)(event));
          var initialDistance = (0, _math.distance)(initialTouches);
          var increasedDistance = currentDistance - initialDistance;
          var diffDistance = _this.prevDistance - increasedDistance;
          var min = isObject ? scalable.min : 0.33;
          var max = isObject ? scalable.max : 2;
          var scale = Math.min(Math.max((0, _events.getScale)(event, style, diffDistance), min), max);
          _this.scaleStyles = {
            scale: scale
          };
          _this.prevDistance = increasedDistance;

          if (!isScalingNow) {
            onScaleStart(event, style);

            _this.setState({
              isScalingNow: true
            });
          } else {
            onScaleChange(event, style);
          }
        }
      };

      _this.onMoveStart = function (event, gestureState) {
        var style = _this.state.style;
        var _this$props4 = _this.props,
            onMultyTouchStart = _this$props4.onMultyTouchStart,
            onStart = _this$props4.onStart;
        var touches = (0, _events.getTouches)(event);
        _this.prevAngle = 0;
        _this.prevDistance = 0;
        _this.initialTouchesAngle = 0;
        _this.dragStyles = {};
        _this.rotateStyles = {};
        _this.scaleStyles = {};
        _this.prevStyles = style;

        if (_this.touchTimeStamp <= 0) {
          _this.touchTimeStamp = Date.now();
        }

        _this.initialTouches = (0, _events.getTouches)(event);
        _this.initialStyles = style;
        onStart(event, gestureState, style);

        if (touches.length > 1) {
          onMultyTouchStart(event, gestureState, style);

          _this.setState({
            isMultyTouchingNow: true
          });
        }
      };

      _this.onMove = function (event, gestureState) {
        var _this$state3 = _this.state,
            isMultyTouchingNow = _this$state3.isMultyTouchingNow,
            style = _this$state3.style;
        var _this$props5 = _this.props,
            onChange = _this$props5.onChange,
            onMultyTouchChange = _this$props5.onMultyTouchChange;

        var _assertThisInitialize3 = (0, _assertThisInitialized2.default)(_this),
            initialTouches = _assertThisInitialize3.initialTouches;

        var touches = (0, _events.getTouches)(event);

        if (touches.length !== initialTouches.length) {
          _this.initialTouches = touches;
        } else {
          _this.onDrag(event, gestureState);

          _this.onPinch(event);
        }

        if (isMultyTouchingNow) {
          onMultyTouchChange(event, style);
        }

        _this.updateStyles();

        onChange(event, style);
      };

      _this.onMoveEnd = function (event, gestureState) {
        var _this$state4 = _this.state,
            isMultyTouchingNow = _this$state4.isMultyTouchingNow,
            isRotatingNow = _this$state4.isRotatingNow,
            isScalingNow = _this$state4.isScalingNow,
            style = _this$state4.style;
        var _this$props6 = _this.props,
            onEnd = _this$props6.onEnd,
            onMultyTouchEnd = _this$props6.onMultyTouchEnd,
            onRelease = _this$props6.onRelease,
            onRotateEnd = _this$props6.onRotateEnd,
            onScaleEnd = _this$props6.onScaleEnd,
            clickable = _this$props6.clickable,
            onClick = _this$props6.onClick,
            autoAreaValue = _this$props6.autoAreaValue;

        _this.updateAnchor();

        onEnd(event, gestureState, style);
        onRelease(event, style);

        if (clickable && (0, _events.hasMoved)(gestureState, _this.touchTimeStamp)) {
          onClick(event, autoAreaValue);
        }

        _this.touchTimeStamp = 0;

        if (isRotatingNow) {
          onRotateEnd(event, style);
        }

        if (isScalingNow) {
          onScaleEnd(event, style);
        }

        if (isMultyTouchingNow) {
          onMultyTouchEnd(event, style);
        }

        _this.setState({
          isRotatingNow: false,
          isScalingNow: false
        });
      };

      _this.onPinch = function (event) {
        if ((0, _events.isMultiTouch)(event)) {
          if (_this.canRotate()) {
            _this.rotateStyles = {};

            _this.onRotate(event);
          }

          if (_this.canScale()) {
            _this.scaleStyles = {};

            _this.onScale(event);
          }
        }
      };

      _this.updateStyles = function (callback) {
        var t = [];
        var rotate = _this.rotateStyles.rotate;
        var scale = _this.scaleStyles.scale;

        if (rotate !== undefined) {
          t.push(_this.rotateStyles);
        }

        if (scale !== undefined) {
          t.push(_this.scaleStyles);
        }

        var style = (0, _objectSpread2.default)({}, _this.state.style, _this.dragStyles);

        if (t.length > 0) {
          style.transform = t;
        }

        _this.updateNativeStyles(style, callback);

        _this.setState({
          style: style
        }, function () {});
      };

      _this.updateNativeStyles = function (style, callback) {
        _this.view.setNativeProps({
          style: style
        });

        if (callback !== undefined) {
          setTimeout(function () {
            callback(_this.prevStyles);
          }, 100);
        }
      };

      _this.reset = function (callback) {
        var _this$prevStyles = _this.prevStyles,
            left = _this$prevStyles.left,
            top = _this$prevStyles.top;
        var scale = (0, _events.scales)(_this.prevStyles);
        var rotate = (0, _events.angles)(_this.prevAngle);
        _this.dragStyles = {
          left: left,
          top: top
        };
        _this.rotateStyles = {
          scale: scale
        };
        _this.scaleStyles = {
          rotate: rotate
        };

        _this.updateStyles(callback);
      };

      _this.handleLayout = function () {
        setTimeout(function () {
          _this.updateAnchor();
        }, 50);
      };

      _this.updateAnchor = function () {
        if (_this.view) {
          _this.view.measure(function (x, y, w, h, pageX, pageY) {
            _this.anchor = {
              x: pageX + w / 2,
              y: pageY + h / 2
            };
          });
        }
      };

      _this.state = {
        isMultyTouchingNow: false,
        isRotatingNow: false,
        isScalingNow: false,
        style: (0, _objectSpread2.default)({}, Gestures.defaultProps.style, _this.props.style)
      };
      _this.originStyle = props.style;
      _this.touchTimeStamp = 0;
      _this.pan = _reactNative.PanResponder.create({
        onPanResponderGrant: _this.onMoveStart,
        onPanResponderMove: _this.onMove,
        onPanResponderEnd: _this.onMoveEnd,
        onPanResponderTerminate: function onPanResponderTerminate() {
          return true;
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return !_this.props.disable;
        },
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return !_this.props.disable;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
          return !_this.props.disable;
        }
      });
      return _this;
    }

    (0, _createClass2.default)(Gestures, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var style = this.state.style;
        this.prevStyles = style;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var style = this.state.style;
        var nextStyle = nextProps.style;

        if (this.sytleCompare(this.originStyle, nextStyle)) {
          return;
        }

        if (!this.sytleCompare(style, nextStyle)) {
          this.originStyle = nextStyle;
          var left = style.left,
              top = style.top,
              transform = style.transform,
              other = (0, _objectWithoutProperties2.default)(style, ["left", "top", "transform"]);
          var _nextStyle$left = nextStyle.left,
              l = _nextStyle$left === undefined ? left : _nextStyle$left,
              _nextStyle$top = nextStyle.top,
              t = _nextStyle$top === undefined ? top : _nextStyle$top,
              ntrans = nextStyle.transform,
              nother = (0, _objectWithoutProperties2.default)(nextStyle, ["left", "top", "transform"]);
          var ts = {
            left: l,
            top: t,
            transform: []
          };
          var r = (0, _events.angles)(nextStyle, undefined);
          var s = (0, _events.scales)(nextStyle, undefined);
          var rotate = (0, _events.angles)(style);
          var scale = (0, _events.scales)(style);
          ts.transform.push({
            scale: s || scale
          });
          ts.transform.push({
            rotate: r || rotate
          });
          var targetStyle = (0, _extends2.default)({}, other, nother, ts);
          this.setState({
            style: targetStyle
          });
        }
      }
    }, {
      key: "onDrag",
      value: function onDrag(event, gestureState) {
        if (!(0, _events.isMultiTouch)(event)) {
          var singleRotatable = this.props.singleRotatable;

          if (singleRotatable) {
            var style = this.state.style;
            var _style$transform = style.transform,
                transform = _style$transform === undefined ? [] : _style$transform;
            var currentScale = transform.map(function (s) {
              return s.scale;
            }).reduce(function (a, b) {
              return b || a;
            }, 1);
            this.rotateStyles = {
              scale: currentScale
            };
            this.onRotate(event, this.anchor);
            return;
          }
        }

        this.onPan(event, gestureState);
      }
    }, {
      key: "onPan",
      value: function onPan(event, gestureState) {
        var initialStyles = this.initialStyles;
        var _this$props7 = this.props,
            draggable = _this$props7.draggable,
            _this$props7$outterSc = _this$props7.outterScale,
            outterScale = _this$props7$outterSc === undefined ? 1.0 : _this$props7$outterSc;

        var isObject = _ramda.default.is(Object, draggable);

        var tx = initialStyles.left + gestureState.dx / outterScale;
        var ty = initialStyles.top + gestureState.dy / outterScale;
        var ox = initialStyles.left;
        var oy = initialStyles.top;
        var left = tx;
        var top = tx;

        if (isObject) {
          var x = draggable.x,
              y = draggable.y;

          if (_ramda.default.is(Object, x)) {
            var _x$min = x.min,
                min = _x$min === undefined ? -500 : _x$min,
                _x$max = x.max,
                max = _x$max === undefined ? 500 : _x$max;
            left = (0, _math.clamp)(tx, min, max);
          } else {
            left = x ? tx : ox;
          }

          if (_ramda.default.is(Object, y)) {
            var _y$min = y.min,
                _min = _y$min === undefined ? -1000 : _y$min,
                _y$max = y.max,
                _max = _y$max === undefined ? 1000 : _y$max;

            top = (0, _math.clamp)(ty, _min, _max);
          } else {
            top = y ? ty : oy;
          }
        } else {
          left = draggable ? tx : ox;
          top = draggable ? ty : oy;
        }

        this.dragStyles = {
          left: left,
          top: top
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var style = this.state.style;
        var children = this.props.children;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          ref: function ref(c) {
            _this2.view = c;
          },
          onLayout: this.handleLayout,
          style: style
        }, this.pan.panHandlers), children);
      }
    }]);
    return Gestures;
  }(_react.Component);

  exports.default = Gestures;
  Gestures.propTypes = {
    children: _propTypes.default.element,
    draggable: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({
      x: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({
        min: _propTypes.default.number,
        max: _propTypes.default.number
      })]),
      y: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({
        min: _propTypes.default.number,
        max: _propTypes.default.number
      })])
    })]),
    outterScale: _propTypes.default.number,
    clickable: _propTypes.default.bool,
    rotatable: _propTypes.default.bool,
    singleRotatable: _propTypes.default.bool,
    disable: _propTypes.default.bool,
    scalable: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({
      min: _propTypes.default.number,
      max: _propTypes.default.number
    })]),
    style: _propTypes.default.object,
    onStart: _propTypes.default.func,
    onChange: _propTypes.default.func,
    onEnd: _propTypes.default.func,
    onClick: _propTypes.default.func,
    onMultyTouchStart: _propTypes.default.func,
    onMultyTouchChange: _propTypes.default.func,
    onMultyTouchEnd: _propTypes.default.func,
    onRelease: _propTypes.default.func,
    onRotateStart: _propTypes.default.func,
    onRotateChange: _propTypes.default.func,
    onRotateEnd: _propTypes.default.func,
    onScaleStart: _propTypes.default.func,
    onScaleChange: _propTypes.default.func,
    onScaleEnd: _propTypes.default.func
  };
  Gestures.defaultProps = {
    children: {},
    draggable: true,
    outterScale: 1.0,
    rotatable: false,
    singleRotatable: false,
    clickable: false,
    scalable: true,
    disable: false,
    style: {
      left: 0,
      top: 0,
      alignItems: 'center',
      alignSelf: 'baseline',
      transform: [{
        scale: 1
      }, {
        rotate: '0deg'
      }]
    },
    onStart: function onStart() {},
    onChange: function onChange() {},
    onEnd: function onEnd() {},
    onRelease: function onRelease() {},
    onClick: function onClick() {},
    onMultyTouchStart: function onMultyTouchStart() {},
    onMultyTouchChange: function onMultyTouchChange() {},
    onMultyTouchEnd: function onMultyTouchEnd() {},
    onRotateStart: function onRotateStart() {},
    onRotateChange: function onRotateChange() {},
    onRotateEnd: function onRotateEnd() {},
    onScaleStart: function onScaleStart() {},
    onScaleChange: function onScaleChange() {},
    onScaleEnd: function onScaleEnd() {}
  };
},10547,[14308,14305,14344,14407,14314,14320,14323,14371,14377,14374,14386,10297,10318,10550,10033,11537,11540]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {};
  module.exports.F = _$$_REQUIRE(_dependencyMap[0]);
  module.exports.T = _$$_REQUIRE(_dependencyMap[1]);
  module.exports.__ = _$$_REQUIRE(_dependencyMap[2]);
  module.exports.add = _$$_REQUIRE(_dependencyMap[3]);
  module.exports.addIndex = _$$_REQUIRE(_dependencyMap[4]);
  module.exports.adjust = _$$_REQUIRE(_dependencyMap[5]);
  module.exports.all = _$$_REQUIRE(_dependencyMap[6]);
  module.exports.allPass = _$$_REQUIRE(_dependencyMap[7]);
  module.exports.always = _$$_REQUIRE(_dependencyMap[8]);
  module.exports.and = _$$_REQUIRE(_dependencyMap[9]);
  module.exports.any = _$$_REQUIRE(_dependencyMap[10]);
  module.exports.anyPass = _$$_REQUIRE(_dependencyMap[11]);
  module.exports.ap = _$$_REQUIRE(_dependencyMap[12]);
  module.exports.aperture = _$$_REQUIRE(_dependencyMap[13]);
  module.exports.append = _$$_REQUIRE(_dependencyMap[14]);
  module.exports.apply = _$$_REQUIRE(_dependencyMap[15]);
  module.exports.applySpec = _$$_REQUIRE(_dependencyMap[16]);
  module.exports.applyTo = _$$_REQUIRE(_dependencyMap[17]);
  module.exports.ascend = _$$_REQUIRE(_dependencyMap[18]);
  module.exports.assoc = _$$_REQUIRE(_dependencyMap[19]);
  module.exports.assocPath = _$$_REQUIRE(_dependencyMap[20]);
  module.exports.binary = _$$_REQUIRE(_dependencyMap[21]);
  module.exports.bind = _$$_REQUIRE(_dependencyMap[22]);
  module.exports.both = _$$_REQUIRE(_dependencyMap[23]);
  module.exports.call = _$$_REQUIRE(_dependencyMap[24]);
  module.exports.chain = _$$_REQUIRE(_dependencyMap[25]);
  module.exports.clamp = _$$_REQUIRE(_dependencyMap[26]);
  module.exports.clone = _$$_REQUIRE(_dependencyMap[27]);
  module.exports.comparator = _$$_REQUIRE(_dependencyMap[28]);
  module.exports.complement = _$$_REQUIRE(_dependencyMap[29]);
  module.exports.compose = _$$_REQUIRE(_dependencyMap[30]);
  module.exports.composeK = _$$_REQUIRE(_dependencyMap[31]);
  module.exports.composeP = _$$_REQUIRE(_dependencyMap[32]);
  module.exports.composeWith = _$$_REQUIRE(_dependencyMap[33]);
  module.exports.concat = _$$_REQUIRE(_dependencyMap[34]);
  module.exports.cond = _$$_REQUIRE(_dependencyMap[35]);
  module.exports.construct = _$$_REQUIRE(_dependencyMap[36]);
  module.exports.constructN = _$$_REQUIRE(_dependencyMap[37]);
  module.exports.contains = _$$_REQUIRE(_dependencyMap[38]);
  module.exports.converge = _$$_REQUIRE(_dependencyMap[39]);
  module.exports.countBy = _$$_REQUIRE(_dependencyMap[40]);
  module.exports.curry = _$$_REQUIRE(_dependencyMap[41]);
  module.exports.curryN = _$$_REQUIRE(_dependencyMap[42]);
  module.exports.dec = _$$_REQUIRE(_dependencyMap[43]);
  module.exports.defaultTo = _$$_REQUIRE(_dependencyMap[44]);
  module.exports.descend = _$$_REQUIRE(_dependencyMap[45]);
  module.exports.difference = _$$_REQUIRE(_dependencyMap[46]);
  module.exports.differenceWith = _$$_REQUIRE(_dependencyMap[47]);
  module.exports.dissoc = _$$_REQUIRE(_dependencyMap[48]);
  module.exports.dissocPath = _$$_REQUIRE(_dependencyMap[49]);
  module.exports.divide = _$$_REQUIRE(_dependencyMap[50]);
  module.exports.drop = _$$_REQUIRE(_dependencyMap[51]);
  module.exports.dropLast = _$$_REQUIRE(_dependencyMap[52]);
  module.exports.dropLastWhile = _$$_REQUIRE(_dependencyMap[53]);
  module.exports.dropRepeats = _$$_REQUIRE(_dependencyMap[54]);
  module.exports.dropRepeatsWith = _$$_REQUIRE(_dependencyMap[55]);
  module.exports.dropWhile = _$$_REQUIRE(_dependencyMap[56]);
  module.exports.either = _$$_REQUIRE(_dependencyMap[57]);
  module.exports.empty = _$$_REQUIRE(_dependencyMap[58]);
  module.exports.endsWith = _$$_REQUIRE(_dependencyMap[59]);
  module.exports.eqBy = _$$_REQUIRE(_dependencyMap[60]);
  module.exports.eqProps = _$$_REQUIRE(_dependencyMap[61]);
  module.exports.equals = _$$_REQUIRE(_dependencyMap[62]);
  module.exports.evolve = _$$_REQUIRE(_dependencyMap[63]);
  module.exports.filter = _$$_REQUIRE(_dependencyMap[64]);
  module.exports.find = _$$_REQUIRE(_dependencyMap[65]);
  module.exports.findIndex = _$$_REQUIRE(_dependencyMap[66]);
  module.exports.findLast = _$$_REQUIRE(_dependencyMap[67]);
  module.exports.findLastIndex = _$$_REQUIRE(_dependencyMap[68]);
  module.exports.flatten = _$$_REQUIRE(_dependencyMap[69]);
  module.exports.flip = _$$_REQUIRE(_dependencyMap[70]);
  module.exports.forEach = _$$_REQUIRE(_dependencyMap[71]);
  module.exports.forEachObjIndexed = _$$_REQUIRE(_dependencyMap[72]);
  module.exports.fromPairs = _$$_REQUIRE(_dependencyMap[73]);
  module.exports.groupBy = _$$_REQUIRE(_dependencyMap[74]);
  module.exports.groupWith = _$$_REQUIRE(_dependencyMap[75]);
  module.exports.gt = _$$_REQUIRE(_dependencyMap[76]);
  module.exports.gte = _$$_REQUIRE(_dependencyMap[77]);
  module.exports.has = _$$_REQUIRE(_dependencyMap[78]);
  module.exports.hasIn = _$$_REQUIRE(_dependencyMap[79]);
  module.exports.hasPath = _$$_REQUIRE(_dependencyMap[80]);
  module.exports.head = _$$_REQUIRE(_dependencyMap[81]);
  module.exports.identical = _$$_REQUIRE(_dependencyMap[82]);
  module.exports.identity = _$$_REQUIRE(_dependencyMap[83]);
  module.exports.ifElse = _$$_REQUIRE(_dependencyMap[84]);
  module.exports.inc = _$$_REQUIRE(_dependencyMap[85]);
  module.exports.includes = _$$_REQUIRE(_dependencyMap[86]);
  module.exports.indexBy = _$$_REQUIRE(_dependencyMap[87]);
  module.exports.indexOf = _$$_REQUIRE(_dependencyMap[88]);
  module.exports.init = _$$_REQUIRE(_dependencyMap[89]);
  module.exports.innerJoin = _$$_REQUIRE(_dependencyMap[90]);
  module.exports.insert = _$$_REQUIRE(_dependencyMap[91]);
  module.exports.insertAll = _$$_REQUIRE(_dependencyMap[92]);
  module.exports.intersection = _$$_REQUIRE(_dependencyMap[93]);
  module.exports.intersperse = _$$_REQUIRE(_dependencyMap[94]);
  module.exports.into = _$$_REQUIRE(_dependencyMap[95]);
  module.exports.invert = _$$_REQUIRE(_dependencyMap[96]);
  module.exports.invertObj = _$$_REQUIRE(_dependencyMap[97]);
  module.exports.invoker = _$$_REQUIRE(_dependencyMap[98]);
  module.exports.is = _$$_REQUIRE(_dependencyMap[99]);
  module.exports.isEmpty = _$$_REQUIRE(_dependencyMap[100]);
  module.exports.isNil = _$$_REQUIRE(_dependencyMap[101]);
  module.exports.join = _$$_REQUIRE(_dependencyMap[102]);
  module.exports.juxt = _$$_REQUIRE(_dependencyMap[103]);
  module.exports.keys = _$$_REQUIRE(_dependencyMap[104]);
  module.exports.keysIn = _$$_REQUIRE(_dependencyMap[105]);
  module.exports.last = _$$_REQUIRE(_dependencyMap[106]);
  module.exports.lastIndexOf = _$$_REQUIRE(_dependencyMap[107]);
  module.exports.length = _$$_REQUIRE(_dependencyMap[108]);
  module.exports.lens = _$$_REQUIRE(_dependencyMap[109]);
  module.exports.lensIndex = _$$_REQUIRE(_dependencyMap[110]);
  module.exports.lensPath = _$$_REQUIRE(_dependencyMap[111]);
  module.exports.lensProp = _$$_REQUIRE(_dependencyMap[112]);
  module.exports.lift = _$$_REQUIRE(_dependencyMap[113]);
  module.exports.liftN = _$$_REQUIRE(_dependencyMap[114]);
  module.exports.lt = _$$_REQUIRE(_dependencyMap[115]);
  module.exports.lte = _$$_REQUIRE(_dependencyMap[116]);
  module.exports.map = _$$_REQUIRE(_dependencyMap[117]);
  module.exports.mapAccum = _$$_REQUIRE(_dependencyMap[118]);
  module.exports.mapAccumRight = _$$_REQUIRE(_dependencyMap[119]);
  module.exports.mapObjIndexed = _$$_REQUIRE(_dependencyMap[120]);
  module.exports.match = _$$_REQUIRE(_dependencyMap[121]);
  module.exports.mathMod = _$$_REQUIRE(_dependencyMap[122]);
  module.exports.max = _$$_REQUIRE(_dependencyMap[123]);
  module.exports.maxBy = _$$_REQUIRE(_dependencyMap[124]);
  module.exports.mean = _$$_REQUIRE(_dependencyMap[125]);
  module.exports.median = _$$_REQUIRE(_dependencyMap[126]);
  module.exports.memoizeWith = _$$_REQUIRE(_dependencyMap[127]);
  module.exports.merge = _$$_REQUIRE(_dependencyMap[128]);
  module.exports.mergeAll = _$$_REQUIRE(_dependencyMap[129]);
  module.exports.mergeDeepLeft = _$$_REQUIRE(_dependencyMap[130]);
  module.exports.mergeDeepRight = _$$_REQUIRE(_dependencyMap[131]);
  module.exports.mergeDeepWith = _$$_REQUIRE(_dependencyMap[132]);
  module.exports.mergeDeepWithKey = _$$_REQUIRE(_dependencyMap[133]);
  module.exports.mergeLeft = _$$_REQUIRE(_dependencyMap[134]);
  module.exports.mergeRight = _$$_REQUIRE(_dependencyMap[135]);
  module.exports.mergeWith = _$$_REQUIRE(_dependencyMap[136]);
  module.exports.mergeWithKey = _$$_REQUIRE(_dependencyMap[137]);
  module.exports.min = _$$_REQUIRE(_dependencyMap[138]);
  module.exports.minBy = _$$_REQUIRE(_dependencyMap[139]);
  module.exports.modulo = _$$_REQUIRE(_dependencyMap[140]);
  module.exports.move = _$$_REQUIRE(_dependencyMap[141]);
  module.exports.multiply = _$$_REQUIRE(_dependencyMap[142]);
  module.exports.nAry = _$$_REQUIRE(_dependencyMap[143]);
  module.exports.negate = _$$_REQUIRE(_dependencyMap[144]);
  module.exports.none = _$$_REQUIRE(_dependencyMap[145]);
  module.exports.not = _$$_REQUIRE(_dependencyMap[146]);
  module.exports.nth = _$$_REQUIRE(_dependencyMap[147]);
  module.exports.nthArg = _$$_REQUIRE(_dependencyMap[148]);
  module.exports.o = _$$_REQUIRE(_dependencyMap[149]);
  module.exports.objOf = _$$_REQUIRE(_dependencyMap[150]);
  module.exports.of = _$$_REQUIRE(_dependencyMap[151]);
  module.exports.omit = _$$_REQUIRE(_dependencyMap[152]);
  module.exports.once = _$$_REQUIRE(_dependencyMap[153]);
  module.exports.or = _$$_REQUIRE(_dependencyMap[154]);
  module.exports.otherwise = _$$_REQUIRE(_dependencyMap[155]);
  module.exports.over = _$$_REQUIRE(_dependencyMap[156]);
  module.exports.pair = _$$_REQUIRE(_dependencyMap[157]);
  module.exports.partial = _$$_REQUIRE(_dependencyMap[158]);
  module.exports.partialRight = _$$_REQUIRE(_dependencyMap[159]);
  module.exports.partition = _$$_REQUIRE(_dependencyMap[160]);
  module.exports.path = _$$_REQUIRE(_dependencyMap[161]);
  module.exports.pathEq = _$$_REQUIRE(_dependencyMap[162]);
  module.exports.pathOr = _$$_REQUIRE(_dependencyMap[163]);
  module.exports.pathSatisfies = _$$_REQUIRE(_dependencyMap[164]);
  module.exports.pick = _$$_REQUIRE(_dependencyMap[165]);
  module.exports.pickAll = _$$_REQUIRE(_dependencyMap[166]);
  module.exports.pickBy = _$$_REQUIRE(_dependencyMap[167]);
  module.exports.pipe = _$$_REQUIRE(_dependencyMap[168]);
  module.exports.pipeK = _$$_REQUIRE(_dependencyMap[169]);
  module.exports.pipeP = _$$_REQUIRE(_dependencyMap[170]);
  module.exports.pipeWith = _$$_REQUIRE(_dependencyMap[171]);
  module.exports.pluck = _$$_REQUIRE(_dependencyMap[172]);
  module.exports.prepend = _$$_REQUIRE(_dependencyMap[173]);
  module.exports.product = _$$_REQUIRE(_dependencyMap[174]);
  module.exports.project = _$$_REQUIRE(_dependencyMap[175]);
  module.exports.prop = _$$_REQUIRE(_dependencyMap[176]);
  module.exports.propEq = _$$_REQUIRE(_dependencyMap[177]);
  module.exports.propIs = _$$_REQUIRE(_dependencyMap[178]);
  module.exports.propOr = _$$_REQUIRE(_dependencyMap[179]);
  module.exports.propSatisfies = _$$_REQUIRE(_dependencyMap[180]);
  module.exports.props = _$$_REQUIRE(_dependencyMap[181]);
  module.exports.range = _$$_REQUIRE(_dependencyMap[182]);
  module.exports.reduce = _$$_REQUIRE(_dependencyMap[183]);
  module.exports.reduceBy = _$$_REQUIRE(_dependencyMap[184]);
  module.exports.reduceRight = _$$_REQUIRE(_dependencyMap[185]);
  module.exports.reduceWhile = _$$_REQUIRE(_dependencyMap[186]);
  module.exports.reduced = _$$_REQUIRE(_dependencyMap[187]);
  module.exports.reject = _$$_REQUIRE(_dependencyMap[188]);
  module.exports.remove = _$$_REQUIRE(_dependencyMap[189]);
  module.exports.repeat = _$$_REQUIRE(_dependencyMap[190]);
  module.exports.replace = _$$_REQUIRE(_dependencyMap[191]);
  module.exports.reverse = _$$_REQUIRE(_dependencyMap[192]);
  module.exports.scan = _$$_REQUIRE(_dependencyMap[193]);
  module.exports.sequence = _$$_REQUIRE(_dependencyMap[194]);
  module.exports.set = _$$_REQUIRE(_dependencyMap[195]);
  module.exports.slice = _$$_REQUIRE(_dependencyMap[196]);
  module.exports.sort = _$$_REQUIRE(_dependencyMap[197]);
  module.exports.sortBy = _$$_REQUIRE(_dependencyMap[198]);
  module.exports.sortWith = _$$_REQUIRE(_dependencyMap[199]);
  module.exports.split = _$$_REQUIRE(_dependencyMap[200]);
  module.exports.splitAt = _$$_REQUIRE(_dependencyMap[201]);
  module.exports.splitEvery = _$$_REQUIRE(_dependencyMap[202]);
  module.exports.splitWhen = _$$_REQUIRE(_dependencyMap[203]);
  module.exports.startsWith = _$$_REQUIRE(_dependencyMap[204]);
  module.exports.subtract = _$$_REQUIRE(_dependencyMap[205]);
  module.exports.sum = _$$_REQUIRE(_dependencyMap[206]);
  module.exports.symmetricDifference = _$$_REQUIRE(_dependencyMap[207]);
  module.exports.symmetricDifferenceWith = _$$_REQUIRE(_dependencyMap[208]);
  module.exports.tail = _$$_REQUIRE(_dependencyMap[209]);
  module.exports.take = _$$_REQUIRE(_dependencyMap[210]);
  module.exports.takeLast = _$$_REQUIRE(_dependencyMap[211]);
  module.exports.takeLastWhile = _$$_REQUIRE(_dependencyMap[212]);
  module.exports.takeWhile = _$$_REQUIRE(_dependencyMap[213]);
  module.exports.tap = _$$_REQUIRE(_dependencyMap[214]);
  module.exports.test = _$$_REQUIRE(_dependencyMap[215]);
  module.exports.then = _$$_REQUIRE(_dependencyMap[216]);
  module.exports.times = _$$_REQUIRE(_dependencyMap[217]);
  module.exports.toLower = _$$_REQUIRE(_dependencyMap[218]);
  module.exports.toPairs = _$$_REQUIRE(_dependencyMap[219]);
  module.exports.toPairsIn = _$$_REQUIRE(_dependencyMap[220]);
  module.exports.toString = _$$_REQUIRE(_dependencyMap[221]);
  module.exports.toUpper = _$$_REQUIRE(_dependencyMap[222]);
  module.exports.transduce = _$$_REQUIRE(_dependencyMap[223]);
  module.exports.transpose = _$$_REQUIRE(_dependencyMap[224]);
  module.exports.traverse = _$$_REQUIRE(_dependencyMap[225]);
  module.exports.trim = _$$_REQUIRE(_dependencyMap[226]);
  module.exports.tryCatch = _$$_REQUIRE(_dependencyMap[227]);
  module.exports.type = _$$_REQUIRE(_dependencyMap[228]);
  module.exports.unapply = _$$_REQUIRE(_dependencyMap[229]);
  module.exports.unary = _$$_REQUIRE(_dependencyMap[230]);
  module.exports.uncurryN = _$$_REQUIRE(_dependencyMap[231]);
  module.exports.unfold = _$$_REQUIRE(_dependencyMap[232]);
  module.exports.union = _$$_REQUIRE(_dependencyMap[233]);
  module.exports.unionWith = _$$_REQUIRE(_dependencyMap[234]);
  module.exports.uniq = _$$_REQUIRE(_dependencyMap[235]);
  module.exports.uniqBy = _$$_REQUIRE(_dependencyMap[236]);
  module.exports.uniqWith = _$$_REQUIRE(_dependencyMap[237]);
  module.exports.unless = _$$_REQUIRE(_dependencyMap[238]);
  module.exports.unnest = _$$_REQUIRE(_dependencyMap[239]);
  module.exports.until = _$$_REQUIRE(_dependencyMap[240]);
  module.exports.update = _$$_REQUIRE(_dependencyMap[241]);
  module.exports.useWith = _$$_REQUIRE(_dependencyMap[242]);
  module.exports.values = _$$_REQUIRE(_dependencyMap[243]);
  module.exports.valuesIn = _$$_REQUIRE(_dependencyMap[244]);
  module.exports.view = _$$_REQUIRE(_dependencyMap[245]);
  module.exports.when = _$$_REQUIRE(_dependencyMap[246]);
  module.exports.where = _$$_REQUIRE(_dependencyMap[247]);
  module.exports.whereEq = _$$_REQUIRE(_dependencyMap[248]);
  module.exports.without = _$$_REQUIRE(_dependencyMap[249]);
  module.exports.xprod = _$$_REQUIRE(_dependencyMap[250]);
  module.exports.zip = _$$_REQUIRE(_dependencyMap[251]);
  module.exports.zipObj = _$$_REQUIRE(_dependencyMap[252]);
  module.exports.zipWith = _$$_REQUIRE(_dependencyMap[253]);
  module.exports.thunkify = _$$_REQUIRE(_dependencyMap[254]);
},10550,[10553,10556,10559,10562,10574,10589,10595,10616,10667,10670,10673,10679,10682,10685,10694,10697,10700,10706,10709,10712,10715,10724,10643,10730,10742,10748,10763,10766,10778,10781,10787,10808,10811,10820,10838,10895,10898,10901,10904,10907,10910,10745,10580,10919,10922,10925,10928,10934,10937,10940,10949,10952,10958,10973,10982,10988,10994,11000,11006,11009,11015,11018,10853,11021,10883,11024,11030,11036,11042,11048,11051,11054,11057,11060,11063,11066,11069,11072,11075,11081,11078,10826,11084,10832,11087,11090,11093,11096,11099,11102,11105,11108,11111,11114,11123,11126,11138,11141,11144,11147,11150,10721,11153,11156,10649,11159,10991,11162,11165,11171,11174,11177,11180,10736,10739,11183,11186,10625,11189,11192,11195,11198,11201,10619,11204,11207,11213,11216,11219,11222,11225,11234,11237,11228,11240,11243,11246,11231,11249,11252,11255,11258,11261,10727,11264,11267,10784,10829,11270,11273,11135,11276,11282,11285,11003,11288,11294,11297,11300,11306,11309,10661,11312,11315,11318,11321,11324,11327,10790,11330,10814,10823,10622,11333,11336,11339,10658,11345,11348,11351,11354,11357,11360,10664,10913,11363,11366,11369,10877,10943,11372,11378,10805,11381,11384,11387,10802,11390,11393,11396,11399,11402,11405,11408,11411,11414,11210,11417,11420,10796,10964,11012,11423,11426,11432,11438,11444,11375,11447,11450,11453,10841,11456,11459,11462,11465,11468,11471,10775,11474,11477,11480,11483,11486,11489,11117,11120,11492,11495,11498,11501,10946,11342,10703,11504,11507,11510,11513,11516,11519,11522,11525,11528,11531,11534]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var F = function F() {
    return false;
  };

  module.exports = F;
},10553,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var T = function T() {
    return true;
  };

  module.exports = T;
},10556,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    '@@functional/placeholder': true
  };
},10559,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var add = _curry2(function add(a, b) {
    return Number(a) + Number(b);
  });

  module.exports = add;
},10562,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _isPlaceholder = _$$_REQUIRE(_dependencyMap[1]);

  function _curry2(fn) {
    return function f2(a, b) {
      switch (arguments.length) {
        case 0:
          return f2;

        case 1:
          return _isPlaceholder(a) ? f2 : _curry1(function (_b) {
            return fn(a, _b);
          });

        default:
          return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {
            return fn(_a, b);
          }) : _isPlaceholder(b) ? _curry1(function (_b) {
            return fn(a, _b);
          }) : fn(a, b);
      }
    };
  }

  module.exports = _curry2;
},10565,[10568,10571]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _isPlaceholder = _$$_REQUIRE(_dependencyMap[0]);

  function _curry1(fn) {
    return function f1(a) {
      if (arguments.length === 0 || _isPlaceholder(a)) {
        return f1;
      } else {
        return fn.apply(this, arguments);
      }
    };
  }

  module.exports = _curry1;
},10568,[10571]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isPlaceholder(a) {
    return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;
  }

  module.exports = _isPlaceholder;
},10571,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _curry1 = _$$_REQUIRE(_dependencyMap[1]);

  var curryN = _$$_REQUIRE(_dependencyMap[2]);

  var addIndex = _curry1(function addIndex(fn) {
    return curryN(fn.length, function () {
      var idx = 0;
      var origFn = arguments[0];
      var list = arguments[arguments.length - 1];
      var args = Array.prototype.slice.call(arguments, 0);

      args[0] = function () {
        var result = origFn.apply(this, _concat(arguments, [idx, list]));
        idx += 1;
        return result;
      };

      return fn.apply(this, args);
    });
  });

  module.exports = addIndex;
},10574,[10577,10568,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _concat(set1, set2) {
    set1 = set1 || [];
    set2 = set2 || [];
    var idx;
    var len1 = set1.length;
    var len2 = set2.length;
    var result = [];
    idx = 0;

    while (idx < len1) {
      result[result.length] = set1[idx];
      idx += 1;
    }

    idx = 0;

    while (idx < len2) {
      result[result.length] = set2[idx];
      idx += 1;
    }

    return result;
  }

  module.exports = _concat;
},10577,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _curry1 = _$$_REQUIRE(_dependencyMap[1]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[2]);

  var _curryN = _$$_REQUIRE(_dependencyMap[3]);

  var curryN = _curry2(function curryN(length, fn) {
    if (length === 1) {
      return _curry1(fn);
    }

    return _arity(length, _curryN(length, [], fn));
  });

  module.exports = curryN;
},10580,[10583,10568,10565,10586]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arity(n, fn) {
    switch (n) {
      case 0:
        return function () {
          return fn.apply(this, arguments);
        };

      case 1:
        return function (a0) {
          return fn.apply(this, arguments);
        };

      case 2:
        return function (a0, a1) {
          return fn.apply(this, arguments);
        };

      case 3:
        return function (a0, a1, a2) {
          return fn.apply(this, arguments);
        };

      case 4:
        return function (a0, a1, a2, a3) {
          return fn.apply(this, arguments);
        };

      case 5:
        return function (a0, a1, a2, a3, a4) {
          return fn.apply(this, arguments);
        };

      case 6:
        return function (a0, a1, a2, a3, a4, a5) {
          return fn.apply(this, arguments);
        };

      case 7:
        return function (a0, a1, a2, a3, a4, a5, a6) {
          return fn.apply(this, arguments);
        };

      case 8:
        return function (a0, a1, a2, a3, a4, a5, a6, a7) {
          return fn.apply(this, arguments);
        };

      case 9:
        return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
          return fn.apply(this, arguments);
        };

      case 10:
        return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
          return fn.apply(this, arguments);
        };

      default:
        throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
    }
  }

  module.exports = _arity;
},10583,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _isPlaceholder = _$$_REQUIRE(_dependencyMap[1]);

  function _curryN(length, received, fn) {
    return function () {
      var combined = [];
      var argsIdx = 0;
      var left = length;
      var combinedIdx = 0;

      while (combinedIdx < received.length || argsIdx < arguments.length) {
        var result;

        if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {
          result = received[combinedIdx];
        } else {
          result = arguments[argsIdx];
          argsIdx += 1;
        }

        combined[combinedIdx] = result;

        if (!_isPlaceholder(result)) {
          left -= 1;
        }

        combinedIdx += 1;
      }

      return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));
    };
  }

  module.exports = _curryN;
},10586,[10583,10571]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _curry3 = _$$_REQUIRE(_dependencyMap[1]);

  var adjust = _curry3(function adjust(idx, fn, list) {
    if (idx >= list.length || idx < -list.length) {
      return list;
    }

    var start = idx < 0 ? list.length : 0;

    var _idx = start + idx;

    var _list = _concat(list);

    _list[_idx] = fn(list[_idx]);
    return _list;
  });

  module.exports = adjust;
},10589,[10577,10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var _isPlaceholder = _$$_REQUIRE(_dependencyMap[2]);

  function _curry3(fn) {
    return function f3(a, b, c) {
      switch (arguments.length) {
        case 0:
          return f3;

        case 1:
          return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {
            return fn(a, _b, _c);
          });

        case 2:
          return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {
            return fn(_a, b, _c);
          }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {
            return fn(a, _b, _c);
          }) : _curry1(function (_c) {
            return fn(a, b, _c);
          });

        default:
          return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {
            return fn(_a, _b, c);
          }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {
            return fn(_a, b, _c);
          }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {
            return fn(a, _b, _c);
          }) : _isPlaceholder(a) ? _curry1(function (_a) {
            return fn(_a, b, c);
          }) : _isPlaceholder(b) ? _curry1(function (_b) {
            return fn(a, _b, c);
          }) : _isPlaceholder(c) ? _curry1(function (_c) {
            return fn(a, b, _c);
          }) : fn(a, b, c);
      }
    };
  }

  module.exports = _curry3;
},10592,[10568,10565,10571]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xall = _$$_REQUIRE(_dependencyMap[2]);

  var all = _curry2(_dispatchable(['all'], _xall, function all(fn, list) {
    var idx = 0;

    while (idx < list.length) {
      if (!fn(list[idx])) {
        return false;
      }

      idx += 1;
    }

    return true;
  }));

  module.exports = all;
},10595,[10565,10598,10607]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _isArray = _$$_REQUIRE(_dependencyMap[0]);

  var _isTransformer = _$$_REQUIRE(_dependencyMap[1]);

  function _dispatchable(methodNames, xf, fn) {
    return function () {
      if (arguments.length === 0) {
        return fn();
      }

      var args = Array.prototype.slice.call(arguments, 0);
      var obj = args.pop();

      if (!_isArray(obj)) {
        var idx = 0;

        while (idx < methodNames.length) {
          if (typeof obj[methodNames[idx]] === 'function') {
            return obj[methodNames[idx]].apply(obj, args);
          }

          idx += 1;
        }

        if (_isTransformer(obj)) {
          var transducer = xf.apply(null, args);
          return transducer(obj);
        }
      }

      return fn.apply(this, arguments);
    };
  }

  module.exports = _dispatchable;
},10598,[10601,10604]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = Array.isArray || function _isArray(val) {
    return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';
  };
},10601,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isTransformer(obj) {
    return obj != null && typeof obj['@@transducer/step'] === 'function';
  }

  module.exports = _isTransformer;
},10604,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduced = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XAll = function () {
    function XAll(f, xf) {
      this.xf = xf;
      this.f = f;
      this.all = true;
    }

    XAll.prototype['@@transducer/init'] = _xfBase.init;

    XAll.prototype['@@transducer/result'] = function (result) {
      if (this.all) {
        result = this.xf['@@transducer/step'](result, true);
      }

      return this.xf['@@transducer/result'](result);
    };

    XAll.prototype['@@transducer/step'] = function (result, input) {
      if (!this.f(input)) {
        this.all = false;
        result = _reduced(this.xf['@@transducer/step'](result, false));
      }

      return result;
    };

    return XAll;
  }();

  var _xall = _curry2(function _xall(f, xf) {
    return new XAll(f, xf);
  });

  module.exports = _xall;
},10607,[10565,10610,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _reduced(x) {
    return x && x['@@transducer/reduced'] ? x : {
      '@@transducer/value': x,
      '@@transducer/reduced': true
    };
  }

  module.exports = _reduced;
},10610,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    init: function init() {
      return this.xf['@@transducer/init']();
    },
    result: function result(_result) {
      return this.xf['@@transducer/result'](_result);
    }
  };
},10613,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var curryN = _$$_REQUIRE(_dependencyMap[1]);

  var max = _$$_REQUIRE(_dependencyMap[2]);

  var pluck = _$$_REQUIRE(_dependencyMap[3]);

  var reduce = _$$_REQUIRE(_dependencyMap[4]);

  var allPass = _curry1(function allPass(preds) {
    return curryN(reduce(max, 0, pluck('length', preds)), function () {
      var idx = 0;
      var len = preds.length;

      while (idx < len) {
        if (!preds[idx].apply(this, arguments)) {
          return false;
        }

        idx += 1;
      }

      return true;
    });
  });

  module.exports = allPass;
},10616,[10568,10580,10619,10622,10664]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var max = _curry2(function max(a, b) {
    return b > a ? b : a;
  });

  module.exports = max;
},10619,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var map = _$$_REQUIRE(_dependencyMap[1]);

  var prop = _$$_REQUIRE(_dependencyMap[2]);

  var pluck = _curry2(function pluck(p, list) {
    return map(prop(p), list);
  });

  module.exports = pluck;
},10622,[10565,10625,10658]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _map = _$$_REQUIRE(_dependencyMap[2]);

  var _reduce = _$$_REQUIRE(_dependencyMap[3]);

  var _xmap = _$$_REQUIRE(_dependencyMap[4]);

  var curryN = _$$_REQUIRE(_dependencyMap[5]);

  var keys = _$$_REQUIRE(_dependencyMap[6]);

  var map = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
    switch (Object.prototype.toString.call(functor)) {
      case '[object Function]':
        return curryN(functor.length, function () {
          return fn.call(this, functor.apply(this, arguments));
        });

      case '[object Object]':
        return _reduce(function (acc, key) {
          acc[key] = fn(functor[key]);
          return acc;
        }, {}, keys(functor));

      default:
        return _map(fn, functor);
    }
  }));

  module.exports = map;
},10625,[10565,10598,10628,10631,10646,10580,10649]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _map(fn, functor) {
    var idx = 0;
    var len = functor.length;
    var result = Array(len);

    while (idx < len) {
      result[idx] = fn(functor[idx]);
      idx += 1;
    }

    return result;
  }

  module.exports = _map;
},10628,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _isArrayLike = _$$_REQUIRE(_dependencyMap[0]);

  var _xwrap = _$$_REQUIRE(_dependencyMap[1]);

  var bind = _$$_REQUIRE(_dependencyMap[2]);

  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;

    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);

      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }

      idx += 1;
    }

    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();

    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);

      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }

      step = iter.next();
    }

    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj, methodName) {
    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = typeof Symbol !== 'undefined' ? typeof Symbol === "function" ? Symbol.iterator : "@@iterator" : '@@iterator';

  function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }

    if (_isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }

    if (typeof list['fantasy-land/reduce'] === 'function') {
      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
    }

    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }

    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }

    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list, 'reduce');
    }

    throw new TypeError('reduce: list must be array or iterable');
  }

  module.exports = _reduce;
},10631,[10634,10640,10643]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _isArray = _$$_REQUIRE(_dependencyMap[1]);

  var _isString = _$$_REQUIRE(_dependencyMap[2]);

  var _isArrayLike = _curry1(function isArrayLike(x) {
    if (_isArray(x)) {
      return true;
    }

    if (!x) {
      return false;
    }

    if (typeof x !== 'object') {
      return false;
    }

    if (_isString(x)) {
      return false;
    }

    if (x.nodeType === 1) {
      return !!x.length;
    }

    if (x.length === 0) {
      return true;
    }

    if (x.length > 0) {
      return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
    }

    return false;
  });

  module.exports = _isArrayLike;
},10634,[10568,10601,10637]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isString(x) {
    return Object.prototype.toString.call(x) === '[object String]';
  }

  module.exports = _isString;
},10637,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var XWrap = function () {
    function XWrap(fn) {
      this.f = fn;
    }

    XWrap.prototype['@@transducer/init'] = function () {
      throw new Error('init not implemented on XWrap');
    };

    XWrap.prototype['@@transducer/result'] = function (acc) {
      return acc;
    };

    XWrap.prototype['@@transducer/step'] = function (acc, x) {
      return this.f(acc, x);
    };

    return XWrap;
  }();

  function _xwrap(fn) {
    return new XWrap(fn);
  }

  module.exports = _xwrap;
},10640,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var bind = _curry2(function bind(fn, thisObj) {
    return _arity(fn.length, function () {
      return fn.apply(thisObj, arguments);
    });
  });

  module.exports = bind;
},10643,[10583,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XMap = function () {
    function XMap(f, xf) {
      this.xf = xf;
      this.f = f;
    }

    XMap.prototype['@@transducer/init'] = _xfBase.init;
    XMap.prototype['@@transducer/result'] = _xfBase.result;

    XMap.prototype['@@transducer/step'] = function (result, input) {
      return this.xf['@@transducer/step'](result, this.f(input));
    };

    return XMap;
  }();

  var _xmap = _curry2(function _xmap(f, xf) {
    return new XMap(f, xf);
  });

  module.exports = _xmap;
},10646,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _has = _$$_REQUIRE(_dependencyMap[1]);

  var _isArguments = _$$_REQUIRE(_dependencyMap[2]);

  var hasEnumBug = !{
    toString: null
  }.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  var hasArgsEnumBug = function () {
    'use strict';

    return arguments.propertyIsEnumerable('length');
  }();

  var contains = function contains(list, item) {
    var idx = 0;

    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }

      idx += 1;
    }

    return false;
  };

  var keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {
    return Object(obj) !== obj ? [] : Object.keys(obj);
  }) : _curry1(function keys(obj) {
    if (Object(obj) !== obj) {
      return [];
    }

    var prop, nIdx;
    var ks = [];

    var checkArgsLength = hasArgsEnumBug && _isArguments(obj);

    for (prop in obj) {
      if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
        ks[ks.length] = prop;
      }
    }

    if (hasEnumBug) {
      nIdx = nonEnumerableProps.length - 1;

      while (nIdx >= 0) {
        prop = nonEnumerableProps[nIdx];

        if (_has(prop, obj) && !contains(ks, prop)) {
          ks[ks.length] = prop;
        }

        nIdx -= 1;
      }
    }

    return ks;
  });
  module.exports = keys;
},10649,[10568,10652,10655]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _has(prop, obj) {
    return Object.prototype.hasOwnProperty.call(obj, prop);
  }

  module.exports = _has;
},10652,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _has = _$$_REQUIRE(_dependencyMap[0]);

  var toString = Object.prototype.toString;

  var _isArguments = function () {
    return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {
      return toString.call(x) === '[object Arguments]';
    } : function _isArguments(x) {
      return _has('callee', x);
    };
  }();

  module.exports = _isArguments;
},10655,[10652]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var path = _$$_REQUIRE(_dependencyMap[1]);

  var prop = _curry2(function prop(p, obj) {
    return path([p], obj);
  });

  module.exports = prop;
},10658,[10565,10661]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var path = _curry2(function path(paths, obj) {
    var val = obj;
    var idx = 0;

    while (idx < paths.length) {
      if (val == null) {
        return;
      }

      val = val[paths[idx]];
      idx += 1;
    }

    return val;
  });

  module.exports = path;
},10661,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduce = _$$_REQUIRE(_dependencyMap[1]);

  var reduce = _curry3(_reduce);

  module.exports = reduce;
},10664,[10592,10631]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var always = _curry1(function always(val) {
    return function () {
      return val;
    };
  });

  module.exports = always;
},10667,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var and = _curry2(function and(a, b) {
    return a && b;
  });

  module.exports = and;
},10670,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xany = _$$_REQUIRE(_dependencyMap[2]);

  var any = _curry2(_dispatchable(['any'], _xany, function any(fn, list) {
    var idx = 0;

    while (idx < list.length) {
      if (fn(list[idx])) {
        return true;
      }

      idx += 1;
    }

    return false;
  }));

  module.exports = any;
},10673,[10565,10598,10676]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduced = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XAny = function () {
    function XAny(f, xf) {
      this.xf = xf;
      this.f = f;
      this.any = false;
    }

    XAny.prototype['@@transducer/init'] = _xfBase.init;

    XAny.prototype['@@transducer/result'] = function (result) {
      if (!this.any) {
        result = this.xf['@@transducer/step'](result, false);
      }

      return this.xf['@@transducer/result'](result);
    };

    XAny.prototype['@@transducer/step'] = function (result, input) {
      if (this.f(input)) {
        this.any = true;
        result = _reduced(this.xf['@@transducer/step'](result, true));
      }

      return result;
    };

    return XAny;
  }();

  var _xany = _curry2(function _xany(f, xf) {
    return new XAny(f, xf);
  });

  module.exports = _xany;
},10676,[10565,10610,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var curryN = _$$_REQUIRE(_dependencyMap[1]);

  var max = _$$_REQUIRE(_dependencyMap[2]);

  var pluck = _$$_REQUIRE(_dependencyMap[3]);

  var reduce = _$$_REQUIRE(_dependencyMap[4]);

  var anyPass = _curry1(function anyPass(preds) {
    return curryN(reduce(max, 0, pluck('length', preds)), function () {
      var idx = 0;
      var len = preds.length;

      while (idx < len) {
        if (preds[idx].apply(this, arguments)) {
          return true;
        }

        idx += 1;
      }

      return false;
    });
  });

  module.exports = anyPass;
},10679,[10568,10580,10619,10622,10664]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var _reduce = _$$_REQUIRE(_dependencyMap[2]);

  var map = _$$_REQUIRE(_dependencyMap[3]);

  var ap = _curry2(function ap(applyF, applyX) {
    return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {
      return applyF(x)(applyX(x));
    } : _reduce(function (acc, f) {
      return _concat(acc, map(f, applyX));
    }, [], applyF);
  });

  module.exports = ap;
},10682,[10577,10565,10631,10625]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _aperture = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[2]);

  var _xaperture = _$$_REQUIRE(_dependencyMap[3]);

  var aperture = _curry2(_dispatchable([], _xaperture, _aperture));

  module.exports = aperture;
},10685,[10688,10565,10598,10691]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _aperture(n, list) {
    var idx = 0;
    var limit = list.length - (n - 1);
    var acc = new Array(limit >= 0 ? limit : 0);

    while (idx < limit) {
      acc[idx] = Array.prototype.slice.call(list, idx, idx + n);
      idx += 1;
    }

    return acc;
  }

  module.exports = _aperture;
},10688,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XAperture = function () {
    function XAperture(n, xf) {
      this.xf = xf;
      this.pos = 0;
      this.full = false;
      this.acc = new Array(n);
    }

    XAperture.prototype['@@transducer/init'] = _xfBase.init;

    XAperture.prototype['@@transducer/result'] = function (result) {
      this.acc = null;
      return this.xf['@@transducer/result'](result);
    };

    XAperture.prototype['@@transducer/step'] = function (result, input) {
      this.store(input);
      return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;
    };

    XAperture.prototype.store = function (input) {
      this.acc[this.pos] = input;
      this.pos += 1;

      if (this.pos === this.acc.length) {
        this.pos = 0;
        this.full = true;
      }
    };

    XAperture.prototype.getCopy = function () {
      return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));
    };

    return XAperture;
  }();

  var _xaperture = _curry2(function _xaperture(n, xf) {
    return new XAperture(n, xf);
  });

  module.exports = _xaperture;
},10691,[10577,10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var append = _curry2(function append(el, list) {
    return _concat(list, [el]);
  });

  module.exports = append;
},10694,[10577,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var apply = _curry2(function apply(fn, args) {
    return fn.apply(this, args);
  });

  module.exports = apply;
},10697,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var apply = _$$_REQUIRE(_dependencyMap[1]);

  var curryN = _$$_REQUIRE(_dependencyMap[2]);

  var max = _$$_REQUIRE(_dependencyMap[3]);

  var pluck = _$$_REQUIRE(_dependencyMap[4]);

  var reduce = _$$_REQUIRE(_dependencyMap[5]);

  var keys = _$$_REQUIRE(_dependencyMap[6]);

  var values = _$$_REQUIRE(_dependencyMap[7]);

  function mapValues(fn, obj) {
    return keys(obj).reduce(function (acc, key) {
      acc[key] = fn(obj[key]);
      return acc;
    }, {});
  }

  var applySpec = _curry1(function applySpec(spec) {
    spec = mapValues(function (v) {
      return typeof v == 'function' ? v : applySpec(v);
    }, spec);
    return curryN(reduce(max, 0, pluck('length', values(spec))), function () {
      var args = arguments;
      return mapValues(function (f) {
        return apply(f, args);
      }, spec);
    });
  });

  module.exports = applySpec;
},10700,[10568,10697,10580,10619,10622,10664,10649,10703]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var keys = _$$_REQUIRE(_dependencyMap[1]);

  var values = _curry1(function values(obj) {
    var props = keys(obj);
    var len = props.length;
    var vals = [];
    var idx = 0;

    while (idx < len) {
      vals[idx] = obj[props[idx]];
      idx += 1;
    }

    return vals;
  });

  module.exports = values;
},10703,[10568,10649]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var applyTo = _curry2(function applyTo(x, f) {
    return f(x);
  });

  module.exports = applyTo;
},10706,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var ascend = _curry3(function ascend(fn, a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa < bb ? -1 : aa > bb ? 1 : 0;
  });

  module.exports = ascend;
},10709,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var assoc = _curry3(function assoc(prop, val, obj) {
    var result = {};

    for (var p in obj) {
      result[p] = obj[p];
    }

    result[prop] = val;
    return result;
  });

  module.exports = assoc;
},10712,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var _has = _$$_REQUIRE(_dependencyMap[1]);

  var _isArray = _$$_REQUIRE(_dependencyMap[2]);

  var _isInteger = _$$_REQUIRE(_dependencyMap[3]);

  var assoc = _$$_REQUIRE(_dependencyMap[4]);

  var isNil = _$$_REQUIRE(_dependencyMap[5]);

  var assocPath = _curry3(function assocPath(path, val, obj) {
    if (path.length === 0) {
      return val;
    }

    var idx = path[0];

    if (path.length > 1) {
      var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};
      val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);
    }

    if (_isInteger(idx) && _isArray(obj)) {
      var arr = [].concat(obj);
      arr[idx] = val;
      return arr;
    } else {
      return assoc(idx, val, obj);
    }
  });

  module.exports = assocPath;
},10715,[10592,10652,10601,10718,10712,10721]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = Number.isInteger || function _isInteger(n) {
    return n << 0 === n;
  };
},10718,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var isNil = _curry1(function isNil(x) {
    return x == null;
  });

  module.exports = isNil;
},10721,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var nAry = _$$_REQUIRE(_dependencyMap[1]);

  var binary = _curry1(function binary(fn) {
    return nAry(2, fn);
  });

  module.exports = binary;
},10724,[10568,10727]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var nAry = _curry2(function nAry(n, fn) {
    switch (n) {
      case 0:
        return function () {
          return fn.call(this);
        };

      case 1:
        return function (a0) {
          return fn.call(this, a0);
        };

      case 2:
        return function (a0, a1) {
          return fn.call(this, a0, a1);
        };

      case 3:
        return function (a0, a1, a2) {
          return fn.call(this, a0, a1, a2);
        };

      case 4:
        return function (a0, a1, a2, a3) {
          return fn.call(this, a0, a1, a2, a3);
        };

      case 5:
        return function (a0, a1, a2, a3, a4) {
          return fn.call(this, a0, a1, a2, a3, a4);
        };

      case 6:
        return function (a0, a1, a2, a3, a4, a5) {
          return fn.call(this, a0, a1, a2, a3, a4, a5);
        };

      case 7:
        return function (a0, a1, a2, a3, a4, a5, a6) {
          return fn.call(this, a0, a1, a2, a3, a4, a5, a6);
        };

      case 8:
        return function (a0, a1, a2, a3, a4, a5, a6, a7) {
          return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);
        };

      case 9:
        return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {
          return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);
        };

      case 10:
        return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
          return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
        };

      default:
        throw new Error('First argument to nAry must be a non-negative integer no greater than ten');
    }
  });

  module.exports = nAry;
},10727,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isFunction = _$$_REQUIRE(_dependencyMap[1]);

  var and = _$$_REQUIRE(_dependencyMap[2]);

  var lift = _$$_REQUIRE(_dependencyMap[3]);

  var both = _curry2(function both(f, g) {
    return _isFunction(f) ? function _both() {
      return f.apply(this, arguments) && g.apply(this, arguments);
    } : lift(and)(f, g);
  });

  module.exports = both;
},10730,[10565,10733,10670,10736]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isFunction(x) {
    return Object.prototype.toString.call(x) === '[object Function]';
  }

  module.exports = _isFunction;
},10733,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var liftN = _$$_REQUIRE(_dependencyMap[1]);

  var lift = _curry1(function lift(fn) {
    return liftN(fn.length, fn);
  });

  module.exports = lift;
},10736,[10568,10739]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduce = _$$_REQUIRE(_dependencyMap[1]);

  var ap = _$$_REQUIRE(_dependencyMap[2]);

  var curryN = _$$_REQUIRE(_dependencyMap[3]);

  var map = _$$_REQUIRE(_dependencyMap[4]);

  var liftN = _curry2(function liftN(arity, fn) {
    var lifted = curryN(arity, fn);
    return curryN(arity, function () {
      return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
    });
  });

  module.exports = liftN;
},10739,[10565,10631,10682,10580,10625]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var curry = _$$_REQUIRE(_dependencyMap[0]);

  var call = curry(function call(fn) {
    return fn.apply(this, Array.prototype.slice.call(arguments, 1));
  });
  module.exports = call;
},10742,[10745]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var curryN = _$$_REQUIRE(_dependencyMap[1]);

  var curry = _curry1(function curry(fn) {
    return curryN(fn.length, fn);
  });

  module.exports = curry;
},10745,[10568,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _makeFlat = _$$_REQUIRE(_dependencyMap[2]);

  var _xchain = _$$_REQUIRE(_dependencyMap[3]);

  var map = _$$_REQUIRE(_dependencyMap[4]);

  var chain = _curry2(_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {
    if (typeof monad === 'function') {
      return function (x) {
        return fn(monad(x))(x);
      };
    }

    return _makeFlat(false)(map(fn, monad));
  }));

  module.exports = chain;
},10748,[10565,10598,10751,10754,10625]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _isArrayLike = _$$_REQUIRE(_dependencyMap[0]);

  function _makeFlat(recursive) {
    return function flatt(list) {
      var value, jlen, j;
      var result = [];
      var idx = 0;
      var ilen = list.length;

      while (idx < ilen) {
        if (_isArrayLike(list[idx])) {
          value = recursive ? flatt(list[idx]) : list[idx];
          j = 0;
          jlen = value.length;

          while (j < jlen) {
            result[result.length] = value[j];
            j += 1;
          }
        } else {
          result[result.length] = list[idx];
        }

        idx += 1;
      }

      return result;
    };
  }

  module.exports = _makeFlat;
},10751,[10634]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _flatCat = _$$_REQUIRE(_dependencyMap[1]);

  var map = _$$_REQUIRE(_dependencyMap[2]);

  var _xchain = _curry2(function _xchain(f, xf) {
    return map(f, _flatCat(xf));
  });

  module.exports = _xchain;
},10754,[10565,10757,10625]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _forceReduced = _$$_REQUIRE(_dependencyMap[0]);

  var _isArrayLike = _$$_REQUIRE(_dependencyMap[1]);

  var _reduce = _$$_REQUIRE(_dependencyMap[2]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[3]);

  var preservingReduced = function preservingReduced(xf) {
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return xf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        var ret = xf['@@transducer/step'](result, input);
        return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;
      }
    };
  };

  var _flatCat = function _xcat(xf) {
    var rxf = preservingReduced(xf);
    return {
      '@@transducer/init': _xfBase.init,
      '@@transducer/result': function transducerResult(result) {
        return rxf['@@transducer/result'](result);
      },
      '@@transducer/step': function transducerStep(result, input) {
        return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);
      }
    };
  };

  module.exports = _flatCat;
},10757,[10760,10634,10631,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _forceReduced(x) {
    return {
      '@@transducer/value': x,
      '@@transducer/reduced': true
    };
  }

  module.exports = _forceReduced;
},10760,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var clamp = _curry3(function clamp(min, max, value) {
    if (min > max) {
      throw new Error('min must not be greater than max in clamp(min, max, value)');
    }

    return value < min ? min : value > max ? max : value;
  });

  module.exports = clamp;
},10763,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _clone = _$$_REQUIRE(_dependencyMap[0]);

  var _curry1 = _$$_REQUIRE(_dependencyMap[1]);

  var clone = _curry1(function clone(value) {
    return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);
  });

  module.exports = clone;
},10766,[10769,10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _cloneRegExp = _$$_REQUIRE(_dependencyMap[0]);

  var type = _$$_REQUIRE(_dependencyMap[1]);

  function _clone(value, refFrom, refTo, deep) {
    var copy = function copy(copiedValue) {
      var len = refFrom.length;
      var idx = 0;

      while (idx < len) {
        if (value === refFrom[idx]) {
          return refTo[idx];
        }

        idx += 1;
      }

      refFrom[idx + 1] = value;
      refTo[idx + 1] = copiedValue;

      for (var key in value) {
        copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];
      }

      return copiedValue;
    };

    switch (type(value)) {
      case 'Object':
        return copy({});

      case 'Array':
        return copy([]);

      case 'Date':
        return new Date(value.valueOf());

      case 'RegExp':
        return _cloneRegExp(value);

      default:
        return value;
    }
  }

  module.exports = _clone;
},10769,[10772,10775]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _cloneRegExp(pattern) {
    return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));
  }

  module.exports = _cloneRegExp;
},10772,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var type = _curry1(function type(val) {
    return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);
  });

  module.exports = type;
},10775,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var comparator = _curry1(function comparator(pred) {
    return function (a, b) {
      return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;
    };
  });

  module.exports = comparator;
},10778,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var lift = _$$_REQUIRE(_dependencyMap[0]);

  var not = _$$_REQUIRE(_dependencyMap[1]);

  var complement = lift(not);
  module.exports = complement;
},10781,[10736,10784]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var not = _curry1(function not(a) {
    return !a;
  });

  module.exports = not;
},10784,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var pipe = _$$_REQUIRE(_dependencyMap[0]);

  var reverse = _$$_REQUIRE(_dependencyMap[1]);

  function compose() {
    if (arguments.length === 0) {
      throw new Error('compose requires at least one argument');
    }

    return pipe.apply(this, reverse(arguments));
  }

  module.exports = compose;
},10787,[10790,10805]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _pipe = _$$_REQUIRE(_dependencyMap[1]);

  var reduce = _$$_REQUIRE(_dependencyMap[2]);

  var tail = _$$_REQUIRE(_dependencyMap[3]);

  function pipe() {
    if (arguments.length === 0) {
      throw new Error('pipe requires at least one argument');
    }

    return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));
  }

  module.exports = pipe;
},10790,[10583,10793,10664,10796]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _pipe(f, g) {
    return function () {
      return g.call(this, f.apply(this, arguments));
    };
  }

  module.exports = _pipe;
},10793,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _checkForMethod = _$$_REQUIRE(_dependencyMap[0]);

  var _curry1 = _$$_REQUIRE(_dependencyMap[1]);

  var slice = _$$_REQUIRE(_dependencyMap[2]);

  var tail = _curry1(_checkForMethod('tail', slice(1, Infinity)));

  module.exports = tail;
},10796,[10799,10568,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _isArray = _$$_REQUIRE(_dependencyMap[0]);

  function _checkForMethod(methodname, fn) {
    return function () {
      var length = arguments.length;

      if (length === 0) {
        return fn();
      }

      var obj = arguments[length - 1];
      return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
    };
  }

  module.exports = _checkForMethod;
},10799,[10601]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _checkForMethod = _$$_REQUIRE(_dependencyMap[0]);

  var _curry3 = _$$_REQUIRE(_dependencyMap[1]);

  var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
    return Array.prototype.slice.call(list, fromIndex, toIndex);
  }));

  module.exports = slice;
},10802,[10799,10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _isString = _$$_REQUIRE(_dependencyMap[1]);

  var reverse = _curry1(function reverse(list) {
    return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();
  });

  module.exports = reverse;
},10805,[10568,10637]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var chain = _$$_REQUIRE(_dependencyMap[0]);

  var compose = _$$_REQUIRE(_dependencyMap[1]);

  var map = _$$_REQUIRE(_dependencyMap[2]);

  function composeK() {
    if (arguments.length === 0) {
      throw new Error('composeK requires at least one argument');
    }

    var init = Array.prototype.slice.call(arguments);
    var last = init.pop();
    return compose(compose.apply(this, map(chain, init)), last);
  }

  module.exports = composeK;
},10808,[10748,10787,10625]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var pipeP = _$$_REQUIRE(_dependencyMap[0]);

  var reverse = _$$_REQUIRE(_dependencyMap[1]);

  function composeP() {
    if (arguments.length === 0) {
      throw new Error('composeP requires at least one argument');
    }

    return pipeP.apply(this, reverse(arguments));
  }

  module.exports = composeP;
},10811,[10814,10805]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _pipeP = _$$_REQUIRE(_dependencyMap[1]);

  var reduce = _$$_REQUIRE(_dependencyMap[2]);

  var tail = _$$_REQUIRE(_dependencyMap[3]);

  function pipeP() {
    if (arguments.length === 0) {
      throw new Error('pipeP requires at least one argument');
    }

    return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));
  }

  module.exports = pipeP;
},10814,[10583,10817,10664,10796]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _pipeP(f, g) {
    return function () {
      var ctx = this;
      return f.apply(ctx, arguments).then(function (x) {
        return g.call(ctx, x);
      });
    };
  }

  module.exports = _pipeP;
},10817,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var pipeWith = _$$_REQUIRE(_dependencyMap[1]);

  var reverse = _$$_REQUIRE(_dependencyMap[2]);

  var composeWith = _curry2(function composeWith(xf, list) {
    return pipeWith.apply(this, [xf, reverse(list)]);
  });

  module.exports = composeWith;
},10820,[10565,10823,10805]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var head = _$$_REQUIRE(_dependencyMap[2]);

  var _reduce = _$$_REQUIRE(_dependencyMap[3]);

  var tail = _$$_REQUIRE(_dependencyMap[4]);

  var identity = _$$_REQUIRE(_dependencyMap[5]);

  var pipeWith = _curry2(function pipeWith(xf, list) {
    if (list.length <= 0) {
      return identity;
    }

    var headList = head(list);
    var tailList = tail(list);
    return _arity(headList.length, function () {
      return _reduce(function (result, f) {
        return xf.call(this, f, result);
      }, headList.apply(this, arguments), tailList);
    });
  });

  module.exports = pipeWith;
},10823,[10583,10565,10826,10631,10796,10832]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var nth = _$$_REQUIRE(_dependencyMap[0]);

  var head = nth(0);
  module.exports = head;
},10826,[10829]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isString = _$$_REQUIRE(_dependencyMap[1]);

  var nth = _curry2(function nth(offset, list) {
    var idx = offset < 0 ? list.length + offset : offset;
    return _isString(list) ? list.charAt(idx) : list[idx];
  });

  module.exports = nth;
},10829,[10565,10637]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _identity = _$$_REQUIRE(_dependencyMap[1]);

  var identity = _curry1(_identity);

  module.exports = identity;
},10832,[10568,10835]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _identity(x) {
    return x;
  }

  module.exports = _identity;
},10835,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isArray = _$$_REQUIRE(_dependencyMap[1]);

  var _isFunction = _$$_REQUIRE(_dependencyMap[2]);

  var _isString = _$$_REQUIRE(_dependencyMap[3]);

  var toString = _$$_REQUIRE(_dependencyMap[4]);

  var concat = _curry2(function concat(a, b) {
    if (_isArray(a)) {
      if (_isArray(b)) {
        return a.concat(b);
      }

      throw new TypeError(toString(b) + ' is not an array');
    }

    if (_isString(a)) {
      if (_isString(b)) {
        return a + b;
      }

      throw new TypeError(toString(b) + ' is not a string');
    }

    if (a != null && _isFunction(a['fantasy-land/concat'])) {
      return a['fantasy-land/concat'](b);
    }

    if (a != null && _isFunction(a.concat)) {
      return a.concat(b);
    }

    throw new TypeError(toString(a) + ' does not have a method named "concat" or "fantasy-land/concat"');
  });

  module.exports = concat;
},10838,[10565,10601,10733,10637,10841]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _toString = _$$_REQUIRE(_dependencyMap[1]);

  var toString = _curry1(function toString(val) {
    return _toString(val, []);
  });

  module.exports = toString;
},10841,[10568,10844]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includes = _$$_REQUIRE(_dependencyMap[0]);

  var _map = _$$_REQUIRE(_dependencyMap[1]);

  var _quote = _$$_REQUIRE(_dependencyMap[2]);

  var _toISOString = _$$_REQUIRE(_dependencyMap[3]);

  var keys = _$$_REQUIRE(_dependencyMap[4]);

  var reject = _$$_REQUIRE(_dependencyMap[5]);

  function _toString(x, seen) {
    var recur = function recur(y) {
      var xs = seen.concat([x]);
      return _includes(y, xs) ? '<Circular>' : _toString(y, xs);
    };

    var mapPairs = function mapPairs(obj, keys) {
      return _map(function (k) {
        return _quote(k) + ': ' + recur(obj[k]);
      }, keys.slice().sort());
    };

    switch (Object.prototype.toString.call(x)) {
      case '[object Arguments]':
        return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';

      case '[object Array]':
        return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {
          return /^\d+$/.test(k);
        }, keys(x)))).join(', ') + ']';

      case '[object Boolean]':
        return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();

      case '[object Date]':
        return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';

      case '[object Null]':
        return 'null';

      case '[object Number]':
        return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -(1 / 0) ? '-0' : x.toString(10);

      case '[object String]':
        return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);

      case '[object Undefined]':
        return 'undefined';

      default:
        if (typeof x.toString === 'function') {
          var repr = x.toString();

          if (repr !== '[object Object]') {
            return repr;
          }
        }

        return '{' + mapPairs(x, keys(x)).join(', ') + '}';
    }
  }

  module.exports = _toString;
},10844,[10847,10628,10871,10874,10649,10877]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _indexOf = _$$_REQUIRE(_dependencyMap[0]);

  function _includes(a, list) {
    return _indexOf(list, a, 0) >= 0;
  }

  module.exports = _includes;
},10847,[10850]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var equals = _$$_REQUIRE(_dependencyMap[0]);

  function _indexOf(list, a, idx) {
    var inf, item;

    if (typeof list.indexOf === 'function') {
      switch (typeof a) {
        case 'number':
          if (a === 0) {
            inf = 1 / a;

            while (idx < list.length) {
              item = list[idx];

              if (item === 0 && 1 / item === inf) {
                return idx;
              }

              idx += 1;
            }

            return -1;
          } else if (a !== a) {
            while (idx < list.length) {
              item = list[idx];

              if (typeof item === 'number' && item !== item) {
                return idx;
              }

              idx += 1;
            }

            return -1;
          }

          return list.indexOf(a, idx);

        case 'string':
        case 'boolean':
        case 'function':
        case 'undefined':
          return list.indexOf(a, idx);

        case 'object':
          if (a === null) {
            return list.indexOf(a, idx);
          }

      }
    }

    while (idx < list.length) {
      if (equals(list[idx], a)) {
        return idx;
      }

      idx += 1;
    }

    return -1;
  }

  module.exports = _indexOf;
},10850,[10853]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _equals = _$$_REQUIRE(_dependencyMap[1]);

  var equals = _curry2(function equals(a, b) {
    return _equals(a, b, [], []);
  });

  module.exports = equals;
},10853,[10565,10856]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arrayFromIterator = _$$_REQUIRE(_dependencyMap[0]);

  var _includesWith = _$$_REQUIRE(_dependencyMap[1]);

  var _functionName = _$$_REQUIRE(_dependencyMap[2]);

  var _has = _$$_REQUIRE(_dependencyMap[3]);

  var _objectIs = _$$_REQUIRE(_dependencyMap[4]);

  var keys = _$$_REQUIRE(_dependencyMap[5]);

  var type = _$$_REQUIRE(_dependencyMap[6]);

  function _uniqContentEquals(aIterator, bIterator, stackA, stackB) {
    var a = _arrayFromIterator(aIterator);

    var b = _arrayFromIterator(bIterator);

    function eq(_a, _b) {
      return _equals(_a, _b, stackA.slice(), stackB.slice());
    }

    return !_includesWith(function (b, aItem) {
      return !_includesWith(eq, aItem, b);
    }, b, a);
  }

  function _equals(a, b, stackA, stackB) {
    if (_objectIs(a, b)) {
      return true;
    }

    var typeA = type(a);

    if (typeA !== type(b)) {
      return false;
    }

    if (a == null || b == null) {
      return false;
    }

    if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
      return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
    }

    if (typeof a.equals === 'function' || typeof b.equals === 'function') {
      return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);
    }

    switch (typeA) {
      case 'Arguments':
      case 'Array':
      case 'Object':
        if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {
          return a === b;
        }

        break;

      case 'Boolean':
      case 'Number':
      case 'String':
        if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {
          return false;
        }

        break;

      case 'Date':
        if (!_objectIs(a.valueOf(), b.valueOf())) {
          return false;
        }

        break;

      case 'Error':
        return a.name === b.name && a.message === b.message;

      case 'RegExp':
        if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {
          return false;
        }

        break;
    }

    var idx = stackA.length - 1;

    while (idx >= 0) {
      if (stackA[idx] === a) {
        return stackB[idx] === b;
      }

      idx -= 1;
    }

    switch (typeA) {
      case 'Map':
        if (a.size !== b.size) {
          return false;
        }

        return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));

      case 'Set':
        if (a.size !== b.size) {
          return false;
        }

        return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));

      case 'Arguments':
      case 'Array':
      case 'Object':
      case 'Boolean':
      case 'Number':
      case 'String':
      case 'Date':
      case 'Error':
      case 'RegExp':
      case 'Int8Array':
      case 'Uint8Array':
      case 'Uint8ClampedArray':
      case 'Int16Array':
      case 'Uint16Array':
      case 'Int32Array':
      case 'Uint32Array':
      case 'Float32Array':
      case 'Float64Array':
      case 'ArrayBuffer':
        break;

      default:
        return false;
    }

    var keysA = keys(a);

    if (keysA.length !== keys(b).length) {
      return false;
    }

    var extendedStackA = stackA.concat([a]);
    var extendedStackB = stackB.concat([b]);
    idx = keysA.length - 1;

    while (idx >= 0) {
      var key = keysA[idx];

      if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {
        return false;
      }

      idx -= 1;
    }

    return true;
  }

  module.exports = _equals;
},10856,[10859,10862,10865,10652,10868,10649,10775]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayFromIterator(iter) {
    var list = [];
    var next;

    while (!(next = iter.next()).done) {
      list.push(next.value);
    }

    return list;
  }

  module.exports = _arrayFromIterator;
},10859,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _includesWith(pred, x, list) {
    var idx = 0;
    var len = list.length;

    while (idx < len) {
      if (pred(x, list[idx])) {
        return true;
      }

      idx += 1;
    }

    return false;
  }

  module.exports = _includesWith;
},10862,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _functionName(f) {
    var match = String(f).match(/^function (\w*)/);
    return match == null ? '' : match[1];
  }

  module.exports = _functionName;
},10865,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectIs(a, b) {
    if (a === b) {
      return a !== 0 || 1 / a === 1 / b;
    } else {
      return a !== a && b !== b;
    }
  }

  module.exports = typeof Object.is === 'function' ? Object.is : _objectIs;
},10868,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _quote(s) {
    var escaped = s.replace(/\\/g, '\\\\').replace(/[\b]/g, '\\b').replace(/\f/g, '\\f').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t').replace(/\v/g, '\\v').replace(/\0/g, '\\0');
    return '"' + escaped.replace(/"/g, '\\"') + '"';
  }

  module.exports = _quote;
},10871,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var pad = function pad(n) {
    return (n < 10 ? '0' : '') + n;
  };

  var _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {
    return d.toISOString();
  } : function _toISOString(d) {
    return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';
  };

  module.exports = _toISOString;
},10874,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _complement = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var filter = _$$_REQUIRE(_dependencyMap[2]);

  var reject = _curry2(function reject(pred, filterable) {
    return filter(_complement(pred), filterable);
  });

  module.exports = reject;
},10877,[10880,10565,10883]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _complement(f) {
    return function () {
      return !f.apply(this, arguments);
    };
  }

  module.exports = _complement;
},10880,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _filter = _$$_REQUIRE(_dependencyMap[2]);

  var _isObject = _$$_REQUIRE(_dependencyMap[3]);

  var _reduce = _$$_REQUIRE(_dependencyMap[4]);

  var _xfilter = _$$_REQUIRE(_dependencyMap[5]);

  var keys = _$$_REQUIRE(_dependencyMap[6]);

  var filter = _curry2(_dispatchable(['filter'], _xfilter, function (pred, filterable) {
    return _isObject(filterable) ? _reduce(function (acc, key) {
      if (pred(filterable[key])) {
        acc[key] = filterable[key];
      }

      return acc;
    }, {}, keys(filterable)) : _filter(pred, filterable);
  }));

  module.exports = filter;
},10883,[10565,10598,10886,10889,10631,10892,10649]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _filter(fn, list) {
    var idx = 0;
    var len = list.length;
    var result = [];

    while (idx < len) {
      if (fn(list[idx])) {
        result[result.length] = list[idx];
      }

      idx += 1;
    }

    return result;
  }

  module.exports = _filter;
},10886,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isObject(x) {
    return Object.prototype.toString.call(x) === '[object Object]';
  }

  module.exports = _isObject;
},10889,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XFilter = function () {
    function XFilter(f, xf) {
      this.xf = xf;
      this.f = f;
    }

    XFilter.prototype['@@transducer/init'] = _xfBase.init;
    XFilter.prototype['@@transducer/result'] = _xfBase.result;

    XFilter.prototype['@@transducer/step'] = function (result, input) {
      return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
    };

    return XFilter;
  }();

  var _xfilter = _curry2(function _xfilter(f, xf) {
    return new XFilter(f, xf);
  });

  module.exports = _xfilter;
},10892,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _curry1 = _$$_REQUIRE(_dependencyMap[1]);

  var map = _$$_REQUIRE(_dependencyMap[2]);

  var max = _$$_REQUIRE(_dependencyMap[3]);

  var reduce = _$$_REQUIRE(_dependencyMap[4]);

  var cond = _curry1(function cond(pairs) {
    var arity = reduce(max, 0, map(function (pair) {
      return pair[0].length;
    }, pairs));
    return _arity(arity, function () {
      var idx = 0;

      while (idx < pairs.length) {
        if (pairs[idx][0].apply(this, arguments)) {
          return pairs[idx][1].apply(this, arguments);
        }

        idx += 1;
      }
    });
  });

  module.exports = cond;
},10895,[10583,10568,10625,10619,10664]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var constructN = _$$_REQUIRE(_dependencyMap[1]);

  var construct = _curry1(function construct(Fn) {
    return constructN(Fn.length, Fn);
  });

  module.exports = construct;
},10898,[10568,10901]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var curry = _$$_REQUIRE(_dependencyMap[1]);

  var nAry = _$$_REQUIRE(_dependencyMap[2]);

  var constructN = _curry2(function constructN(n, Fn) {
    if (n > 10) {
      throw new Error('Constructor with greater than ten arguments');
    }

    if (n === 0) {
      return function () {
        return new Fn();
      };
    }

    return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
      switch (arguments.length) {
        case 1:
          return new Fn($0);

        case 2:
          return new Fn($0, $1);

        case 3:
          return new Fn($0, $1, $2);

        case 4:
          return new Fn($0, $1, $2, $3);

        case 5:
          return new Fn($0, $1, $2, $3, $4);

        case 6:
          return new Fn($0, $1, $2, $3, $4, $5);

        case 7:
          return new Fn($0, $1, $2, $3, $4, $5, $6);

        case 8:
          return new Fn($0, $1, $2, $3, $4, $5, $6, $7);

        case 9:
          return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);

        case 10:
          return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);
      }
    }));
  });

  module.exports = constructN;
},10901,[10565,10745,10727]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includes = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var contains = _curry2(_includes);

  module.exports = contains;
},10904,[10847,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _map = _$$_REQUIRE(_dependencyMap[1]);

  var curryN = _$$_REQUIRE(_dependencyMap[2]);

  var max = _$$_REQUIRE(_dependencyMap[3]);

  var pluck = _$$_REQUIRE(_dependencyMap[4]);

  var reduce = _$$_REQUIRE(_dependencyMap[5]);

  var converge = _curry2(function converge(after, fns) {
    return curryN(reduce(max, 0, pluck('length', fns)), function () {
      var args = arguments;
      var context = this;
      return after.apply(context, _map(function (fn) {
        return fn.apply(context, args);
      }, fns));
    });
  });

  module.exports = converge;
},10907,[10565,10628,10580,10619,10622,10664]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var reduceBy = _$$_REQUIRE(_dependencyMap[0]);

  var countBy = reduceBy(function (acc, elem) {
    return acc + 1;
  }, 0);
  module.exports = countBy;
},10910,[10913]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curryN = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _has = _$$_REQUIRE(_dependencyMap[2]);

  var _reduce = _$$_REQUIRE(_dependencyMap[3]);

  var _xreduceBy = _$$_REQUIRE(_dependencyMap[4]);

  var reduceBy = _curryN(4, [], _dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {
    return _reduce(function (acc, elt) {
      var key = keyFn(elt);
      acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);
      return acc;
    }, {}, list);
  }));

  module.exports = reduceBy;
},10913,[10586,10598,10652,10631,10916]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curryN = _$$_REQUIRE(_dependencyMap[0]);

  var _has = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XReduceBy = function () {
    function XReduceBy(valueFn, valueAcc, keyFn, xf) {
      this.valueFn = valueFn;
      this.valueAcc = valueAcc;
      this.keyFn = keyFn;
      this.xf = xf;
      this.inputs = {};
    }

    XReduceBy.prototype['@@transducer/init'] = _xfBase.init;

    XReduceBy.prototype['@@transducer/result'] = function (result) {
      var key;

      for (key in this.inputs) {
        if (_has(key, this.inputs)) {
          result = this.xf['@@transducer/step'](result, this.inputs[key]);

          if (result['@@transducer/reduced']) {
            result = result['@@transducer/value'];
            break;
          }
        }
      }

      this.inputs = null;
      return this.xf['@@transducer/result'](result);
    };

    XReduceBy.prototype['@@transducer/step'] = function (result, input) {
      var key = this.keyFn(input);
      this.inputs[key] = this.inputs[key] || [key, this.valueAcc];
      this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);
      return result;
    };

    return XReduceBy;
  }();

  var _xreduceBy = _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {
    return new XReduceBy(valueFn, valueAcc, keyFn, xf);
  });

  module.exports = _xreduceBy;
},10916,[10586,10652,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var add = _$$_REQUIRE(_dependencyMap[0]);

  var dec = add(-1);
  module.exports = dec;
},10919,[10562]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var defaultTo = _curry2(function defaultTo(d, v) {
    return v == null || v !== v ? d : v;
  });

  module.exports = defaultTo;
},10922,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var descend = _curry3(function descend(fn, a, b) {
    var aa = fn(a);
    var bb = fn(b);
    return aa > bb ? -1 : aa < bb ? 1 : 0;
  });

  module.exports = descend;
},10925,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _Set = _$$_REQUIRE(_dependencyMap[1]);

  var difference = _curry2(function difference(first, second) {
    var out = [];
    var idx = 0;
    var firstLen = first.length;
    var secondLen = second.length;
    var toFilterOut = new _Set();

    for (var i = 0; i < secondLen; i += 1) {
      toFilterOut.add(second[i]);
    }

    while (idx < firstLen) {
      if (toFilterOut.add(first[idx])) {
        out[out.length] = first[idx];
      }

      idx += 1;
    }

    return out;
  });

  module.exports = difference;
},10928,[10565,10931]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includes = _$$_REQUIRE(_dependencyMap[0]);

  var _Set = function () {
    function _Set() {
      this._nativeSet = typeof Set === 'function' ? new Set() : null;
      this._items = {};
    }

    _Set.prototype.add = function (item) {
      return !hasOrAdd(item, true, this);
    };

    _Set.prototype.has = function (item) {
      return hasOrAdd(item, false, this);
    };

    return _Set;
  }();

  function hasOrAdd(item, shouldAdd, set) {
    var type = typeof item;
    var prevSize, newSize;

    switch (type) {
      case 'string':
      case 'number':
        if (item === 0 && 1 / item === -(1 / 0)) {
          if (set._items['-0']) {
            return true;
          } else {
            if (shouldAdd) {
              set._items['-0'] = true;
            }

            return false;
          }
        }

        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;

            set._nativeSet.add(item);

            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = {};
              set._items[type][item] = true;
            }

            return false;
          } else if (item in set._items[type]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][item] = true;
            }

            return false;
          }
        }

      case 'boolean':
        if (type in set._items) {
          var bIdx = item ? 1 : 0;

          if (set._items[type][bIdx]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][bIdx] = true;
            }

            return false;
          }
        } else {
          if (shouldAdd) {
            set._items[type] = item ? [false, true] : [true, false];
          }

          return false;
        }

      case 'function':
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;

            set._nativeSet.add(item);

            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = [item];
            }

            return false;
          }

          if (!_includes(item, set._items[type])) {
            if (shouldAdd) {
              set._items[type].push(item);
            }

            return false;
          }

          return true;
        }

      case 'undefined':
        if (set._items[type]) {
          return true;
        } else {
          if (shouldAdd) {
            set._items[type] = true;
          }

          return false;
        }

      case 'object':
        if (item === null) {
          if (!set._items['null']) {
            if (shouldAdd) {
              set._items['null'] = true;
            }

            return false;
          }

          return true;
        }

      default:
        type = Object.prototype.toString.call(item);

        if (!(type in set._items)) {
          if (shouldAdd) {
            set._items[type] = [item];
          }

          return false;
        }

        if (!_includes(item, set._items[type])) {
          if (shouldAdd) {
            set._items[type].push(item);
          }

          return false;
        }

        return true;
    }
  }

  module.exports = _Set;
},10931,[10847]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includesWith = _$$_REQUIRE(_dependencyMap[0]);

  var _curry3 = _$$_REQUIRE(_dependencyMap[1]);

  var differenceWith = _curry3(function differenceWith(pred, first, second) {
    var out = [];
    var idx = 0;
    var firstLen = first.length;

    while (idx < firstLen) {
      if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {
        out.push(first[idx]);
      }

      idx += 1;
    }

    return out;
  });

  module.exports = differenceWith;
},10934,[10862,10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var dissoc = _curry2(function dissoc(prop, obj) {
    var result = {};

    for (var p in obj) {
      result[p] = obj[p];
    }

    delete result[prop];
    return result;
  });

  module.exports = dissoc;
},10937,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isInteger = _$$_REQUIRE(_dependencyMap[1]);

  var _isArray = _$$_REQUIRE(_dependencyMap[2]);

  var assoc = _$$_REQUIRE(_dependencyMap[3]);

  var dissoc = _$$_REQUIRE(_dependencyMap[4]);

  var remove = _$$_REQUIRE(_dependencyMap[5]);

  var update = _$$_REQUIRE(_dependencyMap[6]);

  var dissocPath = _curry2(function dissocPath(path, obj) {
    switch (path.length) {
      case 0:
        return obj;

      case 1:
        return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);

      default:
        var head = path[0];
        var tail = Array.prototype.slice.call(path, 1);

        if (obj[head] == null) {
          return obj;
        } else if (_isInteger(head) && _isArray(obj)) {
          return update(head, dissocPath(tail, obj[head]), obj);
        } else {
          return assoc(head, dissocPath(tail, obj[head]), obj);
        }

    }
  });

  module.exports = dissocPath;
},10940,[10565,10718,10601,10712,10937,10943,10946]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var remove = _curry3(function remove(start, count, list) {
    var result = Array.prototype.slice.call(list, 0);
    result.splice(start, count);
    return result;
  });

  module.exports = remove;
},10943,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var adjust = _$$_REQUIRE(_dependencyMap[1]);

  var always = _$$_REQUIRE(_dependencyMap[2]);

  var update = _curry3(function update(idx, x, list) {
    return adjust(idx, always(x), list);
  });

  module.exports = update;
},10946,[10592,10589,10667]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var divide = _curry2(function divide(a, b) {
    return a / b;
  });

  module.exports = divide;
},10949,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xdrop = _$$_REQUIRE(_dependencyMap[2]);

  var slice = _$$_REQUIRE(_dependencyMap[3]);

  var drop = _curry2(_dispatchable(['drop'], _xdrop, function drop(n, xs) {
    return slice(Math.max(0, n), Infinity, xs);
  }));

  module.exports = drop;
},10952,[10565,10598,10955,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XDrop = function () {
    function XDrop(n, xf) {
      this.xf = xf;
      this.n = n;
    }

    XDrop.prototype['@@transducer/init'] = _xfBase.init;
    XDrop.prototype['@@transducer/result'] = _xfBase.result;

    XDrop.prototype['@@transducer/step'] = function (result, input) {
      if (this.n > 0) {
        this.n -= 1;
        return result;
      }

      return this.xf['@@transducer/step'](result, input);
    };

    return XDrop;
  }();

  var _xdrop = _curry2(function _xdrop(n, xf) {
    return new XDrop(n, xf);
  });

  module.exports = _xdrop;
},10955,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _dropLast = _$$_REQUIRE(_dependencyMap[2]);

  var _xdropLast = _$$_REQUIRE(_dependencyMap[3]);

  var dropLast = _curry2(_dispatchable([], _xdropLast, _dropLast));

  module.exports = dropLast;
},10958,[10565,10598,10961,10970]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var take = _$$_REQUIRE(_dependencyMap[0]);

  function dropLast(n, xs) {
    return take(n < xs.length ? xs.length - n : 0, xs);
  }

  module.exports = dropLast;
},10961,[10964]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xtake = _$$_REQUIRE(_dependencyMap[2]);

  var slice = _$$_REQUIRE(_dependencyMap[3]);

  var take = _curry2(_dispatchable(['take'], _xtake, function take(n, xs) {
    return slice(0, n < 0 ? Infinity : n, xs);
  }));

  module.exports = take;
},10964,[10565,10598,10967,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduced = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XTake = function () {
    function XTake(n, xf) {
      this.xf = xf;
      this.n = n;
      this.i = 0;
    }

    XTake.prototype['@@transducer/init'] = _xfBase.init;
    XTake.prototype['@@transducer/result'] = _xfBase.result;

    XTake.prototype['@@transducer/step'] = function (result, input) {
      this.i += 1;
      var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);
      return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;
    };

    return XTake;
  }();

  var _xtake = _curry2(function _xtake(n, xf) {
    return new XTake(n, xf);
  });

  module.exports = _xtake;
},10967,[10565,10610,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XDropLast = function () {
    function XDropLast(n, xf) {
      this.xf = xf;
      this.pos = 0;
      this.full = false;
      this.acc = new Array(n);
    }

    XDropLast.prototype['@@transducer/init'] = _xfBase.init;

    XDropLast.prototype['@@transducer/result'] = function (result) {
      this.acc = null;
      return this.xf['@@transducer/result'](result);
    };

    XDropLast.prototype['@@transducer/step'] = function (result, input) {
      if (this.full) {
        result = this.xf['@@transducer/step'](result, this.acc[this.pos]);
      }

      this.store(input);
      return result;
    };

    XDropLast.prototype.store = function (input) {
      this.acc[this.pos] = input;
      this.pos += 1;

      if (this.pos === this.acc.length) {
        this.pos = 0;
        this.full = true;
      }
    };

    return XDropLast;
  }();

  var _xdropLast = _curry2(function _xdropLast(n, xf) {
    return new XDropLast(n, xf);
  });

  module.exports = _xdropLast;
},10970,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _dropLastWhile = _$$_REQUIRE(_dependencyMap[2]);

  var _xdropLastWhile = _$$_REQUIRE(_dependencyMap[3]);

  var dropLastWhile = _curry2(_dispatchable([], _xdropLastWhile, _dropLastWhile));

  module.exports = dropLastWhile;
},10973,[10565,10598,10976,10979]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var slice = _$$_REQUIRE(_dependencyMap[0]);

  function dropLastWhile(pred, xs) {
    var idx = xs.length - 1;

    while (idx >= 0 && pred(xs[idx])) {
      idx -= 1;
    }

    return slice(0, idx + 1, xs);
  }

  module.exports = dropLastWhile;
},10976,[10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduce = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XDropLastWhile = function () {
    function XDropLastWhile(fn, xf) {
      this.f = fn;
      this.retained = [];
      this.xf = xf;
    }

    XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;

    XDropLastWhile.prototype['@@transducer/result'] = function (result) {
      this.retained = null;
      return this.xf['@@transducer/result'](result);
    };

    XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {
      return this.f(input) ? this.retain(result, input) : this.flush(result, input);
    };

    XDropLastWhile.prototype.flush = function (result, input) {
      result = _reduce(this.xf['@@transducer/step'], result, this.retained);
      this.retained = [];
      return this.xf['@@transducer/step'](result, input);
    };

    XDropLastWhile.prototype.retain = function (result, input) {
      this.retained.push(input);
      return result;
    };

    return XDropLastWhile;
  }();

  var _xdropLastWhile = _curry2(function _xdropLastWhile(fn, xf) {
    return new XDropLastWhile(fn, xf);
  });

  module.exports = _xdropLastWhile;
},10979,[10565,10631,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xdropRepeatsWith = _$$_REQUIRE(_dependencyMap[2]);

  var dropRepeatsWith = _$$_REQUIRE(_dependencyMap[3]);

  var equals = _$$_REQUIRE(_dependencyMap[4]);

  var dropRepeats = _curry1(_dispatchable([], _xdropRepeatsWith(equals), dropRepeatsWith(equals)));

  module.exports = dropRepeats;
},10982,[10568,10598,10985,10988,10853]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XDropRepeatsWith = function () {
    function XDropRepeatsWith(pred, xf) {
      this.xf = xf;
      this.pred = pred;
      this.lastValue = undefined;
      this.seenFirstValue = false;
    }

    XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;
    XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;

    XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {
      var sameAsLast = false;

      if (!this.seenFirstValue) {
        this.seenFirstValue = true;
      } else if (this.pred(this.lastValue, input)) {
        sameAsLast = true;
      }

      this.lastValue = input;
      return sameAsLast ? result : this.xf['@@transducer/step'](result, input);
    };

    return XDropRepeatsWith;
  }();

  var _xdropRepeatsWith = _curry2(function _xdropRepeatsWith(pred, xf) {
    return new XDropRepeatsWith(pred, xf);
  });

  module.exports = _xdropRepeatsWith;
},10985,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xdropRepeatsWith = _$$_REQUIRE(_dependencyMap[2]);

  var last = _$$_REQUIRE(_dependencyMap[3]);

  var dropRepeatsWith = _curry2(_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {
    var result = [];
    var idx = 1;
    var len = list.length;

    if (len !== 0) {
      result[0] = list[0];

      while (idx < len) {
        if (!pred(last(result), list[idx])) {
          result[result.length] = list[idx];
        }

        idx += 1;
      }
    }

    return result;
  }));

  module.exports = dropRepeatsWith;
},10988,[10565,10598,10985,10991]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var nth = _$$_REQUIRE(_dependencyMap[0]);

  var last = nth(-1);
  module.exports = last;
},10991,[10829]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xdropWhile = _$$_REQUIRE(_dependencyMap[2]);

  var slice = _$$_REQUIRE(_dependencyMap[3]);

  var dropWhile = _curry2(_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {
    var idx = 0;
    var len = xs.length;

    while (idx < len && pred(xs[idx])) {
      idx += 1;
    }

    return slice(idx, Infinity, xs);
  }));

  module.exports = dropWhile;
},10994,[10565,10598,10997,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XDropWhile = function () {
    function XDropWhile(f, xf) {
      this.xf = xf;
      this.f = f;
    }

    XDropWhile.prototype['@@transducer/init'] = _xfBase.init;
    XDropWhile.prototype['@@transducer/result'] = _xfBase.result;

    XDropWhile.prototype['@@transducer/step'] = function (result, input) {
      if (this.f) {
        if (this.f(input)) {
          return result;
        }

        this.f = null;
      }

      return this.xf['@@transducer/step'](result, input);
    };

    return XDropWhile;
  }();

  var _xdropWhile = _curry2(function _xdropWhile(f, xf) {
    return new XDropWhile(f, xf);
  });

  module.exports = _xdropWhile;
},10997,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isFunction = _$$_REQUIRE(_dependencyMap[1]);

  var lift = _$$_REQUIRE(_dependencyMap[2]);

  var or = _$$_REQUIRE(_dependencyMap[3]);

  var either = _curry2(function either(f, g) {
    return _isFunction(f) ? function _either() {
      return f.apply(this, arguments) || g.apply(this, arguments);
    } : lift(or)(f, g);
  });

  module.exports = either;
},11000,[10565,10733,10736,11003]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var or = _curry2(function or(a, b) {
    return a || b;
  });

  module.exports = or;
},11003,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _isArguments = _$$_REQUIRE(_dependencyMap[1]);

  var _isArray = _$$_REQUIRE(_dependencyMap[2]);

  var _isObject = _$$_REQUIRE(_dependencyMap[3]);

  var _isString = _$$_REQUIRE(_dependencyMap[4]);

  var empty = _curry1(function empty(x) {
    return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {
      return arguments;
    }() : undefined;
  });

  module.exports = empty;
},11006,[10568,10655,10601,10889,10637]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var equals = _$$_REQUIRE(_dependencyMap[1]);

  var takeLast = _$$_REQUIRE(_dependencyMap[2]);

  var endsWith = _curry2(function (suffix, list) {
    return equals(takeLast(suffix.length, list), suffix);
  });

  module.exports = endsWith;
},11009,[10565,10853,11012]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var drop = _$$_REQUIRE(_dependencyMap[1]);

  var takeLast = _curry2(function takeLast(n, xs) {
    return drop(n >= 0 ? xs.length - n : 0, xs);
  });

  module.exports = takeLast;
},11012,[10565,10952]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var equals = _$$_REQUIRE(_dependencyMap[1]);

  var eqBy = _curry3(function eqBy(f, x, y) {
    return equals(f(x), f(y));
  });

  module.exports = eqBy;
},11015,[10592,10853]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var equals = _$$_REQUIRE(_dependencyMap[1]);

  var eqProps = _curry3(function eqProps(prop, obj1, obj2) {
    return equals(obj1[prop], obj2[prop]);
  });

  module.exports = eqProps;
},11018,[10592,10853]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var evolve = _curry2(function evolve(transformations, object) {
    var result = object instanceof Array ? [] : {};
    var transformation, key, type;

    for (key in object) {
      transformation = transformations[key];
      type = typeof transformation;
      result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];
    }

    return result;
  });

  module.exports = evolve;
},11021,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xfind = _$$_REQUIRE(_dependencyMap[2]);

  var find = _curry2(_dispatchable(['find'], _xfind, function find(fn, list) {
    var idx = 0;
    var len = list.length;

    while (idx < len) {
      if (fn(list[idx])) {
        return list[idx];
      }

      idx += 1;
    }
  }));

  module.exports = find;
},11024,[10565,10598,11027]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduced = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XFind = function () {
    function XFind(f, xf) {
      this.xf = xf;
      this.f = f;
      this.found = false;
    }

    XFind.prototype['@@transducer/init'] = _xfBase.init;

    XFind.prototype['@@transducer/result'] = function (result) {
      if (!this.found) {
        result = this.xf['@@transducer/step'](result, undefined);
      }

      return this.xf['@@transducer/result'](result);
    };

    XFind.prototype['@@transducer/step'] = function (result, input) {
      if (this.f(input)) {
        this.found = true;
        result = _reduced(this.xf['@@transducer/step'](result, input));
      }

      return result;
    };

    return XFind;
  }();

  var _xfind = _curry2(function _xfind(f, xf) {
    return new XFind(f, xf);
  });

  module.exports = _xfind;
},11027,[10565,10610,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xfindIndex = _$$_REQUIRE(_dependencyMap[2]);

  var findIndex = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
    var idx = 0;
    var len = list.length;

    while (idx < len) {
      if (fn(list[idx])) {
        return idx;
      }

      idx += 1;
    }

    return -1;
  }));

  module.exports = findIndex;
},11030,[10565,10598,11033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduced = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XFindIndex = function () {
    function XFindIndex(f, xf) {
      this.xf = xf;
      this.f = f;
      this.idx = -1;
      this.found = false;
    }

    XFindIndex.prototype['@@transducer/init'] = _xfBase.init;

    XFindIndex.prototype['@@transducer/result'] = function (result) {
      if (!this.found) {
        result = this.xf['@@transducer/step'](result, -1);
      }

      return this.xf['@@transducer/result'](result);
    };

    XFindIndex.prototype['@@transducer/step'] = function (result, input) {
      this.idx += 1;

      if (this.f(input)) {
        this.found = true;
        result = _reduced(this.xf['@@transducer/step'](result, this.idx));
      }

      return result;
    };

    return XFindIndex;
  }();

  var _xfindIndex = _curry2(function _xfindIndex(f, xf) {
    return new XFindIndex(f, xf);
  });

  module.exports = _xfindIndex;
},11033,[10565,10610,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xfindLast = _$$_REQUIRE(_dependencyMap[2]);

  var findLast = _curry2(_dispatchable([], _xfindLast, function findLast(fn, list) {
    var idx = list.length - 1;

    while (idx >= 0) {
      if (fn(list[idx])) {
        return list[idx];
      }

      idx -= 1;
    }
  }));

  module.exports = findLast;
},11036,[10565,10598,11039]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XFindLast = function () {
    function XFindLast(f, xf) {
      this.xf = xf;
      this.f = f;
    }

    XFindLast.prototype['@@transducer/init'] = _xfBase.init;

    XFindLast.prototype['@@transducer/result'] = function (result) {
      return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));
    };

    XFindLast.prototype['@@transducer/step'] = function (result, input) {
      if (this.f(input)) {
        this.last = input;
      }

      return result;
    };

    return XFindLast;
  }();

  var _xfindLast = _curry2(function _xfindLast(f, xf) {
    return new XFindLast(f, xf);
  });

  module.exports = _xfindLast;
},11039,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xfindLastIndex = _$$_REQUIRE(_dependencyMap[2]);

  var findLastIndex = _curry2(_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {
    var idx = list.length - 1;

    while (idx >= 0) {
      if (fn(list[idx])) {
        return idx;
      }

      idx -= 1;
    }

    return -1;
  }));

  module.exports = findLastIndex;
},11042,[10565,10598,11045]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XFindLastIndex = function () {
    function XFindLastIndex(f, xf) {
      this.xf = xf;
      this.f = f;
      this.idx = -1;
      this.lastIdx = -1;
    }

    XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;

    XFindLastIndex.prototype['@@transducer/result'] = function (result) {
      return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));
    };

    XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {
      this.idx += 1;

      if (this.f(input)) {
        this.lastIdx = this.idx;
      }

      return result;
    };

    return XFindLastIndex;
  }();

  var _xfindLastIndex = _curry2(function _xfindLastIndex(f, xf) {
    return new XFindLastIndex(f, xf);
  });

  module.exports = _xfindLastIndex;
},11045,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _makeFlat = _$$_REQUIRE(_dependencyMap[1]);

  var flatten = _curry1(_makeFlat(true));

  module.exports = flatten;
},11048,[10568,10751]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var curryN = _$$_REQUIRE(_dependencyMap[1]);

  var flip = _curry1(function flip(fn) {
    return curryN(fn.length, function (a, b) {
      var args = Array.prototype.slice.call(arguments, 0);
      args[0] = b;
      args[1] = a;
      return fn.apply(this, args);
    });
  });

  module.exports = flip;
},11051,[10568,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _checkForMethod = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {
    var len = list.length;
    var idx = 0;

    while (idx < len) {
      fn(list[idx]);
      idx += 1;
    }

    return list;
  }));

  module.exports = forEach;
},11054,[10799,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var keys = _$$_REQUIRE(_dependencyMap[1]);

  var forEachObjIndexed = _curry2(function forEachObjIndexed(fn, obj) {
    var keyList = keys(obj);
    var idx = 0;

    while (idx < keyList.length) {
      var key = keyList[idx];
      fn(obj[key], key, obj);
      idx += 1;
    }

    return obj;
  });

  module.exports = forEachObjIndexed;
},11057,[10565,10649]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var fromPairs = _curry1(function fromPairs(pairs) {
    var result = {};
    var idx = 0;

    while (idx < pairs.length) {
      result[pairs[idx][0]] = pairs[idx][1];
      idx += 1;
    }

    return result;
  });

  module.exports = fromPairs;
},11060,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _checkForMethod = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var reduceBy = _$$_REQUIRE(_dependencyMap[2]);

  var groupBy = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {
    if (acc == null) {
      acc = [];
    }

    acc.push(item);
    return acc;
  }, null)));

  module.exports = groupBy;
},11063,[10799,10565,10913]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var groupWith = _curry2(function (fn, list) {
    var res = [];
    var idx = 0;
    var len = list.length;

    while (idx < len) {
      var nextidx = idx + 1;

      while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {
        nextidx += 1;
      }

      res.push(list.slice(idx, nextidx));
      idx = nextidx;
    }

    return res;
  });

  module.exports = groupWith;
},11066,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var gt = _curry2(function gt(a, b) {
    return a > b;
  });

  module.exports = gt;
},11069,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var gte = _curry2(function gte(a, b) {
    return a >= b;
  });

  module.exports = gte;
},11072,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var hasPath = _$$_REQUIRE(_dependencyMap[1]);

  var has = _curry2(function has(prop, obj) {
    return hasPath([prop], obj);
  });

  module.exports = has;
},11075,[10565,11078]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _has = _$$_REQUIRE(_dependencyMap[1]);

  var hasPath = _curry2(function hasPath(_path, obj) {
    if (_path.length === 0) {
      return false;
    }

    var val = obj;
    var idx = 0;

    while (idx < _path.length) {
      if (_has(_path[idx], val)) {
        val = val[_path[idx]];
        idx += 1;
      } else {
        return false;
      }
    }

    return true;
  });

  module.exports = hasPath;
},11078,[10565,10652]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var hasIn = _curry2(function hasIn(prop, obj) {
    return prop in obj;
  });

  module.exports = hasIn;
},11081,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectIs = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var identical = _curry2(_objectIs);

  module.exports = identical;
},11084,[10868,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var curryN = _$$_REQUIRE(_dependencyMap[1]);

  var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {
    return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {
      return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);
    });
  });

  module.exports = ifElse;
},11087,[10592,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var add = _$$_REQUIRE(_dependencyMap[0]);

  var inc = add(1);
  module.exports = inc;
},11090,[10562]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includes = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var includes = _curry2(_includes);

  module.exports = includes;
},11093,[10847,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var reduceBy = _$$_REQUIRE(_dependencyMap[0]);

  var indexBy = reduceBy(function (acc, elem) {
    return elem;
  }, null);
  module.exports = indexBy;
},11096,[10913]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _indexOf = _$$_REQUIRE(_dependencyMap[1]);

  var _isArray = _$$_REQUIRE(_dependencyMap[2]);

  var indexOf = _curry2(function indexOf(target, xs) {
    return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);
  });

  module.exports = indexOf;
},11099,[10565,10850,10601]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var slice = _$$_REQUIRE(_dependencyMap[0]);

  var init = slice(0, -1);
  module.exports = init;
},11102,[10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includesWith = _$$_REQUIRE(_dependencyMap[0]);

  var _curry3 = _$$_REQUIRE(_dependencyMap[1]);

  var _filter = _$$_REQUIRE(_dependencyMap[2]);

  var innerJoin = _curry3(function innerJoin(pred, xs, ys) {
    return _filter(function (x) {
      return _includesWith(pred, x, ys);
    }, xs);
  });

  module.exports = innerJoin;
},11105,[10862,10592,10886]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var insert = _curry3(function insert(idx, elt, list) {
    idx = idx < list.length && idx >= 0 ? idx : list.length;
    var result = Array.prototype.slice.call(list, 0);
    result.splice(idx, 0, elt);
    return result;
  });

  module.exports = insert;
},11108,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var insertAll = _curry3(function insertAll(idx, elts, list) {
    idx = idx < list.length && idx >= 0 ? idx : list.length;
    return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));
  });

  module.exports = insertAll;
},11111,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includes = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var _filter = _$$_REQUIRE(_dependencyMap[2]);

  var flip = _$$_REQUIRE(_dependencyMap[3]);

  var uniq = _$$_REQUIRE(_dependencyMap[4]);

  var intersection = _curry2(function intersection(list1, list2) {
    var lookupList, filteredList;

    if (list1.length > list2.length) {
      lookupList = list1;
      filteredList = list2;
    } else {
      lookupList = list2;
      filteredList = list1;
    }

    return uniq(_filter(flip(_includes)(lookupList), filteredList));
  });

  module.exports = intersection;
},11114,[10847,10565,10886,11051,11117]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var identity = _$$_REQUIRE(_dependencyMap[0]);

  var uniqBy = _$$_REQUIRE(_dependencyMap[1]);

  var uniq = uniqBy(identity);
  module.exports = uniq;
},11117,[10832,11120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _Set = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var uniqBy = _curry2(function uniqBy(fn, list) {
    var set = new _Set();
    var result = [];
    var idx = 0;
    var appliedItem, item;

    while (idx < list.length) {
      item = list[idx];
      appliedItem = fn(item);

      if (set.add(appliedItem)) {
        result.push(item);
      }

      idx += 1;
    }

    return result;
  });

  module.exports = uniqBy;
},11120,[10931,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _checkForMethod = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {
    var out = [];
    var idx = 0;
    var length = list.length;

    while (idx < length) {
      if (idx === length - 1) {
        out.push(list[idx]);
      } else {
        out.push(list[idx], separator);
      }

      idx += 1;
    }

    return out;
  }));

  module.exports = intersperse;
},11123,[10799,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _clone = _$$_REQUIRE(_dependencyMap[0]);

  var _curry3 = _$$_REQUIRE(_dependencyMap[1]);

  var _isTransformer = _$$_REQUIRE(_dependencyMap[2]);

  var _reduce = _$$_REQUIRE(_dependencyMap[3]);

  var _stepCat = _$$_REQUIRE(_dependencyMap[4]);

  var into = _curry3(function into(acc, xf, list) {
    return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);
  });

  module.exports = into;
},11126,[10769,10592,10604,10631,11129]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectAssign = _$$_REQUIRE(_dependencyMap[0]);

  var _identity = _$$_REQUIRE(_dependencyMap[1]);

  var _isArrayLike = _$$_REQUIRE(_dependencyMap[2]);

  var _isTransformer = _$$_REQUIRE(_dependencyMap[3]);

  var objOf = _$$_REQUIRE(_dependencyMap[4]);

  var _stepCatArray = {
    '@@transducer/init': Array,
    '@@transducer/step': function transducerStep(xs, x) {
      xs.push(x);
      return xs;
    },
    '@@transducer/result': _identity
  };
  var _stepCatString = {
    '@@transducer/init': String,
    '@@transducer/step': function transducerStep(a, b) {
      return a + b;
    },
    '@@transducer/result': _identity
  };
  var _stepCatObject = {
    '@@transducer/init': Object,
    '@@transducer/step': function transducerStep(result, input) {
      return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);
    },
    '@@transducer/result': _identity
  };

  function _stepCat(obj) {
    if (_isTransformer(obj)) {
      return obj;
    }

    if (_isArrayLike(obj)) {
      return _stepCatArray;
    }

    if (typeof obj === 'string') {
      return _stepCatString;
    }

    if (typeof obj === 'object') {
      return _stepCatObject;
    }

    throw new Error('Cannot create transformer for ' + obj);
  }

  module.exports = _stepCat;
},11129,[11132,10835,10634,10604,11135]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _has = _$$_REQUIRE(_dependencyMap[0]);

  function _objectAssign(target) {
    if (target == null) {
      throw new TypeError('Cannot convert undefined or null to object');
    }

    var output = Object(target);
    var idx = 1;
    var length = arguments.length;

    while (idx < length) {
      var source = arguments[idx];

      if (source != null) {
        for (var nextKey in source) {
          if (_has(nextKey, source)) {
            output[nextKey] = source[nextKey];
          }
        }
      }

      idx += 1;
    }

    return output;
  }

  module.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;
},11132,[10652]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var objOf = _curry2(function objOf(key, val) {
    var obj = {};
    obj[key] = val;
    return obj;
  });

  module.exports = objOf;
},11135,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _has = _$$_REQUIRE(_dependencyMap[1]);

  var keys = _$$_REQUIRE(_dependencyMap[2]);

  var invert = _curry1(function invert(obj) {
    var props = keys(obj);
    var len = props.length;
    var idx = 0;
    var out = {};

    while (idx < len) {
      var key = props[idx];
      var val = obj[key];
      var list = _has(val, out) ? out[val] : out[val] = [];
      list[list.length] = key;
      idx += 1;
    }

    return out;
  });

  module.exports = invert;
},11138,[10568,10652,10649]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var keys = _$$_REQUIRE(_dependencyMap[1]);

  var invertObj = _curry1(function invertObj(obj) {
    var props = keys(obj);
    var len = props.length;
    var idx = 0;
    var out = {};

    while (idx < len) {
      var key = props[idx];
      out[obj[key]] = key;
      idx += 1;
    }

    return out;
  });

  module.exports = invertObj;
},11141,[10568,10649]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isFunction = _$$_REQUIRE(_dependencyMap[1]);

  var curryN = _$$_REQUIRE(_dependencyMap[2]);

  var toString = _$$_REQUIRE(_dependencyMap[3]);

  var invoker = _curry2(function invoker(arity, method) {
    return curryN(arity + 1, function () {
      var target = arguments[arity];

      if (target != null && _isFunction(target[method])) {
        return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));
      }

      throw new TypeError(toString(target) + ' does not have a method named "' + method + '"');
    });
  });

  module.exports = invoker;
},11144,[10565,10733,10580,10841]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var is = _curry2(function is(Ctor, val) {
    return val != null && val.constructor === Ctor || val instanceof Ctor;
  });

  module.exports = is;
},11147,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var empty = _$$_REQUIRE(_dependencyMap[1]);

  var equals = _$$_REQUIRE(_dependencyMap[2]);

  var isEmpty = _curry1(function isEmpty(x) {
    return x != null && equals(x, empty(x));
  });

  module.exports = isEmpty;
},11150,[10568,11006,10853]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var invoker = _$$_REQUIRE(_dependencyMap[0]);

  var join = invoker(1, 'join');
  module.exports = join;
},11153,[11144]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var converge = _$$_REQUIRE(_dependencyMap[1]);

  var juxt = _curry1(function juxt(fns) {
    return converge(function () {
      return Array.prototype.slice.call(arguments, 0);
    }, fns);
  });

  module.exports = juxt;
},11156,[10568,10907]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var keysIn = _curry1(function keysIn(obj) {
    var prop;
    var ks = [];

    for (prop in obj) {
      ks[ks.length] = prop;
    }

    return ks;
  });

  module.exports = keysIn;
},11159,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isArray = _$$_REQUIRE(_dependencyMap[1]);

  var equals = _$$_REQUIRE(_dependencyMap[2]);

  var lastIndexOf = _curry2(function lastIndexOf(target, xs) {
    if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {
      return xs.lastIndexOf(target);
    } else {
      var idx = xs.length - 1;

      while (idx >= 0) {
        if (equals(xs[idx], target)) {
          return idx;
        }

        idx -= 1;
      }

      return -1;
    }
  });

  module.exports = lastIndexOf;
},11162,[10565,10601,10853]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _isNumber = _$$_REQUIRE(_dependencyMap[1]);

  var length = _curry1(function length(list) {
    return list != null && _isNumber(list.length) ? list.length : NaN;
  });

  module.exports = length;
},11165,[10568,11168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNumber(x) {
    return Object.prototype.toString.call(x) === '[object Number]';
  }

  module.exports = _isNumber;
},11168,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var map = _$$_REQUIRE(_dependencyMap[1]);

  var lens = _curry2(function lens(getter, setter) {
    return function (toFunctorFn) {
      return function (target) {
        return map(function (focus) {
          return setter(focus, target);
        }, toFunctorFn(getter(target)));
      };
    };
  });

  module.exports = lens;
},11171,[10565,10625]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var lens = _$$_REQUIRE(_dependencyMap[1]);

  var nth = _$$_REQUIRE(_dependencyMap[2]);

  var update = _$$_REQUIRE(_dependencyMap[3]);

  var lensIndex = _curry1(function lensIndex(n) {
    return lens(nth(n), update(n));
  });

  module.exports = lensIndex;
},11174,[10568,11171,10829,10946]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var assocPath = _$$_REQUIRE(_dependencyMap[1]);

  var lens = _$$_REQUIRE(_dependencyMap[2]);

  var path = _$$_REQUIRE(_dependencyMap[3]);

  var lensPath = _curry1(function lensPath(p) {
    return lens(path(p), assocPath(p));
  });

  module.exports = lensPath;
},11177,[10568,10715,11171,10661]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var assoc = _$$_REQUIRE(_dependencyMap[1]);

  var lens = _$$_REQUIRE(_dependencyMap[2]);

  var prop = _$$_REQUIRE(_dependencyMap[3]);

  var lensProp = _curry1(function lensProp(k) {
    return lens(prop(k), assoc(k));
  });

  module.exports = lensProp;
},11180,[10568,10712,11171,10658]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var lt = _curry2(function lt(a, b) {
    return a < b;
  });

  module.exports = lt;
},11183,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var lte = _curry2(function lte(a, b) {
    return a <= b;
  });

  module.exports = lte;
},11186,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var mapAccum = _curry3(function mapAccum(fn, acc, list) {
    var idx = 0;
    var len = list.length;
    var result = [];
    var tuple = [acc];

    while (idx < len) {
      tuple = fn(tuple[0], list[idx]);
      result[idx] = tuple[1];
      idx += 1;
    }

    return [tuple[0], result];
  });

  module.exports = mapAccum;
},11189,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {
    var idx = list.length - 1;
    var result = [];
    var tuple = [acc];

    while (idx >= 0) {
      tuple = fn(tuple[0], list[idx]);
      result[idx] = tuple[1];
      idx -= 1;
    }

    return [tuple[0], result];
  });

  module.exports = mapAccumRight;
},11192,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduce = _$$_REQUIRE(_dependencyMap[1]);

  var keys = _$$_REQUIRE(_dependencyMap[2]);

  var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {
    return _reduce(function (acc, key) {
      acc[key] = fn(obj[key], key, obj);
      return acc;
    }, {}, keys(obj));
  });

  module.exports = mapObjIndexed;
},11195,[10565,10631,10649]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var match = _curry2(function match(rx, str) {
    return str.match(rx) || [];
  });

  module.exports = match;
},11198,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isInteger = _$$_REQUIRE(_dependencyMap[1]);

  var mathMod = _curry2(function mathMod(m, p) {
    if (!_isInteger(m)) {
      return NaN;
    }

    if (!_isInteger(p) || p < 1) {
      return NaN;
    }

    return (m % p + p) % p;
  });

  module.exports = mathMod;
},11201,[10565,10718]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var maxBy = _curry3(function maxBy(f, a, b) {
    return f(b) > f(a) ? b : a;
  });

  module.exports = maxBy;
},11204,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var sum = _$$_REQUIRE(_dependencyMap[1]);

  var mean = _curry1(function mean(list) {
    return sum(list) / list.length;
  });

  module.exports = mean;
},11207,[10568,11210]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var add = _$$_REQUIRE(_dependencyMap[0]);

  var reduce = _$$_REQUIRE(_dependencyMap[1]);

  var sum = reduce(add, 0);
  module.exports = sum;
},11210,[10562,10664]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var mean = _$$_REQUIRE(_dependencyMap[1]);

  var median = _curry1(function median(list) {
    var len = list.length;

    if (len === 0) {
      return NaN;
    }

    var width = 2 - len % 2;
    var idx = (len - width) / 2;
    return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }).slice(idx, idx + width));
  });

  module.exports = median;
},11213,[10568,11207]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var _has = _$$_REQUIRE(_dependencyMap[2]);

  var memoizeWith = _curry2(function memoizeWith(mFn, fn) {
    var cache = {};
    return _arity(fn.length, function () {
      var key = mFn.apply(this, arguments);

      if (!_has(key, cache)) {
        cache[key] = fn.apply(this, arguments);
      }

      return cache[key];
    });
  });

  module.exports = memoizeWith;
},11216,[10583,10565,10652]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectAssign = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var merge = _curry2(function merge(l, r) {
    return _objectAssign({}, l, r);
  });

  module.exports = merge;
},11219,[11132,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectAssign = _$$_REQUIRE(_dependencyMap[0]);

  var _curry1 = _$$_REQUIRE(_dependencyMap[1]);

  var mergeAll = _curry1(function mergeAll(list) {
    return _objectAssign.apply(null, [{}].concat(list));
  });

  module.exports = mergeAll;
},11222,[11132,10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var mergeDeepWithKey = _$$_REQUIRE(_dependencyMap[1]);

  var mergeDeepLeft = _curry2(function mergeDeepLeft(lObj, rObj) {
    return mergeDeepWithKey(function (k, lVal, rVal) {
      return lVal;
    }, lObj, rObj);
  });

  module.exports = mergeDeepLeft;
},11225,[10565,11228]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var _isObject = _$$_REQUIRE(_dependencyMap[1]);

  var mergeWithKey = _$$_REQUIRE(_dependencyMap[2]);

  var mergeDeepWithKey = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {
    return mergeWithKey(function (k, lVal, rVal) {
      if (_isObject(lVal) && _isObject(rVal)) {
        return mergeDeepWithKey(fn, lVal, rVal);
      } else {
        return fn(k, lVal, rVal);
      }
    }, lObj, rObj);
  });

  module.exports = mergeDeepWithKey;
},11228,[10592,10889,11231]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var _has = _$$_REQUIRE(_dependencyMap[1]);

  var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {
    var result = {};
    var k;

    for (k in l) {
      if (_has(k, l)) {
        result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
      }
    }

    for (k in r) {
      if (_has(k, r) && !_has(k, result)) {
        result[k] = r[k];
      }
    }

    return result;
  });

  module.exports = mergeWithKey;
},11231,[10592,10652]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var mergeDeepWithKey = _$$_REQUIRE(_dependencyMap[1]);

  var mergeDeepRight = _curry2(function mergeDeepRight(lObj, rObj) {
    return mergeDeepWithKey(function (k, lVal, rVal) {
      return rVal;
    }, lObj, rObj);
  });

  module.exports = mergeDeepRight;
},11234,[10565,11228]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var mergeDeepWithKey = _$$_REQUIRE(_dependencyMap[1]);

  var mergeDeepWith = _curry3(function mergeDeepWith(fn, lObj, rObj) {
    return mergeDeepWithKey(function (k, lVal, rVal) {
      return fn(lVal, rVal);
    }, lObj, rObj);
  });

  module.exports = mergeDeepWith;
},11237,[10592,11228]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectAssign = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var mergeLeft = _curry2(function mergeLeft(l, r) {
    return _objectAssign({}, r, l);
  });

  module.exports = mergeLeft;
},11240,[11132,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _objectAssign = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var mergeRight = _curry2(function mergeRight(l, r) {
    return _objectAssign({}, l, r);
  });

  module.exports = mergeRight;
},11243,[11132,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var mergeWithKey = _$$_REQUIRE(_dependencyMap[1]);

  var mergeWith = _curry3(function mergeWith(fn, l, r) {
    return mergeWithKey(function (_, _l, _r) {
      return fn(_l, _r);
    }, l, r);
  });

  module.exports = mergeWith;
},11246,[10592,11231]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var min = _curry2(function min(a, b) {
    return b < a ? b : a;
  });

  module.exports = min;
},11249,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var minBy = _curry3(function minBy(f, a, b) {
    return f(b) < f(a) ? b : a;
  });

  module.exports = minBy;
},11252,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var modulo = _curry2(function modulo(a, b) {
    return a % b;
  });

  module.exports = modulo;
},11255,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var move = _curry3(function (from, to, list) {
    var length = list.length;
    var result = list.slice();
    var positiveFrom = from < 0 ? length + from : from;
    var positiveTo = to < 0 ? length + to : to;
    var item = result.splice(positiveFrom, 1);
    return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));
  });

  module.exports = move;
},11258,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var multiply = _curry2(function multiply(a, b) {
    return a * b;
  });

  module.exports = multiply;
},11261,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var negate = _curry1(function negate(n) {
    return -n;
  });

  module.exports = negate;
},11264,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _complement = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var all = _$$_REQUIRE(_dependencyMap[2]);

  var none = _curry2(function none(fn, input) {
    return all(_complement(fn), input);
  });

  module.exports = none;
},11267,[10880,10565,10595]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var curryN = _$$_REQUIRE(_dependencyMap[1]);

  var nth = _$$_REQUIRE(_dependencyMap[2]);

  var nthArg = _curry1(function nthArg(n) {
    var arity = n < 0 ? 1 : n + 1;
    return curryN(arity, function () {
      return nth(n, arguments);
    });
  });

  module.exports = nthArg;
},11270,[10568,10580,10829]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var o = _curry3(function o(f, g, x) {
    return f(g(x));
  });

  module.exports = o;
},11273,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _of = _$$_REQUIRE(_dependencyMap[1]);

  var of = _curry1(_of);

  module.exports = of;
},11276,[10568,11279]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _of(x) {
    return [x];
  }

  module.exports = _of;
},11279,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var omit = _curry2(function omit(names, obj) {
    var result = {};
    var index = {};
    var idx = 0;
    var len = names.length;

    while (idx < len) {
      index[names[idx]] = 1;
      idx += 1;
    }

    for (var prop in obj) {
      if (!index.hasOwnProperty(prop)) {
        result[prop] = obj[prop];
      }
    }

    return result;
  });

  module.exports = omit;
},11282,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _curry1 = _$$_REQUIRE(_dependencyMap[1]);

  var once = _curry1(function once(fn) {
    var called = false;
    var result;
    return _arity(fn.length, function () {
      if (called) {
        return result;
      }

      called = true;
      result = fn.apply(this, arguments);
      return result;
    });
  });

  module.exports = once;
},11285,[10583,10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _assertPromise = _$$_REQUIRE(_dependencyMap[1]);

  var otherwise = _curry2(function otherwise(f, p) {
    _assertPromise('otherwise', p);

    return p.then(null, f);
  });

  module.exports = otherwise;
},11288,[10565,11291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _isFunction = _$$_REQUIRE(_dependencyMap[0]);

  var _toString = _$$_REQUIRE(_dependencyMap[1]);

  function _assertPromise(name, p) {
    if (p == null || !_isFunction(p.then)) {
      throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));
    }
  }

  module.exports = _assertPromise;
},11291,[10733,10844]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var Identity = function Identity(x) {
    return {
      value: x,
      map: function map(f) {
        return Identity(f(x));
      }
    };
  };

  var over = _curry3(function over(lens, f, x) {
    return lens(function (y) {
      return Identity(f(y));
    })(x).value;
  });

  module.exports = over;
},11294,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var pair = _curry2(function pair(fst, snd) {
    return [fst, snd];
  });

  module.exports = pair;
},11297,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _createPartialApplicator = _$$_REQUIRE(_dependencyMap[1]);

  var partial = _createPartialApplicator(_concat);

  module.exports = partial;
},11300,[10577,11303]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  function _createPartialApplicator(concat) {
    return _curry2(function (fn, args) {
      return _arity(Math.max(0, fn.length - args.length), function () {
        return fn.apply(this, concat(args, arguments));
      });
    });
  }

  module.exports = _createPartialApplicator;
},11303,[10583,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _createPartialApplicator = _$$_REQUIRE(_dependencyMap[1]);

  var flip = _$$_REQUIRE(_dependencyMap[2]);

  var partialRight = _createPartialApplicator(flip(_concat));

  module.exports = partialRight;
},11306,[10577,11303,11051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var filter = _$$_REQUIRE(_dependencyMap[0]);

  var juxt = _$$_REQUIRE(_dependencyMap[1]);

  var reject = _$$_REQUIRE(_dependencyMap[2]);

  var partition = juxt([filter, reject]);
  module.exports = partition;
},11309,[10883,11156,10877]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var equals = _$$_REQUIRE(_dependencyMap[1]);

  var path = _$$_REQUIRE(_dependencyMap[2]);

  var pathEq = _curry3(function pathEq(_path, val, obj) {
    return equals(path(_path, obj), val);
  });

  module.exports = pathEq;
},11312,[10592,10853,10661]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var defaultTo = _$$_REQUIRE(_dependencyMap[1]);

  var path = _$$_REQUIRE(_dependencyMap[2]);

  var pathOr = _curry3(function pathOr(d, p, obj) {
    return defaultTo(d, path(p, obj));
  });

  module.exports = pathOr;
},11315,[10592,10922,10661]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var path = _$$_REQUIRE(_dependencyMap[1]);

  var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {
    return propPath.length > 0 && pred(path(propPath, obj));
  });

  module.exports = pathSatisfies;
},11318,[10592,10661]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var pick = _curry2(function pick(names, obj) {
    var result = {};
    var idx = 0;

    while (idx < names.length) {
      if (names[idx] in obj) {
        result[names[idx]] = obj[names[idx]];
      }

      idx += 1;
    }

    return result;
  });

  module.exports = pick;
},11321,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var pickAll = _curry2(function pickAll(names, obj) {
    var result = {};
    var idx = 0;
    var len = names.length;

    while (idx < len) {
      var name = names[idx];
      result[name] = obj[name];
      idx += 1;
    }

    return result;
  });

  module.exports = pickAll;
},11324,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var pickBy = _curry2(function pickBy(test, obj) {
    var result = {};

    for (var prop in obj) {
      if (test(obj[prop], prop, obj)) {
        result[prop] = obj[prop];
      }
    }

    return result;
  });

  module.exports = pickBy;
},11327,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var composeK = _$$_REQUIRE(_dependencyMap[0]);

  var reverse = _$$_REQUIRE(_dependencyMap[1]);

  function pipeK() {
    if (arguments.length === 0) {
      throw new Error('pipeK requires at least one argument');
    }

    return composeK.apply(this, reverse(arguments));
  }

  module.exports = pipeK;
},11330,[10808,10805]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var prepend = _curry2(function prepend(el, list) {
    return _concat([el], list);
  });

  module.exports = prepend;
},11333,[10577,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var multiply = _$$_REQUIRE(_dependencyMap[0]);

  var reduce = _$$_REQUIRE(_dependencyMap[1]);

  var product = reduce(multiply, 1);
  module.exports = product;
},11336,[11261,10664]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _map = _$$_REQUIRE(_dependencyMap[0]);

  var identity = _$$_REQUIRE(_dependencyMap[1]);

  var pickAll = _$$_REQUIRE(_dependencyMap[2]);

  var useWith = _$$_REQUIRE(_dependencyMap[3]);

  var project = useWith(_map, [pickAll, identity]);
  module.exports = project;
},11339,[10628,10832,11324,11342]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var curryN = _$$_REQUIRE(_dependencyMap[1]);

  var useWith = _curry2(function useWith(fn, transformers) {
    return curryN(transformers.length, function () {
      var args = [];
      var idx = 0;

      while (idx < transformers.length) {
        args.push(transformers[idx].call(this, arguments[idx]));
        idx += 1;
      }

      return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));
    });
  });

  module.exports = useWith;
},11342,[10565,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var equals = _$$_REQUIRE(_dependencyMap[1]);

  var propEq = _curry3(function propEq(name, val, obj) {
    return equals(val, obj[name]);
  });

  module.exports = propEq;
},11345,[10592,10853]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var is = _$$_REQUIRE(_dependencyMap[1]);

  var propIs = _curry3(function propIs(type, name, obj) {
    return is(type, obj[name]);
  });

  module.exports = propIs;
},11348,[10592,11147]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var pathOr = _$$_REQUIRE(_dependencyMap[1]);

  var propOr = _curry3(function propOr(val, p, obj) {
    return pathOr(val, [p], obj);
  });

  module.exports = propOr;
},11351,[10592,11315]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {
    return pred(obj[name]);
  });

  module.exports = propSatisfies;
},11354,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var props = _curry2(function props(ps, obj) {
    var len = ps.length;
    var out = [];
    var idx = 0;

    while (idx < len) {
      out[idx] = obj[ps[idx]];
      idx += 1;
    }

    return out;
  });

  module.exports = props;
},11357,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _isNumber = _$$_REQUIRE(_dependencyMap[1]);

  var range = _curry2(function range(from, to) {
    if (!(_isNumber(from) && _isNumber(to))) {
      throw new TypeError('Both arguments to range must be numbers');
    }

    var result = [];
    var n = from;

    while (n < to) {
      result.push(n);
      n += 1;
    }

    return result;
  });

  module.exports = range;
},11360,[10565,11168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var reduceRight = _curry3(function reduceRight(fn, acc, list) {
    var idx = list.length - 1;

    while (idx >= 0) {
      acc = fn(list[idx], acc);
      idx -= 1;
    }

    return acc;
  });

  module.exports = reduceRight;
},11363,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curryN = _$$_REQUIRE(_dependencyMap[0]);

  var _reduce = _$$_REQUIRE(_dependencyMap[1]);

  var _reduced = _$$_REQUIRE(_dependencyMap[2]);

  var reduceWhile = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {
    return _reduce(function (acc, x) {
      return pred(acc, x) ? fn(acc, x) : _reduced(acc);
    }, a, list);
  });

  module.exports = reduceWhile;
},11366,[10586,10631,10610]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduced = _$$_REQUIRE(_dependencyMap[1]);

  var reduced = _curry1(_reduced);

  module.exports = reduced;
},11369,[10568,10610]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var always = _$$_REQUIRE(_dependencyMap[1]);

  var times = _$$_REQUIRE(_dependencyMap[2]);

  var repeat = _curry2(function repeat(value, n) {
    return times(always(value), n);
  });

  module.exports = repeat;
},11372,[10565,10667,11375]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var times = _curry2(function times(fn, n) {
    var len = Number(n);
    var idx = 0;
    var list;

    if (len < 0 || isNaN(len)) {
      throw new RangeError('n must be a non-negative number');
    }

    list = new Array(len);

    while (idx < len) {
      list[idx] = fn(idx);
      idx += 1;
    }

    return list;
  });

  module.exports = times;
},11375,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var replace = _curry3(function replace(regex, replacement, str) {
    return str.replace(regex, replacement);
  });

  module.exports = replace;
},11378,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var scan = _curry3(function scan(fn, acc, list) {
    var idx = 0;
    var len = list.length;
    var result = [acc];

    while (idx < len) {
      acc = fn(acc, list[idx]);
      result[idx + 1] = acc;
      idx += 1;
    }

    return result;
  });

  module.exports = scan;
},11381,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var ap = _$$_REQUIRE(_dependencyMap[1]);

  var map = _$$_REQUIRE(_dependencyMap[2]);

  var prepend = _$$_REQUIRE(_dependencyMap[3]);

  var reduceRight = _$$_REQUIRE(_dependencyMap[4]);

  var sequence = _curry2(function sequence(of, traversable) {
    return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {
      return ap(map(prepend, x), acc);
    }, of([]), traversable);
  });

  module.exports = sequence;
},11384,[10565,10682,10625,11333,11363]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var always = _$$_REQUIRE(_dependencyMap[1]);

  var over = _$$_REQUIRE(_dependencyMap[2]);

  var set = _curry3(function set(lens, v, x) {
    return over(lens, always(v), x);
  });

  module.exports = set;
},11387,[10592,10667,11294]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var sort = _curry2(function sort(comparator, list) {
    return Array.prototype.slice.call(list, 0).sort(comparator);
  });

  module.exports = sort;
},11390,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var sortBy = _curry2(function sortBy(fn, list) {
    return Array.prototype.slice.call(list, 0).sort(function (a, b) {
      var aa = fn(a);
      var bb = fn(b);
      return aa < bb ? -1 : aa > bb ? 1 : 0;
    });
  });

  module.exports = sortBy;
},11393,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var sortWith = _curry2(function sortWith(fns, list) {
    return Array.prototype.slice.call(list, 0).sort(function (a, b) {
      var result = 0;
      var i = 0;

      while (result === 0 && i < fns.length) {
        result = fns[i](a, b);
        i += 1;
      }

      return result;
    });
  });

  module.exports = sortWith;
},11396,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var invoker = _$$_REQUIRE(_dependencyMap[0]);

  var split = invoker(1, 'split');
  module.exports = split;
},11399,[11144]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var length = _$$_REQUIRE(_dependencyMap[1]);

  var slice = _$$_REQUIRE(_dependencyMap[2]);

  var splitAt = _curry2(function splitAt(index, array) {
    return [slice(0, index, array), slice(index, length(array), array)];
  });

  module.exports = splitAt;
},11402,[10565,11165,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var slice = _$$_REQUIRE(_dependencyMap[1]);

  var splitEvery = _curry2(function splitEvery(n, list) {
    if (n <= 0) {
      throw new Error('First argument to splitEvery must be a positive integer');
    }

    var result = [];
    var idx = 0;

    while (idx < list.length) {
      result.push(slice(idx, idx += n, list));
    }

    return result;
  });

  module.exports = splitEvery;
},11405,[10565,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var splitWhen = _curry2(function splitWhen(pred, list) {
    var idx = 0;
    var len = list.length;
    var prefix = [];

    while (idx < len && !pred(list[idx])) {
      prefix.push(list[idx]);
      idx += 1;
    }

    return [prefix, Array.prototype.slice.call(list, idx)];
  });

  module.exports = splitWhen;
},11408,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var equals = _$$_REQUIRE(_dependencyMap[1]);

  var take = _$$_REQUIRE(_dependencyMap[2]);

  var startsWith = _curry2(function (prefix, list) {
    return equals(take(prefix.length, list), prefix);
  });

  module.exports = startsWith;
},11411,[10565,10853,10964]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var subtract = _curry2(function subtract(a, b) {
    return Number(a) - Number(b);
  });

  module.exports = subtract;
},11414,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var concat = _$$_REQUIRE(_dependencyMap[1]);

  var difference = _$$_REQUIRE(_dependencyMap[2]);

  var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {
    return concat(difference(list1, list2), difference(list2, list1));
  });

  module.exports = symmetricDifference;
},11417,[10565,10838,10928]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var concat = _$$_REQUIRE(_dependencyMap[1]);

  var differenceWith = _$$_REQUIRE(_dependencyMap[2]);

  var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {
    return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));
  });

  module.exports = symmetricDifferenceWith;
},11420,[10592,10838,10934]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var slice = _$$_REQUIRE(_dependencyMap[1]);

  var takeLastWhile = _curry2(function takeLastWhile(fn, xs) {
    var idx = xs.length - 1;

    while (idx >= 0 && fn(xs[idx])) {
      idx -= 1;
    }

    return slice(idx + 1, Infinity, xs);
  });

  module.exports = takeLastWhile;
},11423,[10565,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xtakeWhile = _$$_REQUIRE(_dependencyMap[2]);

  var slice = _$$_REQUIRE(_dependencyMap[3]);

  var takeWhile = _curry2(_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {
    var idx = 0;
    var len = xs.length;

    while (idx < len && fn(xs[idx])) {
      idx += 1;
    }

    return slice(0, idx, xs);
  }));

  module.exports = takeWhile;
},11426,[10565,10598,11429,10802]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _reduced = _$$_REQUIRE(_dependencyMap[1]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[2]);

  var XTakeWhile = function () {
    function XTakeWhile(f, xf) {
      this.xf = xf;
      this.f = f;
    }

    XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;
    XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;

    XTakeWhile.prototype['@@transducer/step'] = function (result, input) {
      return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);
    };

    return XTakeWhile;
  }();

  var _xtakeWhile = _curry2(function _xtakeWhile(f, xf) {
    return new XTakeWhile(f, xf);
  });

  module.exports = _xtakeWhile;
},11429,[10565,10610,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _dispatchable = _$$_REQUIRE(_dependencyMap[1]);

  var _xtap = _$$_REQUIRE(_dependencyMap[2]);

  var tap = _curry2(_dispatchable([], _xtap, function tap(fn, x) {
    fn(x);
    return x;
  }));

  module.exports = tap;
},11432,[10565,10598,11435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _xfBase = _$$_REQUIRE(_dependencyMap[1]);

  var XTap = function () {
    function XTap(f, xf) {
      this.xf = xf;
      this.f = f;
    }

    XTap.prototype['@@transducer/init'] = _xfBase.init;
    XTap.prototype['@@transducer/result'] = _xfBase.result;

    XTap.prototype['@@transducer/step'] = function (result, input) {
      this.f(input);
      return this.xf['@@transducer/step'](result, input);
    };

    return XTap;
  }();

  var _xtap = _curry2(function _xtap(f, xf) {
    return new XTap(f, xf);
  });

  module.exports = _xtap;
},11435,[10565,10613]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _cloneRegExp = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var _isRegExp = _$$_REQUIRE(_dependencyMap[2]);

  var toString = _$$_REQUIRE(_dependencyMap[3]);

  var test = _curry2(function test(pattern, str) {
    if (!_isRegExp(pattern)) {
      throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));
    }

    return _cloneRegExp(pattern).test(str);
  });

  module.exports = test;
},11438,[10772,10565,11441,10841]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isRegExp(x) {
    return Object.prototype.toString.call(x) === '[object RegExp]';
  }

  module.exports = _isRegExp;
},11441,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _assertPromise = _$$_REQUIRE(_dependencyMap[1]);

  var then = _curry2(function then(f, p) {
    _assertPromise('then', p);

    return p.then(f);
  });

  module.exports = then;
},11444,[10565,11291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var invoker = _$$_REQUIRE(_dependencyMap[0]);

  var toLower = invoker(0, 'toLowerCase');
  module.exports = toLower;
},11447,[11144]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var _has = _$$_REQUIRE(_dependencyMap[1]);

  var toPairs = _curry1(function toPairs(obj) {
    var pairs = [];

    for (var prop in obj) {
      if (_has(prop, obj)) {
        pairs[pairs.length] = [prop, obj[prop]];
      }
    }

    return pairs;
  });

  module.exports = toPairs;
},11450,[10568,10652]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var toPairsIn = _curry1(function toPairsIn(obj) {
    var pairs = [];

    for (var prop in obj) {
      pairs[pairs.length] = [prop, obj[prop]];
    }

    return pairs;
  });

  module.exports = toPairsIn;
},11453,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var invoker = _$$_REQUIRE(_dependencyMap[0]);

  var toUpper = invoker(0, 'toUpperCase');
  module.exports = toUpper;
},11456,[11144]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _reduce = _$$_REQUIRE(_dependencyMap[0]);

  var _xwrap = _$$_REQUIRE(_dependencyMap[1]);

  var curryN = _$$_REQUIRE(_dependencyMap[2]);

  var transduce = curryN(4, function transduce(xf, fn, acc, list) {
    return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);
  });
  module.exports = transduce;
},11459,[10631,10640,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var transpose = _curry1(function transpose(outerlist) {
    var i = 0;
    var result = [];

    while (i < outerlist.length) {
      var innerlist = outerlist[i];
      var j = 0;

      while (j < innerlist.length) {
        if (typeof result[j] === 'undefined') {
          result[j] = [];
        }

        result[j].push(innerlist[j]);
        j += 1;
      }

      i += 1;
    }

    return result;
  });

  module.exports = transpose;
},11462,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var map = _$$_REQUIRE(_dependencyMap[1]);

  var sequence = _$$_REQUIRE(_dependencyMap[2]);

  var traverse = _curry3(function traverse(of, f, traversable) {
    return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));
  });

  module.exports = traverse;
},11465,[10592,10625,11384]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var ws = "\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
  var zeroWidth = "\u200B";
  var hasProtoTrim = typeof String.prototype.trim === 'function';
  var trim = !hasProtoTrim || ws.trim() || !zeroWidth.trim() ? _curry1(function trim(str) {
    var beginRx = new RegExp("^[\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF][\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]*");
    var endRx = new RegExp("[\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF][\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]*$");
    return str.replace(beginRx, '').replace(endRx, '');
  }) : _curry1(function trim(str) {
    return str.trim();
  });
  module.exports = trim;
},11468,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _arity = _$$_REQUIRE(_dependencyMap[0]);

  var _concat = _$$_REQUIRE(_dependencyMap[1]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[2]);

  var tryCatch = _curry2(function _tryCatch(tryer, catcher) {
    return _arity(tryer.length, function () {
      try {
        return tryer.apply(this, arguments);
      } catch (e) {
        return catcher.apply(this, _concat([e], arguments));
      }
    });
  });

  module.exports = tryCatch;
},11471,[10583,10577,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var unapply = _curry1(function unapply(fn) {
    return function () {
      return fn(Array.prototype.slice.call(arguments, 0));
    };
  });

  module.exports = unapply;
},11474,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var nAry = _$$_REQUIRE(_dependencyMap[1]);

  var unary = _curry1(function unary(fn) {
    return nAry(1, fn);
  });

  module.exports = unary;
},11477,[10568,10727]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var curryN = _$$_REQUIRE(_dependencyMap[1]);

  var uncurryN = _curry2(function uncurryN(depth, fn) {
    return curryN(depth, function () {
      var currentDepth = 1;
      var value = fn;
      var idx = 0;
      var endIdx;

      while (currentDepth <= depth && typeof value === 'function') {
        endIdx = currentDepth === depth ? arguments.length : idx + value.length;
        value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));
        currentDepth += 1;
        idx = endIdx;
      }

      return value;
    });
  });

  module.exports = uncurryN;
},11480,[10565,10580]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var unfold = _curry2(function unfold(fn, seed) {
    var pair = fn(seed);
    var result = [];

    while (pair && pair.length) {
      result[result.length] = pair[0];
      pair = fn(pair[1]);
    }

    return result;
  });

  module.exports = unfold;
},11483,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var compose = _$$_REQUIRE(_dependencyMap[2]);

  var uniq = _$$_REQUIRE(_dependencyMap[3]);

  var union = _curry2(compose(uniq, _concat));

  module.exports = union;
},11486,[10577,10565,10787,11117]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _concat = _$$_REQUIRE(_dependencyMap[0]);

  var _curry3 = _$$_REQUIRE(_dependencyMap[1]);

  var uniqWith = _$$_REQUIRE(_dependencyMap[2]);

  var unionWith = _curry3(function unionWith(pred, list1, list2) {
    return uniqWith(pred, _concat(list1, list2));
  });

  module.exports = unionWith;
},11489,[10577,10592,11492]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includesWith = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var uniqWith = _curry2(function uniqWith(pred, list) {
    var idx = 0;
    var len = list.length;
    var result = [];
    var item;

    while (idx < len) {
      item = list[idx];

      if (!_includesWith(pred, item, result)) {
        result[result.length] = item;
      }

      idx += 1;
    }

    return result;
  });

  module.exports = uniqWith;
},11492,[10862,10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var unless = _curry3(function unless(pred, whenFalseFn, x) {
    return pred(x) ? x : whenFalseFn(x);
  });

  module.exports = unless;
},11495,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _identity = _$$_REQUIRE(_dependencyMap[0]);

  var chain = _$$_REQUIRE(_dependencyMap[1]);

  var unnest = chain(_identity);
  module.exports = unnest;
},11498,[10835,10748]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var until = _curry3(function until(pred, fn, init) {
    var val = init;

    while (!pred(val)) {
      val = fn(val);
    }

    return val;
  });

  module.exports = until;
},11501,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry1 = _$$_REQUIRE(_dependencyMap[0]);

  var valuesIn = _curry1(function valuesIn(obj) {
    var prop;
    var vs = [];

    for (prop in obj) {
      vs[vs.length] = obj[prop];
    }

    return vs;
  });

  module.exports = valuesIn;
},11504,[10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var Const = function Const(x) {
    return {
      value: x,
      'fantasy-land/map': function fantasyLandMap() {
        return this;
      }
    };
  };

  var view = _curry2(function view(lens, x) {
    return lens(Const)(x).value;
  });

  module.exports = view;
},11507,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var when = _curry3(function when(pred, whenTrueFn, x) {
    return pred(x) ? whenTrueFn(x) : x;
  });

  module.exports = when;
},11510,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var _has = _$$_REQUIRE(_dependencyMap[1]);

  var where = _curry2(function where(spec, testObj) {
    for (var prop in spec) {
      if (_has(prop, spec) && !spec[prop](testObj[prop])) {
        return false;
      }
    }

    return true;
  });

  module.exports = where;
},11513,[10565,10652]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var equals = _$$_REQUIRE(_dependencyMap[1]);

  var map = _$$_REQUIRE(_dependencyMap[2]);

  var where = _$$_REQUIRE(_dependencyMap[3]);

  var whereEq = _curry2(function whereEq(spec, testObj) {
    return where(map(equals, spec), testObj);
  });

  module.exports = whereEq;
},11516,[10565,10853,10625,11513]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _includes = _$$_REQUIRE(_dependencyMap[0]);

  var _curry2 = _$$_REQUIRE(_dependencyMap[1]);

  var flip = _$$_REQUIRE(_dependencyMap[2]);

  var reject = _$$_REQUIRE(_dependencyMap[3]);

  var without = _curry2(function (xs, list) {
    return reject(flip(_includes)(xs), list);
  });

  module.exports = without;
},11519,[10847,10565,11051,10877]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var xprod = _curry2(function xprod(a, b) {
    var idx = 0;
    var ilen = a.length;
    var j;
    var jlen = b.length;
    var result = [];

    while (idx < ilen) {
      j = 0;

      while (j < jlen) {
        result[result.length] = [a[idx], b[j]];
        j += 1;
      }

      idx += 1;
    }

    return result;
  });

  module.exports = xprod;
},11522,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var zip = _curry2(function zip(a, b) {
    var rv = [];
    var idx = 0;
    var len = Math.min(a.length, b.length);

    while (idx < len) {
      rv[idx] = [a[idx], b[idx]];
      idx += 1;
    }

    return rv;
  });

  module.exports = zip;
},11525,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry2 = _$$_REQUIRE(_dependencyMap[0]);

  var zipObj = _curry2(function zipObj(keys, values) {
    var idx = 0;
    var len = Math.min(keys.length, values.length);
    var out = {};

    while (idx < len) {
      out[keys[idx]] = values[idx];
      idx += 1;
    }

    return out;
  });

  module.exports = zipObj;
},11528,[10565]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _curry3 = _$$_REQUIRE(_dependencyMap[0]);

  var zipWith = _curry3(function zipWith(fn, a, b) {
    var rv = [];
    var idx = 0;
    var len = Math.min(a.length, b.length);

    while (idx < len) {
      rv[idx] = fn(a[idx], b[idx]);
      idx += 1;
    }

    return rv;
  });

  module.exports = zipWith;
},11531,[10592]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var curryN = _$$_REQUIRE(_dependencyMap[0]);

  var _curry1 = _$$_REQUIRE(_dependencyMap[1]);

  var thunkify = _curry1(function thunkify(fn) {
    return curryN(fn.length, function createThunk() {
      var fnArgs = arguments;
      return function invokeThunk() {
        return fn.apply(this, fnArgs);
      };
    });
  });

  module.exports = thunkify;
},11534,[10580,10568]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.angle = exports.clamp = exports.getRotatePosition = exports.toDeg = exports.distance = exports.pow2abs = undefined;

  var pow2abs = function pow2abs(a, b) {
    return Math.pow(Math.abs(a - b), 2);
  };

  exports.pow2abs = pow2abs;

  var distance = function distance(touches) {
    var a = touches[0];
    var b = touches[1];

    if (touches.length === 1) {
      return false;
    }

    return Math.sqrt(pow2abs(a.pageX, b.pageX) + pow2abs(a.pageY, b.pageY), 2);
  };

  exports.distance = distance;

  var toDeg = function toDeg(rad) {
    return rad * 180 / Math.PI;
  };

  exports.toDeg = toDeg;

  var getRotatePosition = function getRotatePosition(x, y, originX, originY, angle) {
    var radian = -angle * Math.PI / 180;
    var x1 = Math.sin(radian) * (y - originY) + Math.cos(radian) * (x - originX) + originX;
    var y1 = Math.cos(radian) * (y - originY) - Math.sin(radian) * (x - originX) + originY;
    return [Math.round(x1), Math.round(y1)];
  };

  exports.getRotatePosition = getRotatePosition;

  var clamp = function clamp(num, min, max) {
    return Math.min(max, Math.max(num, min));
  };

  exports.clamp = clamp;

  var angle = function angle(touches, anchor) {
    var a = touches[0];
    var b = touches[1];

    if (touches.length < 2 && !anchor) {
      return 0;
    }

    var deg;

    if (anchor) {
      var x = anchor.x,
          y = anchor.y;
      deg = toDeg(Math.atan2(a.pageY - y, a.pageX - x));
    } else {
      deg = toDeg(Math.atan2(b.pageY - a.pageY, b.pageX - a.pageX));
    }

    while (deg < 0) {
      deg += 360;
    }

    return deg;
  };

  exports.angle = angle;
},11537,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isMultiTouch = exports.scales = exports.getScale = exports.angles = exports.getAngle = exports.hasMoved = exports.getOffset = exports.getTouches = undefined;

  var getTouches = function getTouches(event) {
    return event.nativeEvent.touches;
  };

  exports.getTouches = getTouches;

  var getOffset = function getOffset(event) {
    var _event$nativeEvent = event.nativeEvent,
        pageX = _event$nativeEvent.pageX,
        pageY = _event$nativeEvent.pageY,
        locationX = _event$nativeEvent.locationX,
        locationY = _event$nativeEvent.locationY;
    return {
      x: pageX - locationX,
      y: pageY - locationY
    };
  };

  exports.getOffset = getOffset;
  var MOVE_THRESHOLD = 10;

  var hasMoved = function hasMoved(gestureState) {
    var touchTimestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return Math.abs(gestureState.dy) < MOVE_THRESHOLD && Math.abs(gestureState.dx) < MOVE_THRESHOLD && Date.now() - touchTimestamp < 500;
  };

  exports.hasMoved = hasMoved;

  var getAngle = function getAngle(event, styles, diffAngle) {
    var _styles$transform = styles.transform,
        transform = _styles$transform === undefined ? [] : _styles$transform;
    var currentAngle = parseFloat(transform.map(function (style) {
      return style.rotate;
    }).reduce(function (a, b) {
      return b || a;
    }, 0), 0);
    return currentAngle - diffAngle + "deg";
  };

  exports.getAngle = getAngle;

  var angles = function angles(styles) {
    var defaultAngle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0deg';

    var _ref = styles || {},
        _ref$transform = _ref.transform,
        transform = _ref$transform === undefined ? [] : _ref$transform;

    return transform.map(function (style) {
      return style.rotate;
    }).reduce(function (res, cur) {
      return cur || res;
    }, defaultAngle);
  };

  exports.angles = angles;

  var getScale = function getScale(event, styles, diffDistance) {
    var _styles$transform2 = styles.transform,
        transform = _styles$transform2 === undefined ? [] : _styles$transform2;
    var currentScale = transform.map(function (style) {
      return style.scale;
    }).reduce(function (a, b) {
      return b || a;
    }, 1);
    var newScale = currentScale - diffDistance / 400;
    return newScale;
  };

  exports.getScale = getScale;

  var scales = function scales(styles) {
    var defaultScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

    var _ref2 = styles || {},
        _ref2$transform = _ref2.transform,
        transform = _ref2$transform === undefined ? [] : _ref2$transform;

    return transform.map(function (style) {
      return style.scale;
    }).reduce(function (res, cur) {
      return cur || res;
    }, defaultScale);
  };

  exports.scales = scales;

  var isMultiTouch = function isMultiTouch(event) {
    var currentTouches = getTouches(event);
    return currentTouches.length > 1;
  };

  exports.isMultiTouch = isMultiTouch;
},11540,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "d3265a97a5bfe53e4c94620e7998abaf",
    "name": "ic_machine_deleted",
    "type": "png"
  });
},11543,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "dde8b4a41fa0e1dd270b29f3daac6be0",
    "name": "ic_machine_rotate",
    "type": "png"
  });
},11546,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "62b31fcc5236f0ce7e400226c26662af",
    "name": "ic_zoneScalE",
    "type": "png"
  });
},11549,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(global) : typeof define === 'function' && define.amd ? define(factory) : factory(global);
  })(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : this, function (global) {
    'use strict';

    global = global || {};
    var _Base64 = global.Base64;
    var version = "2.6.4";
    var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

    var b64tab = function (bin) {
      var t = {};

      for (var i = 0, l = bin.length; i < l; i++) {
        t[bin.charAt(i)] = i;
      }

      return t;
    }(b64chars);

    var fromCharCode = String.fromCharCode;

    var cb_utob = function cb_utob(c) {
      if (c.length < 2) {
        var cc = c.charCodeAt(0);
        return cc < 0x80 ? c : cc < 0x800 ? fromCharCode(0xc0 | cc >>> 6) + fromCharCode(0x80 | cc & 0x3f) : fromCharCode(0xe0 | cc >>> 12 & 0x0f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);
      } else {
        var cc = 0x10000 + (c.charCodeAt(0) - 0xD800) * 0x400 + (c.charCodeAt(1) - 0xDC00);
        return fromCharCode(0xf0 | cc >>> 18 & 0x07) + fromCharCode(0x80 | cc >>> 12 & 0x3f) + fromCharCode(0x80 | cc >>> 6 & 0x3f) + fromCharCode(0x80 | cc & 0x3f);
      }
    };

    var re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g;

    var utob = function utob(u) {
      return u.replace(re_utob, cb_utob);
    };

    var cb_encode = function cb_encode(ccc) {
      var padlen = [0, 2, 1][ccc.length % 3],
          ord = ccc.charCodeAt(0) << 16 | (ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8 | (ccc.length > 2 ? ccc.charCodeAt(2) : 0),
          chars = [b64chars.charAt(ord >>> 18), b64chars.charAt(ord >>> 12 & 63), padlen >= 2 ? '=' : b64chars.charAt(ord >>> 6 & 63), padlen >= 1 ? '=' : b64chars.charAt(ord & 63)];
      return chars.join('');
    };

    var btoa = global.btoa && typeof global.btoa == 'function' ? function (b) {
      return global.btoa(b);
    } : function (b) {
      if (b.match(/[^\x00-\xFF]/)) throw new RangeError('The string contains invalid characters.');
      return b.replace(/[\s\S]{1,3}/g, cb_encode);
    };

    var _encode = function _encode(u) {
      return btoa(utob(String(u)));
    };

    var mkUriSafe = function mkUriSafe(b64) {
      return b64.replace(/[+\/]/g, function (m0) {
        return m0 == '+' ? '-' : '_';
      }).replace(/=/g, '');
    };

    var encode = function encode(u, urisafe) {
      return urisafe ? mkUriSafe(_encode(u)) : _encode(u);
    };

    var encodeURI = function encodeURI(u) {
      return encode(u, true);
    };

    var fromUint8Array;
    if (global.Uint8Array) fromUint8Array = function fromUint8Array(a, urisafe) {
      var b64 = '';

      for (var i = 0, l = a.length; i < l; i += 3) {
        var a0 = a[i],
            a1 = a[i + 1],
            a2 = a[i + 2];
        var ord = a0 << 16 | a1 << 8 | a2;
        b64 += b64chars.charAt(ord >>> 18) + b64chars.charAt(ord >>> 12 & 63) + (typeof a1 != 'undefined' ? b64chars.charAt(ord >>> 6 & 63) : '=') + (typeof a2 != 'undefined' ? b64chars.charAt(ord & 63) : '=');
      }

      return urisafe ? mkUriSafe(b64) : b64;
    };
    var re_btou = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g;

    var cb_btou = function cb_btou(cccc) {
      switch (cccc.length) {
        case 4:
          var cp = (0x07 & cccc.charCodeAt(0)) << 18 | (0x3f & cccc.charCodeAt(1)) << 12 | (0x3f & cccc.charCodeAt(2)) << 6 | 0x3f & cccc.charCodeAt(3),
              offset = cp - 0x10000;
          return fromCharCode((offset >>> 10) + 0xD800) + fromCharCode((offset & 0x3FF) + 0xDC00);

        case 3:
          return fromCharCode((0x0f & cccc.charCodeAt(0)) << 12 | (0x3f & cccc.charCodeAt(1)) << 6 | 0x3f & cccc.charCodeAt(2));

        default:
          return fromCharCode((0x1f & cccc.charCodeAt(0)) << 6 | 0x3f & cccc.charCodeAt(1));
      }
    };

    var btou = function btou(b) {
      return b.replace(re_btou, cb_btou);
    };

    var cb_decode = function cb_decode(cccc) {
      var len = cccc.length,
          padlen = len % 4,
          n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0) | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0) | (len > 2 ? b64tab[cccc.charAt(2)] << 6 : 0) | (len > 3 ? b64tab[cccc.charAt(3)] : 0),
          chars = [fromCharCode(n >>> 16), fromCharCode(n >>> 8 & 0xff), fromCharCode(n & 0xff)];
      chars.length -= [0, 0, 2, 1][padlen];
      return chars.join('');
    };

    var _atob = global.atob && typeof global.atob == 'function' ? function (a) {
      return global.atob(a);
    } : function (a) {
      return a.replace(/\S{1,4}/g, cb_decode);
    };

    var atob = function atob(a) {
      return _atob(String(a).replace(/[^A-Za-z0-9\+\/]/g, ''));
    };

    var _decode = function _decode(a) {
      return btou(_atob(a));
    };

    var _fromURI = function _fromURI(a) {
      return String(a).replace(/[-_]/g, function (m0) {
        return m0 == '-' ? '+' : '/';
      }).replace(/[^A-Za-z0-9\+\/]/g, '');
    };

    var decode = function decode(a) {
      return _decode(_fromURI(a));
    };

    var toUint8Array;
    if (global.Uint8Array) toUint8Array = function toUint8Array(a) {
      return Uint8Array.from(atob(_fromURI(a)), function (c) {
        return c.charCodeAt(0);
      });
    };

    var noConflict = function noConflict() {
      var Base64 = global.Base64;
      global.Base64 = _Base64;
      return Base64;
    };

    global.Base64 = {
      VERSION: version,
      atob: atob,
      btoa: btoa,
      fromBase64: decode,
      toBase64: encode,
      utob: utob,
      encode: encode,
      encodeURI: encodeURI,
      btou: btou,
      decode: decode,
      noConflict: noConflict,
      fromUint8Array: fromUint8Array,
      toUint8Array: toUint8Array
    };

    if (typeof Object.defineProperty === 'function') {
      var noEnum = function noEnum(v) {
        return {
          value: v,
          enumerable: false,
          writable: true,
          configurable: true
        };
      };

      global.Base64.extendString = function () {
        Object.defineProperty(String.prototype, 'fromBase64', noEnum(function () {
          return decode(this);
        }));
        Object.defineProperty(String.prototype, 'toBase64', noEnum(function (urisafe) {
          return encode(this, urisafe);
        }));
        Object.defineProperty(String.prototype, 'toBase64URI', noEnum(function () {
          return encode(this, true);
        }));
      };
    }

    if (global['Meteor']) {
      Base64 = global.Base64;
    }

    if (typeof module !== 'undefined' && module.exports) {
      module.exports.Base64 = global.Base64;
    } else if (typeof define === 'function' && define.amd) {
      define([], function () {
        return global.Base64;
      });
    }

    return {
      Base64: global.Base64
    };
  });
},11552,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _math = _$$_REQUIRE(_dependencyMap[9]);

  var ShowForbidZone = function (_React$Component) {
    (0, _inherits2.default)(ShowForbidZone, _React$Component);

    function ShowForbidZone() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ShowForbidZone);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ShowForbidZone)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.getData = function () {
        var _this$props = _this.props,
            _this$props$zone = _this$props.zone,
            zone = _this$props$zone === undefined ? [] : _this$props$zone,
            position = _this$props.position,
            _this$props$show = _this$props.show,
            show = _this$props$show === undefined ? true : _this$props$show;

        if (zone.length != 0) {
          _this.insideWidth = Math.round(Math.sqrt(Math.pow(zone[1][0] - zone[0][0], 2) + Math.pow(zone[1][1] - zone[0][1], 2)));
          _this.insideHeight = Math.round(Math.sqrt(Math.pow(zone[0][0] - zone[3][0], 2) + Math.pow(zone[0][1] - zone[3][1], 2)));
          _this.insideOriginX = (zone[0][0] + zone[1][0] + zone[2][0] + zone[3][0]) / 4;
          _this.insideOriginY = (zone[0][1] + zone[1][1] + zone[2][1] + zone[3][1]) / 4;
          _this.marginLeft = _this.insideOriginX - _this.insideWidth / 2 - 24;
          _this.marginTop = _this.insideOriginY - _this.insideHeight / 2 - 24;
          _this.isWall = _this.insideHeight < 5 || _this.insideWidth < 5;

          if (_this.isWall) {
            _this.svgWidth = _this.insideWidth + 48;
            _this.svgHeight = 50;
          } else {
            _this.svgWidth = _this.insideWidth + 48;
            _this.svgHeight = _this.insideHeight + 48;
          }

          var v1 = {};
          v1.x = 1;
          v1.y = 0;
          var v2 = {};
          v2.x = zone[1][0] - zone[0][0];
          v2.y = zone[1][1] - zone[0][1];
          var directFlag = zone[1][1] < zone[0][1] ? true : false;
          var v1_v2_1 = v2.x * v1.x + v2.y * v1.y;
          var v1_v2_2 = Math.sqrt(v2.x * v2.x + v2.y * v2.y);
          var arcthea = 0;

          if (v1_v2_2) {
            arcthea = Math.acos(v1_v2_1 / v1_v2_2);
          }

          _this.myAngle = (0, _math.toDeg)(arcthea);

          if (directFlag) {
            _this.myAngle = 360 - _this.myAngle;
          }
        }

        _this.setState({
          position: position,
          showBorder: show ? true : show,
          left: _this.marginLeft,
          top: _this.marginTop,
          rotate: _this.myAngle,
          svgWidth: _this.svgWidth,
          svgHeight: _this.svgHeight,
          outWidth: _this.svgWidth - 24,
          outHeight: _this.svgHeight - 24,
          insideWidth: _this.svgWidth - 48,
          insideHeight: _this.svgHeight - 48 == 0 ? 2 : _this.svgHeight - 48,
          isScale: false,
          isRotate: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ShowForbidZone, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.getData();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps, nextContext) {
        this.getData();
        return true;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            _this$state$left = _this$state.left,
            left = _this$state$left === undefined ? 0 : _this$state$left,
            _this$state$top = _this$state.top,
            top = _this$state$top === undefined ? 0 : _this$state$top,
            _this$state$rotate = _this$state.rotate,
            rotate = _this$state$rotate === undefined ? 0 : _this$state$rotate,
            _this$state$svgWidth = _this$state.svgWidth,
            svgWidth = _this$state$svgWidth === undefined ? 0 : _this$state$svgWidth,
            _this$state$svgHeight = _this$state.svgHeight,
            svgHeight = _this$state$svgHeight === undefined ? 0 : _this$state$svgHeight,
            _this$state$insideWid = _this$state.insideWidth,
            insideWidth = _this$state$insideWid === undefined ? 0 : _this$state$insideWid,
            _this$state$insideHei = _this$state.insideHeight,
            insideHeight = _this$state$insideHei === undefined ? 0 : _this$state$insideHei;
        var borderWidth = this.isWall ? 0 : 1;
        var opacity = this.isWall ? 1 : 0.6;
        return _react.default.createElement(_reactNative.View, {
          ref: function ref(_ref) {
            return _this2._root = _ref;
          },
          pointerEvents: "none",
          style: {
            position: 'absolute',
            left: left,
            top: top,
            transform: [{
              translateX: 0
            }, {
              translateY: 0
            }, {
              rotate: rotate + "deg"
            }],
            alignItems: 'flex-end'
          }
        }, _react.default.createElement(_reactNativeSvg.Svg, {
          width: svgWidth,
          height: svgHeight
        }, _react.default.createElement(_reactNativeSvg.Rect, {
          x: "24",
          y: "24",
          width: insideWidth,
          height: insideHeight,
          stroke: this.props.forbidType == 'all' || this.props.forbidType == 'wall' ? "#DE0000" : "#F66C00",
          strokeWidth: borderWidth,
          fill: this.props.forbidType == 'all' || this.props.forbidType == 'wall' ? "#F78384" : "#F3B07F",
          fillOpacity: opacity
        }), this.props.forbidType == 'all' || this.props.forbidType == 'mop' ? _react.default.createElement(_reactNativeSvg.Text, {
          fill: "#fff",
          fontSize: "12",
          fontWeight: "bold",
          x: this.state.svgWidth / 2,
          y: this.state.svgHeight / 2,
          textAnchor: "middle"
        }, this.props.tag == 'xiaomi' ? '' : this.props.tag) : null));
      }
    }]);
    return ShowForbidZone;
  }(_react.default.Component);

  exports.default = ShowForbidZone;
},11555,[14305,14320,14323,14371,14377,14386,10297,11485,10033,11537]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var spotWidth = 48;
  var Colors = _Consts.default.Colors;

  var SpotClean = function (_React$Component) {
    (0, _inherits2.default)(SpotClean, _React$Component);

    function SpotClean(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SpotClean);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SpotClean).call(this, props));

      _this._showImage = function () {
        if (_this.props.pointArray.length == 0) {
          return _react.default.createElement(_reactNative.Image, {
            style: {
              position: 'absolute',
              transform: [{
                translateX: 14
              }, {
                translateY: 12
              }]
            },
            source: _$$_REQUIRE(_dependencyMap[11])
          });
        } else {
          return null;
        }
      };

      if (_this.props.mode == 3) {
        _this.marginLeft = _this.props.pointArray.length == 4 ? _this.props.pointArray[3][0] : 0;
        _this.marginTop = _this.props.pointArray.length == 4 ? _this.props.pointArray[3][1] : 0;
      } else {
        _this.marginLeft = _this.props.pointArray.length == 0 ? 0 : _this.props.pointArray[0][0];
        _this.marginTop = _this.props.pointArray.length == 0 ? 0 : _this.props.pointArray[0][1];
      }

      _this.svgWidth = Math.abs(_this.props.pointArray.length == 0 ? spotWidth : _this.props.pointArray[1][0] - _this.props.pointArray[0][0]);
      _this.svgHeight = Math.abs(_this.props.pointArray.length == 0 ? spotWidth : _this.props.pointArray[2][1] - _this.props.pointArray[0][1]);
      return _this;
    }

    (0, _createClass2.default)(SpotClean, [{
      key: "returnSpotXY",
      value: function returnSpotXY() {
        return [this.props.marginLeft - 24, this.props.marginTop - 24, spotWidth, spotWidth];
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            _this$props$marginLef = _this$props.marginLeft,
            marginLeft = _this$props$marginLef === undefined ? 0 : _this$props$marginLef,
            _this$props$marginTop = _this$props.marginTop,
            marginTop = _this$props$marginTop === undefined ? 0 : _this$props$marginTop,
            _this$props$pointArra = _this$props.pointArray,
            pointArray = _this$props$pointArra === undefined ? [] : _this$props$pointArra;
        return _react.default.createElement(_reactNative.View, {
          pointerEvents: "none",
          style: {
            position: 'absolute',
            left: this.props.pointArray.length == 0 ? marginLeft - 24 : this.marginLeft,
            top: this.props.pointArray.length == 0 ? marginTop - 24 : this.marginTop,
            transform: [{
              translateX: 0
            }, {
              translateY: 0
            }],
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNativeSvg.Svg, {
          width: this.svgWidth,
          height: this.svgHeight
        }, _react.default.createElement(_reactNativeSvg.Rect, {
          x: "0",
          y: "0",
          width: this.svgWidth,
          height: this.svgHeight,
          strokeWidth: "2",
          stroke: Colors.mainColor,
          fill: Colors.mainColor,
          fillOpacity: 0.1
        }), this._showImage()));
      }
    }]);
    return SpotClean;
  }(_react.default.Component);

  exports.default = SpotClean;
},11558,[14305,14320,14323,14371,14377,14386,10297,11485,10033,10100,10064,11561]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 20,
    "height": 24,
    "scales": [1, 2, 3],
    "hash": "ae9add9d837272238dfa5ee8957d224f",
    "name": "ic_machine_location",
    "type": "png"
  });
},11561,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.STATUS = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _SleepAnim = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _WarnAnim = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _SweepAnim = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _ChargeAnim = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var robotImg = _$$_REQUIRE(_dependencyMap[14]);

  var STATUS = {
    FAULT: 7,
    SWEEP: 4,
    CHARGE: 6,
    SLEEP: 1,
    NORMAL: -1
  };
  exports.STATUS = STATUS;

  var Robot = function (_React$Component) {
    (0, _inherits2.default)(Robot, _React$Component);

    function Robot() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Robot);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Robot)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._renderByState = function (status) {
        var view;

        switch (status) {
          case STATUS.SWEEP:
            view = _react.default.createElement(_SweepAnim.default, null, _react.default.createElement(_reactNative.Image, {
              source: robotImg
            }));
            break;

          case STATUS.CHARGE:
            view = _react.default.createElement(_ChargeAnim.default, null, _react.default.createElement(_reactNative.Image, {
              source: robotImg
            }));
            break;

          case STATUS.SLEEP:
            view = _react.default.createElement(_SleepAnim.default, null, _react.default.createElement(_reactNative.Image, {
              source: robotImg
            }));
            break;

          case STATUS.FAULT:
            view = _react.default.createElement(_WarnAnim.default, null, _react.default.createElement(_reactNative.Image, {
              source: robotImg
            }));
            break;

          default:
            view = _react.default.createElement(_reactNative.Image, {
              source: robotImg
            });
            break;
        }

        return view;
      };

      _this._getTranslateStyle = function (status, center) {
        if (!center || !center.x || !center.y) {
          return {};
        }

        var width;

        switch (status) {
          case STATUS.SWEEP:
            width = _SweepAnim.default.DEFAULT_WIDTH / 2;
            break;

          case STATUS.CHARGE:
            width = _ChargeAnim.default.DEFAULT_WIDTH / 2;
            break;

          case STATUS.SLEEP:
            width = _SleepAnim.default.DEFAULT_WIDTH / 2;
            break;

          case STATUS.FAULT:
            width = _WarnAnim.default.DEFAULT_WIDTH / 2;
            break;

          default:
            width = 11;
            break;
        }

        return {
          transform: [{
            translateX: center.x - width
          }, {
            translateY: center.y - width
          }]
        };
      };

      return _this;
    }

    (0, _createClass2.default)(Robot, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            status = _this$props.status,
            style = _this$props.style,
            center = _this$props.center,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["status", "style", "center"]);

        var robotView = this._renderByState(status, center);

        var tranStyle = this._getTranslateStyle(status, center);

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          pointerEvents: "none",
          style: [styles.container, style, tranStyle]
        }, other), robotView);
      }
    }]);
    return Robot;
  }(_react.default.Component);

  exports.default = Robot;
  Robot.STATUS = STATUS;

  var styles = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute'
    }
  });
},11564,[14305,14344,14407,14320,14323,14371,14377,14386,10297,10033,11567,11597,11603,11609,11615]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _lottieReactNative = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var DEFAULT_WIDTH = 70;

  var SleepAnim = function (_React$Component) {
    (0, _inherits2.default)(SleepAnim, _React$Component);

    function SleepAnim(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SleepAnim);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SleepAnim).call(this, props));
      _this.loop = true;
      return _this;
    }

    (0, _createClass2.default)(SleepAnim, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.lv) {
          this.lv.play();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.loop = false;

        if (this.lv) {
          this.lv.reset();
          this.lv = null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            style = _this$props.style,
            _this$props$width = _this$props.width,
            width = _this$props$width === undefined ? DEFAULT_WIDTH : _this$props$width,
            children = _this$props.children;
        var loop = this.loop;
        return _react.default.createElement(_reactNative.View, {
          style: [{
            width: width,
            height: width,
            justifyContent: 'center',
            alignItems: 'center'
          }, style]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute',
            right: 0,
            top: 0
          }
        }, _react.default.createElement(_lottieReactNative.default, {
          style: {
            width: 36,
            height: 36
          },
          hardwareAccelerationAndroid: false,
          ref: function ref(lv) {
            _this2.lv = lv;
          },
          loop: loop,
          autoPlay: false,
          source: _$$_REQUIRE(_dependencyMap[9])
        })), _react.default.createElement(_reactNative.View, {
          style: {}
        }, children));
      }
    }]);
    return SleepAnim;
  }(_react.default.Component);

  exports.default = SleepAnim;
  SleepAnim.DEFAULT_WIDTH = DEFAULT_WIDTH;
},11567,[14305,14320,14323,14371,14377,14386,10297,10033,11570,11594]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},11570,[11573]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _jsxFileName = 'src/js/LottieView.js';

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _react = _$$_REQUIRE(_dependencyMap[0]);

  var _react2 = _interopRequireDefault(_react);

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _reactNativeSafeModule = _$$_REQUIRE(_dependencyMap[2]);

  var _reactNativeSafeModule2 = _interopRequireDefault(_reactNativeSafeModule);

  var _propTypes = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  }

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    } else {
      return Array.from(arr);
    }
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var NativeLottieView = _reactNativeSafeModule2.default.component({
    viewName: 'LottieAnimationView',
    mockComponent: _reactNative.View
  });

  var AnimatedNativeLottieView = _reactNative.Animated.createAnimatedComponent(NativeLottieView);

  var LottieViewManager = _reactNativeSafeModule2.default.module({
    moduleName: 'LottieAnimationView',
    mock: {
      play: function play() {},
      reset: function reset() {}
    }
  });

  var ViewStyleExceptBorderPropType = function ViewStyleExceptBorderPropType(props, propName, componentName) {
    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    var flattened = _reactNative.StyleSheet.flatten(props[propName]);

    var usesBorder = Object.keys(flattened).some(function (key) {
      return key.startsWith('border');
    });

    if (usesBorder) {
      return Error(componentName + ' does not allow any border related style properties to be specified. ' + "Border styles for this component will behave differently across platforms. If you'd " + 'like to render a border around this component, wrap it with a View.');
    }

    return _reactNative.ViewPropTypes.style.apply(_reactNative.ViewPropTypes, [props, propName, componentName].concat(rest));
  };

  var NotAllowedPropType = function NotAllowedPropType(props, propName, componentName) {
    var value = props[propName];

    if (value != null) {
      return Error(componentName + ' cannot specify \'' + propName + '\'.');
    }

    return null;
  };

  var propTypes = _extends({}, _reactNative.ViewPropTypes, {
    style: ViewStyleExceptBorderPropType,
    children: NotAllowedPropType,
    resizeMode: _propTypes2.default.oneOf(['cover', 'contain', 'center']),
    progress: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.object]),
    speed: _propTypes2.default.number,
    loop: _propTypes2.default.bool,
    autoPlay: _propTypes2.default.bool,
    autoSize: _propTypes2.default.bool,
    enableMergePathsAndroidForKitKatAndAbove: _propTypes2.default.bool,
    source: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]).isRequired,
    hardwareAccelerationAndroid: _propTypes2.default.bool,
    cacheStrategy: _propTypes2.default.oneOf(['none', 'weak', 'strong'])
  });

  var defaultProps = {
    progress: 0,
    speed: 1,
    loop: true,
    autoPlay: false,
    autoSize: false,
    enableMergePathsAndroidForKitKatAndAbove: false,
    resizeMode: 'contain'
  };
  var viewConfig = {
    uiViewClassName: 'LottieAnimationView',
    validAttributes: {
      progress: true
    }
  };

  var LottieView = function (_React$Component) {
    _inherits(LottieView, _React$Component);

    function LottieView(props) {
      _classCallCheck(this, LottieView);

      var _this = _possibleConstructorReturn(this, (LottieView.__proto__ || Object.getPrototypeOf(LottieView)).call(this, props));

      _this.viewConfig = viewConfig;
      _this.refRoot = _this.refRoot.bind(_this);
      return _this;
    }

    _createClass(LottieView, [{
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        if (this.props.source.nm !== prevProps.source.nm && this.props.autoPlay) {
          this.play();
        }
      }
    }, {
      key: 'setNativeProps',
      value: function setNativeProps(props) {
        _reactNative.UIManager.updateView(this.getHandle(), this.viewConfig.uiViewClassName, {
          progress: props.progress
        });
      }
    }, {
      key: 'play',
      value: function play() {
        var startFrame = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
        var endFrame = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
        this.runCommand('play', [startFrame, endFrame]);
      }
    }, {
      key: 'reset',
      value: function reset() {
        this.runCommand('reset');
      }
    }, {
      key: 'runCommand',
      value: function runCommand(name) {
        var _this2 = this;

        var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
        var handle = this.getHandle();

        if (!handle) {
          return null;
        }

        return _reactNative.Platform.select({
          android: function android() {
            return _reactNative.UIManager.dispatchViewManagerCommand(handle, _reactNative.UIManager.LottieAnimationView.Commands[name], args);
          },
          ios: function ios() {
            return LottieViewManager[name].apply(LottieViewManager, [_this2.getHandle()].concat(_toConsumableArray(args)));
          }
        })();
      }
    }, {
      key: 'getHandle',
      value: function getHandle() {
        return (0, _reactNative.findNodeHandle)(this.root);
      }
    }, {
      key: 'refRoot',
      value: function refRoot(root) {
        this.root = root;

        if (this.props.autoPlay) {
          this.play();
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            style = _props.style,
            source = _props.source,
            autoSize = _props.autoSize,
            rest = _objectWithoutProperties(_props, ['style', 'source', 'autoSize']);

        var sourceName = typeof source === 'string' ? source : undefined;
        var sourceJson = typeof source === 'string' ? undefined : JSON.stringify(source);
        var aspectRatioStyle = sourceJson ? {
          aspectRatio: source.w / source.h
        } : undefined;

        var styleObject = _reactNative.StyleSheet.flatten(style);

        var sizeStyle = undefined;

        if (!styleObject || styleObject.width === undefined && styleObject.height === undefined) {
          sizeStyle = autoSize && sourceJson ? {
            width: source.w
          } : _reactNative.StyleSheet.absoluteFill;
        }

        return _react2.default.createElement(_reactNative.View, {
          style: [aspectRatioStyle, sizeStyle, style],
          __source: {
            fileName: _jsxFileName,
            lineNumber: 153
          }
        }, _react2.default.createElement(AnimatedNativeLottieView, _extends({
          ref: this.refRoot
        }, rest, {
          style: [aspectRatioStyle, sizeStyle || {
            width: '100%',
            height: '100%'
          }, style],
          sourceName: sourceName,
          sourceJson: sourceJson,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 154
          }
        })));
      }
    }]);

    return LottieView;
  }(_react2.default.Component);

  LottieView.propTypes = propTypes;
  LottieView.defaultProps = defaultProps;
  module.exports = LottieView;
},11573,[10297,10033,11576,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    create: _$$_REQUIRE(_dependencyMap[0]),
    module: _$$_REQUIRE(_dependencyMap[0]),
    component: _$$_REQUIRE(_dependencyMap[1])
  };
},11576,[11579,11588]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},11579,[11582]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _templateObject = _taggedTemplateLiteral(['\n      SafeModule.module(...) was invoked without any options parameter.\n    '], ['\n      SafeModule.module(...) was invoked without any options parameter.\n    ']),
      _templateObject2 = _taggedTemplateLiteral(['\n      SafeModule.module(...) requires a moduleName property to be specified.\n    '], ['\n      SafeModule.module(...) requires a moduleName property to be specified.\n    ']),
      _templateObject3 = _taggedTemplateLiteral(['\n      Missing a "mock" parameter.\n    '], ['\n      Missing a "mock" parameter.\n    ']),
      _templateObject4 = _taggedTemplateLiteral(['\n          ReactNative.NativeModules.', '.', ' did not have a corresponding prop defined\n          in the mock provided to SafeModule.\n        '], ['\n          ReactNative.NativeModules.', '.', ' did not have a corresponding prop defined\n          in the mock provided to SafeModule.\n        ']);

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _dedent = _$$_REQUIRE(_dependencyMap[1]);

  var _dedent2 = _interopRequireDefault(_dedent);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _taggedTemplateLiteral(strings, raw) {
    return Object.freeze(Object.defineProperties(strings, {
      raw: {
        value: Object.freeze(raw)
      }
    }));
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var UNMOCKED_PROPERTY_WHITELIST = {
    VERSION: true,
    addListener: true,
    removeListeners: true
  };
  var eventEmitterMock = {
    addListener: function addListener() {},
    removeListeners: function removeListeners() {}
  };

  var first = function first(array, fn) {
    var result = undefined;
    var i = 0;

    for (; i < array.length; i++) {
      result = fn(array[i]);
      if (result) return result;
    }

    return null;
  };

  var moduleWithName = function moduleWithName(nameOrArray) {
    if (!nameOrArray) return null;
    if (Array.isArray(nameOrArray)) return first(nameOrArray, moduleWithName);
    return _reactNative.NativeModules[nameOrArray];
  };

  var getPrimaryName = function getPrimaryName(nameOrArray) {
    return Array.isArray(nameOrArray) ? getPrimaryName(nameOrArray[0]) : nameOrArray;
  };

  var getModule = function getModule(moduleNameOrNames, mock, isEventEmitter) {
    var module = moduleWithName(moduleNameOrNames);
    if (module) return module;
    if (isEventEmitter) return _extends({}, mock, eventEmitterMock);
    return mock;
  };

  var defaultGetVersion = function defaultGetVersion(module) {
    return module.VERSION;
  };

  var create = function SafeModuleCreate(options) {
    if (!options) {
      throw new Error((0, _dedent2.default)(_templateObject));
    }

    var moduleName = options.moduleName;
    var mock = options.mock;
    var isEventEmitter = options.isEventEmitter;
    var versionOverrides = options.versionOverrides;
    var getVersion = options.getVersion;

    if (!getVersion) {
      getVersion = defaultGetVersion;
    }

    if (!moduleName) {
      throw new Error((0, _dedent2.default)(_templateObject2));
    }

    var MODULE_NAME = getPrimaryName(moduleName);

    if (!mock) {
      throw new Error((0, _dedent2.default)(_templateObject3));
    }

    var result = {};
    var module = getModule(moduleName, mock, isEventEmitter);
    var version = getVersion(module);

    if (isEventEmitter) {
      result.emitter = new _reactNative.NativeEventEmitter(module);
    }

    var overrides = undefined;
    var boundOverrides = undefined;

    if (versionOverrides) {
      overrides = versionOverrides[version];
      boundOverrides = {};

      if (overrides) {
        Object.keys(overrides).forEach(function (key) {
          if (typeof overrides[key] === 'function') {
            boundOverrides[key] = overrides[key](module[key], module);
          } else {
            boundOverrides[key] = overrides[key];
          }
        });
      }
    }

    _extends(result, mock, module, boundOverrides);

    return result;
  };

  module.exports = create;
},11582,[10033,11585]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function dedent(strings) {
    var raw = undefined;

    if (typeof strings === "string") {
      raw = [strings];
    } else {
      raw = strings.raw;
    }

    var result = "";

    for (var _len = arguments.length, values = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      values[_key - 1] = arguments[_key];
    }

    for (var i = 0; i < raw.length; i++) {
      result += raw[i].replace(/\\\n[ \t]*/g, "").replace(/\\`/g, "`");

      if (i < values.length) {
        result += values[i];
      }
    }

    result = result.trim();
    var lines = result.split("\n");
    var mindent = null;
    lines.forEach(function (l) {
      var m = l.match(/^ +/);

      if (m) {
        var indent = m[0].length;

        if (!mindent) {
          mindent = indent;
        } else {
          mindent = Math.min(mindent, indent);
        }
      }
    });

    if (mindent !== null) {
      result = lines.map(function (l) {
        return l[0] === " " ? l.slice(mindent) : l;
      }).join("\n");
    }

    return result.replace(/\\n/g, "\n");
  }

  if (typeof module !== "undefined") {
    module.exports = dedent;
  }
},11585,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},11588,[11591]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _templateObject = _taggedTemplateLiteral(['\n      SafeModule.create(...) was invoked without any options parameter.\n    '], ['\n      SafeModule.create(...) was invoked without any options parameter.\n    ']),
      _templateObject2 = _taggedTemplateLiteral(['\n             When attempting to resolve the native component ', ',\n             componentOverrides.', ' is expected to be a function, but found\n             ', ' instead.\n          '], ['\n             When attempting to resolve the native component ', ',\n             componentOverrides.', ' is expected to be a function, but found\n             ', ' instead.\n          ']),
      _templateObject3 = _taggedTemplateLiteral(['\n            When attempting to resolve the native component ', ',\n            componentOverrides.', ' is expected to be a function that returns a React\n            component. Instead, ', ' was found.\n          '], ['\n            When attempting to resolve the native component ', ',\n            componentOverrides.', ' is expected to be a function that returns a React\n            component. Instead, ', ' was found.\n          ']);

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _dedent = _$$_REQUIRE(_dependencyMap[1]);

  var _dedent2 = _interopRequireDefault(_dedent);

  var _SafeModule = _$$_REQUIRE(_dependencyMap[2]);

  var _SafeModule2 = _interopRequireDefault(_SafeModule);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _taggedTemplateLiteral(strings, raw) {
    return Object.freeze(Object.defineProperties(strings, {
      raw: {
        value: Object.freeze(raw)
      }
    }));
  }

  var first = function first(array, fn) {
    var result = undefined;
    var i = 0;

    for (; i < array.length; i++) {
      result = fn(array[i]);
      if (result) return result;
    }

    return null;
  };

  var findFirstResolver = function findFirstResolver(namespace) {
    return function findFirstOnNamespace(nameOrArray) {
      if (!nameOrArray) return null;
      if (Array.isArray(nameOrArray)) return first(nameOrArray, findFirstOnNamespace);
      return nameOrArray in namespace ? nameOrArray : null;
    };
  };

  var findFirstViewName = findFirstResolver(_reactNative.UIManager);

  var getPrimaryName = function getPrimaryName(nameOrArray) {
    return Array.isArray(nameOrArray) ? getPrimaryName(nameOrArray[0]) : nameOrArray;
  };

  var defaultGetVersion = function defaultGetVersion(module) {
    return module.VERSION;
  };

  function SafeComponentCreate(options) {
    if (!options) {
      throw new Error((0, _dedent2.default)(_templateObject));
    }

    var viewName = options.viewName;
    var propOverrides = options.propOverrides;
    var componentOverrides = options.componentOverrides;
    var mockComponent = options.mockComponent;
    var mock = options.mock;
    var getVersion = options.getVersion;

    if (!getVersion) {
      getVersion = defaultGetVersion;
    }

    if (!viewName) {
      throw new Error('\n      SafeModule.component(...) requires a viewName property to be specified.\n    ');
    }

    if (!mockComponent) {
      throw new Error('\n      SafeModule.component(...) requires a mockComponent property to be specified.\n    ');
    }

    var PRIMARY_VIEW_NAME = getPrimaryName(viewName);
    var realViewName = findFirstViewName(viewName);
    var realViewConfig = _reactNative.UIManager[realViewName];

    if (!realViewName || !realViewConfig) {
      return mockComponent;
    }

    var moduleOptions = _extends({}, options, {
      mock: mock || {},
      moduleName: realViewName + 'Manager'
    });

    var nativeModule = (0, _SafeModule2.default)(moduleOptions);
    var version = getVersion(realViewConfig.Constants || {});

    if (propOverrides) {
      var overrides = propOverrides[version];
      var boundOverrides = {};

      if (overrides) {
        if (typeof overrides === 'function') {
          boundOverrides = overrides(realViewConfig.NativeProps, realViewConfig, nativeModule);
        } else {
          boundOverrides = _extends({}, overrides);
        }
      }

      _extends(realViewConfig.NativeProps, boundOverrides);
    }

    var nativeComponent = (0, _reactNative.requireNativeComponent)(realViewName);
    var result = nativeComponent;

    result.runCommand = function (instance, name) {
      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }

      return _reactNative.Platform.select({
        android: function android() {
          return _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(instance), _reactNative.UIManager[realViewName].Commands[name], args);
        },
        ios: function ios() {
          return nativeModule[name].apply(nativeModule, [(0, _reactNative.findNodeHandle)(instance)].concat(args));
        },
        default: function _default() {}
      })();
    };

    result.updateView = function (instance, props) {
      var native = function native() {
        return _reactNative.UIManager.updateView((0, _reactNative.findNodeHandle)(instance), realViewName, props);
      };

      _reactNative.Platform.select({
        ios: native,
        android: native,
        default: function _default() {}
      })();
    };

    if (componentOverrides) {
      var _overrides = componentOverrides[version];

      if (_overrides) {
        result = _overrides(nativeComponent, nativeModule);
      }
    }

    return result;
  }

  module.exports = SafeComponentCreate;
},11591,[10033,11585,11579]);
__d(function(global, require, _aUnused, _bUnused, module, exports, _cUnused) {
  module.exports = {
  "v": "5.4.1",
  "fr": 30,
  "ip": 0,
  "op": 98,
  "w": 100,
  "h": 100,
  "nm": "Sleep Anim",
  "ddd": 0,
  "assets": [],
  "layers": [
    {
      "ddd": 0,
      "ind": 1,
      "ty": 4,
      "nm": "形状图层 2",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 0,
              "s": [
                0
              ],
              "e": [
                100
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 12,
              "s": [
                100
              ],
              "e": [
                100
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 48,
              "s": [
                100
              ],
              "e": [
                3
              ]
            },
            {
              "t": 55
            }
          ],
          "ix": 11
        },
        "r": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 0,
              "s": [
                6
              ],
              "e": [
                2
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 12,
              "s": [
                2
              ],
              "e": [
                -0.1
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 30,
              "s": [
                -0.1
              ],
              "e": [
                -5
              ]
            },
            {
              "t": 48
            }
          ],
          "ix": 10
        },
        "p": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 0,
              "s": [
                24.5,
                72.75,
                0
              ],
              "e": [
                44,
                55.75,
                0
              ],
              "to": [
                1.00000008274037e-10,
                -7.0000005791826e-11,
                0
              ],
              "ti": [
                -0.15110523998737,
                0.19916628301144,
                0
              ]
            },
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 12,
              "s": [
                44,
                55.75,
                0
              ],
              "e": [
                52.929,
                44.647,
                0
              ],
              "to": [
                0.5356160402298,
                -0.70597583055496,
                0
              ],
              "ti": [
                -4.09796285629272,
                6.20315933227539,
                0
              ]
            },
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 21,
              "s": [
                52.929,
                44.647,
                0
              ],
              "e": [
                60.406,
                31.422,
                0
              ],
              "to": [
                2.66585993766785,
                -4.03535985946655,
                0
              ],
              "ti": [
                -2.80594372749329,
                3.58238768577576,
                0
              ]
            },
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 30,
              "s": [
                60.406,
                31.422,
                0
              ],
              "e": [
                72.5,
                15.5,
                0
              ],
              "to": [
                8.15500354766846,
                -10.4116067886353,
                0
              ],
              "ti": [
                0,
                0,
                0
              ]
            },
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 52,
              "s": [
                72.5,
                15.5,
                0
              ],
              "e": [
                72.5,
                15.5,
                0
              ],
              "to": [
                0,
                0,
                0
              ],
              "ti": [
                0,
                0,
                0
              ]
            },
            {
              "t": 58
            }
          ],
          "ix": 2
        },
        "a": {
          "a": 0,
          "k": [
            -168,
            -111,
            0
          ],
          "ix": 1
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167"
              ],
              "t": 0,
              "s": [
                46,
                46,
                100
              ],
              "e": [
                100,
                100,
                100
              ]
            },
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167"
              ],
              "t": 12,
              "s": [
                100,
                100,
                100
              ],
              "e": [
                100,
                100,
                100
              ]
            },
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167"
              ],
              "t": 48,
              "s": [
                100,
                100,
                100
              ],
              "e": [
                82,
                82,
                100
              ]
            },
            {
              "t": 58
            }
          ],
          "ix": 6
        }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "o": [
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "v": [
                    [
                      -155.25,
                      -126.25
                    ],
                    [
                      -184,
                      -126.25
                    ],
                    [
                      -184,
                      -119.25
                    ],
                    [
                      -164.75,
                      -119.25
                    ],
                    [
                      -183,
                      -102.25
                    ],
                    [
                      -183,
                      -96.25
                    ],
                    [
                      -154.25,
                      -96.25
                    ],
                    [
                      -154.25,
                      -102.75
                    ],
                    [
                      -172.25,
                      -102.75
                    ],
                    [
                      -155.25,
                      -119.5
                    ]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "路径 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  1,
                  1,
                  1,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "nm": "填充 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "变换"
            }
          ],
          "nm": "形状 1",
          "np": 2,
          "cix": 2,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 78,
      "st": 0,
      "bm": 0
    },
    {
      "ddd": 0,
      "ind": 2,
      "ty": 4,
      "nm": "形状图层 1",
      "sr": 1,
      "ks": {
        "o": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 22,
              "s": [
                0
              ],
              "e": [
                96
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 39,
              "s": [
                96
              ],
              "e": [
                0
              ]
            },
            {
              "t": 78
            }
          ],
          "ix": 11
        },
        "r": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 22,
              "s": [
                -5
              ],
              "e": [
                -0.059
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 32,
              "s": [
                -0.059
              ],
              "e": [
                0
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 39,
              "s": [
                0
              ],
              "e": [
                4
              ]
            },
            {
              "i": {
                "x": [
                  0.833
                ],
                "y": [
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167
                ],
                "y": [
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167"
              ],
              "t": 71,
              "s": [
                4
              ],
              "e": [
                9
              ]
            },
            {
              "t": 81
            }
          ],
          "ix": 10
        },
        "p": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 22,
              "s": [
                22.5,
                87.25,
                0
              ],
              "e": [
                39.544,
                73.397,
                0
              ],
              "to": [
                5.58770807401743e-11,
                -3.91082721762359e-11,
                0
              ],
              "ti": [
                -10.5959806442261,
                8.3418550491333,
                0
              ]
            },
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 32,
              "s": [
                39.544,
                73.397,
                0
              ],
              "e": [
                48,
                67.25,
                0
              ],
              "to": [
                3.46743869781494,
                -2.72979664802551,
                0
              ],
              "ti": [
                0,
                0,
                0
              ]
            },
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 39,
              "s": [
                48,
                67.25,
                0
              ],
              "e": [
                54.43,
                51.336,
                0
              ],
              "to": [
                0,
                0,
                0
              ],
              "ti": [
                0,
                0,
                0
              ]
            },
            {
              "i": {
                "x": 0.833,
                "y": 0.833
              },
              "o": {
                "x": 0.167,
                "y": 0.167
              },
              "n": "0p833_0p833_0p167_0p167",
              "t": 54,
              "s": [
                54.43,
                51.336,
                0
              ],
              "e": [
                62.75,
                43.5,
                0
              ],
              "to": [
                0,
                0,
                0
              ],
              "ti": [
                0,
                0,
                0
              ]
            },
            {
              "t": 71
            }
          ],
          "ix": 2
        },
        "a": {
          "a": 0,
          "k": [
            -168,
            -111,
            0
          ],
          "ix": 1
        },
        "s": {
          "a": 1,
          "k": [
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167"
              ],
              "t": 22,
              "s": [
                39,
                39,
                100
              ],
              "e": [
                69.353,
                69.353,
                100
              ]
            },
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167"
              ],
              "t": 32,
              "s": [
                69.353,
                69.353,
                100
              ],
              "e": [
                77,
                77,
                100
              ]
            },
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167"
              ],
              "t": 39,
              "s": [
                77,
                77,
                100
              ],
              "e": [
                77,
                77,
                100
              ]
            },
            {
              "i": {
                "x": [
                  0.833,
                  0.833,
                  0.833
                ],
                "y": [
                  0.833,
                  0.833,
                  0.833
                ]
              },
              "o": {
                "x": [
                  0.167,
                  0.167,
                  0.167
                ],
                "y": [
                  0.167,
                  0.167,
                  0.167
                ]
              },
              "n": [
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167",
                "0p833_0p833_0p167_0p167"
              ],
              "t": 71,
              "s": [
                77,
                77,
                100
              ],
              "e": [
                66,
                66,
                100
              ]
            },
            {
              "t": 81
            }
          ],
          "ix": 6
        }
      },
      "ao": 0,
      "shapes": [
        {
          "ty": "gr",
          "it": [
            {
              "ind": 0,
              "ty": "sh",
              "ix": 1,
              "ks": {
                "a": 0,
                "k": {
                  "i": [
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "o": [
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ],
                    [
                      0,
                      0
                    ]
                  ],
                  "v": [
                    [
                      -155.25,
                      -126.25
                    ],
                    [
                      -184,
                      -126.25
                    ],
                    [
                      -184,
                      -119.25
                    ],
                    [
                      -164.75,
                      -119.25
                    ],
                    [
                      -183,
                      -102.25
                    ],
                    [
                      -183,
                      -96.25
                    ],
                    [
                      -154.25,
                      -96.25
                    ],
                    [
                      -154.25,
                      -102.75
                    ],
                    [
                      -172.25,
                      -102.75
                    ],
                    [
                      -155.25,
                      -119.5
                    ]
                  ],
                  "c": true
                },
                "ix": 2
              },
              "nm": "路径 1",
              "mn": "ADBE Vector Shape - Group",
              "hd": false
            },
            {
              "ty": "fl",
              "c": {
                "a": 0,
                "k": [
                  1,
                  1,
                  1,
                  1
                ],
                "ix": 4
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 5
              },
              "r": 1,
              "nm": "填充 1",
              "mn": "ADBE Vector Graphic - Fill",
              "hd": false
            },
            {
              "ty": "tr",
              "p": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 2
              },
              "a": {
                "a": 0,
                "k": [
                  0,
                  0
                ],
                "ix": 1
              },
              "s": {
                "a": 0,
                "k": [
                  100,
                  100
                ],
                "ix": 3
              },
              "r": {
                "a": 0,
                "k": 0,
                "ix": 6
              },
              "o": {
                "a": 0,
                "k": 100,
                "ix": 7
              },
              "sk": {
                "a": 0,
                "k": 0,
                "ix": 4
              },
              "sa": {
                "a": 0,
                "k": 0,
                "ix": 5
              },
              "nm": "变换"
            }
          ],
          "nm": "形状 1",
          "np": 2,
          "cix": 2,
          "ix": 1,
          "mn": "ADBE Vector Group",
          "hd": false
        }
      ],
      "ip": 0,
      "op": 98,
      "st": 0,
      "bm": 0
    }
  ],
  "markers": []
};
},11594,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var DEFAULT_WIDTH = 40;
  var START_SCALE = 0.7;

  var WarnAnim = function (_React$Component) {
    (0, _inherits2.default)(WarnAnim, _React$Component);

    function WarnAnim(props) {
      var _this;

      (0, _classCallCheck2.default)(this, WarnAnim);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(WarnAnim).call(this, props));

      _this.doAnim = function () {
        var animValue = _this.state.animValue;

        if (!_this.loop) {
          animValue.stopAnimation();
          return;
        }

        animValue.setValue(START_SCALE);

        _reactNative.Animated.sequence([_reactNative.Animated.timing(animValue, {
          toValue: 1,
          duration: 200,
          useNativeDriver: true
        }), _reactNative.Animated.timing(animValue, {
          toValue: START_SCALE,
          duration: 200,
          useNativeDriver: true
        }), _reactNative.Animated.delay(100)]).start(function () {
          _this.doAnim();
        });
      };

      _this.startAnim = function () {
        _this.loop = true;

        _this.doAnim();
      };

      _this.stopAnim = function () {
        _this.loop = false;
        var animValue = _this.state.animValue;

        if (animValue) {
          animValue.stopAnimation(function () {
            animValue.setValue(1);
          });
        }
      };

      _this.state = {
        animValue: new _reactNative.Animated.Value(START_SCALE)
      };
      return _this;
    }

    (0, _createClass2.default)(WarnAnim, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.startAnim();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnim();
      }
    }, {
      key: "render",
      value: function render() {
        var animValue = this.state.animValue;
        var _this$props = this.props,
            style = _this$props.style,
            _this$props$width = _this$props.width,
            width = _this$props$width === undefined ? DEFAULT_WIDTH : _this$props$width,
            children = _this$props.children;
        return _react.default.createElement(_reactNative.View, {
          style: [{
            width: width,
            height: width,
            justifyContent: 'center',
            alignItems: 'center'
          }, style]
        }, _react.default.createElement(_reactNative.Animated.Image, {
          source: _$$_REQUIRE(_dependencyMap[8]),
          style: {
            width: width,
            height: width,
            borderRadius: width,
            transform: [{
              scale: animValue
            }]
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute'
          }
        }, children));
      }
    }]);
    return WarnAnim;
  }(_react.default.Component);

  exports.default = WarnAnim;
  WarnAnim.DEFAULT_WIDTH = DEFAULT_WIDTH;
},11597,[14305,14320,14323,14371,14377,14386,10297,10033,11600]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 29,
    "height": 29,
    "scales": [2, 3],
    "hash": "1c2e9692ef9d84b142f27ea4a489e5aa",
    "name": "warn_state",
    "type": "png"
  });
},11600,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var DEFAULT_WIDTH = 40;

  var SweepAnim = function (_React$Component) {
    (0, _inherits2.default)(SweepAnim, _React$Component);

    function SweepAnim(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SweepAnim);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SweepAnim).call(this, props));

      _this.doAnim = function () {
        var _this$state = _this.state,
            opacityValue = _this$state.opacityValue,
            scaleValue = _this$state.scaleValue;

        if (!_this.loop) {
          opacityValue.stopAnimation();
          scaleValue.stopAnimation();
          return;
        }

        opacityValue.setValue(0);
        scaleValue.setValue(1);

        _reactNative.Animated.sequence([_reactNative.Animated.timing(opacityValue, {
          toValue: 1,
          duration: 1000,
          useNativeDriver: true
        }), _reactNative.Animated.timing(scaleValue, {
          toValue: 0,
          duration: 500,
          useNativeDriver: true
        })]).start(function () {
          _this.doAnim();
        });
      };

      _this.startAnim = function () {
        _this.loop = true;

        _this.doAnim();
      };

      _this.stopAnim = function () {
        _this.loop = false;
        var _this$state2 = _this.state,
            opacityValue = _this$state2.opacityValue,
            scaleValue = _this$state2.scaleValue;

        if (opacityValue) {
          opacityValue.stopAnimation(function () {
            opacityValue.setValue(1);
          });
        }

        if (scaleValue) {
          opacityValue.stopAnimation(function () {
            opacityValue.setValue(0);
          });
        }
      };

      _this.state = {
        opacityValue: new _reactNative.Animated.Value(0),
        scaleValue: new _reactNative.Animated.Value(1)
      };
      return _this;
    }

    (0, _createClass2.default)(SweepAnim, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.startAnim();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnim();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state3 = this.state,
            scaleValue = _this$state3.scaleValue,
            opacityValue = _this$state3.opacityValue;
        var _this$props = this.props,
            style = _this$props.style,
            _this$props$width = _this$props.width,
            width = _this$props$width === undefined ? DEFAULT_WIDTH : _this$props$width,
            children = _this$props.children;

        var opacity = _reactNative.Animated.multiply(scaleValue, opacityValue);

        return _react.default.createElement(_reactNative.View, {
          style: [{
            width: width,
            height: width,
            justifyContent: 'center',
            alignItems: 'center'
          }, style]
        }, _react.default.createElement(_reactNative.Animated.Image, {
          source: _$$_REQUIRE(_dependencyMap[8]),
          style: {
            opacity: opacity,
            width: width,
            height: width,
            borderRadius: width
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute'
          }
        }, children));
      }
    }]);
    return SweepAnim;
  }(_react.default.Component);

  exports.default = SweepAnim;
  SweepAnim.DEFAULT_WIDTH = DEFAULT_WIDTH;
},11603,[14305,14320,14323,14371,14377,14386,10297,10033,11606]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 29,
    "height": 29,
    "scales": [2, 3],
    "hash": "a2b63af0c62d53a6a0072234bd08c10b",
    "name": "normal_state",
    "type": "png"
  });
},11606,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var DEFAULT_WIDTH = 30;

  var ChargeAnim = function (_React$Component) {
    (0, _inherits2.default)(ChargeAnim, _React$Component);

    function ChargeAnim(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ChargeAnim);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChargeAnim).call(this, props));
      _this.state = {
        animValue: new _reactNative.Animated.Value(0.1)
      };
      return _this;
    }

    (0, _createClass2.default)(ChargeAnim, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var animValue = this.state.animValue;

        _reactNative.Animated.loop(_reactNative.Animated.timing(animValue, {
          toValue: 0.8,
          duration: 1200,
          useNativeDriver: true
        })).start();
      }
    }, {
      key: "render",
      value: function render() {
        var animValue = this.state.animValue;
        var _this$props = this.props,
            style = _this$props.style,
            _this$props$width = _this$props.width,
            width = _this$props$width === undefined ? DEFAULT_WIDTH : _this$props$width,
            children = _this$props.children;
        return _react.default.createElement(_reactNative.View, {
          style: [{
            width: width,
            height: width,
            justifyContent: 'center',
            alignItems: 'center'
          }, style]
        }, _react.default.createElement(_reactNative.Animated.Image, {
          source: _$$_REQUIRE(_dependencyMap[8]),
          style: {
            opacity: animValue,
            width: width,
            height: width,
            borderRadius: width,
            transform: [{
              scale: animValue.interpolate({
                inputRange: [0.1, 0.8],
                outputRange: [0.2, 1]
              })
            }]
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            position: 'absolute'
          }
        }, children));
      }
    }]);
    return ChargeAnim;
  }(_react.default.Component);

  exports.default = ChargeAnim;
  ChargeAnim.DEFAULT_WIDTH = DEFAULT_WIDTH;
},11609,[14305,14320,14323,14371,14377,14386,10297,10033,11612]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 29,
    "height": 29,
    "scales": [2, 3],
    "hash": "b61d14fea41adffffcd3329f7a256ea1",
    "name": "charge_state",
    "type": "png"
  });
},11612,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 21,
    "height": 21,
    "scales": [2, 3],
    "hash": "5fa19914ab9ee8e4fa4b8e972d590e76",
    "name": "ic_machine",
    "type": "png"
  });
},11615,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _jsBase = _$$_REQUIRE(_dependencyMap[2]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _Constant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _DevConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _miot = _$$_REQUIRE(_dependencyMap[8]);

  var NEAR_DISTANCE = 20;
  var UNEXPLORE_THRESHOLD = 3;
  var AREA_GAP = 5;
  var ADJACENCY_THRESHOLD = 2;

  function screenToMapPoint(sx, sy, mapWidth, mapHeight, config) {
    var _ref = config || {},
        _ref$scale = _ref.scale,
        scale = _ref$scale === undefined ? 1.0 : _ref$scale,
        _ref$tx = _ref.tx,
        tx = _ref$tx === undefined ? 0 : _ref$tx,
        _ref$ty = _ref.ty,
        ty = _ref$ty === undefined ? 0 : _ref$ty;

    var x = Math.round((sx - tx) / scale);
    var y = Math.round((sy - ty) / scale);
    return {
      x: x,
      y: mapHeight - y
    };
  }

  function mapToScreenPoint(mx, my, mapWidth, mapHeight, config) {
    var _ref2 = config || {},
        _ref2$scale = _ref2.scale,
        scale = _ref2$scale === undefined ? 1.0 : _ref2$scale,
        _ref2$translate = _ref2.translate,
        translate = _ref2$translate === undefined ? {
      x: 0,
      y: 0
    } : _ref2$translate;

    var tx = translate.x,
        ty = translate.y;
    var x = mx * scale + tx;
    var y = (mapHeight - my) * scale + ty;
    return {
      x: x,
      y: y
    };
  }

  function isSamePoint(p1, p2, horizontal) {
    return horizontal ? p1.x === p2.x || Math.abs(p1.x - p2.x) === 1 : p1.y === p2.y || Math.abs(p1.y - p2.y) === 1;
  }

  function pToIndex(p, width) {
    return Math.round(p.y) * width + Math.round(p.x);
  }

  function isOutRoom(p, width, height) {
    return p.x < 0 || p.x > width || p.y < 0 || p.y > height;
  }

  function isNear(p1, p2) {
    return (p2.y - p1.y) * (p2.y - p1.y) + (p2.x - p1.x) * (p2.x - p1.x) < NEAR_DISTANCE;
  }

  function calEndPoints(map, id, p1, p2, width, height) {
    var x1 = p1.x,
        y1 = p1.y;
    var x2 = p2.x,
        y2 = p2.y;
    var v = {
      x: x2 - x1,
      y: y2 - y1,
      h: true
    };

    if (Math.abs(v.x) > Math.abs(v.y)) {
      v.y /= Math.abs(v.x);
      v.x = v.x > 0 ? 1 : -1;
    } else {
      v.x /= Math.abs(v.y);
      v.y = v.y > 0 ? 1 : -1;
      v.h = false;
    }

    var t1 = [];
    var t2 = [];
    var o1 = {
      x: x1,
      y: y1
    };
    var o2 = {
      x: x2,
      y: y2
    };
    var o1v;
    var o2v;
    var u1 = 0;
    var u2 = 0;

    while (!isSamePoint(o1, o2, v.h)) {
      o1v = +map[pToIndex(o1, width)];
      o2v = +map[pToIndex(o2, width)];

      if (o1v === 0) {
        u1 = 0;

        if (t1.length <= 0 || !isNear(o1, t1.slice(-1)[0])) {
          t1.push({
            x: Math.round(o1.x),
            y: Math.round(o1.y)
          });
        }
      } else if (o1v === 255 || o1v === id) {
        u1 = 0;
      } else if (o1v === 127) {
        u1 += 1;

        if (u1 > UNEXPLORE_THRESHOLD) {
          t1.length = 0;
        }
      } else {
        u1 = 0;
        t1.length = 0;
      }

      if (o2v === 0) {
        u2 = 0;

        if (t2.length <= 0 || !isNear(o2, t2[0])) {
          t2.unshift({
            x: Math.round(o2.x),
            y: Math.round(o2.y)
          });
        }
      } else if (o2v === 255 || o2v === id) {
        u2 = 0;
      } else if (o2v === 127) {
        u2 += 1;

        if (u2 > UNEXPLORE_THRESHOLD) {
          t2.length = 0;
        }
      } else {
        u2 = 0;
        t2.length = 0;
      }

      o1.x += v.x;
      o1.y += v.y;
      o2.x -= v.x;
      o2.y -= v.y;
    }

    o1 = {
      x: x1 - v.x,
      y: y1 - v.y
    };
    o2 = {
      x: x2 + v.x,
      y: y2 + v.y
    };
    u1 = 0;
    u2 = 0;
    var o1o = isOutRoom(o1, width, height);
    var o2o = isOutRoom(o2, width, height);

    while (!o1o || !o2o) {
      if (!o1o) {
        o1v = +map[pToIndex(o1, width)];

        if (o1v === id || o1v === 255) {
          u1 = 0;
        } else if (o1v === 0) {
          u1 = 0;
          if (t1.length <= 0 || !isNear(t1[0], o1)) t1.unshift({
            x: o1.x,
            y: o1.y
          });
        } else if (o1v === 127) {
          u1 += 1;

          if (u1 > UNEXPLORE_THRESHOLD) {
            o1o = true;
          }
        } else {
          o1o = true;
        }

        o1.x -= v.x;
        o1.y -= v.y;
        o1o = o1o || isOutRoom(o1, width, height);
      }

      if (!o2o) {
        o2v = +map[pToIndex(o2, width)];

        if (o2v === id || o2v === 255) {
          u2 = 0;
        } else if (o2v === 0) {
          u2 = 0;
          if (t2.length <= 0 || !isNear(t2.slice(-1)[0], o2)) t2.push({
            x: o2.x,
            y: o2.y
          });
        } else if (o2v === 127) {
          u2 += 1;

          if (u2 > UNEXPLORE_THRESHOLD) {
            o2o = true;
          }
        } else {
          o2o = true;
        }

        o2.x += v.x;
        o2.y += v.y;
        o2o = o2o || isOutRoom(o2, width, height);
      }
    }

    if (t1.length + t2.length < 2) {
      return null;
    }

    if (t1.length === 0) {
      return [t2[0], t2.slice(-1)[0]];
    }

    if (t2.length === 0) {
      return [t1[0], t1.slice(-1)[0]];
    }

    return [t1[0], t2.slice(-1)[0]];
  }

  function calEndPointsEx(map, id, p1, p2, width, height) {
    var x1 = p1.x,
        y1 = p1.y;
    var x2 = p2.x,
        y2 = p2.y;
    var v = {
      x: x2 - x1,
      y: y2 - y1,
      h: true
    };

    if (Math.abs(v.x) > Math.abs(v.y)) {
      v.y /= Math.abs(v.x);
      v.x = v.x > 0 ? 1 : -1;
    } else {
      v.x /= Math.abs(v.y);
      v.y = v.y > 0 ? 1 : -1;
      v.h = false;
    }

    var center = {
      x: Math.round((x2 + x1) / 2),
      y: Math.round((y2 + y1) / 2)
    };
    var t = [];
    var o1 = {
      x: center.x - v.x,
      y: center.y - v.y
    };
    var o2 = {
      x: center.x + v.x,
      y: center.y + v.y
    };
    var o1v;
    var o2v;
    var last1 = +map[pToIndex(center, width)];
    var last2 = last1;
    var last;
    var o1o = isOutRoom(o1, width, height);
    var o2o = isOutRoom(o2, width, height);

    while ((!o1o || !o2o) && t.length < 2) {
      if (!o1o) {
        o1v = +map[pToIndex(o1, width)];

        if (o1v === id && last1 !== id && last1 !== 255) {
          if (t.length <= 0 || !isNear(o1, t.slice(-1)[0])) {
            t.unshift({
              x: Math.round(o1.x),
              y: Math.round(o1.y)
            });

            if (t.length >= 2) {
              break;
            }
          }
        } else if (o1v !== id && o1v !== 255 && last1 === id) {
          last = {
            x: Math.round(o1.x + v.x),
            y: Math.round(o1.y + v.y)
          };

          if (t.length <= 0 || !isNear(last, t.slice(-1)[0])) {
            t.unshift({
              x: last.x,
              y: last.y
            });

            if (t.length >= 2) {
              break;
            }
          }
        } else if (o1v > 0 && o1v < 64 && o1v !== id) {
          o1o = true;
        }

        last1 = o1v;
        o1.x -= v.x;
        o1.y -= v.y;
        o1o = o1o || isOutRoom(o1, width, height);
      }

      if (!o2o) {
        o2v = +map[pToIndex(o2, width)];

        if (o2v === id && last2 !== id && last2 !== 255) {
          if (t.length <= 0 || !isNear(o2, t.slice(-1)[0])) {
            t.push({
              x: Math.round(o2.x),
              y: Math.round(o2.y)
            });

            if (t.length >= 2) {
              break;
            }
          }
        } else if (o2v !== id && o2v !== 255 && last2 === id) {
          last = {
            x: Math.round(o2.x + v.x),
            y: Math.round(o2.y + v.y)
          };

          if (t.length <= 0 || !isNear(last, t.slice(-1)[0])) {
            t.push({
              x: last.x,
              y: last.y
            });

            if (t.length >= 2) {
              break;
            }
          }
        } else if (o2v > 0 && o2v < 64 && o2v !== id) {
          o2o = true;
        }

        last2 = o2v;
        o2.x += v.x;
        o2.y += v.y;
        o2o = o2o || isOutRoom(o2, width, height);
      }
    }

    if (t.length < 2) {
      return null;
    }

    return t;
  }

  function isAreaValue(value) {
    return value > 0 && value < 127;
  }

  function parseMapList(res) {
    if (!res || typeof res !== 'string') {
      return null;
    }

    try {
      var mapList = JSON.parse(res);
      var cuid = _Service.default.account.ID;
      var oid = _miot.Device.owner.ID;
      var list = mapList.bkmap_list.map(function (item) {
        var mapid = item.mapid,
            record_obj_name = item.record_obj_name,
            map_index = item.map_index,
            bkmap_obj_name = item.bkmap_obj_name,
            map_name = item.map_name,
            uid = item.uid;

        if (uid === undefined || uid === cuid || uid === oid) {
          return {
            mapid: mapid,
            record_obj_name: record_obj_name,
            map_index: map_index,
            bkmap_obj_name: bkmap_obj_name,
            map_name: map_name,
            uid: uid
          };
        }

        return null;
      }).filter(function (item) {
        return item !== null;
      });
      return list;
    } catch (err) {
      _logger.default.info("parse map list fail, " + JSON.stringify(err));

      return null;
    }
  }

  function updateAdjacencyMapCount(adjacencyMapCount, v, ov) {
    if (ov !== v && isAreaValue(ov) && isAreaValue(v)) {
      if (!adjacencyMapCount[v]) {
        adjacencyMapCount[v] = {};
      }

      if (!adjacencyMapCount[v][ov]) {
        adjacencyMapCount[v][ov] = 0;
      }

      adjacencyMapCount[v][ov] += 1;

      if (!adjacencyMapCount[ov]) {
        adjacencyMapCount[ov] = {};
      }

      if (!adjacencyMapCount[ov][v]) {
        adjacencyMapCount[ov][v] = 0;
      }

      adjacencyMapCount[ov][v] += 1;
    }
  }

  function calcAdjacencyArea(mapMatrix, width, height) {
    var adjacencyMap = {};
    var adjacencyMapCount = {};
    var v, ov;

    for (var i = 5; i < height; i += 5) {
      for (var j = 5; j < width; j += 5) {
        v = +mapMatrix[i * width + j];

        if (isAreaValue(v)) {
          if (!adjacencyMapCount[v]) {
            adjacencyMapCount[v] = {};
          }

          for (var k = i - AREA_GAP, count = 0; k >= 0 && count < 2; k -= AREA_GAP, count += 1) {
            ov = +mapMatrix[k * width + j];

            if (isAreaValue(ov)) {
              updateAdjacencyMapCount(adjacencyMapCount, v, ov);
              break;
            }
          }

          for (var m = j - AREA_GAP, _count = 0; m >= 0 && _count < 2; m -= AREA_GAP, _count += 1) {
            ov = +mapMatrix[i * width + m];

            if (isAreaValue(ov)) {
              updateAdjacencyMapCount(adjacencyMapCount, v, ov);
              break;
            }
          }
        }
      }

      Object.keys(adjacencyMapCount).forEach(function (key) {
        if (!adjacencyMap[key]) {
          adjacencyMap[key] = [];
        }

        var vmap = adjacencyMapCount[key];
        Object.keys(vmap).forEach(function (vk) {
          if (vmap[vk] >= ADJACENCY_THRESHOLD && adjacencyMap[key].indexOf(vk) < 0) {
            adjacencyMap[key].push(vk);
          }
        });
      });
    }

    _logger.default.info("adjacencyMapCount: " + JSON.stringify(adjacencyMapCount) + "\nadjacencyMap: " + JSON.stringify(adjacencyMap));

    return adjacencyMap;
  }

  function calcColorMap(adjacencyMap, colorSize) {
    var colorMap = {};
    var areas = Object.keys(adjacencyMap).sort(function (a, b) {
      var v = adjacencyMap[b].length - adjacencyMap[a].length;
      return v !== 0 ? v : +a - +b;
    });
    var colorArr = new Array(colorSize);
    var colorStart = -1;

    for (var i = 0; i < areas.length; i++) {
      var area = areas[i];

      if (!colorMap[area]) {
        colorArr.fill(0, 0, colorSize);
        adjacencyMap[area].forEach(function (v) {
          if (colorMap[v]) {
            colorArr[+colorMap[v] - 1] = 1;
          }
        });

        var _colorIndex = colorArr.findIndex(function (v, index) {
          return index > colorStart && v === 0;
        });

        if (_colorIndex >= 0) {
          colorMap[area] = _colorIndex + 1;
          colorStart = -1;
        } else {
          colorStart = colorMap[area[i - 1]];
          colorMap[area[i - 1]] = 0;
          i -= 2;

          _logger.default.info("i = " + (i + 2) + " rollback to " + i);
        }
      }
    }

    var usedColor = {};
    var colorIndex;
    areas.forEach(function (a) {
      colorIndex = colorMap[a];

      if (!usedColor[colorIndex]) {
        usedColor[colorIndex] = [];
      }

      usedColor[colorIndex].push(a);
    });
    var usedColorArr = Object.keys(usedColor).sort(function (l, r) {
      return usedColor[r].length - usedColor[l].length;
    });
    var remainColor = colorSize - usedColorArr.length;

    if (remainColor > 0) {
      for (var _i = 0; _i < usedColorArr.length && remainColor > 0; _i++) {
        var ua = usedColor[usedColorArr[_i]];

        if (ua.length >= 2) {
          for (var j = 1; j < ua.length; j += 2) {
            colorMap[ua[j]] = colorSize - remainColor + 1;
          }

          remainColor -= 1;
        }
      }
    }

    return colorMap;
  }

  function calcAreaCenter(mapMatrix, width, height, ratio) {
    var mapCenter = {};
    var pointCount = {};
    var v;

    for (var i = 0, len = mapMatrix.length; i < len; i++) {
      v = +mapMatrix[i];

      if (v > 0 && v < 127) {
        if (mapCenter[v] === undefined) {
          mapCenter[v] = [0, 0];
        }

        if (pointCount[v] === undefined) {
          pointCount[v] = 0;
        }

        mapCenter[v][0] += i % width * ratio;
        mapCenter[v][1] += (height - i / width) * ratio;
        pointCount[v] += 1;
      }
    }

    var center = Object.keys(mapCenter).reduce(function (res, k) {
      res[k] = [mapCenter[k][0] / pointCount[k], mapCenter[k][1] / pointCount[k]];
      return res;
    }, {});
    return center;
  }

  function calcAreaId(map, x, y, width, height, ratio) {
    var p = screenToMapPoint(x, y, width, height, {
      scale: ratio
    });
    var index = pToIndex(p, width);
    var v = +map[index];

    if (v && v < 127) {
      return v;
    }

    var GAP = 2;
    var xMin = Math.max(0, p.x - GAP);
    var xMax = Math.min(width - 1, p.x + GAP);
    var yMin = Math.max(0, p.y - GAP);
    var yMax = Math.min(height - 1, p.y + GAP);

    for (var my = yMin; my <= yMax; my += 1) {
      for (var mx = xMin; mx <= xMax; mx += 1) {
        index = pToIndex({
          x: mx,
          y: my
        }, width);
        v = +map[index];

        if (v && v < 127) {
          return v;
        }
      }
    }

    return -1;
  }

  function calcMapColor(colorMap) {
    var selectArea = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var colors = Object.keys(colorMap).reduce(function (res, cur) {
      res[cur] = _Constant.default.mapColor[+colorMap[cur]];
      return res;
    }, {});
    var selectColors = selectArea.reduce(function (res, cur) {
      res[cur] = _Constant.default.selectColor[+colorMap[cur]];
      return res;
    }, {});
    return (0, _extends2.default)({}, _Constant.default.mapColor, colors, selectColors);
  }

  function getMapColor(areaIds) {
    var selectArea = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var selectColors = {};
    var colors = Object.keys(areaIds).reduce(function (res, cur) {
      var c = +cur;

      if (c === 0 || c === 127 || c === 255) {
        res[c] = _Constant.default.mapColor[c];
      } else {
        res[c] = _Constant.default.mapColor[c % _Constant.default.COLOR_COUNT + 1];
      }

      return res;
    }, {});
    selectArea.forEach(function (id) {
      var i = +id;

      if (i !== 0 && i !== 127 && i !== 255) {
        selectColors[id] = _Constant.default.selectColor[id % _Constant.default.COLOR_COUNT + 1];
      }
    });
    return (0, _extends2.default)({}, colors, selectColors);
  }

  function toDeg(rad) {
    return rad * 180 / Math.PI;
  }

  function toRadian(angle) {
    return angle * (Math.PI / 180);
  }

  function calcRatio(viewWidth, viewHeight, mapWidth, mapHeight) {
    var oldRatio = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1.0;
    var wRatio = viewWidth / mapWidth;
    var hRatio = viewHeight / mapHeight;
    var ratio = Math.min(wRatio, hRatio);

    if (ratio < 2) {
      ratio = Math.round(ratio * 10) / 10;

      if (Math.abs(ratio - oldRatio) <= 0.1) {
        ratio = oldRatio;
      }
    } else {
      ratio = 2;
    }

    if (ratio <= 0) {
      ratio = 0.1;
    }

    return ratio;
  }

  function isNoMap(width, height) {
    return !width || !height || width < 20 || height < 20;
  }

  function deviceToScreen(x, y, height, xMin, yMin, resolution, ratio) {
    var sx = (x / 1000 - xMin) / resolution;
    var sy = (y / 1000 - yMin) / resolution;
    return {
      x: sx * ratio,
      y: (height - sy) * ratio
    };
  }

  function screenToDevice(sx, sy, height, xMin, yMin, resolution, ratio) {
    var x = (sx / ratio * resolution + xMin) * 1000;
    var y = ((height - sy / ratio) * resolution + yMin) * 1000;
    return {
      x: Math.round(x),
      y: Math.round(y)
    };
  }

  function isTransitionPath(position) {
    if (position && position.length === 2) {
      var x = position[0] % 4;
      var y = position[1] % 4;

      if (x < 0) {
        x += 4;
      }

      if (y < 0) {
        y += 4;
      }

      return x === 0 && y === 3 || x === 1 && y === 0 || x === 0 && y === 1;
    }

    return true;
  }

  function isAlongWallPath(position) {
    if (position && position.length === 2) {
      return (position[0] - 1) % 4 === 0 && (position[1] - 1) % 4 === 0;
    }

    return false;
  }

  function tooNearPath(posA, posB, ratio) {
    var x = posA.x,
        y = posA.y;
    var x1 = posB.x,
        y1 = posB.y;
    var distance = ((x1 - x) * (x1 - x) + (y1 - y) * (y1 - y)) / (ratio * ratio);
    return distance < 100;
  }

  function calcPath(pathArray, mapConfig, ratio) {
    var append = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    var width = mapConfig.width,
        height = mapConfig.height,
        xMin = mapConfig.xMin,
        yMin = mapConfig.yMin,
        resolution = mapConfig.resolution;
    var noMap = isNoMap(width, height);
    var res = [];
    var position;

    if (noMap || !pathArray || pathArray.length < 2) {
      return '';
    }

    var lastSkip = false;
    var skipPos = null;

    var showTransitionPath = _DevConfig.default.getConfig('showTransitionPath');

    var connectPath = _DevConfig.default.getConfig('connectPath');

    for (var i = 0; i < pathArray.length; i++) {
      position = pathArray[i];

      if (!isTransitionPath(position) || showTransitionPath) {
        var pos = deviceToScreen(position[0], position[1], height, xMin, yMin, resolution, ratio);

        if (res.length === 0 && !append || lastSkip) {
          if (connectPath && res.length > 0 && lastSkip && skipPos && tooNearPath(skipPos, pos, ratio)) {
            res.push("L" + pos.x + " " + pos.y);
          } else {
            res.push("M" + pos.x + " " + pos.y);
          }

          lastSkip = false;
          skipPos = null;
        } else {
          res.push("L" + pos.x + " " + pos.y);
          lastSkip = false;
          skipPos = null;
        }
      } else {
        if (!lastSkip) {
          skipPos = deviceToScreen(position[0], position[1], height, xMin, yMin, resolution, ratio);
        }

        lastSkip = true;
      }
    }

    return res.join(' ');
  }

  function calcPathEndPos(mapPath, mapConfig, ratio) {
    if (!mapPath || mapPath.length < 1) {
      return {};
    }

    var _ref3 = mapConfig || {},
        width = _ref3.width,
        height = _ref3.height;

    if (isNoMap(width, height)) {
      return {};
    }

    var last = mapPath[mapPath.length - 1];
    var xMin = mapConfig.xMin,
        yMin = mapConfig.yMin,
        resolution = mapConfig.resolution;
    var pos = deviceToScreen(last[0], last[1], height, xMin, yMin, resolution, ratio);
    return pos;
  }

  function calcZones(area, mapConfig, ratio) {
    var _mapConfig$height = mapConfig.height,
        height = _mapConfig$height === undefined ? 0 : _mapConfig$height,
        _mapConfig$resolution = mapConfig.resolution,
        resolution = _mapConfig$resolution === undefined ? 0 : _mapConfig$resolution,
        _mapConfig$xMin = mapConfig.xMin,
        xMin = _mapConfig$xMin === undefined ? 0 : _mapConfig$xMin,
        _mapConfig$yMin = mapConfig.yMin,
        yMin = _mapConfig$yMin === undefined ? 0 : _mapConfig$yMin;
    var forbidArray = [];
    var zoneArray = [];
    var spotArray = [];

    if (height && area && area.length !== 0) {
      for (var i = 0; i < area.length; i++) {
        var value = area[i];
        var pointArray = [];

        for (var j = 0; j < value.vertexs.length; j++) {
          var _deviceToScreen = deviceToScreen(value.vertexs[j][0], value.vertexs[j][1], height, xMin, yMin, resolution, ratio),
              x = _deviceToScreen.x,
              y = _deviceToScreen.y;

          pointArray.push([x, y]);
        }

        if (value.active === 'forbid') {
          var forbidData = {
            forbidType: value.forbidType,
            vertexs: pointArray,
            tag: value.tag
          };
          forbidArray.push(forbidData);
        } else if (value.mode === 'point') {
          spotArray = pointArray;
        } else {
          var areaZone = {
            "active": value.active,
            'vertexs': pointArray
          };
          zoneArray.push(areaZone);
        }
      }
    }

    return {
      spotArray: spotArray,
      zoneArray: zoneArray,
      forbidArray: forbidArray
    };
  }

  function calcDockPos(mapConfig) {
    var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

    var _ref4 = mapConfig || {},
        chargeHandlePos = _ref4.chargeHandlePos,
        chargeHandlePhi = _ref4.chargeHandlePhi,
        resolution = _ref4.resolution,
        xMin = _ref4.xMin,
        yMin = _ref4.yMin,
        height = _ref4.height;

    if (!chargeHandlePhi || !chargeHandlePos || !mapConfig) {
      return {};
    }

    var angle = 180 - parseInt(toDeg(chargeHandlePhi / 1000), 10);

    var _deviceToScreen2 = deviceToScreen(chargeHandlePos[0], chargeHandlePos[1], height, xMin, yMin, resolution, ratio),
        x = _deviceToScreen2.x,
        y = _deviceToScreen2.y;

    return {
      x: x,
      y: y,
      angle: angle
    };
  }

  function calcMachinePos(mapConfig) {
    var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

    var _ref5 = mapConfig || {},
        posX = _ref5.posX,
        posY = _ref5.posY,
        resolution = _ref5.resolution,
        xMin = _ref5.xMin,
        yMin = _ref5.yMin,
        height = _ref5.height,
        _ref5$reliable = _ref5.reliable,
        reliable = _ref5$reliable === undefined ? 1 : _ref5$reliable;

    if (!posX || !posY || !mapConfig || reliable !== 1) {
      return {};
    }

    var _deviceToScreen3 = deviceToScreen(posX, posY, height, xMin, yMin, resolution, ratio),
        x = _deviceToScreen3.x,
        y = _deviceToScreen3.y;

    return {
      machineLeft: x,
      machineTop: y
    };
  }

  function pointIsInside(x1, y1, x2, y2, x3, y3, x4, y4, x, y) {
    var a = (x2 - x1) * (y - y1) - (y2 - y1) * (x - x1);
    var b = (x3 - x2) * (y - y2) - (y3 - y2) * (x - x2);
    var c = (x4 - x3) * (y - y3) - (y4 - y3) * (x - x3);
    var d = (x1 - x4) * (y - y4) - (y1 - y4) * (x - x4);
    return a > 0 && b > 0 && c > 0 && d > 0 || a < 0 && b < 0 && c < 0 && d < 0;
  }

  var _default = {
    screenToMapPoint: screenToMapPoint,
    mapToScreenPoint: mapToScreenPoint,
    pointToIndex: pToIndex,
    calEndPoints: calEndPoints,
    calcAreaCenter: calcAreaCenter,
    calcAdjacencyArea: calcAdjacencyArea,
    calcColorMap: calcColorMap,
    calcMapColor: calcMapColor,
    getMapColor: getMapColor,
    calcDockPos: calcDockPos,
    calcAreaId: calcAreaId,
    calcRatio: calcRatio,
    calcPath: calcPath,
    calcPathEndPos: calcPathEndPos,
    calEndPointsEx: calEndPointsEx,
    deviceToScreen: deviceToScreen,
    screenToDevice: screenToDevice,
    calcMachinePos: calcMachinePos,
    toRadian: toRadian,
    calcZones: calcZones,
    pointIsInside: pointIsInside,
    isAlongWallPath: isAlongWallPath,
    parseMapList: parseMapList
  };
  exports.default = _default;
},11618,[14305,14344,11552,10100,10016,11621,11624,10062,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Constant = function Constant() {
    (0, _classCallCheck2.default)(this, Constant);
  };

  exports.default = Constant;
  Constant.color = '{"0":"#666666","127":"#00FFFFFF","255":"#C6D8FA","1":"#91B5F6","2":"#EFC95C","3":"#F29F6F","4":"#81CDE1","5":"#91B5F6","6":"#EFC95C","7":"#F29F6F","8":"#81CDE1"}';
  Constant.COLOR_COUNT = 4;
  Constant.bubleColor = {
    1: '#89B5FC',
    2: '#F5C942',
    3: '#FF9B65',
    4: '#67CFE5',
    5: '#9982E4'
  };
  Constant.mapColor = {
    0: '#FF666666',
    1: '#FF89B5FC',
    2: '#FFF5C942',
    3: '#FFFF9B65',
    4: '#FF67CFE5',
    5: '#FF9982E4',
    127: '#00FFFFFF',
    255: '#FFC6D8FA'
  };
  Constant.selectColor = {
    1: '#FF6F97D9',
    2: '#FFD0AB38',
    3: '#FFD98355',
    4: '#FF57B0C2',
    5: '#FF826EC2'
  };
},11621,[14305,14320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var isOnline = true;
  var whiteList = ["99011545", "1015637798"];
  var config = {
    fillMap: false,
    showTransitionPath: false,
    connectPath: false,
    showOriginPath: false
  };

  function isWhiteList() {
    var uid = _miot.Service.account.ID;
    {
      return false;
    }
    var showDev = whiteList.findIndex(function (u) {
      return uid === u;
    }) >= 0;
    return showDev;
  }

  function updateConfig(cfg) {
    (0, _extends2.default)(config, cfg);
  }

  function getConfig(name) {
    return false;
  }

  var _default = {
    isWhiteList: isWhiteList,
    updateConfig: updateConfig,
    getConfig: getConfig
  };
  exports.default = _default;
},11624,[14305,14344,10074]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _mobx = _$$_REQUIRE(_dependencyMap[3]);

  var MapStore = function () {
    function MapStore() {
      (0, _classCallCheck2.default)(this, MapStore);
      this.currentMapId = '';
    }

    (0, _createClass2.default)(MapStore, [{
      key: "reset",
      value: function reset() {
        this.currentMapId = '';
      }
    }, {
      key: "updateCurrent",
      value: function updateCurrent(currentId) {
        if (currentId) {
          this.currentMapId = currentId;
        }
      }
    }]);
    return MapStore;
  }();

  (0, _mobx.decorate)(MapStore, {
    currentMapId: _mobx.observable,
    reset: _mobx.action,
    updateCurrent: _mobx.action
  });
  var mapStore = new MapStore();
  mapStore.reset();
  var _default = mapStore;
  exports.default = _default;
},11627,[14305,14320,14323,10007]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _CenterBubble = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Constant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ObjectUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[12]);

  var _CustomBubble = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var RoomNameView = function (_React$Component) {
    (0, _inherits2.default)(RoomNameView, _React$Component);

    function RoomNameView() {
      (0, _classCallCheck2.default)(this, RoomNameView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RoomNameView).apply(this, arguments));
    }

    (0, _createClass2.default)(RoomNameView, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        var _this$props = this.props,
            _this$props$areaCente = _this$props.areaCenter,
            areaCenter = _this$props$areaCente === undefined ? {} : _this$props$areaCente,
            _this$props$autoAreaV = _this$props.autoAreaValue,
            autoAreaValue = _this$props$autoAreaV === undefined ? [] : _this$props$autoAreaV,
            _this$props$selectAre = _this$props.selectAreaArray,
            selectAreaArray = _this$props$selectAre === undefined ? [] : _this$props$selectAre,
            iscustomSwitch = _this$props.iscustomSwitch;
        var _nextProps$areaCenter = nextProps.areaCenter,
            center = _nextProps$areaCenter === undefined ? {} : _nextProps$areaCenter,
            _nextProps$autoAreaVa = nextProps.autoAreaValue,
            value = _nextProps$autoAreaVa === undefined ? [] : _nextProps$autoAreaVa,
            _nextProps$selectArea = nextProps.selectAreaArray,
            select = _nextProps$selectArea === undefined ? [] : _nextProps$selectArea,
            iss = nextProps.iscustomSwitch;

        if (iscustomSwitch !== iss) {
          return true;
        }

        if (!_ObjectUtils.default.deepEqual(center, areaCenter)) {
          return true;
        }

        if (selectAreaArray.length !== select.length || autoAreaValue.length !== value.length) {
          return true;
        }

        var aavc = autoAreaValue.reduce(function (res, v) {
          var id = v.id,
              name = v.name,
              CleanCount = v.CleanCount,
              fanLevel = v.fanLevel,
              waterPump = v.waterPump;
          res[id] = {
            "name": name,
            "CleanCount": CleanCount,
            "fanLevel": fanLevel,
            "waterPump": waterPump
          };
          return res;
        }, {});
        var same = true;

        for (var i = 0; i < value.length; i++) {
          var _value$i = value[i],
              id = _value$i.id,
              name = _value$i.name,
              CleanCount = _value$i.CleanCount,
              fanLevel = _value$i.fanLevel,
              waterPump = _value$i.waterPump;
          var areaMes = aavc[id];

          if (!aavc[id] || areaMes["name"] !== name || areaMes["CleanCount"] !== CleanCount || areaMes["fanLevel"] !== fanLevel || areaMes["waterPump"] !== waterPump) {
            same = false;
            break;
          }
        }

        return !same;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            _this$props2$areaCent = _this$props2.areaCenter,
            areaCenter = _this$props2$areaCent === undefined ? {} : _this$props2$areaCent,
            _this$props2$autoArea = _this$props2.autoAreaValue,
            autoAreaValue = _this$props2$autoArea === undefined ? [] : _this$props2$autoArea,
            _this$props2$selectAr = _this$props2.selectAreaArray,
            selectAreaArray = _this$props2$selectAr === undefined ? [] : _this$props2$selectAr,
            colorMap = _this$props2.colorMap,
            iscustomSwitch = _this$props2.iscustomSwitch,
            _this$props2$showInde = _this$props2.showIndex,
            showIndex = _this$props2$showInde === undefined ? false : _this$props2$showInde;

        if (autoAreaValue.length > 0 && Object.keys(areaCenter).length > 0) {
          var views = autoAreaValue.map(function (area, index) {
            var name = area.name,
                id = area.id,
                fanLevel = area.fanLevel,
                waterPump = area.waterPump,
                CleanCount = area.CleanCount;
            var idn = +id;
            var axis = areaCenter[id];

            if (!axis || axis.length < 2) {
              _logger.default.info("id: " + id + ", not in area center, " + JSON.stringify(areaCenter));

              return null;
            }

            var view = null;
            var strArr = [];
            var n = 6;

            for (var i = 0, l = name.length; i < l / n; i++) {
              var a = name.slice(n * i, n * (i + 1));
              strArr.push(a);
            }

            if (selectAreaArray.indexOf(idn) >= 0) {
              var _i = +id;

              var color = _Constant.default.bubleColor[colorMap[_i]];
              view = _react.default.createElement(_CenterBubble.default, {
                pointerEvents: "none",
                key: id,
                showIndex: showIndex,
                color: color,
                fanLevel: fanLevel,
                waterPump: waterPump,
                CleanCount: CleanCount,
                iscustomSwitch: iscustomSwitch,
                keyIndex: selectAreaArray.indexOf(idn) + 1,
                center: {
                  x: axis[0],
                  y: axis[1]
                },
                roomName: name
              });
            } else {
              var len = name.length * 16;
              var w = "" + len;
              var x = "" + len / 2;
              view = _react.default.createElement(_reactNative.View, {
                key: id,
                pointerEvents: "none",
                style: {
                  width: len,
                  zIndex: 99,
                  position: 'absolute',
                  justifyContent: 'center',
                  alignItems: 'center',
                  left: axis[0] - len / 2,
                  top: axis[1] - 8
                }
              }, _react.default.createElement(_reactNativeSvg.Svg, {
                width: w,
                height: "32"
              }, _react.default.createElement(_reactNativeSvg.Text, {
                stroke: "#ffffff",
                strokeWidth: "1",
                strokeLinecap: "round",
                fill: "#ffffff",
                x: x,
                y: "11",
                textAnchor: "middle",
                fontWeight: "bold",
                fontSize: "13"
              }, strArr.map(function (item, index) {
                return _react.default.createElement(_reactNativeSvg.TSpan, {
                  key: index,
                  dy: index > 0 ? '15' : '0',
                  dx: index > 0 ? -(item.length * 10) : '0'
                }, item);
              })), _react.default.createElement(_reactNativeSvg.Text, {
                fill: "#333333",
                x: x,
                y: "11",
                textAnchor: "middle",
                fontSize: "13"
              }, strArr.map(function (item, index) {
                return _react.default.createElement(_reactNativeSvg.TSpan, {
                  key: index,
                  dy: index > 0 ? '15' : '0',
                  dx: index > 0 ? -(item.length * 10) : '0'
                }, item);
              }))), (waterPump || fanLevel) && iscustomSwitch ? _react.default.createElement(_CustomBubble.default, {
                fanLevel: fanLevel,
                waterPump: waterPump,
                CleanCount: CleanCount
              }) : null);
            }

            return view;
          });
          return _react.default.createElement(_react.default.Fragment, null, views);
        }

        return null;
      }
    }]);
    return RoomNameView;
  }(_react.default.Component);

  exports.default = RoomNameView;
},11630,[14305,14320,14323,14371,14377,14386,10297,10033,10100,11633,11621,11669,11485,11639]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Bubble = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var CenterBubble = function (_React$Component) {
    (0, _inherits2.default)(CenterBubble, _React$Component);

    function CenterBubble(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CenterBubble);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CenterBubble).call(this, props));

      _this._calcXOffset = function () {
        var _this$props$roomName = _this.props.roomName,
            roomName = _this$props$roomName === undefined ? '' : _this$props$roomName;
        return (roomName.length * 12 + 18 + 12) / 2;
      };

      return _this;
    }

    (0, _createClass2.default)(CenterBubble, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        var roomName = nextProps.roomName,
            color = nextProps.color,
            _nextProps$center = nextProps.center,
            center = _nextProps$center === undefined ? {} : _nextProps$center,
            _nextProps$keyIndex = nextProps.keyIndex,
            keyIndex = _nextProps$keyIndex === undefined ? false : _nextProps$keyIndex,
            iss = nextProps.iscustomSwitch;
        var _this$props = this.props,
            r = _this$props.roomName,
            c = _this$props.color,
            _this$props$center = _this$props.center,
            ct = _this$props$center === undefined ? {} : _this$props$center,
            ki = _this$props.keyIndex,
            showIndex = _this$props.showIndex,
            iscustomSwitch = _this$props.iscustomSwitch;

        if (iscustomSwitch !== iss) {
          return true;
        }

        if (keyIndex != ki && showIndex == false) {
          return true;
        }

        return roomName !== r && color !== c && ct.x !== center.x && ct.y !== center.y;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            center = _this$props2.center,
            roomName = _this$props2.roomName,
            _this$props2$color = _this$props2.color,
            color = _this$props2$color === undefined ? '#83B2FF' : _this$props2$color,
            keyIndex = _this$props2.keyIndex,
            name = _this$props2.name,
            _this$props2$showInde = _this$props2.showIndex,
            showIndex = _this$props2$showInde === undefined ? false : _this$props2$showInde,
            other = (0, _objectWithoutProperties2.default)(_this$props2, ["center", "roomName", "color", "keyIndex", "name", "showIndex"]);

        var xOffset = this._calcXOffset();

        return _react.default.createElement(_Bubble.default, (0, _extends2.default)({}, other, {
          onLayout: this.handleLayout,
          style: {
            left: center.x - xOffset,
            top: center.y - 15,
            zIndex: 100
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            width: 18,
            height: 18
          }
        }, !showIndex ? _react.default.createElement(_reactNative.View, {
          style: {
            width: 18,
            justifyContent: 'center',
            alignItems: 'center',
            height: 18,
            borderRadius: 18,
            backgroundColor: color
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#fff',
            fontSize: 12
          }
        }, keyIndex)) : _react.default.createElement(_reactNative.View, {
          style: {
            width: 18,
            justifyContent: 'center',
            alignItems: 'center',
            height: 18,
            borderRadius: 18,
            backgroundColor: color
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            position: 'absolute',
            width: 18,
            height: 18
          },
          source: _$$_REQUIRE(_dependencyMap[11])
        }))), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12,
            color: '#333333',
            textAlign: 'center',
            marginHorizontal: 5
          }
        }, roomName));
      }
    }]);
    return CenterBubble;
  }(_react.default.Component);

  exports.default = CenterBubble;
},11633,[14305,14344,14407,14320,14323,14371,14377,14386,10297,10033,11636,11666]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _CustomBubble = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var Bubble = function (_React$Component) {
    (0, _inherits2.default)(Bubble, _React$Component);

    function Bubble(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Bubble);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Bubble).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(Bubble, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            style = _this$props.style,
            contentStyle = _this$props.contentStyle,
            fanLevel = _this$props.fanLevel,
            waterPump = _this$props.waterPump,
            CleanCount = _this$props.CleanCount,
            iscustomSwitch = _this$props.iscustomSwitch,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["children", "style", "contentStyle", "fanLevel", "waterPump", "CleanCount", "iscustomSwitch"]);
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, style]
        }, other), _react.default.createElement(_reactNative.View, {
          style: [styles.circle]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.content, contentStyle]
        }, children)), _react.default.createElement(_reactNative.Image, {
          width: 8,
          height: 5,
          style: styles.arrow,
          source: _$$_REQUIRE(_dependencyMap[11])
        }), fanLevel && waterPump && CleanCount && iscustomSwitch ? _react.default.createElement(_reactNative.View, {
          style: {
            marginTop: 5
          }
        }, _react.default.createElement(_CustomBubble.default, {
          fanLevel: fanLevel,
          waterPump: waterPump,
          CleanCount: CleanCount
        })) : null);
      }
    }]);
    return Bubble;
  }(_react.default.Component);

  exports.default = Bubble;

  var styles = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      alignItems: 'center',
      flexDirection: 'column',
      height: 28,
      margin: 1
    },
    content: {
      paddingHorizontal: 3,
      flexDirection: 'row',
      alignItems: 'center'
    },
    arrow: {
      width: 8,
      height: 5,
      position: 'absolute',
      bottom: 0
    },
    circle: {
      alignItems: 'center',
      justifyContent: 'center',
      height: 24,
      backgroundColor: '#fff',
      borderColor: '#666666',
      borderStyle: 'solid',
      borderRadius: 24,
      borderWidth: 0.5
    }
  });
},11636,[14305,14344,14407,14320,14323,14371,14377,14386,10297,10033,11639,11663]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var CustomBubble = function (_React$Component) {
    (0, _inherits2.default)(CustomBubble, _React$Component);

    function CustomBubble(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CustomBubble);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CustomBubble).call(this, props));
      _this.state = {
        fanLevelIcon: null,
        waterPumpIcon: null,
        cleanUpNum: null
      };
      return _this;
    }

    (0, _createClass2.default)(CustomBubble, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.robotStatus();
      }
    }, {
      key: "robotStatus",
      value: function robotStatus() {
        var fanLevelImg = '',
            waterPumpImg = '';

        switch (this.props.fanLevel) {
          case 1:
            fanLevelImg = _$$_REQUIRE(_dependencyMap[8]);
            break;

          case 2:
            fanLevelImg = _$$_REQUIRE(_dependencyMap[9]);
            break;

          case 3:
            fanLevelImg = _$$_REQUIRE(_dependencyMap[10]);
            break;

          case 4:
            fanLevelImg = _$$_REQUIRE(_dependencyMap[11]);
            break;

          default:
            fanLevelImg = _$$_REQUIRE(_dependencyMap[8]);
            break;
        }

        switch (this.props.waterPump) {
          case 1:
            waterPumpImg = _$$_REQUIRE(_dependencyMap[12]);
            break;

          case 2:
            waterPumpImg = _$$_REQUIRE(_dependencyMap[13]);
            break;

          case 3:
            waterPumpImg = _$$_REQUIRE(_dependencyMap[14]);
            break;

          default:
            waterPumpImg = _$$_REQUIRE(_dependencyMap[12]);
            break;
        }

        this.setState({
          fanLevelIcon: fanLevelImg,
          waterPumpIcon: waterPumpImg
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.customMadeData
        }, _react.default.createElement(_reactNative.Image, {
          source: this.state.fanLevelIcon,
          resizeMode: "contain",
          style: styles.customMadeDataIcon
        }), _react.default.createElement(_reactNative.Image, {
          source: this.state.waterPumpIcon,
          resizeMode: "contain",
          style: styles.customMadeDataIcon
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.customMadeDataNum
        }, "X", this.props.CleanCount == 0 ? 1 : this.props.CleanCount));
      }
    }]);
    return CustomBubble;
  }(_react.default.Component);

  exports.default = CustomBubble;

  var styles = _reactNative.StyleSheet.create({
    customMadeData: {
      flexDirection: 'row',
      width: 60,
      height: 24,
      borderRadius: 12,
      backgroundColor: 'rgba(0,0,0,.3)',
      marginBottom: 5,
      alignItems: 'center',
      justifyContent: 'center',
      paddingHorizontal: 10
    },
    customMadeDataIcon: {
      width: 20,
      height: 20
    },
    customMadeDataNum: {
      color: '#fff',
      fontSize: 12
    }
  });
},11639,[14305,14320,14323,14371,14377,14386,10297,10033,11642,11645,11648,11651,11654,11657,11660]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "38771423acd6b4a18e5894429bf12195",
    "name": "ic_model_2_light",
    "type": "png"
  });
},11642,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "671096d88e51e6a519762d0798701cda",
    "name": "ic_model_3_light",
    "type": "png"
  });
},11645,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "4eff8986111ab8f1b6533f3e6b492db6",
    "name": "ic_model_4_light",
    "type": "png"
  });
},11648,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "83636667705c820060b28eac926648ae",
    "name": "ic_model_5_light",
    "type": "png"
  });
},11651,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "558116cf34297105db9145683d8a26dd",
    "name": "ic_water_2_li",
    "type": "png"
  });
},11654,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "c83cfd7ff5ccbaab260b25cc3a0307ce",
    "name": "ic_water_3_li",
    "type": "png"
  });
},11657,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 60,
    "height": 60,
    "scales": [1],
    "hash": "665300f504b8630e79d1e2f2afc79fc0",
    "name": "ic_water_4_li",
    "type": "png"
  });
},11660,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 8,
    "height": 5,
    "scales": [2, 3],
    "hash": "adc549219b3cafb16cc5f039164a0df2",
    "name": "arrow_down",
    "type": "png"
  });
},11663,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 18,
    "height": 18,
    "scales": [2, 3],
    "hash": "eb0ba4a7226f186f6a65865d0c1db672",
    "name": "bubble_check",
    "type": "png"
  });
},11666,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  function deepEqual(o1, o2) {
    if (o1 === o2) {
      return true;
    }

    if (o1 && o2) {
      if (Array.isArray(o1)) {
        if (Array.isArray(o2) && o1.length === o2.length) {
          var ret = true;

          for (var i = 0; i < o1.length; i++) {
            ret = deepEqual(o1[i], o2[i]);

            if (!ret) {
              break;
            }
          }

          return ret;
        }

        return false;
      } else if (typeof o1 === 'object') {
        if (typeof o2 === 'object') {
          var k1 = Object.keys(o1);
          var k2 = Object.keys(o2);

          if (k1.length === k2.length) {
            var _ret = true;

            for (var _i = 0; _i < k1.length; _i++) {
              _ret = deepEqual(o1[k1[_i]], o2[k1[_i]]);

              if (!_ret) {
                break;
              }
            }

            return _ret;
          }
        }

        return false;
      } else {
        return o1 === o2;
      }
    }

    return false;
  }

  var normalPattern = /^[\u4e00-\u9fa5_a-zA-Z0-9]+$/;

  function hasSpecialCharacters(name) {
    return !normalPattern.test(name);
  }

  var _default = {
    deepEqual: deepEqual,
    hasSpecialCharacters: hasSpecialCharacters
  };
  exports.default = _default;
},11669,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var _common = _$$_REQUIRE(_dependencyMap[3]);

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _FileUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  function fetchFile(url, fileName) {
    var timeout,
        _args = arguments;
    return _regenerator.default.async(function fetchFile$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            timeout = _args.length > 2 && _args[2] !== undefined ? _args[2] : 5000;
            return _context.abrupt("return", _FileUtils.default.downloadFile(url, fileName, timeout).then(function (res) {
              var _res$code = res.code,
                  code = _res$code === undefined ? -1 : _res$code;

              if (code === 0) {
                return _Host.default.file.ungzFile(fileName).then(function (data) {
                  _Host.default.file.deleteFile(fileName).catch(function (err) {
                    _common.logger.info("delete file: " + fileName + " fail: " + JSON.stringify(err));
                  });

                  return {
                    code: 0,
                    data: data
                  };
                }).catch(function (e) {
                  _common.logger.info("unzip " + fileName + " err, " + JSON.stringify(e));

                  _Host.default.file.readFileToBase64(fileName).then(function (v) {
                    _common.logger.info(fileName + " content:");

                    _common.logger.info(v);
                  }).catch(function () {});

                  return {
                    code: -1
                  };
                });
              } else {
                _common.logger.info("download fail, url: " + url + ", " + fileName + " not exist");

                return {
                  code: code
                };
              }
            }).catch(function (err) {
              _common.logger.info("fetch " + fileName + " err, " + JSON.stringify(err));

              return {
                code: -1
              };
            }));

          case 2:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  function genTempUrl() {
    var index,
        name,
        _args2 = arguments;
    return _regenerator.default.async(function genTempUrl$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            index = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 0;

            if (!_miot.Device.owner.ID) {
              _context2.next = 6;
              break;
            }

            name = _miot.Device.owner.ID + "/" + _miot.Device.deviceID + "/" + index;
            return _context2.abrupt("return", _miot.Service.smarthome.getInterimFileUrl({
              obj_name: name
            }).catch(function (err) {
              _common.logger.info(err);

              return false;
            }));

          case 6:
            _common.logger.info('no owner.ID, load account');

            return _context2.abrupt("return", _miot.Service.account.load().then(function () {
              var name = _miot.Device.owner.ID + "/" + _miot.Device.deviceID + "/" + index;
              return _miot.Service.smarthome.getInterimFileUrl({
                obj_name: name
              });
            }).catch(function (err) {
              _common.logger.info(err);

              return false;
            }));

          case 8:
          case "end":
            return _context2.stop();
        }
      }
    });
  }

  function genFDSUrl(fileName) {
    return _regenerator.default.async(function genFDSUrl$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            return _context4.abrupt("return", _Host.default.file.getFDSFileInfoWithObjName(fileName).then(function (res) {
              var url = res.url,
                  obj_name = res.obj_name;

              if (url) {
                var index = obj_name.lastIndexOf('/');

                if (index < 0) {
                  _common.logger.info("gen fds url fail, url: " + url + ", name: " + obj_name);

                  return false;
                }

                var name = obj_name.substring(index + 1);
                return {
                  name: name,
                  url: url
                };
              }

              return false;
            }).catch(function (err) {
              _common.logger.info("gen fds url fail, " + fileName + ", " + JSON.stringify(err));

              return false;
            }));

          case 1:
          case "end":
            return _context4.stop();
        }
      }
    });
  }

  function fetchMapListFile(url, fileName) {
    var timeout,
        _args6 = arguments;
    return _regenerator.default.async(function fetchMapListFile$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            timeout = _args6.length > 2 && _args6[2] !== undefined ? _args6[2] : 5000;
            return _context6.abrupt("return", _FileUtils.default.downloadFile(url, fileName, timeout).then(function (res) {
              var _res$code2 = res.code,
                  code = _res$code2 === undefined ? -1 : _res$code2;

              if (code === 0) {
                return _Host.default.file.readFile(fileName).then(function (res) {
                  return {
                    code: 0,
                    data: res
                  };
                }).catch(function (error) {
                  return {
                    code: -1
                  };
                });
              } else {
                _common.logger.info("download fail, url: " + url + ", " + fileName + " not exist");

                return {
                  code: code
                };
              }
            }).catch(function (err) {
              return {
                code: -1
              };
            }));

          case 2:
          case "end":
            return _context6.stop();
        }
      }
    });
  }

  var _default = {
    fetchFile: fetchFile,
    genTempUrl: genTempUrl,
    genFDSUrl: genFDSUrl,
    fetchMapListFile: fetchMapListFile
  };
  exports.default = _default;
},11672,[14305,14674,10074,10109,10035,11675]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _common = _$$_REQUIRE(_dependencyMap[3]);

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  function loadFdsFile(fileName) {
    return _regenerator.default.async(function loadFdsFile$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", _Host.default.file.getFDSFileInfoWithObjName(fileName).then(function (fileInfo) {
              var _ref = fileInfo || {},
                  url = _ref.url,
                  obj_name = _ref.obj_name;

              if (url) {
                var index = obj_name.lastIndexOf('/');

                if (index < 0) {
                  return Promise.reject('invalid name');
                }

                var name = obj_name.substring(index + 1);
                return {
                  url: url,
                  name: name
                };
              }

              return null;
            }).then(function (nameInfo) {
              var url = nameInfo.url,
                  name = nameInfo.name;

              if (!url) {
                return null;
              }

              return _Host.default.file.downloadFile(url, name).then(function (res) {
                _common.logger.info("down load info: " + res);

                return _FunUtils.default.wait(500);
              }).then(function () {
                return _Host.default.file.ungzFile(name);
              });
            }));

          case 1:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  function promiseTimeout(timeout) {
    return _regenerator.default.async(function promiseTimeout$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", new Promise(function (resolve, reject) {
              setTimeout(function () {
                reject('Promise timeout');
              }, timeout);
            }));

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    });
  }

  function downloadFile(url, name) {
    var timeout,
        _args3 = arguments;
    return _regenerator.default.async(function downloadFile$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            timeout = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : 5000;
            return _context3.abrupt("return", Promise.race([promiseTimeout(timeout), _Host.default.file.downloadFile(url, name)]).then(function (res) {
              _common.logger.info(JSON.stringify(res));

              if (_Host.default.isAndroid) {
                var status = res.status;

                if (+status === 403) {
                  return {
                    code: 403
                  };
                } else if (+status === 200) {
                  return {
                    code: 403
                  };
                }
              }

              return _FunUtils.default.wait(500).then(function () {
                return _Host.default.file.isFileExists(name);
              }).then(function (exist) {
                return exist ? {
                  code: 0
                } : {
                  code: 403
                };
              });
            }).catch(function (err) {
              _common.logger.info("download file err: " + JSON.stringify(err));

              var _err$message = err.message,
                  message = _err$message === undefined ? "" : _err$message,
                  _err$code = err.code,
                  code = _err$code === undefined ? -1 : _err$code;

              if (_Host.default.isIOS && message.indexOf("403") >= 0 && message.indexOf("forbidden") >= 0) {
                code = 403;
              }

              return {
                code: code
              };
            }));

          case 2:
          case "end":
            return _context3.stop();
        }
      }
    });
  }

  var _default = {
    loadFdsFile: loadFdsFile,
    downloadFile: downloadFile
  };
  exports.default = _default;
},11675,[14305,14674,10035,10109,10106]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _MapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _NameGenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _MapData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[17]);

  var _BasePage2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _common = _$$_REQUIRE(_dependencyMap[19]);

  var _DevConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var EMPTY_MAP = {};

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      ScreenWidth = _Dimensions$get.width,
      ScreenHeight = _Dimensions$get.height;

  var BaseMap = function (_BasePage) {
    (0, _inherits2.default)(BaseMap, _BasePage);

    function BaseMap(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BaseMap);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BaseMap).call(this, props));

      _this.doExit = function () {
        if (_this.onExit) {
          _this.onExit();
        }

        _this.setState({
          exit: true
        }, _this.props.navigation.goBack);
      };

      _this._isUrlValid = function (index) {
        var now = Date.now();

        var _ref = _this.mapUrlInfo[index] || EMPTY_MAP,
            _ref$time = _ref.time,
            time = _ref$time === undefined ? now : _ref$time;

        return time - now > 5000;
      };

      _this._fetchUrl = function _callee(index) {
        var forceUpdate,
            _args = arguments;
        return _regenerator.default.async(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                forceUpdate = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;

                if (!(_this._isUrlValid(index) && !forceUpdate)) {
                  _context.next = 5;
                  break;
                }

                return _context.abrupt("return", Promise.resolve(_this.mapUrlInfo[index].url));

              case 5:
                return _context.abrupt("return", _MapApi.default.genTempUrl(index).then(function (res) {
                  var _ref2 = res || EMPTY_MAP,
                      url = _ref2.url,
                      time = _ref2.expires_time;

                  _common.logger.info("url info: " + JSON.stringify(res));

                  if (!url) {
                    _common.logger.info("url invalid, " + url);

                    return false;
                  }

                  _this.mapUrlInfo[index] = {
                    url: url,
                    time: time * 1000
                  };
                  return url;
                }));

              case 6:
              case "end":
                return _context.stop();
            }
          }
        });
      };

      _this.loadMap = function () {
        return _this._fetchUrl(0).then(function (url) {
          if (!url) {
            return false;
          }

          var name = _this.nameGenerator.next('map');

          return _MapApi.default.fetchFile(url, name, 5000).then(function (res) {
            var code = res.code;

            if (code !== 0) {
              _common.logger.info("load map result: " + code);
            }

            if (code === 403) {
              return _this._fetchUrl(0, true).then(function () {
                return res;
              });
            }

            return res;
          }).then(_this._handleMapFile).catch(function (err) {
            _common.logger.info("load map err: " + JSON.stringify(err));

            return false;
          });
        });
      };

      _this.afterHandleMap = function (res) {
        if (res && Object.keys(res).length > 0) {
          _this.setState((0, _objectSpread2.default)({}, res));
        }
      };

      _this._handleMapFile = function (fileData) {
        var code = fileData.code,
            data = fileData.data;

        if (+code === 0) {
          if (!_this.mapData.parseMap(data)) {
            return false;
          }

          var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
              mapViewWidth = _assertThisInitialize.mapViewWidth,
              mapViewHeight = _assertThisInitialize.mapViewHeight;

          var _this$mapData = _this.mapData,
              mapConfig = _this$mapData.mapConfig,
              configChanged = _this$mapData.configChanged,
              dataChanged = _this$mapData.dataChanged,
              mapValue = _this$mapData.data,
              areaIds = _this$mapData.areaIds,
              colorMap = _this$mapData.colorMap;
          var width = mapConfig.width,
              height = mapConfig.height,
              posArray = mapConfig.posArray;

          if (_this.curMapId != 0 && _this.curMapId != mapConfig.mapId) {
            _this.curMapId = mapConfig.mapId;

            _this.onMapIdChanged();
          }

          var res = {};

          _common.logger.info("configChanged: " + configChanged + ", dataChanged: " + dataChanged);

          if (configChanged || dataChanged) {
            var noMap = !width || !height || width < 20 || height < 20;
            res.noMap = noMap;
            var oldRatio = _this.state.ratio;

            var ratio = _MapUtils.default.calcRatio(mapViewWidth, mapViewHeight, width, height, oldRatio);

            res.ratio = ratio;

            if (oldRatio !== ratio) {
              _common.logger.info("ratio change: " + oldRatio + " -> " + ratio);
            }

            if (configChanged) {
              _this.dockPos = _MapUtils.default.calcDockPos(mapConfig, ratio);
              _this.machinePos = _MapUtils.default.calcMachinePos(mapConfig, ratio);

              if (posArray) {
                _this.configPath = _MapUtils.default.calcPath(posArray, mapConfig, ratio, false);
              }
            }

            if (!noMap && dataChanged) {
              var mapStr = _this.mapData.adjustMapStr(ratio);

              var _mapConfig$autoAreaVa = mapConfig.autoAreaValue,
                  autoAreaValue = _mapConfig$autoAreaVa === undefined ? [] : _mapConfig$autoAreaVa;

              if (autoAreaValue.length > 0) {
                _this.areaCenter = _MapUtils.default.calcAreaCenter(mapValue, width, height, ratio);
              }

              var _this$state$selectAre = _this.state.selectAreaArray,
                  selectAreaArray = _this$state$selectAre === undefined ? [] : _this$state$selectAre;

              _this._genMapImage(mapStr, width, height, ratio, colorMap, selectAreaArray).then(function () {
                _this.afterHandleMap(res);
              });
            } else if (configChanged) {
              _this.afterHandleMap(res);
            } else {
              _this.handleNoChange();
            }
          } else {
            _this.handleNoChange();
          }

          return true;
        } else {
          _common.logger.info("code: " + code);

          return false;
        }
      };

      _this.handleNoChange = function () {};

      _this.onMapIdChanged = function () {};

      _this._genMapImage = function _callee2(map, width, height, ratio, colorMap) {
        var selectAreaArray,
            colors,
            r,
            w,
            h,
            _args2 = arguments;
        return _regenerator.default.async(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                selectAreaArray = _args2.length > 5 && _args2[5] !== undefined ? _args2[5] : [];
                colors = _MapUtils.default.calcMapColor(colorMap, selectAreaArray);
                r = ratio < 2 ? 1 : ratio;
                w = ratio < 2 ? Math.round(width * ratio) : width;
                h = ratio < 2 ? Math.round(height * ratio) : height;
                return _context2.abrupt("return", _Host.default.crypto.robotCleanerPointsScaleToImageBase64(w, h, map, JSON.stringify(colors), r).then(function (res) {
                  if (res) {
                    _this.mapImage = "data:image/png;base64," + res;
                  }

                  return true;
                }).catch(function (res) {
                  _common.logger.log("create map image err, " + JSON.stringify(res));

                  return false;
                }));

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        });
      };

      _this._renderPath = function () {
        var noMap = _this.state.noMap;

        var _assertThisInitialize2 = (0, _assertThisInitialized2.default)(_this),
            configPath = _assertThisInitialize2.configPath,
            beautifyPath = _assertThisInitialize2.beautifyPath;

        var showOriginPath = _DevConfig.default.getConfig('showOriginPath');

        if (noMap || !configPath) {
          return null;
        }

        return _react.default.createElement(_reactNativeSvg.Svg, {
          style: {
            position: 'absolute'
          },
          height: ScreenHeight,
          width: ScreenWidth
        }, showOriginPath ? _react.default.createElement(_reactNativeSvg.Path, {
          d: configPath,
          fill: "none",
          stroke: "#FF0000",
          strokeWidth: 1
        }) : null, _react.default.createElement(_reactNativeSvg.Path, {
          d: beautifyPath,
          fill: "none",
          stroke: "#FFFFFF",
          strokeWidth: 1
        }));
      };

      _this._renderMachine = function (machinePos) {
        var noMap = _this.state.noMap;

        var _ref3 = machinePos || {},
            x = _ref3.x,
            y = _ref3.y;

        if (noMap || !x || !y) {
          return null;
        }

        return _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[21]),
          style: [{
            position: 'absolute',
            transform: [{
              translateX: x - 11
            }, {
              translateY: y - 11
            }]
          }]
        });
      };

      _this.state = {
        selectAreaArray: [],
        ratio: 1,
        noMap: true
      };
      _this.mapUrlInfo = {};
      _this.nameGenerator = new _NameGenerator.default([{
        prefix: 'map'
      }, {
        prefix: 'path'
      }]);
      _this.mapData = new _MapData.default();
      _this.curMapId = 0;
      _this.mapViewWidth = ScreenWidth - 40;
      _this.mapViewHeight = ScreenHeight - 150;
      _this.areaCenter = {};
      _this.dockPos = {};
      _this.machinePos = {};
      _this.configPath = '';
      return _this;
    }

    (0, _createClass2.default)(BaseMap, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(BaseMap.prototype), "componentDidMount", this).call(this);
        var navigation = this.props.navigation;

        if (navigation) {
          navigation.setParams({
            doExit: this.doExit
          });
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(BaseMap.prototype), "componentWillUnmount", this).call(this);

        if (this.mapData) {
          this.mapData.reset();
        }

        this.areaCenter = {};
        this.mapUrlInfo = {};
      }
    }]);
    return BaseMap;
  }(_BasePage2.default);

  exports.default = BaseMap;
},11678,[14305,14314,14674,14320,14323,14371,14374,14377,14380,14386,10297,10033,11672,11681,11684,11618,10035,11485,11687,10109,11624,11615]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var RANGE = [0, 5];

  var NameGenerator = function () {
    function NameGenerator() {
      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      (0, _classCallCheck2.default)(this, NameGenerator);
      this.nameConfig = config.reduce(function (res, cur) {
        var prfix = cur.prfix,
            _cur$range = cur.range,
            range = _cur$range === undefined ? RANGE : _cur$range;
        res[prfix] = {
          range: range,
          current: range[0]
        };
        return res;
      }, {});
    }

    (0, _createClass2.default)(NameGenerator, [{
      key: "next",
      value: function next(prfix) {
        var range = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : RANGE;

        if (!this.nameConfig[prfix]) {
          this.nameConfig[prfix] = {
            range: range,
            current: range[0]
          };
        }

        var _this$nameConfig$prfi = this.nameConfig[prfix],
            current = _this$nameConfig$prfi.current,
            r = _this$nameConfig$prfi.range;
        var n = current + 1;

        if (n >= r[1]) {
          n = r[0];
        }

        this.nameConfig[prfix].current = n;
        return prfix + "_" + current;
      }
    }]);
    return NameGenerator;
  }();

  exports.default = NameGenerator;
},11681,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _jsBase = _$$_REQUIRE(_dependencyMap[5]);

  var _ = _$$_REQUIRE(_dependencyMap[6]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ObjectUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Constant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _DevConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var PARSE_TIME_OUT = 2000;

  var MapData = function () {
    function MapData() {
      (0, _classCallCheck2.default)(this, MapData);
      this.arrayBuffer = null;
      this.bufferView = null;
      this.paramBuffer = null;
      this.paramView = null;
      this.paramIntView = null;
      this.mapConfig = {
        mapId: 0
      };
      this.mapStr = '';
      this.data = [];
      this.originData = [];
      this.hasFillValue = false;
      this.areaIds = {};
      this.adjacencyMap = {};
      this.colorMap = {};
      this.dataChanged = false;
      this.configChanged = false;
      this.isParse = false;
      this.lastParseTimestamp = 0;
      this.tmpMapStrData = [];
      this.changeCount = 0;
      this.hasArea = false;
    }

    (0, _createClass2.default)(MapData, [{
      key: "parseDataLen",
      value: function parseDataLen(str) {
        if (this.paramBuffer === null) {
          this.paramBuffer = new ArrayBuffer(4);
          this.paramView = new Uint8ClampedArray(this.paramBuffer);
          this.paramIntView = new Int32Array(this.paramBuffer);
        }

        var v;

        for (var i = 0; i < 4; i++) {
          v = str.charCodeAt(i);
          this.paramView[i] = +v;
        }

        return this.paramIntView[0];
      }
    }, {
      key: "parseData",
      value: function parseData(str) {
        var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;
        var len = arguments.length > 2 ? arguments[2] : undefined;

        if (this.arrayBuffer === null || this.arrayBuffer.byteLength !== len) {
          _logger.default.info("old buffer len: " + (this.arrayBuffer && this.arrayBuffer.byteLength) + " new buffer len: " + len);

          this.arrayBuffer = new ArrayBuffer(len);
          this.bufferView = new Uint8ClampedArray(this.arrayBuffer);
          this.dataChanged = true;
        }

        var v;
        var ids = {};

        for (var i = 0; i < len; i += 1) {
          v = str.charCodeAt(i + start);
          v = +v;

          if (v !== this.bufferView[i]) {
            this.bufferView[i] = v;
            this.changeCount += 1;
          }

          if (!this.hasArea && v > 0 && v < 63) {
            this.hasArea = true;
          }

          if (v > 64 && v < 127 || v > 128 && v < 192 || v > 192 && v < 255) {
            this.hasFillValue = true;
          }

          ids[v] = v;
        }

        this.areaIds = ids;
        this.dataChanged = this.dataChanged || this.changeCount / len > 0.002;

        if (this.dataChanged) {
          this.changeCount = 0;
        }

        return this.bufferView;
      }
    }, {
      key: "handleAreaName",
      value: function handleAreaName(mapConfig) {
        var _mapConfig$autoAreaVa = mapConfig.autoAreaValue,
            autoAreaValue = _mapConfig$autoAreaVa === undefined ? [] : _mapConfig$autoAreaVa;

        if (autoAreaValue.length > 0) {
          autoAreaValue.forEach(function (area) {
            var id = area.id,
                name = area.name;

            if (!name) {
              area["name"] = _.localString.room_name.format(id);
            }
          });
        }

        return mapConfig;
      }
    }, {
      key: "adjustMapStr",
      value: function adjustMapStr(ratio) {
        if (ratio < 2) {
          var _this$mapConfig = this.mapConfig,
              width = _this$mapConfig.width,
              height = _this$mapConfig.height;
          var w = Math.round(width * ratio);
          var h = Math.round(height * ratio);

          if (this.tmpMapStrData.length !== w * h) {
            this.tmpMapStrData = new Array(w * h);
          }

          for (var i = 0; i < h; i++) {
            var ai = Math.round(i / ratio);

            if (ai >= height) {
              ai = height - 1;
            }

            for (var j = 0; j < w; j++) {
              var aj = Math.round(j / ratio);

              if (aj >= width) {
                aj = width - 1;
              }

              this.tmpMapStrData[i * w + j] = this.data[ai * width + aj];
            }
          }

          this.mapStr = this.tmpMapStrData.join(",");
          return this.mapStr;
        } else {
          return this.mapStr;
        }
      }
    }, {
      key: "parseMap",
      value: function parseMap(data) {
        var now = Date.now();

        if (this.isParse && now - this.lastParseTimestamp < PARSE_TIME_OUT) {
          _logger.default.info('parse data, wait');

          return false;
        }

        this.isParse = true;

        var str = _jsBase.Base64.decode(data);

        var jsonStart = str.indexOf('{');
        var mapParams;

        try {
          mapParams = JSON.parse(str.slice(jsonStart, str.length));
        } catch (err) {
          var _len = this.parseDataLen(str);

          _logger.default.info("parse json fail: " + JSON.stringify(err) + ", try get data len: " + _len);

          if (_len && _len > 0) {
            jsonStart = _len + 16;
            var configStr = str.slice(jsonStart, str.length);

            _logger.default.info("config str: " + JSON.stringify(configStr));

            mapParams = JSON.parse(configStr);
          }
        }

        if (!mapParams) {
          _logger.default.info('parse map fail, return');

          this.isParse = false;
          return false;
        }

        if (mapParams.data && !mapParams.width) {
          mapParams = mapParams.data;
        }

        var _mapParams = mapParams,
            xMin = _mapParams.x_min,
            yMin = _mapParams.y_min,
            width = _mapParams.width,
            height = _mapParams.height,
            mapId = _mapParams.mapId,
            pathId = _mapParams.pathId,
            other = (0, _objectWithoutProperties2.default)(_mapParams, ["x_min", "y_min", "width", "height", "mapId", "pathId"]);
        var mapConfig = (0, _objectSpread2.default)({
          width: width,
          height: height,
          xMin: xMin,
          yMin: yMin,
          mapId: mapId,
          pathId: pathId
        }, other);
        this.dataChanged = false;
        this.configChanged = false;

        var _ref = this.mapConfig || {},
            _ref$width = _ref.width,
            ow = _ref$width === undefined ? 0 : _ref$width,
            _ref$height = _ref.height,
            oh = _ref$height === undefined ? 0 : _ref$height,
            om = _ref.mapId,
            _ref$pathId = _ref.pathId,
            op = _ref$pathId === undefined ? 0 : _ref$pathId;

        if (om === mapId && op > pathId) {
          _logger.default.info("old data is new, config: " + JSON.stringify(this.mapConfig));

          _logger.default.info("new config: " + JSON.stringify(mapConfig));

          this.lastParseTimestamp = Date.now();
          this.isParse = false;
          return false;
        }

        if (!width || !height) {
          _logger.default.info("invalid config, " + JSON.stringify(mapConfig));

          this.lastParseTimestamp = Date.now();
          this.isParse = false;
          return false;
        }

        mapConfig = this.handleAreaName(mapConfig);
        this.configChanged = !_ObjectUtils.default.deepEqual(this.mapConfig, mapConfig);

        if (this.configChanged) {
          _logger.default.info("map config: " + JSON.stringify(mapConfig));
        }

        this.mapConfig = mapConfig;
        var len = width * height;
        var start = jsonStart - len;

        if (start < 0) {
          _logger.default.info("data start: " + start + ", invalid data, discard");

          this.configChanged = false;
          this.dataChanged = false;
          this.isParse = false;
          return false;
        }

        if (start !== 16) {
          _logger.default.info("data start: " + start);
        }

        this.hasArea = false;
        this.hasFillValue = false;
        this.parseData(str, start, len);

        var showFillMap = _DevConfig.default.getConfig('fillMap');

        if (this.dataChanged) {
          this.originData = Array.prototype.slice.call(this.bufferView);
          var hight = 0;
          this.data = this.originData.map(function (v) {
            hight = v >> 6;

            if (hight > 0) {
              if (showFillMap) {
                if (v === 255 || v === 127) {
                  return v;
                }

                return 0x3F & v;
              } else {
                if (hight === 3) {
                  return 255;
                } else if (hight === 1) {
                  return 127;
                } else {
                  return 0;
                }
              }
            } else {
              return v;
            }
          });
          this.mapStr = this.data.join(',');

          if (this.hasArea) {
            var fillData = this.data;

            if (this.hasFillValue) {
              fillData = this.data.map(function (v) {
                if (v === 255 || v === 127) {
                  return v;
                } else {
                  return 0x3F & v;
                }
              });
            }

            this.adjacencyMap = _MapUtils.default.calcAdjacencyArea(fillData, width, height);
          }

          this.colorMap = _MapUtils.default.calcColorMap(this.adjacencyMap, _Constant.default.COLOR_COUNT);

          _logger.default.info("color map: " + JSON.stringify(this.colorMap));
        }

        this.lastParseTimestamp = Date.now();
        this.isParse = false;
        return true;
      }
    }, {
      key: "reset",
      value: function reset() {
        this.arrayBuffer = null;
        this.bufferView = null;
        this.mapConfig = {};
        this.mapStr = '';
        this.data = [];
        this.dataChanged = false;
        this.configChanged = false;
        this.isParse = false;
      }
    }]);
    return MapData;
  }();

  exports.default = MapData;
},11684,[14305,14314,14407,14320,14323,11552,10109,10100,11669,11618,11621,11624]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _NetState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _common = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _BaseComponent2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var BasePage = function (_BaseComponent) {
    (0, _inherits2.default)(BasePage, _BaseComponent);

    function BasePage() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, BasePage);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(BasePage)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.netWrap = function (func) {
        var context = (0, _assertThisInitialized2.default)(_this);

        _NetState.default.isConnect().then(function (conn) {
          if (!conn) {
            return;
          }

          func.call(context);
        }).catch(function () {});
      };

      _this._onWillFocus = function (params) {
        if (_this.onWillFocus) {
          _this.onWillFocus(params);
        } else {
          _this._onBack(params);
        }
      };

      _this._onBack = function (params) {
        var _ref = params || {},
            type = _ref.action.type;

        if (type === _NavigationActions.default.BACK) {
          _this.forceUpdate();
        }
      };

      _this._onDidFocus = function (params) {
        _this.mounted = true;

        if (_reactNative.Platform.OS === 'android') {
          _reactNative.BackHandler.addEventListener('hardwareBackPress', _this.onBackPress);
        }

        if (_this.onDidFocus) {
          _this.onDidFocus(params);
        }
      };

      _this._onWillBlur = function (params) {
        _this.mounted = false;

        if (_reactNative.Platform.OS === 'android') {
          _reactNative.BackHandler.removeEventListener('hardwareBackPress', _this.onBackPress);
        }

        if (_this.onWillBlur) {
          _this.onWillBlur(params);
        }
      };

      _this._onDidBlur = function (params) {
        _this.mounted = false;

        if (_this.onDidBlur) {
          _this.onDidBlur(params);
        }
      };

      _this.onBackPress = function () {
        _common.logger.info('hardware back press');

        return false;
      };

      return _this;
    }

    (0, _createClass2.default)(BasePage, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var navigation = this.props.navigation;

        if (navigation) {
          if (this._willBlurSubscription) {
            this._willBlurSubscription.remove();
          }

          this._willFocusSubscription = navigation.addListener('willFocus', this._onWillFocus);

          if (this._didFocusSubscription) {
            this._didBlurSubscription.remove();
          }

          this._didFocusSubscription = navigation.addListener('didFocus', this._onDidFocus);

          if (this._willBlurSubscription) {
            this._didBlurSubscription.remove();
          }

          this._willBlurSubscription = navigation.addListener('willBlur', this._onWillBlur);

          if (this._didBlurSubscription) {
            this._didBlurSubscription.remove();
          }

          this._didBlurSubscription = navigation.addListener('didBlur', this._onDidBlur);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this._willFocusSubscription) {
          this._willFocusSubscription.remove();
        }

        this._willFocusSubscription = null;

        if (this._didFocusSubscription) {
          this._didFocusSubscription.remove();
        }

        this._didFocusSubscription = null;

        if (this._willBlurSubscription) {
          this._willBlurSubscription.remove();
        }

        this._willBlurSubscription = null;

        if (this._didBlurSubscription) {
          this._didBlurSubscription.remove();
        }

        this._didBlurSubscription = null;
      }
    }]);
    return BasePage;
  }(_BaseComponent2.default);

  exports.default = BasePage;
},11687,[14305,14320,14323,14371,14377,14374,14386,10297,11690,10109,10033,10448,10930]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var DURATION = 1000;

  var NetState = function NetState() {
    var _this = this;

    (0, _classCallCheck2.default)(this, NetState);

    this._getConnectState = function () {
      if (_reactNative.Platform.OS === 'android') {
        return _reactNative.NetInfo.isConnected.fetch();
      }

      return new Promise(function (resolve, reject) {
        _reactNative.NetInfo.isConnected.fetch().then(function () {
          var handler = function handler(conn) {
            _reactNative.NetInfo.isConnected.removeEventListener('connectionChange', handler);

            resolve(conn);
          };

          _reactNative.NetInfo.isConnected.addEventListener('connectionChange', handler);
        }).catch(function (err) {
          return reject(err);
        });
      });
    };

    this.isConnect = function () {
      if (_this.lastState !== undefined && Date.now() - _this.lastTime < DURATION) {
        return Promise.resolve(_this.lastState);
      }

      if (!_this.isFetch) {
        _this.isFetch = true;
        return _this._getConnectState().then(function (conn) {
          if (_this.listeners.length > 0) {
            var l = _this.listeners.splice(0, _this.listeners.length);

            l.forEach(function (pro) {
              pro.resolve(conn);
            });
          }

          _logger.default.info("fetch success: " + JSON.stringify(conn));

          _this.isFetch = false;
          _this.lastState = conn;
          _this.lastTime = Date.now();
          return conn;
        }).catch(function (err) {
          _logger.default.info("fetch fail: " + err);

          if (_this.listeners.length > 0) {
            var l = _this.listeners.splice(0, _this.listeners.length);

            l.forEach(function (pro) {
              pro.reject(err);
            });
          }

          _this.isFetch = false;
          throw err;
        });
      }

      var result = new Promise(function (resolve, reject) {
        _this.listeners.push({
          resolve: resolve,
          reject: reject
        });
      });
      return result;
    };

    this.listeners = [];
    this.isFetch = false;
    this.lastState = undefined;
    this.lastTime = 0;
  };

  var netState = new NetState();
  var _default = netState;
  exports.default = _default;
},11690,[14305,14320,10033,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _NoFlickerImage = _$$_REQUIRE(_dependencyMap[10]);

  var MapComponent = function (_React$PureComponent) {
    (0, _inherits2.default)(MapComponent, _React$PureComponent);

    function MapComponent() {
      (0, _classCallCheck2.default)(this, MapComponent);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MapComponent).apply(this, arguments));
    }

    (0, _createClass2.default)(MapComponent, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            width = _this$props.width,
            height = _this$props.height,
            ratio = _this$props.ratio,
            uri = _this$props.uri,
            _this$props$noFlicker = _this$props.noFlicker,
            noFlicker = _this$props$noFlicker === undefined ? false : _this$props$noFlicker,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["width", "height", "ratio", "uri", "noFlicker"]);

        if (noFlicker) {
          return _react.default.createElement(_NoFlickerImage.NoFlickerImage, (0, _extends2.default)({
            style: {
              width: width * ratio,
              height: height * ratio
            },
            cacheCount: 2,
            noExpire: false,
            source: uri,
            fadeDuration: 0
          }, other));
        }

        return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: {
            width: width * ratio,
            height: height * ratio
          },
          source: uri
        }, other));
      }
    }]);
    return MapComponent;
  }(_react.default.PureComponent);

  exports.default = MapComponent;
},11693,[14305,14344,14407,14320,14323,14371,14377,14386,10297,10033,11696]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NoFlickerImage = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CachingImage = _$$_REQUIRE(_dependencyMap[13]);

  var NoFlickerImage = function (_PureComponent) {
    (0, _inherits2.default)(NoFlickerImage, _PureComponent);

    function NoFlickerImage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, NoFlickerImage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NoFlickerImage).call(this, props));

      _this.onSourceLoaded = function () {
        if (_this.state.source !== _this.props.source) {
          _this.setState({
            source: _this.props.source
          });
        }
      };

      _this.state = {
        source: props.source
      };
      return _this;
    }

    (0, _createClass2.default)(NoFlickerImage, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            cacheCount = _this$props.cacheCount,
            noExpire = _this$props.noExpire,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["cacheCount", "noExpire"]);

        if (_reactNative.Platform.OS === "ios") {
          return _react.default.createElement(_reactNative.Image, other);
        }

        return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_CachingImage.CachingImage, (0, _extends2.default)({}, other, {
          cacheCount: cacheCount,
          noExpire: noExpire,
          style: styles.hide,
          onSourceLoaded: this.onSourceLoaded
        })), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, other, {
          source: this.state.source
        })));
      }
    }]);
    return NoFlickerImage;
  }(_react.PureComponent);

  exports.NoFlickerImage = NoFlickerImage;
  NoFlickerImage.propTypes = (0, _objectSpread2.default)({}, _reactNative.Image.propTypes, {
    noExpire: _propTypes.default.bool,
    cacheCount: _propTypes.default.number
  });

  var styles = _reactNative.StyleSheet.create({
    hide: {
      display: "none"
    }
  });
},11696,[14308,14305,14314,14344,14407,14320,14323,14371,14377,14386,10297,10033,10318,11699]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.CachingImage = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var cachedSources = new Set([]);

  var CachingImage = function (_PureComponent) {
    (0, _inherits2.default)(CachingImage, _PureComponent);

    function CachingImage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CachingImage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CachingImage).call(this, props));

      _this.onSourceLoadedInCache = function () {
        var _this$props = _this.props,
            source = _this$props.source,
            onSourceLoaded = _this$props.onSourceLoaded,
            _this$props$noExpire = _this$props.noExpire,
            noExpire = _this$props$noExpire === undefined ? false : _this$props$noExpire;
        var cache = noExpire ? cachedSources : _this.cachedSources;

        if (!cache.has(source)) {
          _this._checkCacheCount(source);

          cache.add(source);
          onSourceLoaded();
        }
      };

      _this._checkCacheCount = function (source) {
        var _this$props2 = _this.props,
            _this$props2$noExpire = _this$props2.noExpire,
            noExpire = _this$props2$noExpire === undefined ? false : _this$props2$noExpire,
            _this$props2$cacheCou = _this$props2.cacheCount,
            cacheCount = _this$props2$cacheCou === undefined ? -1 : _this$props2$cacheCou;
        var cache = noExpire ? cachedSources : _this.cachedSources;

        if (cacheCount < 0) {
          return;
        }

        if (cache.size + 1 >= cacheCount) {
          var iter = cache.values();
          var v = iter.next();

          while (v && !v.done && v.value === source) {
            v = iter.next();
          }

          cache.delete(v.value);
        }
      };

      _this.cachedSources = new Set([]);
      return _this;
    }

    (0, _createClass2.default)(CachingImage, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        var _this$props3 = this.props,
            source = _this$props3.source,
            onSourceLoaded = _this$props3.onSourceLoaded,
            _this$props3$noExpire = _this$props3.noExpire,
            noExpire = _this$props3$noExpire === undefined ? false : _this$props3$noExpire;
        var cache = noExpire ? cachedSources : this.cachedSources;

        if (cache.has(source)) {
          onSourceLoaded();
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, this.props, {
          onLoad: this.onSourceLoadedInCache
        }));
      }
    }]);
    return CachingImage;
  }(_react.PureComponent);

  exports.CachingImage = CachingImage;
  CachingImage.propTypes = (0, _objectSpread2.default)({}, _reactNative.Image.propTypes, {
    onSourceLoaded: _propTypes.default.func.isRequired,
    noExpire: _propTypes.default.bool,
    cacheCount: _propTypes.default.number
  });
  CachingImage.defaultProps = {};
},11699,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10297,10318,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var CycleTask = function CycleTask(_duration, _loop) {
    var _this = this;

    var startId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    (0, _classCallCheck2.default)(this, CycleTask);

    this.isRunning = function () {
      return _this.running;
    };

    this.start = function (syncFun) {
      var loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.loop;
      var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _this.duration;

      _logger.default.info(_this.id + " start, loop: " + loop + ", duration: " + duration + ", running: " + _this.running);

      _this.duration = duration;

      if (_this.loop === loop && _this.running) {
        _logger.default.info('no change, return');

        return;
      }

      _this.loop = loop;

      _this._resetTimer();

      if (_this.running) {
        _this.cycleTimer = setTimeout(function () {
          _this.id += 1;

          _this._doTask(syncFun, _this.id);
        }, _this.duration);
      } else {
        _this.running = true;
        _this.id += 1;

        _this._doTask(syncFun, _this.id);
      }
    };

    this.pause = function () {
      _this.loop = false;
    };

    this._resetTimer = function () {
      if (_this.cycleTimer) {
        clearTimeout(_this.cycleTimer);
        _this.cycleTimer = null;
      }
    };

    this._doTask = function (syncFun, taskId) {
      if (!_this.running) {
        _logger.default.info("do task " + taskId + " not running: " + _this.running + ", return");

        return;
      }

      _this._resetTimer();

      syncFun().then(function (res) {
        return res;
      }).catch(function () {
        return false;
      }).then(function (result) {
        _this._resetTimer();

        var id = taskId;

        if ((_this.loop || !result) && _this.running) {
          if (id !== _this.id) {
            _logger.default.info("sync finish, not same id, id=" + id + ", this.id = " + _this.id + " return");

            return;
          }

          _this.cycleTimer = setTimeout(function () {
            _this._resetTimer();

            if (id === _this.id) {
              _this._doTask(syncFun, id);
            } else {
              _logger.default.info("time out, not same id: " + id + ", this.id: " + _this.id);
            }
          }, _this.duration);
        } else {
          _logger.default.info("stop " + id + " task, result: " + result + ", loop: " + _this.loop + ", running: " + _this.running);

          _this.stop();
        }
      });
    };

    this.stop = function () {
      _this.running = false;

      _this._resetTimer();
    };

    this.cycleTimer = null;
    this.duration = _duration || 300;
    this.loop = _loop || false;
    this.running = false;
    this.id = startId;
  };

  exports.default = CycleTask;
},11702,[14305,14320,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _jsBase = _$$_REQUIRE(_dependencyMap[3]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _ObjectUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var BYTES_PER = 1000;
  var PATH_BYTES = 8;

  var PathData = function () {
    function PathData() {
      (0, _classCallCheck2.default)(this, PathData);
      this.arrayBuffer = null;
      this.bufferView = null;
      this.dataView = null;
      this.pathConfig = {};
      this.originData = [];
      this.changeCount = 0;
      this.data = [];
      this.dataChanged = false;
      this.configChanged = false;
      this.isParse = false;
      this.lastParseTimestamp = 0;
    }

    (0, _createClass2.default)(PathData, [{
      key: "_calcBufferSize",
      value: function _calcBufferSize() {
        var dataLen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
        return Math.ceil(dataLen / BYTES_PER) * BYTES_PER;
      }
    }, {
      key: "parseData",
      value: function parseData(str) {
        var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;
        var len = arguments.length > 2 ? arguments[2] : undefined;

        var bufferLen = this._calcBufferSize(len);

        if (this.arrayBuffer === null || this.arrayBuffer.byteLength !== bufferLen) {
          _logger.default.info("path old buffer len: " + (this.arrayBuffer && this.arrayBuffer.byteLength) + " new buffer len: " + len);

          this.arrayBuffer = new ArrayBuffer(bufferLen);
          this.bufferView = new Uint8ClampedArray(this.arrayBuffer);
          {
            this.dataView = new Int32Array(this.arrayBuffer);
          }
          this.dataChanged = true;
        }

        var v;
        this.changeCount = 0;

        for (var i = 0; i < len; i += 1) {
          v = str.charCodeAt(i + start);
          v = +v;

          if (v !== this.bufferView[i]) {
            this.bufferView[i] = v;
            this.changeCount += 1;
          }
        }

        this.dataChanged = this.dataChanged || this.changeCount > 0;

        _logger.default.info("path count: " + this.changeCount + ", len: " + len + ", changed: " + this.dataChanged);

        return this.bufferView;
      }
    }, {
      key: "parsePath",
      value: function parsePath(data) {
        var now = Date.now();

        if (this.isParse && now - this.lastParseTimestamp < PARSE_TIME_OUT) {
          _logger.default.info('parse path data, wait');

          return;
        }

        this.isParse = true;

        var str = _jsBase.Base64.decode(data);

        var jsonStart = str.indexOf('{');
        var pathParams = JSON.parse(str.slice(jsonStart, str.length));
        var pathLen = pathParams.pathLen,
            pathSize = pathParams.pathSize;
        var pathConfig = pathParams;
        this.dataChanged = false;
        this.configChanged = false;
        this.configChanged = !_ObjectUtils.default.deepEqual(this.pathConfig, pathConfig);

        if (this.configChanged) {
          _logger.default.info("path config: " + JSON.stringify(pathConfig));
        }

        var oldSize = this.pathConfig.pathSize;

        if (oldSize !== pathSize) {
          this.dataChanged = true;
        }

        this.pathConfig = pathConfig;
        var start = jsonStart - pathLen * PATH_BYTES;

        if (start !== 4) {
          _logger.default.info("path start: " + start);
        }

        this.parseData(str, start, pathLen * PATH_BYTES);

        if (this.dataChanged) {
          var pd = new Array(pathLen);

          for (var i = 0; i < pathLen; i += 1) {
            pd[i] = [this.dataView[2 * i], this.dataView[2 * i + 1]];
          }

          this.data = pd;
        }

        this.lastParseTimestamp = Date.now();
        this.isParse = false;
      }
    }, {
      key: "reset",
      value: function reset() {
        this.arrayBuffer = null;
        this.bufferView = null;
        this.dataView = null;
        this.pathConfig = {};
        this.data = [];
        this.dataChanged = false;
        this.configChanged = false;
        this.isParse = false;
      }
    }]);
    return PathData;
  }();

  exports.default = PathData;
},11705,[14305,14320,14323,11552,10100,11669]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var WALL_MIN_LEN = 5;
  var DISTANCE_MIN = 50;
  var SEG_MIN = 10;

  var PathBeautify = function () {
    function PathBeautify() {
      (0, _classCallCheck2.default)(this, PathBeautify);
      this.pathId = 0;
      this.origin = [];
      this.beautify = [];
      this.lastOriginStart = 0;
      this.lastBeautifyStart = 0;
      this.lastCount = 0;
    }

    (0, _createClass2.default)(PathBeautify, [{
      key: "reset",
      value: function reset() {
        this.pathId = 0;
        this.origin = [];
        this.beautify = [];
      }
    }, {
      key: "_distanceToLine",
      value: function _distanceToLine(start, end, p) {
        var dx1 = end[0] - start[0];
        var dy1 = end[1] - start[1];
        var dx2 = p[0] - start[0];
        var dy2 = p[1] - start[1];
        return Math.abs((dx1 * dy2 - dx2 * dy1) / Math.sqrt(dx1 * dx1 + dy1 * dy1));
      }
    }, {
      key: "_beatifyPonits",
      value: function _beatifyPonits(points, si, ei) {
        if (Math.abs(ei - si) > SEG_MIN) {
          this.remove += ei - si - 3;
          return [points[si], points[ei - 2], points[ei - 1], points[ei]];
        } else {
          return points.slice(si, ei + 1);
        }
      }
    }, {
      key: "_calEndPoint",
      value: function _calEndPoint(points, si, ei) {
        if (ei - si < WALL_MIN_LEN) {
          return points.slice(si, ei + 1);
        }

        var res = [];
        var s = si;
        var e = si + 1;
        var dis1;
        var dis2;
        var cross;
        var v1;
        var v2;

        for (var i = e + 1; i <= ei; i++) {
          dis1 = this._distanceToLine(points[s], points[e], points[i]);
          dis2 = this._distanceToLine(points[s], points[i], points[Math.floor((s + e) / 2)]);
          v1 = {
            x: points[e][0] - points[i][0],
            y: points[e][1] - points[i][1]
          };
          v2 = {
            x: points[s][0] - points[i][0],
            y: points[s][1] - points[i][1]
          };
          cross = v1.x * v2.x + v1.y * v2.y;

          if (dis1 < DISTANCE_MIN && dis2 < DISTANCE_MIN && cross >= 0) {
            e = i;

            if (i === ei) {
              var result = this._beatifyPonits(points, s, e);

              res.push.apply(res, (0, _toConsumableArray2.default)(result));
            }
          } else {
            var _result = this._beatifyPonits(points, s, e);

            res.push.apply(res, (0, _toConsumableArray2.default)(_result));
            s = i;
            e = i + 1;

            if (i === ei) {
              res.push(points[i]);
            }
          }
        }

        return res;
      }
    }, {
      key: "_calcWall",
      value: function _calcWall(ps) {
        var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var beautifyStart = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var si = -1;
        var ei = -1;
        var res = [];
        var prev;
        var cur;
        var needBeautify = false;
        var i = 1;

        if (start === 0) {
          res.push(ps[start]);
        } else {
          i = start;
        }

        for (; i < ps.length; i++) {
          prev = _MapUtils.default.isAlongWallPath(ps[i - 1]);
          cur = _MapUtils.default.isAlongWallPath(ps[i]);

          if (!prev && cur) {
            si = i;
            needBeautify = true;
          } else if (prev && !cur) {
            ei = i - 1;

            if (si >= 0) {
              var result = this._calEndPoint(ps, si, ei);

              this.lastOriginStart = si;
              this.lastBeautifyStart = beautifyStart + res.length;
              res.push.apply(res, (0, _toConsumableArray2.default)(result));
            }

            needBeautify = false;
            si = -1;
            ei = -1;
          }

          if (!needBeautify) {
            res.push(ps[i]);
          }
        }

        if (si != -1) {
          ei = ps.length - 1;

          var _result2 = this._calEndPoint(ps, si, ei);

          this.lastOriginStart = si;
          this.lastBeautifyStart = beautifyStart + res.length;
          res.push.apply(res, (0, _toConsumableArray2.default)(_result2));
        }

        return res;
      }
    }, {
      key: "beautifyPath",
      value: function beautifyPath(mapPath, pathId) {
        var _this$beautify;

        if (!mapPath || mapPath <= 0) {
          this.lastOriginStart = 0;
          this.lastBeautifyStart = 0;
          return [];
        }

        if (this.pathId !== pathId) {
          this.beautify = [];
          this.lastOriginStart = 0;
          this.lastBeautifyStart = 0;
          this.pathId = pathId;
        }

        if (this.lastCount === mapPath.length && this.beautify.length > 0) {
          return (0, _toConsumableArray2.default)(this.beautify);
        }

        this.lastCount = mapPath.length;

        if (this.beautify.length > 0) {
          this.beautify.splice(this.lastBeautifyStart);
        }

        var res = this._calcWall(mapPath, this.lastOriginStart, this.lastBeautifyStart);

        (_this$beautify = this.beautify).push.apply(_this$beautify, (0, _toConsumableArray2.default)(res));

        res = (0, _toConsumableArray2.default)(this.beautify);
        return res;
      }
    }]);
    return PathBeautify;
  }();

  exports.default = PathBeautify;
},11708,[14305,14359,14320,14323,11618]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _PushDelegate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var PushManager = function () {
    function PushManager() {
      var _this = this;

      (0, _classCallCheck2.default)(this, PushManager);
      this.observers = {};
      this.cacheProps = {};
      this.cacheEvents = {};
      this.propNames = [];
      this.eventNames = [];
      this.delegates = {};

      this._handlePushMsg = function (msg) {
        var uniqueMsg = _this._preHandlePush(msg);

        _logger.default.info("filter: " + JSON.stringify(msg) + " -> " + JSON.stringify(uniqueMsg));

        var _ref = uniqueMsg || {},
            _ref$prop = _ref.prop,
            prop = _ref$prop === undefined ? {} : _ref$prop,
            _ref$event = _ref.event,
            event = _ref$event === undefined ? {} : _ref$event;

        if (Object.keys(prop).length <= 0 && Object.keys(event).length <= 0) {
          return;
        }

        Object.keys(_this.observers).forEach(function (name) {
          if (!_this.observers[name]) {
            _logger.default.info(name + " is not in observers");
          }

          var _ref2 = _this.observers[name] || {},
              _ref2$props = _ref2.props,
              props = _ref2$props === undefined ? [] : _ref2$props,
              _ref2$events = _ref2.events,
              events = _ref2$events === undefined ? [] : _ref2$events,
              handler = _ref2.handler;

          var p = props.reduce(function (result, cur) {
            if (prop[cur] !== undefined) {
              result[cur] = prop[cur];
            }

            return result;
          }, {});
          var e = events.reduce(function (result, cur) {
            if (event[cur] !== undefined) {
              result[cur] = event[cur];
            }

            return result;
          }, {});

          if (Object.keys(p).length > 0 || Object.keys(e).length > 0) {
            var res = {
              prop: p,
              event: e
            };

            _logger.default.info(name + " callback push msg: " + JSON.stringify(res));

            handler(res);
          }
        });
      };

      this._preHandlePush = function (msg) {
        var _ref3 = msg || {},
            _ref3$prop = _ref3.prop,
            prop = _ref3$prop === undefined ? {} : _ref3$prop,
            _ref3$event = _ref3.event,
            event = _ref3$event === undefined ? {} : _ref3$event;

        var tp = {};
        var te = {};
        Object.keys(prop).forEach(function (p) {
          var _prop$p = prop[p],
              time = _prop$p.time,
              value = _prop$p.value;

          var _ref4 = _this.cacheProps[p] || {},
              _ref4$time = _ref4.time,
              otime = _ref4$time === undefined ? 0 : _ref4$time,
              ovalue = _ref4.value;

          if (otime !== time && ovalue !== value) {
            _this.cacheProps[p] = prop[p];
            tp[p] = value;
          }
        });
        Object.keys(event).forEach(function (e) {
          var time = event[e].time;

          var _ref5 = _this.cacheEvents[e] || {},
              _ref5$time = _ref5.time,
              otime = _ref5$time === undefined ? 0 : _ref5$time;

          if (otime !== time) {
            _this.cacheEvents[e] = event[e];
            te[e] = time;
          }
        });
        return {
          prop: tp,
          event: te
        };
      };
    }

    (0, _createClass2.default)(PushManager, [{
      key: "addObserver",
      value: function addObserver(key, handler, names) {
        var _this2 = this;

        if (!key || !handler) {
          throw new Error('key or handler invalid');
        }

        var _ref6 = names || {},
            _ref6$props = _ref6.props,
            props = _ref6$props === undefined ? [] : _ref6$props,
            _ref6$events = _ref6.events,
            events = _ref6$events === undefined ? [] : _ref6$events;

        var ps = props.filter(function (p) {
          return _this2.propNames.indexOf(p) < 0;
        });
        var es = events.filter(function (e) {
          return _this2.eventNames.indexOf(e) < 0;
        });

        _logger.default.info("add observer, " + key + ", ps: " + JSON.stringify(ps) + ", es: " + JSON.stringify(es));

        if (ps.length > 0 || es.length > 0) {
          var _this$propNames, _this$eventNames;

          _logger.default.info("add register, " + JSON.stringify(ps) + ", " + JSON.stringify(es));

          var d = new _PushDelegate.default();
          d.register(this._handlePushMsg, {
            props: ps,
            events: es
          });

          if (this.delegates[key]) {
            this.delegates[key].unregister();
          }

          this.delegates[key] = d;

          (_this$propNames = this.propNames).push.apply(_this$propNames, (0, _toConsumableArray2.default)(ps));

          (_this$eventNames = this.eventNames).push.apply(_this$eventNames, (0, _toConsumableArray2.default)(es));
        }

        this.observers[key] = {
          key: key,
          props: props,
          events: events,
          uniqueProps: ps,
          uniqueEvents: es,
          handler: handler
        };
      }
    }, {
      key: "removeObserver",
      value: function removeObserver(key) {
        if (this.delegates[key]) {
          var names = this.delegates[key].unregister();
          var _names$events = names.events,
              events = _names$events === undefined ? [] : _names$events,
              _names$props = names.props,
              props = _names$props === undefined ? [] : _names$props;
          var es = this.eventNames.filter(function (e) {
            return events.indexOf(e) < 0;
          });
          var ps = this.propNames.filter(function (p) {
            return props.indexOf(p) < 0;
          });
          this.propNames = ps;
          this.eventNames = es;
          delete this.delegates[key];
        }

        delete this.observers[key];
      }
    }, {
      key: "reset",
      value: function reset() {
        var _this3 = this;

        if (this.delegates) {
          Object.keys(this.delegates).forEach(function (key) {
            _this3.delegates[key].unregister();
          });
        }

        this.propNames = [];
        this.eventNames = [];
        this.delegates = {};
        this.observers = {};
        this.cacheEvents = {};
        this.cacheProps = {};
      }
    }, {
      key: "init",
      value: function init() {}
    }]);
    return PushManager;
  }();

  var pushManager = new PushManager();
  var _default = pushManager;
  exports.default = _default;
},11711,[14305,14359,14320,14323,10388,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 15,
    "height": 21,
    "scales": [2, 3],
    "hash": "c12f0feb57e79b3a28269a3f8191afdc",
    "name": "charging_pile",
    "type": "png"
  });
},11714,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "3d84f4163b5b43fb16aee96bfd0dade6",
    "name": "ic_machine_add",
    "type": "png"
  });
},11717,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "002caa4c29676a60c54c0a5843c9efe4",
    "name": "ic_machine_edit",
    "type": "png"
  });
},11720,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "9e47a6dcc829f8c59ada10764c372257",
    "name": "ic_machine_suction",
    "type": "png"
  });
},11723,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "bf72248ee957747e5c16c10d86ffee59",
    "name": "ic_model_2_nor",
    "type": "png"
  });
},11726,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "204d46888371e9811e29b6dc4a8b272f",
    "name": "ic_model_3_nor",
    "type": "png"
  });
},11729,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "5df3dfac967c88dfe52bb09e9bb4acc2",
    "name": "ic_model_4_nor",
    "type": "png"
  });
},11732,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "3194e9b163dd61e361c01c0ad5a0d51f",
    "name": "ic_model_5_nor",
    "type": "png"
  });
},11735,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "145dd0fdeb5ba6e3d02e0a9c803fb0c5",
    "name": "ic_water_2_nor",
    "type": "png"
  });
},11738,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "f8934fb5da04ab95234c04d52e93e808",
    "name": "ic_water_3_nor",
    "type": "png"
  });
},11741,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "65351a6b6ec461fd87ad43e3406f71d6",
    "name": "ic_water_4_nor",
    "type": "png"
  });
},11744,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "3ae69ba1918b4d1d7ea2d38f5226bc7e",
    "name": "ic_zonesetting",
    "type": "png"
  });
},11747,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "856d442b1d9a727d290e58da13c7869c",
    "name": "ic_partitionedit",
    "type": "png"
  });
},11750,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "49c72e72e6c30e5d6f940229f0f060a8",
    "name": "ic_model_customized",
    "type": "png"
  });
},11753,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "d2137e9bb6acf8cd3de5319cdfe412d5",
    "name": "myMap",
    "type": "png"
  });
},11756,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "2ccc80c9266f2beecac296002d833713",
    "name": "ic_water_2_sel",
    "type": "png"
  });
},11759,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "b5b51819c028ad367b624aef182fbb3f",
    "name": "ic_water_3_sel",
    "type": "png"
  });
},11762,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "4409a3cd0bb922d670381bb2bda08edd",
    "name": "ic_water_4_sel",
    "type": "png"
  });
},11765,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "3167b83fe81e58f3beb61db3dfbabd9b",
    "name": "ic_model_2_sel",
    "type": "png"
  });
},11768,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "9748218b9ca03bfbb9a5d5248b2e81be",
    "name": "ic_model_3_sel",
    "type": "png"
  });
},11771,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "b6c1c10a6b07becfa79ba20aef38659e",
    "name": "ic_model_4_sel",
    "type": "png"
  });
},11774,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [1],
    "hash": "a0e2745e7c1c53dd359ffd2bccf54cd7",
    "name": "ic_model_5_sel",
    "type": "png"
  });
},11777,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 64,
    "height": 32,
    "scales": [1],
    "hash": "77c7093042461ca3fe7db193f4a31073",
    "name": "open",
    "type": "png"
  });
},11780,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 192,
    "height": 96,
    "scales": [1],
    "hash": "171212c5545db20d053080ce73d862cf",
    "name": "off",
    "type": "png"
  });
},11783,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var CommonUtils = function () {
    function CommonUtils() {
      (0, _classCallCheck2.default)(this, CommonUtils);
    }

    (0, _createClass2.default)(CommonUtils, null, [{
      key: "getWorkStatus",
      value: function getWorkStatus(value) {
        var sweepMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;
        var str = ' ';

        switch (value) {
          case 1:
            str = _localString.default.work_sleep;
            break;

          case 2:
            str = _localString.default.work_free;
            break;

          case 3:
            str = _localString.default.work_pause;
            break;

          case 4:
            {
              if (sweepMode == 1) str = _localString.default.total_sweeping;else if (sweepMode == 2) str = _localString.default.area_sweeping;else if (sweepMode == 3) str = _localString.default.local_sweeping;else if (sweepMode == 4) str = _localString.default.point_sweeping;else if (sweepMode == 8) str = _localString.default.room_sweeping;else if (sweepMode == 9) str = _localString.default.double_sweeping;else if (sweepMode == 10) str = _localString.default.following_sweeping;else str = _localString.default.work_cleaning;
            }
            break;

          case 5:
            str = _localString.default.work_recharge;
            break;

          case 6:
            str = _localString.default.work_charging;
            break;

          case 7:
            str = _localString.default.work_fault;
            break;

          case 8:
            str = _localString.default.work_remote_control;
            break;

          case 9:
            str = _localString.default.work_full_charged;
            break;

          case 10:
            str = _localString.default.work_shutdown;
            break;

          case 11:
            str = _localString.default.stop_charge;
            break;

          default:
            return ' ';
        }

        return str;
      }
    }]);
    return CommonUtils;
  }();

  exports.default = CommonUtils;
},11786,[14305,14320,14323,10016]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _NumUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _common = _$$_REQUIRE(_dependencyMap[11]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      SH = _Dimensions$get.height;

  var BottomDrawer = function (_React$Component) {
    (0, _inherits2.default)(BottomDrawer, _React$Component);

    function BottomDrawer(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BottomDrawer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BottomDrawer).call(this, props));

      _this._shouldCapture = function (evt, gestureState) {
        var expand = _this.state.expand;

        var pullFast = _this.pulledFast(gestureState);

        var pullDown = _this.pulledDown(gestureState);

        var pullUp = _this.pulledUp(gestureState);

        var moved = _this.moved(gestureState);

        if (moved && (pullDown || pullUp)) {
          return true;
        }

        if (!expand && pullFast) {
          return true;
        } else if (pullDown && pullFast) {
          return true;
        }

        return false;
      };

      _this._grantPanResponder = function (evt, gestureState) {
        var expand = _this.state.expand;

        if (!expand) {
          return true;
        } else if (_this.pulledDown(gestureState) && _this.pulledFast(gestureState)) {
          return true;
        }

        return false;
      };

      _this._handlePanResponderGrant = function () {
        _this.setState({
          pulling: true
        });

        _this._animatedPosition.setOffset(_this._currentPosition);

        _this._offset = _this._currentPosition;

        _this._animatedPosition.setValue(0);
      };

      _this._handlePanResponderMove = function (evt, gestureState) {
        if (_this.insideAllowedRange()) {
          var dy = _this._calcMoved(gestureState.dy);

          _this._animatedPosition.setValue(dy);
        }
      };

      _this._calcMoved = function (dy) {
        if (_this._offset + dy >= _this.position.start) {
          return _this.position.start + _this.props.bounceHeight - _this._offset;
        } else if (_this._offset + dy <= _this.position.end - _this.props.bounceHeight) {
          return _this.position.end - _this.props.bounceHeight - _this._offset;
        } else {
          return dy;
        }
      };

      _this._handlePanResponderEnd = function (evt, gestureState) {
        _this._animatedPosition.flattenOffset();

        _this.setState({
          pulling: false
        });

        if (_this.pulledDown(gestureState) && _this.pulledFar(gestureState)) {
          return _this.shrink();
        } else if (_this.pulledUp(gestureState) && _this.pulledFar(gestureState)) {
            return _this.expand();
          } else {
              _this.restore();
            }
      };

      _this.pulledUp = function (gestureState) {
        return gestureState.dy < 0;
      };

      _this.pulledDown = function (gestureState) {
        return gestureState.dy > 0;
      };

      _this.pulledFast = function (gestureState) {
        return Math.abs(gestureState.vy) > 0.75;
      };

      _this.pulledFar = function (gestureState) {
        return Math.abs(gestureState.dy) > _this.threshold;
      };

      _this.moved = function (gestureState) {
        return Math.abs(gestureState.dy) > 10;
      };

      _this.insideAllowedRange = function () {
        return _this._currentPosition >= _this.position.end && _this._currentPosition <= _this.position.start;
      };

      _this.expand = function () {
        var duration = Math.round(Math.abs(_this.position.end - _this._currentPosition));
        duration = _NumUtils.default.clamp(duration, 100, 300);

        _this.setState({
          expand: true,
          animate: true
        }, function () {
          var onExpand = _this.props.onExpand;

          if (onExpand) {
            onExpand();
          }

          _reactNative.Animated.timing(_this._animatedPosition, {
            toValue: _this.position.end,
            duration: duration
          }).start(function () {
            _this.setState({
              animate: false
            });
          });
        });
      };

      _this.shrink = function () {
        var duration = Math.round(Math.abs(_this.position.start - _this._currentPosition));
        duration = _NumUtils.default.clamp(duration, 100, 300);
        var onShrink = _this.props.onShrink;

        if (onShrink) {
          onShrink();
        }

        _this.setState({
          animate: true
        });

        _reactNative.Animated.timing(_this._animatedPosition, {
          toValue: _this.position.start,
          duration: duration
        }).start(function () {
          return _this.setState({
            expand: false,
            animate: false
          });
        });
      };

      _this.restore = function () {
        var expand = _this.state.expand;

        if (expand) {
          _this.expand();
        } else {
          _this.shrink();
        }
      };

      _this._calcPosition = function (contentHeight, containerHeight) {
        var _this$position = _this.position,
            oldContentHeight = _this$position.contentHeight,
            oldContainerHeight = _this$position.containerHeight,
            start = _this$position.start;
        var _this$state$pulling = _this.state.pulling,
            pulling = _this$state$pulling === undefined ? false : _this$state$pulling;
        var updateContentHeight = Math.abs(oldContentHeight - contentHeight) > 5;
        var updateContainerHeight = Math.abs(oldContainerHeight - containerHeight) > 5;

        if (pulling || !updateContainerHeight && !updateContentHeight && start) {
          return;
        }

        var shrinkHeight = _this.props.shrinkHeight;

        if (updateContentHeight) {
          _this.position.contentHeight = contentHeight;
        }

        if (updateContainerHeight) {
          _this.position.containerHeight = containerHeight;
        }

        var _this$position2 = _this.position,
            ch = _this$position2.containerHeight,
            th = _this$position2.contentHeight;
        _this.position.start = ch - shrinkHeight;
        _this.position.end = ch - th;
        _this.threshold = Math.round(th / 5);
        var _this$state$expand = _this.state.expand,
            expand = _this$state$expand === undefined ? false : _this$state$expand;

        if (updateContainerHeight && _this._animatedPosition) {
          _this._animatedPosition.setValue(_this.position.start);
        } else if (updateContentHeight && _this._animatedPosition && expand) {
          _this._animatedPosition.setValue(_this.position.end);
        }
      };

      _this.handleLayout = function (event) {
        var height = event.nativeEvent.layout.height;

        _this._calcPosition(height, _this.position.containerHeight);
      };

      _this.state = {
        expand: false,
        pulling: false,
        animate: false
      };
      _this.position = {
        contentHeight: props.contentHeight,
        containerHeight: props.containerHeight
      };

      _this._calcPosition(props.contentHeight, props.containerHeight);

      _this._animatedPosition = new _reactNative.Animated.Value(_this.position.start);

      _this._animatedPosition.addListener(function (value) {
        _this._currentPosition = value.value;
      });

      _this._offset = 0;
      _this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: _this._shouldCapture,
        onStartShouldSetPanResponderCapture: _this._shouldCapture,
        onMoveShouldSetPanResponder: _this._shouldCapture,
        onMoveShouldSetPanResponderCapture: _this._shouldCapture,
        onPanResponderGrant: _this._handlePanResponderGrant,
        onPanResponderMove: _this._handlePanResponderMove,
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        },
        onPanResponderRelease: _this._handlePanResponderEnd,
        onPanResponderTerminate: _this._handlePanResponderEnd,
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return true;
        }
      });
      return _this;
    }

    (0, _createClass2.default)(BottomDrawer, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this._animatedPosition.setValue(this._animatedPosition._value);
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var children = this.props.children;
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({}, this._panResponder.panHandlers, {
          onLayout: function onLayout(event) {
            var height = event.nativeEvent.layout.height;

            _this2._calcPosition(_this2.position.contentHeight, height);
          },
          style: [styles.drawerContainer, {
            transform: [{
              translateY: this._animatedPosition
            }, {
              translateX: 0
            }]
          }]
        }), _react.default.createElement(_reactNative.View, {
          onLayout: this.handleLayout,
          style: styles.container
        }, children));
      }
    }]);
    return BottomDrawer;
  }(_react.default.Component);

  exports.default = BottomDrawer;
  BottomDrawer.defaultProps = {
    shrinkHeight: 300,
    contentHeight: 500,
    containerHeight: SH,
    bounceHeight: 5,
    onExpand: null,
    onShrink: null,
    threshold: 100
  };

  var styles = _reactNative.StyleSheet.create({
    drawerContainer: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {
      justifyContent: 'flex-start',
      backgroundColor: 'transparent'
    }),
    container: {
      justifyContent: 'flex-start'
    }
  });
},11789,[14305,14314,14344,14320,14323,14371,14377,14386,10297,10033,11792,10109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  function clamp(num, min, max) {
    return Math.min(max, Math.max(num, min));
  }

  var _default = {
    clamp: clamp
  };
  exports.default = _default;
},11792,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _mobx = _$$_REQUIRE(_dependencyMap[3]);

  var RobotStore = function () {
    function RobotStore() {
      (0, _classCallCheck2.default)(this, RobotStore);
      this.status = 0;
      this.firmwareRevision = 0;
      this.remoteStatus = 0;
      this.revision = '';
    }

    (0, _createClass2.default)(RobotStore, [{
      key: "reset",
      value: function reset() {
        this.status = 0;
        this.remoteStatus = 0;
        this.revision = '';
      }
    }, {
      key: "checkAndUpdate",
      value: function checkAndUpdate(data, key) {
        if (data[key] !== undefined && this[key] !== data[key]) {
          this[key] = data[key];
        }
      }
    }, {
      key: "updateFirmwareRevision",
      value: function updateFirmwareRevision(revision) {
        if (revision && revision !== this.revision) {
          this.revision = revision;
          var index = revision.lastIndexOf('_');

          if (index >= 0) {
            this.firmwareRevision = revision.substr(index + 1);
          }
        }

        return this.firmwareRevision;
      }
    }, {
      key: "updateState",
      value: function updateState(res) {
        if (res) {
          this.checkAndUpdate(res, 'status');
          this.checkAndUpdate(res, 'remoteStatus');
          this.updateFirmwareRevision(res.firmwareRevision);
        }
      }
    }]);
    return RobotStore;
  }();

  (0, _mobx.decorate)(RobotStore, {
    status: _mobx.observable,
    remoteStatus: _mobx.observable,
    firmwareRevision: _mobx.observable,
    reset: _mobx.action,
    updateState: _mobx.action,
    updateFirmwareRevision: _mobx.action
  });
  var robotStore = new RobotStore();
  robotStore.reset();
  var _default = robotStore;
  exports.default = _default;
},11795,[14305,14320,14323,10007]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 720,
    "height": 1620,
    "scales": [1, 2, 3],
    "hash": "9aa0e1955c63bd802556f0e7a2edb444",
    "name": "bg",
    "type": "png"
  });
},11798,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _CommonSetting = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _FeatureSetting = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _common = _$$_REQUIRE(_dependencyMap[14]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LdStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _NewAppScreen = _$$_REQUIRE(_dependencyMap[17]);

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var Settings = function (_React$Component) {
    (0, _inherits2.default)(Settings, _React$Component);

    function Settings(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Settings);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Settings).call(this, props));

      _this._renderFeatureSetting = function (navigation) {
        var ishasAutoArea = _this.props.navigation.state.params["ishasAutoArea"];
        var isMapShow = _this.props.navigation.state.params["isMapShow"];
        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, _resources.strings.featureSetting)), _react.default.createElement(_FeatureSetting.default, {
          navigation: navigation,
          ishasAutoArea: ishasAutoArea,
          isMapShow: isMapShow
        }), _react.default.createElement(_reactNative.View, {
          style: styles.blank
        }));
      };

      props.navigation.setParams({
        titleProps: {
          backgroundColor: _LdStyles.default.mainColor,
          title: _resources.strings.setting,
          type: _NavigationBar.default.TYPE.DARK,
          left: [{
            key: _NavigationBar.default.ICON.BACK,
            onPress: function onPress() {
              return _this.props.navigation.goBack();
            }
          }]
        }
      });
      _this.state = {
        license: '',
        privacy: ''
      };
      return _this;
    }

    (0, _createClass2.default)(Settings, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _Service.default.getServerName().then(function (country) {
          if (country) {
            var urls = _common.Policy.getPolicy(country.countryCode, _Host.default.locale.language);

            var agreementURL = urls.agreementURL,
                privacyURL = urls.privacyURL;

            _this2.setState({
              license: agreementURL,
              privacy: privacyURL
            });
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _reactNative.DeviceEventEmitter.emit('resetMap', null);

        this.setState = function () {
          return;
        };
      }
    }, {
      key: "render",
      value: function render() {
        var first_options = _CommonSetting.SETTING_KEYS.first_options,
            second_options = _CommonSetting.SETTING_KEYS.second_options;
        var firstOptions = [first_options.SHARE, first_options.IFTTT, first_options.FIRMWARE_UPGRADE];
        var secondOptions = [second_options.AUTO_UPGRADE, second_options.TIMEZONE];
        var _this$state = this.state,
            license = _this$state.license,
            privacy = _this$state.privacy;
        var extraOptions = {
          policyUrl: privacy,
          licenseUrl: license
        };
        var navigation = this.props.navigation;

        var featureSetting = this._renderFeatureSetting(navigation);

        return _react.default.createElement(_HdContainView.default, {
          style: {
            backgroundColor: 'white'
          }
        }, _react.default.createElement(_reactNative.ScrollView, {
          style: {
            marginTop: _LdStyles.default.ldNavigationRadius
          },
          showsVerticalScrollIndicator: false
        }, featureSetting, _react.default.createElement(_CommonSetting.CommonSetting, {
          navigation: navigation,
          firstOptions: firstOptions,
          secondOptions: secondOptions,
          extraOptions: extraOptions
        })));
      }
    }]);
    return Settings;
  }(_react.default.Component);

  exports.default = Settings;

  Settings.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;

    var _ref2 = navigation.state.params || {},
        titleProps = _ref2.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_NavigationBar.default, titleProps)
    };
  };

  var styles = _reactNative.StyleSheet.create({
    superContainer: {
      backgroundColor: _LdStyles.default.mainColor,
      flex: 1
    },
    container: {
      backgroundColor: 'white',
      flex: 1,
      borderTopLeftRadius: _LdStyles.default.ldNavigationRadius,
      borderTopRightRadius: _LdStyles.default.ldNavigationRadius
    },
    featureSetting: {
      backgroundColor: '#fff'
    },
    blank: {
      height: 8,
      backgroundColor: _resources.Styles.common.backgroundColor,
      borderTopColor: _resources.Styles.common.hairlineColor,
      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,
      borderBottomColor: _resources.Styles.common.hairlineColor,
      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
    },
    titleContainer: {
      backgroundColor: 'rgba(248,248,248,1)',
      justifyContent: 'center'
    },
    title: {
      fontSize: 11,
      color: 'rgba(189,189,189,1)',
      lineHeight: 30,
      paddingLeft: _resources.Styles.common.padding
    }
  });
},11801,[14305,14320,14323,14371,14377,14386,10297,10033,10353,10077,10332,10062,10035,11804,10109,10719,10088,11828,11852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[10]);

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _mobxReact = _$$_REQUIRE(_dependencyMap[13]);

  var _miot = _$$_REQUIRE(_dependencyMap[14]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[15]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _HandlerOnceTap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _api = _$$_REQUIRE(_dependencyMap[21]);

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _SingleDialogWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _DateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _DevConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _AsyncMapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _MapOpConst = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _NavUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _BasePage2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var _temp;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var selectIcon = _$$_REQUIRE(_dependencyMap[33]);

  var PROP = _Consts.default.PROP,
      ACTION = _Consts.default.ACTION,
      Colors = _Consts.default.Colors,
      StatusConsts = _Consts.default.StatusConsts;
  var VALIDITY_DUST_FREQ_OPTIONS = [{
    title: _localString.default.min_house,
    subtitle: _localString.default.clean_3_collect_dust,
    index: 0,
    value: 3
  }, {
    title: _localString.default.med_house,
    subtitle: _localString.default.clean_2_collect_dust,
    index: 1,
    value: 2
  }, {
    title: _localString.default.max_house,
    subtitle: _localString.default.clean_1_collect_dust,
    index: 2,
    value: 1
  }, {
    title: _localString.default.never_collect_dust,
    index: 3,
    value: 0
  }];
  var DUST_MAP = {
    0: _localString.default.min_house,
    1: _localString.default.med_house,
    2: _localString.default.max_house,
    3: _localString.default.never_collect_dust
  };
  var HIT_MAP = {
    deviceCorrecting: {
      title: _localString.default.device_mark,
      message: _localString.default.tip_device_mark,
      confirm: true,
      cancel: true
    },
    deviceCorrectingSuccess: {
      title: _localString.default.hint,
      message: _localString.default.device_mark_success,
      confirm: true
    },
    findRobot: {
      title: _localString.default.hint,
      message: _localString.default.tip_find_robot,
      confirm: true,
      cancel: true
    },
    resetFactory: {
      tittle: _localString.default.hint,
      message: _localString.default.resetTxtPrompt,
      confirm: true,
      cancel: true
    },
    deleteMap: {
      title: _localString.default.hint,
      message: _localString.default.delete_saved_map,
      confirm: true,
      cancel: true
    },
    stopClean: {
      title: _localString.default.hint,
      message: _localString.default.stop_clean,
      confirm: true,
      cancel: true
    },
    remoteControl: {
      title: _localString.default.hint,
      message: _localString.default.remote_will_cancel_current,
      confirm: true,
      cancel: true
    },
    edgeSweep: {
      title: _localString.default.hint,
      message: _localString.default.switch_sweep_mode_tip,
      confirm: true,
      cancel: true
    },
    resetMap: {
      title: _localString.default.hint,
      message: _localString.default.stop_work_to_reset_map,
      confirm: true,
      cancel: true
    },
    stopChargeToVirtualWall: {
      title: _localString.default.hint,
      message: _localString.default.stop_charge_to_virtualwall,
      confirm: true,
      cancel: true
    },
    stopWorkToVirtualWall: {
      title: _localString.default.hint,
      message: _localString.default.stop_work_to_virtualwall,
      confirm: true,
      cancel: true
    }
  };
  var PUSH_PROPS = [PROP.SWEEP_MODE, PROP.WORK_STATION_FREQ, PROP.VOLUME, PROP.DOUBLE_CLEAN, PROP.STATUS, PROP.MAP_MEMORY, PROP.AUTO_BOOST, PROP.MUTE, PROP.EDGE_SWEEP, PROP.TIMING, PROP.FORBID_MODE, PROP.CUSTOM_SWITCH];
  var SYNC_PROPS = [].concat(PUSH_PROPS, [PROP.FIRMWARE_REVISION]);
  var PROP_UPDATE_DURATION = 1000;
  var FeatureSetting = (0, _mobxReact.inject)('disturbStore', 'timingStore', 'robotStore')((0, _mobxReact.observer)((_temp = function (_BasePage) {
    (0, _inherits2.default)(FeatureSetting, _BasePage);

    function FeatureSetting(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, FeatureSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FeatureSetting).call(this, _props));

      _this._isValidProp = function (name) {
        var now = Date.now();
        var last = _this.propTime[name] || 0;

        if (now - last < PROP_UPDATE_DURATION) {
          _logger.default.info(name + " invalid prop, " + last + " -> " + now);

          return false;
        }

        _this.propTime[name] = now;
        return true;
      };

      _this._loadData = function () {
        var syncAll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
        var timingStore = _this.props.timingStore;
        timingStore.updateState(0);

        if (syncAll) {
          _this.needSyncProps = SYNC_PROPS;
        }

        _api.SpecApi.syncProps(_this.needSyncProps).then(function (res) {
          _this.needSyncProps = SYNC_PROPS.filter(function (v) {
            return res[v] === undefined && _this.state[v] === undefined;
          });

          _this._handleSyncProps(res);
        }).catch(function (err) {
          return err;
        });
      };

      _this._handlePushMessage = function (msg) {
        var _ref = msg || {},
            _ref$prop = _ref.prop,
            prop = _ref$prop === undefined ? {} : _ref$prop;

        _this._handleSyncProps(prop);
      };

      _this._handleSyncProps = function (res) {
        var _this$props = _this.props,
            timingStore = _this$props.timingStore,
            robotStore = _this$props.robotStore;

        if (res.timing === undefined) {
          timingStore.updateState(-1);
        }

        robotStore.updateState(res);

        var props = _this._filterProps(res);

        if (Object.keys(props).length > 0) {
          if (props.forbidMode) {
            var disturbStore = _this.props.disturbStore;
            disturbStore.parse(props.forbidMode);
          }

          if (props.timing) {
            timingStore.parse(props.timing);
          }

          _this.setState((0, _objectSpread2.default)({}, props));
        }
      };

      _this._filterProps = function (props) {
        var keys = Object.keys(props).filter(function (key) {
          return _this.state[key] !== props[key];
        });
        var res = keys.reduce(function (result, key) {
          if (_this._isValidProp(key)) {
            result[key] = props[key];
          }

          return result;
        }, {});
        return res;
      };

      _this._checkWifi = function () {
        if (_this.isCheckLocal) {
          return;
        }

        _this.isCheckLocal = true;

        _this.setState({
          showLoading: true
        }, function () {
          _FunUtils.default.retry(function () {
            return _miot.Device.getDeviceWifi().localPing().then(function (res) {
              _logger.default.info("local ping: " + res);

              return res;
            }).catch(function (err) {
              _logger.default.info("local ping: fail " + err);

              return false;
            });
          }, 1, {
            delay: 500
          }).then(function (success) {
            _this.setState({
              showLoading: false
            });

            if (success) {
              var navigation = _this.props.navigation;
              navigation.navigate('RemoteCtlPage');
            } else {
              _UIUtils.default.info(_localString.default.not_local_network);
            }

            _this.isCheckLocal = false;
          }).catch(function (err) {
            _logger.default.info("local ping fail 1, " + err);

            _this.isCheckLocal = false;

            _this.setState({
              showLoading: false
            });
          });
        });
      };

      _this._checkRemoteControl = function () {
        var status = _this.props.robotStore.status;
        var s = +status;

        if (StatusConsts.FAULT === s) {
          _UIUtils.default.info(_localString.default.remote_disable_by_fault);

          return;
        }

        if (StatusConsts.FULL !== s && StatusConsts.IDLE !== s && StatusConsts.SLEEP !== s && StatusConsts.CHARGE !== s) {
          _this.setState({
            currentHint: 'remoteControl',
            showDialog: true
          });
        } else {
          _this._checkWifi();
        }
      };

      _this._resetMap = function () {
        if (_this._isWorking()) {
          _this.setState({
            currentHint: 'resetMap',
            showDialog: true
          });
        } else {
          _this.setState({
            currentHint: ACTION.DELETE_MAP,
            showDialog: true
          });
        }
      };

      _this._goToVirtualMap = function () {
        var status = _this.props.robotStore.status;

        if (status == StatusConsts.SWEEP) {
          _this.setState({
            currentHint: 'stopWorkToVirtualWall',
            showDialog: true
          });
        } else if (status == StatusConsts.BACK_CHARGE) {
          _this.setState({
            currentHint: 'stopChargeToVirtualWall',
            showDialog: true
          });
        } else {
          var navigation = _this.props.navigation;
          navigation.push('VirtualWall', {
            title: _localString.default.virtual_wall,
            status: status
          });
        }
      };

      _this._onDustFreqSelect = function (choice) {
        var freq = 3 - choice[0];

        _api.SpecApi.specS(PROP.WORK_STATION_FREQ, freq).then(function (success) {
          _this.showResult(true);

          if (success) {
            _this.setState({
              workStationFreq: freq
            });
          }
        });
      };

      _this._changeEdgeSweep = function (enable) {
        var v = enable;

        _this.setState({
          edgeSweep: enable
        });

        _api.SpecApi.specS(PROP.EDGE_SWEEP, v).then(function (sucess) {
          if (!sucess) {
            _this.showResult(false);

            _this.setState({
              edgeSweep: !v
            });
          } else {
            if (v && _this.state.doubleClean) {
              _this.secondCleaning(false);
            }
          }
        });
      };

      _this._isWorking = function () {
        var status = _this.props.robotStore.status;
        var s = +status;
        return s === StatusConsts.BACK_CHARGE || s === StatusConsts.SWEEP || s === StatusConsts.PAUSE || s === StatusConsts.PAUSE_BACK_CHARGE;
      };

      _this._handleMapOpResult = function (code) {
        var c = +code;
        return _FunUtils.default.wait(1000).then(function () {
          if (c === _ApiCode.default.SUCCESS) {
            _UIUtils.default.info(_localString.default.ctl_success);
          } else if (c === _ApiCode.default.TIME_OUT || c === _ApiCode.default.WAIT_TIME_OUT) {
            _UIUtils.default.info(_localString.default.time_out);
          } else {
            _UIUtils.default.info(_localString.default.ctrl_fail);
          }

          return c === _ApiCode.default.SUCCESS;
        });
      };

      _this._handleHintConfirm = function (hint) {
        _this.setState({
          showDialog: false
        });

        var _this$state$edgeSweep = _this.state.edgeSweep,
            edgeSweep = _this$state$edgeSweep === undefined ? false : _this$state$edgeSweep;
        var status = _this.props.robotStore.status;

        switch (hint) {
          case ACTION.DELETE_MAP:
            _this.setState({
              showStopLoading: true
            });

            _AsyncMapApi.default.specA(ACTION.RESET_CURRENT_MAP, {
              Type: _MapOpConst.default.MAP_RESET
            }).then(_this._handleMapOpResult).then(function () {
              _this.setState({
                showStopLoading: false,
                customSwitch: true
              });
            });

            break;

          case ACTION.FIND_ROBOT:
            _api.SpecApi.specA(ACTION.FIND_ROBOT).then(function (success) {
              if (!success && _this.mounted) {
                _this.showResult(false);
              }
            });

            break;

          case ACTION.RESET_FACTORY:
            _api.SpecApi.specA(ACTION.RESET_FACTORY).then(function (success) {
              if (!success && _this.mounted) {
                _this.showResult(false);
              }
            });

            break;

          case ACTION.DEVICE_CORRECTING:
            _api.SpecApi.specA(ACTION.DEVICE_CORRECTING).then(function (success) {
              if (success && _this.mounted) {
                _this.setState({
                  currentHint: 'deviceCorrectingSuccess',
                  showDialog: true
                });
              }
            });

            break;

          case 'stopChargeToVirtualWall':
            if (status == StatusConsts.BACK_CHARGE) {
              _this.setState({
                showStopLoading: true
              }, function () {
                _api.SpecApi.specActionSyncProp(ACTION.STOP_FIND_CHARGE, [], false, PROP.STATUS, [StatusConsts.IDLE, StatusConsts.PAUSE, StatusConsts.FAULT]).then(function (success) {
                  _this.setState({
                    showStopLoading: false
                  }, function () {
                    if (success) {
                      _this.props.navigation.navigate('VirtualWall', {
                        title: _localString.default.virtual_wall,
                        status: status
                      });
                    } else {
                      _this.showResult(false);
                    }
                  });
                });
              });
            }

            break;

          case 'stopWorkToVirtualWall':
            if (status == StatusConsts.SWEEP) {
              _this.setState({
                showStopLoading: true
              }, function () {
                _api.SpecApi.specActionSyncProp(ACTION.PAUSE, [], false, PROP.STATUS, [StatusConsts.PAUSE, StatusConsts.FAULT]).then(function (success) {
                  if (success) {
                    _this.setState({
                      showStopLoading: false
                    }, function () {
                      _this.props.navigation.navigate('VirtualWall', {
                        title: _localString.default.virtual_wall,
                        status: status
                      });
                    });
                  } else {
                    _this.setState({
                      showStopLoading: false
                    });

                    _this.showResult(false);
                  }
                });
              });
            }

            break;

          case 'resetMap':
            _this.setState({
              showStopLoading: true
            }, function () {
              _api.SpecApi.specActionSyncProp(ACTION.STOP_SWEEPING, [], false, PROP.STATUS, StatusConsts.IDLE).then(function (success) {
                if (success) {
                  _this._handleHintConfirm(ACTION.DELETE_MAP);
                } else {
                  _this.setState({
                    showStopLoading: false
                  });

                  _UIUtils.default.info(_localString.default.operator_fail);
                }
              });
            });

            break;

          case 'stopClean':
            _this.setState({
              showStopLoading: true
            }, function () {
              _api.SpecApi.specActionSyncProp(ACTION.STOP_SWEEPING, [], false, PROP.STATUS, StatusConsts.IDLE).then(function (success) {
                _this.setState({
                  showStopLoading: false
                }, function () {
                  if (success) {
                    var robotStore = _this.props.robotStore;
                    robotStore.updateState({
                      status: StatusConsts.IDLE
                    });
                    var navigation = _this.props.navigation;
                    navigation.push('ZoneEdit');
                  } else {
                    _UIUtils.default.info(_localString.default.ctrl_fail);
                  }
                });
              });
            });

            break;

          case 'remoteControl':
            _this.setState({
              showStopLoading: true
            }, function () {
              _api.SpecApi.specActionSyncProp(ACTION.STOP_SWEEPING, [], false, PROP.STATUS, StatusConsts.IDLE).then(function (success) {
                _this.setState({
                  showStopLoading: false
                }, function () {
                  if (success) {
                    var robotStore = _this.props.robotStore;
                    robotStore.updateState({
                      status: StatusConsts.IDLE
                    });

                    _this._checkWifi();
                  } else {
                    _this.showResult(false);
                  }
                });
              });
            });

            break;

          case PROP.EDGE_SWEEP:
            _this.setState({
              showStopLoading: true
            }, function () {
              _api.SpecApi.specS(PROP.EDGE_SWEEP, !edgeSweep).then(function (success) {
                _this.setState({
                  showStopLoading: false
                }, function () {
                  if (success) {
                    var robotStore = _this.props.robotStore;
                    robotStore.updateState({
                      status: StatusConsts.IDLE
                    });

                    _this.setState({
                      edgeSweep: !edgeSweep
                    });

                    if (!edgeSweep && _this.state.doubleClean) {
                      _this.secondCleaning(false);
                    }
                  } else {
                    _this.showResult(false);
                  }
                });
              });
            });

            break;

          default:
            _this.setState({
              showDialog: false
            });

            break;
        }
      };

      _this._renderVoiceAdjust = function () {
        var _this$state = _this.state,
            _this$state$mute = _this$state.mute,
            mute = _this$state$mute === undefined ? false : _this$state$mute,
            _this$state$volume = _this$state.volume,
            volume = _this$state$volume === undefined ? 50 : _this$state$volume;

        if (mute) {
          return null;
        }

        return _react.default.createElement(_ListItem.ListItemWithSlider, {
          title: _localString.default.volume_setting,
          showSeparator: true,
          useNewType: false,
          titleStyle: {
            fontFamily: 'System',
            fontWeight: 'normal'
          },
          containerStyle: {
            width: screenWidth
          },
          showWithPercent: false,
          valueStyle: {
            color: Colors.mainColor
          },
          sliderStyle: {
            minimumTrackTintColor: Colors.mainColor,
            thumbTintColor: Colors.mainColor
          },
          onSlidingComplete: function onSlidingComplete(value) {
            var v = _this.state.volume;

            _api.SpecApi.specS(PROP.VOLUME, value).then(function (success) {
              if (!success) {
                _this.setState({
                  volume: v
                });

                _this.showResult(false);
              } else {
                _this.setState({
                  volume: value
                });
              }
            });
          },
          sliderProps: {
            minimumValue: 10,
            maximumValue: 100,
            step: 1,
            value: volume || 10
          }
        });
      };

      _this.showResult = function (success) {
        if (!_this.mounted) {
          return;
        }

        if (success) {
          _UIUtils.default.info(_localString.default.operator_success);
        } else {
          _UIUtils.default.info(_localString.default.operator_fail);
        }
      };

      _this.isCheckLocal = false;
      _this.state = {
        voiceEnable: true,
        currentHint: '',
        showDialog: false,
        showStopLoading: false,
        customSwitch: true
      };
      _this.needSyncProps = SYNC_PROPS;
      _this.propTime = {
        volume: 0
      };
      return _this;
    }

    (0, _createClass2.default)(FeatureSetting, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(FeatureSetting.prototype), "componentDidMount", this).call(this);

        this._loadData(true);

        _PushManager.default.addObserver("Settings", this._handlePushMessage, {
          props: PUSH_PROPS
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(FeatureSetting.prototype), "componentWillUnmount", this).call(this);
        this.mounted = false;

        _PushManager.default.removeObserver("Settings");

        this.setState = function () {
          return;
        };
      }
    }, {
      key: "secondCleaning",
      value: function secondCleaning(enable) {
        var _this2 = this;

        var v = enable;
        this.setState({
          doubleClean: enable
        });

        _api.SpecApi.specS(PROP.DOUBLE_CLEAN, v).then(function (sucess) {
          if (!sucess) {
            _this2.showResult(false);

            _this2.setState({
              doubleClean: !v
            });
          } else {
            if (v && _this2.state.edgeSweep) {
              _this2._changeEdgeSweep(false);
            }
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state2 = this.state,
            _this$state2$autoBoos = _this$state2.autoBoost,
            autoBoost = _this$state2$autoBoos === undefined ? false : _this$state2$autoBoos,
            _this$state2$showLoad = _this$state2.showLoading,
            showLoading = _this$state2$showLoad === undefined ? false : _this$state2$showLoad,
            _this$state2$doubleCl = _this$state2.doubleClean,
            doubleClean = _this$state2$doubleCl === undefined ? false : _this$state2$doubleCl,
            _this$state2$showStop = _this$state2.showStopLoading,
            showStopLoading = _this$state2$showStop === undefined ? false : _this$state2$showStop,
            _this$state2$workStat = _this$state2.workStationFreq,
            workStationFreq = _this$state2$workStat === undefined ? 1 : _this$state2$workStat,
            _this$state2$mapMemor = _this$state2.mapMemory,
            mapMemory = _this$state2$mapMemor === undefined ? true : _this$state2$mapMemor,
            _this$state2$mute = _this$state2.mute,
            mute = _this$state2$mute === undefined ? false : _this$state2$mute,
            _this$state2$showDial = _this$state2.showDialog,
            showDialog = _this$state2$showDial === undefined ? false : _this$state2$showDial,
            _this$state2$edgeSwee = _this$state2.edgeSweep,
            edgeSweep = _this$state2$edgeSwee === undefined ? false : _this$state2$edgeSwee,
            _this$state2$showDust = _this$state2.showDustFreq,
            showDustFreq = _this$state2$showDust === undefined ? false : _this$state2$showDust,
            _this$state2$currentH = _this$state2.currentHint,
            currentHint = _this$state2$currentH === undefined ? ACTION.FIND_ROBOT : _this$state2$currentH;

        var freqIndex = 3 - _utils.default.clamp(+workStationFreq, 0, 3);

        var _this$props2 = this.props,
            navigation = _this$props2.navigation,
            disturbStore = _this$props2.disturbStore,
            timingStore = _this$props2.timingStore;
        var time = disturbStore.time;
        var ttime = timingStore.time,
            _timingStore$state = timingStore.state,
            state = _timingStore$state === undefined ? 0 : _timingStore$state;
        var distubStr = time.length <= 0 || +time[2] === 0 ? _localString.default.no_disturb_disable : _localString.default.no_disturb_time.format(_DateUtils.default.formatTime(time[0]), _DateUtils.default.formatTime(time[1]));
        var timingStr;

        if (state === 0) {
          timingStr = _localString.default.loading;
        } else if (state === -1) {
          timingStr = _localString.default.load_fail_retry;
        } else {
          var tcount = ttime.filter(function (t) {
            return +t[1] === 1;
          }).length;
          timingStr = tcount > 0 ? _localString.default.x_schedule.format(tcount) : _localString.default.no_schedule;
        }

        var hitOption = HIT_MAP[currentHint] || {};
        var title = hitOption.title,
            message = hitOption.message,
            confirm = hitOption.confirm,
            cancel = hitOption.cancel;
        var buttons = [];
        var promptTxt = '';

        if (cancel) {
          promptTxt = _localString.default.cancel;
          buttons.push({
            text: _localString.default.cancel,
            style: {
              color: Colors.secondColor
            },
            callback: function callback() {
              _this3.setState({
                showDialog: false
              });
            }
          });
        }

        if (confirm) {
          promptTxt = _localString.default.confirm;
          buttons.push({
            text: _localString.default.confirm,
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            style: {
              color: Colors.mainColor
            },
            callback: function callback() {
              _this3._handleHintConfirm(currentHint);
            }
          });
        }

        var showDev = _DevConfig.default.isWhiteList();

        return _react.default.createElement(_reactNative.View, null, showDev ? _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.dev_page,
          showSeparator: true,
          onPress: function onPress() {
            return _NavUtils.default.push(navigation, 'Dev');
          }
        }) : null, _react.default.createElement(_ListItem.ListItem, {
          style: {
            height: 200
          },
          title: _localString.default.timing_sweep,
          showSeparator: true,
          titleNumberOfLines: 2,
          value: timingStr,
          onPress: function onPress() {
            if (state === 1) {
              navigation.navigate('TimeCleanList', {
                'ishasAutoArea': _this3.props.ishasAutoArea
              });
            } else if (state === -1) {
              _this3._loadData(false);
            }
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.remote_control,
          titleNumberOfLines: 2,
          showSeparator: true,
          onPress: function onPress() {
            _this3._checkRemoteControl();
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.voiceAndVolume,
          showSeparator: true,
          onPress: function onPress() {
            navigation.navigate('SettingVoice');
          }
        }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: _localString.default.double_sweep,
          titleNumberOfLines: 2,
          subtitleNumberOfLines: 2,
          subtitle: _localString.default.repeat_sweep_once_only,
          showSeparator: true,
          unlimitedHeightEnable: true,
          subtitleStyle: {
            fontFamily: 'System',
            marginTop: 2
          },
          onTintColor: Colors.mainColor,
          value: doubleClean,
          onValueChange: function onValueChange(enable) {
            return (0, _HandlerOnceTap.default)(function () {
              _this3.secondCleaning(enable);
            });
          },
          disabled: this.state.customSwitch || this.props.ishasAutoArea().length == 0 && this.state.doubleClean == 0 ? true : false
        }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: _localString.default.edge_sweep,
          subtitle: _localString.default.setting_once_only,
          showSeparator: true,
          unlimitedHeightEnable: true,
          titleNumberOfLines: 2,
          subtitleNumberOfLines: 2,
          onTintColor: Colors.mainColor,
          subtitleStyle: {
            fontFamily: 'System',
            marginTop: 2
          },
          value: edgeSweep,
          disabled: this.state.customSwitch || this.props.ishasAutoArea().length == 0 && this.state.edgeSweep == 0 ? true : false,
          onValueChange: function onValueChange(enable) {
            return (0, _HandlerOnceTap.default)(function () {
              if (_this3.state.sweepMode != 1) {
                if (enable) {
                  _UIUtils.default.info(_localString.default.global_take);
                }
              }

              if (_this3._isWorking()) {
                _this3.setState({
                  edgeSweep: !enable
                }, function () {
                  _this3.setState({
                    showDialog: true,
                    currentHint: PROP.EDGE_SWEEP
                  });
                });
              } else {
                _this3._changeEdgeSweep(enable);
              }
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.no_disturb,
          titleNumberOfLines: 2,
          showSeparator: true,
          subtitle: distubStr,
          onPress: function onPress() {
            navigation.navigate('DisturbSetting');
          }
        }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: _localString.default.pressurize,
          titleNumberOfLines: 2,
          subtitleNumberOfLines: 2,
          unlimitedHeightEnable: true,
          subtitle: _localString.default.rug_check_tip,
          showSeparator: true,
          subtitleStyle: {
            fontFamily: 'System',
            marginTop: 2
          },
          value: autoBoost,
          onTintColor: Colors.mainColor,
          onValueChange: function onValueChange(enable) {
            return (0, _HandlerOnceTap.default)(function () {
              _this3.setState({
                autoBoost: enable
              });

              _api.SpecApi.specS(PROP.AUTO_BOOST, enable).then(function (success) {
                if (!success) {
                  _this3.setState({
                    autoBoost: !enable
                  });

                  _this3.showResult(false);
                }
              });
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.dust_collect_manage,
          showSeparator: true,
          titleNumberOfLines: 2,
          onPress: function onPress() {
            navigation.navigate('DustManager');
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.map_rest,
          containerStyle: {
            opacity: !this.props.isMapShow() ? 1 : 0.5
          },
          titleNumberOfLines: 2,
          showSeparator: true,
          disabled: !this.props.isMapShow() ? false : true,
          onPress: function onPress() {
            if (!_this3.props.isMapShow()) {
              _this3._resetMap();
            }
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.sweep_record,
          showSeparator: true,
          titleNumberOfLines: 2,
          onPress: function onPress() {
            return navigation.navigate('CleanList');
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.consumable_material_statistics,
          showSeparator: true,
          titleNumberOfLines: 2,
          onPress: function onPress() {
            navigation.navigate('MaterialList');
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.product_description,
          onPress: function onPress() {
            navigation.navigate('ProductWebView');
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.robot_search,
          showSeparator: true,
          titleNumberOfLines: 2,
          onPress: function onPress() {
            _this3.setState({
              showDialog: true,
              currentHint: ACTION.FIND_ROBOT
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.resetTxt,
          showSeparator: true,
          titleNumberOfLines: 2,
          onPress: function onPress() {
            _this3.setState({
              showDialog: true,
              currentHint: ACTION.RESET_FACTORY
            });
          }
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.showDialog,
          showTitle: false,
          showButton: false,
          onDismiss: function onDismiss() {
            _this3.setState({
              showDialog: false
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.resetAlert
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.resetAlertTitle
        }, message), _react.default.createElement(_reactNative.View, {
          style: styles.resetAlertBtn
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.resetAlertBtnLi, styles.resetAlertBtnLiYes],
          onPress: function onPress() {
            _this3._handleHintConfirm(currentHint);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.resetAlertBtnLiYesTest
        }, _localString.default.confirm)), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.resetAlertBtnLi,
          onPress: function onPress() {
            _this3.setState({
              showDialog: false
            });
          }
        }, _react.default.createElement(_reactNative.Text, null, _localString.default.cancel))))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          message: _localString.default.ping_loading,
          timeout: 35000
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          timeout: 10000,
          visible: showStopLoading,
          message: _localString.default.ctrling
        }));
      }
    }]);
    return FeatureSetting;
  }(_BasePage2.default), _temp)));

  var styles = _reactNative.StyleSheet.create({
    resetAlert: {
      paddingHorizontal: 20,
      paddingTop: 40,
      paddingBottom: 10
    },
    resetAlertBtnLiYesTest: {
      color: '#5C92FF'
    },
    resetAlertBtnLiYes: {
      backgroundColor: 'rgba(92, 146, 255, .1)'
    },
    resetAlertBtn: {
      paddingVertical: 20
    },
    resetAlertBtnLi: {
      height: 44,
      borderRadius: 8,
      alignItems: 'center',
      justifyContent: 'center',
      marginBottom: 20
    },
    resetAlertTitle: {
      fontSize: 16,
      color: '#939AA9',
      textAlign: 'center'
    },
    editTitle: {
      backgroundColor: '#eee',
      flex: 1,
      paddingLeft: 20,
      paddingVertical: 10,
      fontSize: 12
    },
    settingBtn: {
      paddingHorizontal: 40,
      paddingVertical: 40,
      borderWidth: 0
    },
    settingBtnLi: {
      height: 60,
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#eee',
      marginTop: 20,
      borderRadius: 8
    },
    settingBtnLiBtn: {
      color: '#DF0000',
      fontSize: 16
    },
    settingBtnLiDel: {
      backgroundColor: '#fff'
    },
    settingBtnLiDelBtn: {
      fontSize: 16
    }
  });

  var _default = FeatureSetting;
  exports.default = _default;
},11804,[14305,14314,14320,14323,14371,14377,14380,14386,10297,10033,10338,10734,10035,10004,10074,10755,10064,10406,10016,10100,11807,10091,10409,11810,11813,11711,11624,11816,10106,10079,10103,11822,11687,11825]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NumUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _default = (0, _objectSpread2.default)({}, _NumUtils.default, _UIUtils.default, _MapUtils.default);

  exports.default = _default;
},11807,[14305,14314,11792,10409,11618]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _ChoiceDialog2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var SingleDialogWithButton = function (_ChoiceDialog) {
    (0, _inherits2.default)(SingleDialogWithButton, _ChoiceDialog);

    function SingleDialogWithButton() {
      (0, _classCallCheck2.default)(this, SingleDialogWithButton);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SingleDialogWithButton).apply(this, arguments));
    }

    (0, _createClass2.default)(SingleDialogWithButton, [{
      key: "render",
      value: function render() {
        var _this = this;

        if (!this.props.visible) return null;
        return _react.default.createElement(_Dialog.AbstractDialog, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          title: this.props.title,
          showButton: true,
          buttons: this.buttons,
          onDismiss: function onDismiss() {
            return _this._onDismiss();
          }
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.View, {
            key: (option.title || '') + index
          }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ChoiceItem.default, {
            type: _this.props.type,
            title: option.title || '',
            subtitle: option.subtitle || '',
            selected: _this.state.selectedArray[index],
            color: _this.props.color,
            icon: _this.props.icon,
            onPress: function onPress(selected) {
              return _this._onPress(selected, index);
            }
          }));
        }), _react.default.createElement(_Separator.default, null));
      }
    }]);
    return SingleDialogWithButton;
  }(_ChoiceDialog2.default);

  exports.default = SingleDialogWithButton;
},11810,[14305,14320,14323,14371,14377,14386,10297,10033,10734,10755,10731,10332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var DAY = 86400;
  var DAY_MS = 86400000;

  function fillNum(str, n) {
    if (n <= 0) {
      return str;
    }

    var ret = str;

    while (str.length < n) {
      ret = "0" + ret;
    }

    return ret;
  }

  function addDay(date) {
    var day = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
    var d = new Date(date);
    d.setDate(date.getDate() + day);
    return d;
  }

  function fix(t) {
    var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
    return ("0" + t).slice(-count);
  }

  function dateFormat(time, fmt) {
    var date = new Date(time);
    return fmt.replace(/yyyy|MM|dd|hh|mm|ss/g, function (a) {
      switch (a) {
        case 'yyyy':
          return date.getFullYear();

        case 'MM':
          return fix(date.getMonth() + 1);

        case 'mm':
          return fix(date.getMinutes());

        case 'dd':
          return fix(date.getDate());

        case 'hh':
          return fix(date.getHours());

        case 'ss':
          return fix(date.getSeconds());

        default:
          break;
      }

      return a;
    });
  }

  function timeFormat(time) {
    var date;

    if (time instanceof Date) {
      date = time;
    } else {
      date = new Date(time);
    }

    var hour = date.getHours();
    var minute = date.getMinutes();
    var h = hour < 10 ? "0" + hour : hour;
    var m = minute < 10 ? "0" + minute : minute;
    return h + ":" + m;
  }

  function days(start, end, ms) {
    var day = ms ? this.DAY_MS : this.DAY;
    return Math.ceil((end - start) / day);
  }

  function formatTime(time) {
    var t = time;

    if (!Array.isArray(time)) {
      t = diffToTimeArr(time);
    }

    return t.slice(0, 2).map(function (v) {
      return ("0" + v).slice(-2);
    }).join(':');
  }

  function format(time, locale) {
    var date;

    if (time instanceof Date) {
      date = time;
    } else {
      date = new Date(time);
    }

    var _ref = locale || {},
        _ref$language = _ref.language,
        language = _ref$language === undefined ? 'zh' : _ref$language;

    if (language.indexOf('zh') >= 0) {
      return dateFormat(time, 'yyyy/MM/dd');
    }

    return date.toLocaleDateString();
  }

  function timeArrToDiff(arr) {
    return arr[0] * 3600 + arr[1] * 60;
  }

  function diffToTimeArr(diff) {
    if (diff > DAY) {
      var date = new Date(diff * 1000);
      return [date.getHours(), date.getMinutes()];
    }

    var h = Math.floor(+diff / 3600);
    var m = Math.floor(+diff % 3600 / 60);
    return [h, m];
  }

  var WEEK_STR = {
    0: _localString.default.sunday,
    1: _localString.default.monday,
    2: _localString.default.tuesday,
    3: _localString.default.wednesday,
    4: _localString.default.thursday,
    5: _localString.default.friday,
    6: _localString.default.saturday,
    31: _localString.default.workday,
    64: _localString.default.sunday,
    96: _localString.default.weekday,
    127: _localString.default.everyday
  };

  function getWeekStr(week) {
    if (week.length <= 0) {
      return _localString.default.no_repeat;
    }

    var res = week.reduce(function (total, current) {
      if (+current === 0) {
        return total + 64;
      }

      return total + (1 << +current - 1);
    }, 0);
    var str;

    if (res >= 31) {
      str = WEEK_STR[res];
    }

    if (!str) {
      str = week.map(function (i) {
        return WEEK_STR[i];
      }).join(',');
    }

    return str;
  }

  function getTimeStr(time) {
    if (+time < DAY) {
      return formatTime(+time);
    }

    var t = +time * 1000;
    var target = new Date(t);
    var now = new Date();
    now.setHours(0, 0, 0, 1);
    var date = format(t, _Host.default.locale);
    var tt = timeFormat(t);

    if (now.getDate() === target.getDate()) {
      return tt;
    }

    if (target.getTime() < now.getTime() + 172800000) {
      return _localString.default.tomorrow.format(tt);
    }

    return date + " " + tt;
  }

  var _default = {
    DAY: DAY,
    DAY_MS: DAY_MS,
    FOREVER: 0xffffffff,
    days: days,
    addDay: addDay,
    fillNum: fillNum,
    timeFormat: timeFormat,
    dateFormat: dateFormat,
    format: format,
    formatTime: formatTime,
    timeArrToDiff: timeArrToDiff,
    diffToTimeArr: diffToTimeArr,
    getWeekStr: getWeekStr,
    getTimeStr: getTimeStr
  };
  exports.default = _default;
},11813,[14305,10035,10016]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MAP_API_V1 = exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _SpecApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _RPCApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _common = _$$_REQUIRE(_dependencyMap[11]);

  var EVENT = _Consts.default.EVENT,
      PROP = _Consts.default.PROP;
  var MAP_API_V1 = 1890;
  exports.MAP_API_V1 = MAP_API_V1;
  var UPDATE_MAP_TIME_OUT = 18000;

  var AsyncMapApi = function () {
    function AsyncMapApi() {
      var _this = this;

      (0, _classCallCheck2.default)(this, AsyncMapApi);

      this._getCommandCode = function (code) {
        var c = "" + code;
        c = c.substr(-3);
        c = +c;
        return c;
      };

      this._handleEventMsg = function (msg) {
        var _ref = msg || {},
            _ref$event = _ref.event;

        _ref$event = _ref$event === undefined ? {} : _ref$event;
        var mapUpdate = _ref$event.mapUpdate;

        var _ref2 = mapUpdate || {},
            value = _ref2.value;

        var _ref3 = value || {},
            Type = _ref3.Type,
            OperateId = _ref3.OperateId,
            Code = _ref3.Code;

        if (Type && _this.apiCallback[Type]) {
          var id = _this.apiCallback[Type].id;

          if (id === +OperateId) {
            var _this$apiCallback$Typ = _this.apiCallback[Type],
                resolve = _this$apiCallback$Typ.resolve,
                timer = _this$apiCallback$Typ.timer;

            if (timer) {
              clearTimeout(timer);
            }

            if (resolve !== undefined) {
              resolve(+Code);
            }
          }

          _this.apiCallback[Type] = null;
        }
      };

      this.apiCallback = {};
      this.observerRegistered = false;
      this.idPrefix = 0;
    }

    (0, _createClass2.default)(AsyncMapApi, [{
      key: "reset",
      value: function reset() {
        var _this2 = this;

        _PushManager.default.removeObserver('AsyncMapApi');

        this.observerRegistered = false;
        var keys = Object.keys(this.apiCallback);
        keys.forEach(function (key) {
          var _ref4 = _this2.apiCallback[key] || {},
              timer = _ref4.timer,
              resolve = _ref4.resolve;

          if (timer) {
            clearTimeout(timer);
          }

          if (resolve !== undefined) {
            resolve(_ApiCode.default.CANCEL);
          }

          _this2.apiCallback[key] = null;
        });
        this.apiCallback = {};
      }
    }, {
      key: "_genId",
      value: function _genId() {
        return this.idPrefix | Date.now() & 0xFFFFF;
      }
    }, {
      key: "_waitNotify",
      value: function _waitNotify(id, type, timeout) {
        var _this3 = this;

        return _regenerator.default.async(function _waitNotify$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", new Promise(function (resolve) {
                  var to = timeout;
                  var t = type;
                  var timer = setTimeout(function () {
                    _this3.apiCallback[t] = null;

                    _common.logger.info(t + " timeout, id: " + id);

                    resolve(_ApiCode.default.WAIT_TIME_OUT);
                  }, to);
                  _this3.apiCallback[t] = {
                    id: id,
                    resolve: resolve,
                    timer: timer,
                    time: Date.now()
                  };
                }));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }, {
      key: "_handleCommandNotifyResult",
      value: function _handleCommandNotifyResult(res) {
        var c = "" + res[0];
        c = c.substr(-3);
        var cmdCode = +c;

        if (cmdCode === 0 && +res[0] !== 0) {
          cmdCode = _ApiCode.default.UNKNOWN;
        }

        var notifyCode = res[1];

        _common.logger.info("handle command notify result: " + JSON.stringify(res) + ", cmd: " + cmdCode + ", notify: " + notifyCode);

        if (cmdCode === _ApiCode.default.SUCCESS || notifyCode === _ApiCode.default.SUCCESS || (cmdCode === _ApiCode.default.TIME_OUT || cmdCode === _ApiCode.default.UNKNOWN) && notifyCode !== _ApiCode.default.WAIT_TIME_OUT) {
          return notifyCode;
        }

        return cmdCode;
      }
    }, {
      key: "specS",
      value: function specS(name, value) {
        var timeout,
            _ref5,
            Type,
            oid,
            param,
            _args2 = arguments;

        return _regenerator.default.async(function specS$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                timeout = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : UPDATE_MAP_TIME_OUT;
                _ref5 = value || {}, Type = _ref5.Type;

                if (Type) {
                  _context2.next = 4;
                  break;
                }

                return _context2.abrupt("return", _SpecApi.default.specS(name, JSON.stringify(value)));

              case 4:
                if (!this.apiCallback[Type]) {
                  _context2.next = 7;
                  break;
                }

                _common.logger.info("api callback exist, oning");

                return _context2.abrupt("return", Promise.resolve(_ApiCode.default.ONING));

              case 7:
                this._checkInit();

                oid = this._genId();
                param = (0, _objectSpread2.default)({
                  OperateId: oid
                }, value);
                return _context2.abrupt("return", Promise.all([_SpecApi.default.specSet(name, JSON.stringify(param)), this._waitNotify(oid, Type, timeout)]).then(this._handleCommandNotifyResult).catch(function (err) {
                  _common.logger.warn("spec action fail, " + err);

                  return _ApiCode.default.EXCEPTION;
                }));

              case 11:
              case "end":
                return _context2.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "rpcA",
      value: function rpcA(name, value) {
        var _this4 = this;

        var timeout,
            oid,
            param,
            _args3 = arguments;
        return _regenerator.default.async(function rpcA$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                timeout = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : UPDATE_MAP_TIME_OUT;

                if (!this.apiCallback[name]) {
                  _context3.next = 3;
                  break;
                }

                return _context3.abrupt("return", Promise.resolve(_ApiCode.default.ONING));

              case 3:
                oid = this._genId();
                param = (0, _objectSpread2.default)({
                  OperateId: oid
                }, value);
                return _context3.abrupt("return", _RPCApi.default.rpc(name, JSON.stringify(param)).then(function (res) {
                  _this4.apiCallback[name] = null;

                  _common.logger.info("rpc " + name + ", params: " + JSON.stringify(param) + ", success: " + JSON.stringify(res));
                }).catch(function (err) {
                  _this4.apiCallback[name] = null;

                  _common.logger.info("rpc " + name + ", params: " + JSON.stringify(param) + ", fail: " + JSON.stringify(err));

                  return _ApiCode.default.EXCEPTION;
                }));

              case 6:
              case "end":
                return _context3.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "specA",
      value: function specA(name, value, silent) {
        var timeout,
            _ref6,
            Type,
            oid,
            param,
            _args4 = arguments;

        return _regenerator.default.async(function specA$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                timeout = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : UPDATE_MAP_TIME_OUT;
                _ref6 = value || {}, Type = _ref6.Type;

                if (Type) {
                  _context4.next = 4;
                  break;
                }

                return _context4.abrupt("return", _SpecApi.default.specA(name, value, silent));

              case 4:
                if (!this.apiCallback[Type]) {
                  _context4.next = 7;
                  break;
                }

                _common.logger.info("api callback exist, oning");

                return _context4.abrupt("return", Promise.resolve(_ApiCode.default.ONING));

              case 7:
                this._checkInit();

                oid = this._genId();
                param = (0, _objectSpread2.default)({
                  OperateId: oid
                }, value);
                return _context4.abrupt("return", Promise.all([_SpecApi.default.specAction(name, [JSON.stringify(param)], silent), this._waitNotify(oid, Type, timeout)]).then(this._handleCommandNotifyResult).catch(function () {
                  return _ApiCode.default.EXCEPTION;
                }));

              case 11:
              case "end":
                return _context4.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "_checkInit",
      value: function _checkInit() {
        if (!this.observerRegistered) {
          _PushManager.default.addObserver('AsyncMapApi', this._handleEventMsg, {
            events: [EVENT.MAP_UPDATE]
          });

          this.observerRegistered = true;
        }

        if (!this.idPrefix) {
          var id = _Service.default.account.ID || 0;
          id = +id;

          if (id) {
            this.idPrefix = (id & 0x7FF) << 20;
          }
        }
      }
    }]);
    return AsyncMapApi;
  }();

  var asyncMapApi = new AsyncMapApi();
  var _default = asyncMapApi;
  exports.default = _default;
},11816,[14305,14314,14674,14320,14323,11711,10064,10097,11819,10062,10103,10109]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _miot = _$$_REQUIRE(_dependencyMap[2]);

  var _protocal = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  function rpc(name, params) {
    return _regenerator.default.async(function rpc$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", _miot.Device.getDeviceWifi().callMethod(name, params));

          case 1:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  function parseGet(res, props) {
    var result = {};
    var v;
    res.forEach(function (item, index) {
      if (item !== null && typeof item === 'object') {
        Object.keys(item).forEach(function (key) {
          v = item[key];

          if (v !== null && v !== undefined) {
            if (_protocal.default.prop[key]) {
              result[_protocal.default.prop[key]] = v;
            } else {
              _logger.default.info("find " + key + " in protocal fail");
            }
          }
        });
      } else {
        if (item !== null && item !== undefined) {
          result[_protocal.default.prop[props[index]]] = value;
        }
      }
    });
    return result;
  }

  function rpcGet(params) {
    var p, _ref2, siid, piid;

    return _regenerator.default.async(function rpcGet$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (Array.isArray(params)) {
              p = params.map(function (param) {
                var _ref = _protocal.default.prop[param] || {},
                    siid = _ref.siid,
                    piid = _ref.piid;

                if (siid && piid) {
                  return siid + "." + piid;
                }

                _logger.default.info(param + " not exist");

                return null;
              }).filter(function (item) {
                return item !== null;
              });
            } else {
              _ref2 = _protocal.default.prop[params] || {}, siid = _ref2.siid, piid = _ref2.piid;

              if (siid && piid) {
                p = [siid + "." + piid];
              }

              p = [params];
            }

            return _context2.abrupt("return", rpc('get_prop', p).then(function (res) {
              return parseGet(res, p);
            }).catch(function (err) {
              _logger.default.info("rpcGet fail, parama: " + JSON.stringify(p) + ", " + JSON.stringify(err));

              return null;
            }));

          case 2:
          case "end":
            return _context2.stop();
        }
      }
    });
  }

  var _default = {
    rpc: rpc,
    rpcGet: rpcGet
  };
  exports.default = _default;
},11819,[14305,14674,10074,10094,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var taskComplete = true;
  var timer = null;

  function push(navigation, name, params) {
    return _regenerator.default.async(function push$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (taskComplete) {
              taskComplete = false;

              if (timer) {
                clearTimeout(timer);
              }

              timer = setTimeout(function () {
                taskComplete = true;
              }, 600);
              navigation.navigate(name, params);
            } else {}

          case 1:
          case "end":
            return _context.stop();
        }
      }
    });
  }

  var _default = {
    push: push
  };
  exports.default = _default;
},11822,[14305,14674]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 6,
    "height": 10,
    "scales": [2, 3],
    "hash": "a043631a13e405dfde7070b46a65e1be",
    "name": "select_icon",
    "type": "png"
  });
},11825,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Header", {
    enumerable: true,
    get: function get() {
      return _Header.default;
    }
  });
  Object.defineProperty(exports, "LearnMoreLinks", {
    enumerable: true,
    get: function get() {
      return _LearnMoreLinks.default;
    }
  });
  Object.defineProperty(exports, "Colors", {
    enumerable: true,
    get: function get() {
      return _Colors.default;
    }
  });
  Object.defineProperty(exports, "DebugInstructions", {
    enumerable: true,
    get: function get() {
      return _DebugInstructions.default;
    }
  });
  Object.defineProperty(exports, "ReloadInstructions", {
    enumerable: true,
    get: function get() {
      return _ReloadInstructions.default;
    }
  });

  var _Header = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _LearnMoreLinks = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _DebugInstructions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _ReloadInstructions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));
},11828,[14305,11831,11840,11834,11846,11849]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var Header = function Header() {
    return _react.default.createElement(_reactNative.ImageBackground, {
      accessibilityRole: 'image',
      source: _$$_REQUIRE(_dependencyMap[4]),
      style: styles.background,
      imageStyle: styles.logo
    }, _react.default.createElement(_reactNative.Text, {
      style: styles.text
    }, "Welcome to React"));
  };

  var styles = _reactNative.StyleSheet.create({
    background: {
      paddingBottom: 40,
      paddingTop: 96,
      paddingHorizontal: 32,
      backgroundColor: _Colors.default.lighter
    },
    logo: {
      opacity: 0.2,
      overflow: 'visible',
      resizeMode: 'cover',
      marginLeft: -128,
      marginBottom: -192
    },
    text: {
      fontSize: 40,
      fontWeight: '600',
      textAlign: 'center',
      color: _Colors.default.black
    }
  });

  var _default = Header;
  exports.default = _default;
},11831,[14305,11834,10033,10297,11837]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    primary: '#1292B4',
    white: '#FFF',
    lighter: '#F3F3F3',
    light: '#DAE1E7',
    dark: '#444',
    black: '#000'
  };
  exports.default = _default;
},11834,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/react-native/Libraries/NewAppScreen/components",
    "width": 512,
    "height": 512,
    "scales": [1],
    "hash": "47ce6e77f039020ee2e76a10c1e988e9",
    "name": "logo",
    "type": "png"
  });
},11837,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _openURLInBrowser = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var links = [{
    title: 'The Basics',
    link: 'https://facebook.github.io/react-native/docs/tutorial',
    description: 'Explains a Hello World for React Native.'
  }, {
    title: 'Style',
    link: 'https://facebook.github.io/react-native/docs/style',
    description: 'Covers how to use the prop named style which controls the visuals.'
  }, {
    title: 'Layout',
    link: 'https://facebook.github.io/react-native/docs/flexbox',
    description: 'React Native uses flexbox for layout, learn how it works.'
  }, {
    title: 'Components',
    link: 'https://facebook.github.io/react-native/docs/components-and-apis',
    description: 'The full list of components and APIs inside React Native.'
  }, {
    title: 'Navigation',
    link: 'https://facebook.github.io/react-native/docs/navigation',
    description: 'How to handle moving between screens inside your application.'
  }, {
    title: 'Networking',
    link: 'https://facebook.github.io/react-native/docs/network',
    description: 'How to use the Fetch API in React Native.'
  }, {
    title: 'Help',
    link: 'https://facebook.github.io/react-native/help',
    description: 'Need more help? There are many other React Native developers who may have the answer.'
  }, {
    title: 'Follow us on Twitter',
    link: 'https://twitter.com/reactnative',
    description: 'Stay in touch with the community, join in on Q&As and more by following React Native on Twitter.'
  }];

  var LinkList = function LinkList() {
    return _react.default.createElement(_reactNative.View, {
      style: styles.container
    }, links.map(function (item, index) {
      return _react.default.createElement(_react.default.Fragment, {
        key: index
      }, _react.default.createElement(_reactNative.View, {
        style: styles.separator
      }), _react.default.createElement(_reactNative.TouchableOpacity, {
        accessibilityRole: 'button',
        onPress: function onPress() {
          return (0, _openURLInBrowser.default)(item.link);
        },
        style: styles.linkContainer
      }, _react.default.createElement(_reactNative.Text, {
        style: styles.link
      }, item.title), _react.default.createElement(_reactNative.Text, {
        style: styles.description
      }, item.description)));
    }));
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      marginTop: 32,
      paddingHorizontal: 24
    },
    linkContainer: {
      flexWrap: 'wrap',
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center',
      paddingVertical: 8
    },
    link: {
      flex: 2,
      fontSize: 18,
      fontWeight: '400',
      color: _Colors.default.primary
    },
    description: {
      flex: 3,
      paddingVertical: 16,
      fontWeight: '400',
      fontSize: 18,
      color: _Colors.default.dark
    },
    separator: {
      backgroundColor: _Colors.default.light,
      height: 1
    }
  });

  var _default = LinkList;
  exports.default = _default;
},11840,[14305,11834,11843,10033,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var getDevServer = _$$_REQUIRE(_dependencyMap[0]);

  function openURLInBrowser(url) {
    fetch(getDevServer().url + 'open-url', {
      method: 'POST',
      body: JSON.stringify({
        url: url
      })
    });
  }

  module.exports = openURLInBrowser;
},11843,[10894]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var styles = _reactNative.StyleSheet.create({
    highlight: {
      fontWeight: '700'
    }
  });

  var DebugInstructions = _reactNative.Platform.select({
    ios: function ios() {
      return _react.default.createElement(_reactNative.Text, null, "Press ", _react.default.createElement(_reactNative.Text, {
        style: styles.highlight
      }, "Cmd + D"), " in the simulator or", ' ', _react.default.createElement(_reactNative.Text, {
        style: styles.highlight
      }, "Shake"), " your device to open the React Native debug menu.");
    },
    default: function _default() {
      return _react.default.createElement(_reactNative.Text, null, "Press ", _react.default.createElement(_reactNative.Text, {
        style: styles.highlight
      }, "Cmd or Ctrl + M"), " or", ' ', _react.default.createElement(_reactNative.Text, {
        style: styles.highlight
      }, "Shake"), " your device to open the React Native debug menu.");
    }
  });

  var _default2 = DebugInstructions;
  exports.default = _default2;
},11846,[14305,10033,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[1]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var styles = _reactNative.StyleSheet.create({
    highlight: {
      fontWeight: '700'
    }
  });

  var ReloadInstructions = _reactNative.Platform.select({
    ios: function ios() {
      return _react.default.createElement(_reactNative.Text, null, "Press ", _react.default.createElement(_reactNative.Text, {
        style: styles.highlight
      }, "Cmd + R"), " in the simulator to reload your app's code.");
    },
    default: function _default() {
      return _react.default.createElement(_reactNative.Text, null, "Double tap ", _react.default.createElement(_reactNative.Text, {
        style: styles.highlight
      }, "R"), " on your keyboard to reload your app's code.");
    }
  });

  var _default2 = ReloadInstructions;
  exports.default = _default2;
},11849,[14305,10033,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var Colors = _Consts.default.Colors,
      LdStyles = _Consts.default.LdStyles;

  var HdContainView = function (_React$Component) {
    (0, _inherits2.default)(HdContainView, _React$Component);

    function HdContainView(props) {
      (0, _classCallCheck2.default)(this, HdContainView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HdContainView).call(this, props));
    }

    (0, _createClass2.default)(HdContainView, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            style = _this$props.style;
        return _react.default.createElement(_reactNative.ImageBackground, {
          style: {
            height: '100%',
            width: '100%'
          },
          source: _$$_REQUIRE(_dependencyMap[9])
        }, _react.default.createElement(_reactNative.View, {
          style: [Styles.SecondContainer, style]
        }, children.constructor === Array ? children.map(function (item, index) {
          return item;
        }) : children));
      }
    }]);
    return HdContainView;
  }(_react.default.Component);

  var Styles = _reactNative.StyleSheet.create({
    Container: {
      backgroundColor: Colors.mainColor,
      flex: 1
    },
    SecondContainer: {
      flex: 1,
      overflow: 'hidden',
      backgroundColor: Colors.backgroundColor,
      borderTopLeftRadius: LdStyles.ldNavigationRadius,
      borderTopRightRadius: LdStyles.ldNavigationRadius
    }
  });

  var _default = HdContainView;
  exports.default = _default;
},11852,[14305,14320,14323,14371,14377,14386,10297,10033,10064,11855]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 360,
    "height": 480,
    "scales": [1],
    "hash": "eeda3ef632a26a26166115d66867bb81",
    "name": "seback",
    "type": "jpg"
  });
},11855,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Package = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _DevConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var PROP = _Consts.default.PROP,
      Colors = _Consts.default.Colors;

  var DevPage = function (_React$Component) {
    (0, _inherits2.default)(DevPage, _React$Component);

    function DevPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DevPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DevPage).call(this, props));
      _this.state = {
        showTransitionPath: _DevConfig.default.getConfig('showTransitionPath'),
        fillMap: _DevConfig.default.getConfig('fillMap'),
        connectPath: _DevConfig.default.getConfig('connectPath'),
        showOriginPath: _DevConfig.default.getConfig('showOriginPath')
      };
      return _this;
    }

    (0, _createClass2.default)(DevPage, [{
      key: "_goPage",
      value: function _goPage(pageName, params) {
        if (pageName) {
          var navigation = this.props.navigation;

          var _ref = params || {},
              _ref$title = _ref.title,
              title = _ref$title === undefined ? pageName : _ref$title;

          navigation.navigate('DevDetail', (0, _objectSpread2.default)({
            componentName: pageName
          }, params, {
            title: title
          }));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var packageVersion = _Package.default.version || '';
        var _this$state = this.state,
            _this$state$showTrans = _this$state.showTransitionPath,
            showTransitionPath = _this$state$showTrans === undefined ? false : _this$state$showTrans,
            _this$state$fillMap = _this$state.fillMap,
            fillMap = _this$state$fillMap === undefined ? false : _this$state$fillMap,
            _this$state$connectPa = _this$state.connectPath,
            connectPath = _this$state$connectPa === undefined ? false : _this$state$connectPa,
            _this$state$showOrigi = _this$state.showOriginPath,
            showOriginPath = _this$state$showOrigi === undefined ? false : _this$state$showOrigi;
        return _react.default.createElement(_reactNative.ScrollView, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.ListItem, {
          title: "plugin version",
          value: packageVersion.toString(),
          hideArrow: true
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "AutoTest",
          onPress: function onPress() {
            _this2._goPage('AutoTest');
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "Demo",
          onPress: function onPress() {
            _this2._goPage('Demo');
          }
        }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: "\u5C55\u793A\u8F6C\u573A\u8DEF\u5F84",
          titleNumberOfLines: 2,
          showSeparator: true,
          titleStyle: {
            fontFamily: 'System'
          },
          onTintColor: Colors.mainColor,
          value: showTransitionPath,
          onValueChange: function onValueChange(enable) {
            _DevConfig.default.updateConfig({
              showTransitionPath: enable
            });

            _this2.setState({
              showTransitionPath: enable
            });
          },
          onPress: function onPress() {}
        }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: "\u5C55\u793A\u586B\u5145\u5730\u56FE",
          titleNumberOfLines: 2,
          showSeparator: true,
          titleStyle: {
            fontFamily: 'System'
          },
          onTintColor: Colors.mainColor,
          value: fillMap,
          onValueChange: function onValueChange(enable) {
            _DevConfig.default.updateConfig({
              fillMap: enable
            });

            _this2.setState({
              fillMap: enable
            });
          },
          onPress: function onPress() {}
        }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: "\u8FDE\u63A5\u65AD\u7EBF",
          titleNumberOfLines: 2,
          showSeparator: true,
          titleStyle: {
            fontFamily: 'System'
          },
          onTintColor: Colors.mainColor,
          value: connectPath,
          onValueChange: function onValueChange(enable) {
            _DevConfig.default.updateConfig({
              connectPath: enable
            });

            _this2.setState({
              connectPath: enable
            });
          },
          onPress: function onPress() {}
        }), _react.default.createElement(_ListItem.ListItemWithSwitch, {
          title: "\u5C55\u793A\u539F\u59CB\u8DEF\u5F84",
          titleNumberOfLines: 2,
          showSeparator: true,
          titleStyle: {
            fontFamily: 'System'
          },
          onTintColor: Colors.mainColor,
          value: showOriginPath,
          onValueChange: function onValueChange(enable) {
            _DevConfig.default.updateConfig({
              showOriginPath: enable
            });

            _this2.setState({
              showOriginPath: enable
            });
          },
          onPress: function onPress() {}
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "GestureDemo",
          onPress: function onPress() {
            _this2._goPage('GestureDemo');
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "scale demo",
          onPress: function onPress() {
            _this2._goPage('ScaleView', {
              title: '缩放Demo'
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "Scroll demo",
          onPress: function onPress() {
            _this2._goPage('ScrollDemo', {
              title: '滑动Demo'
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "TaskDemo",
          onPress: function onPress() {
            _this2._goPage('TaskDemo', {
              title: '任务Demo'
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "LottieView\u9875\u9762",
          onPress: function onPress() {
            _this2._goPage('LottieView', {
              title: 'LottieView'
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "Robot demo",
          onPress: function onPress() {
            _this2._goPage('RobotDemo', {
              title: '机器人Demo'
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "Room demo",
          onPress: function onPress() {
            _this2._goPage('RoomDemo', {
              title: '房间Demo'
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "Parallax demo",
          onPress: function onPress() {
            _this2._goPage('Parallax', {
              title: 'Parallax Demo'
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "Drawer demo",
          onPress: function onPress() {
            _this2._goPage('DrawerTest', {
              title: '抽屉Demo'
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          hideArrow: true,
          title: "MAC\u5730\u5740",
          value: _miot.Device.mac
        }), _react.default.createElement(_ListItem.ListItem, {
          hideArrow: true,
          title: "ownerId",
          value: _miot.Device.owner.ID
        }), _react.default.createElement(_ListItem.ListItem, {
          hideArrow: true,
          title: "did",
          value: _miot.Device.deviceID
        }), _react.default.createElement(_ListItem.ListItem, {
          hideArrow: true,
          title: "uid",
          value: _miot.Service.account.ID
        }));
      }
    }]);
    return DevPage;
  }(_react.default.Component);

  exports.default = DevPage;
},11858,[14305,14314,14320,14323,14371,14377,14386,10297,10338,10033,10074,10332,10056,10064,11624]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _DevRoute = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var DevDetail = function (_React$Component) {
    (0, _inherits2.default)(DevDetail, _React$Component);

    function DevDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DevDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DevDetail).call(this, props));

      _this._renderByName = function (componentName) {
        var component = _DevRoute.default[componentName];

        if (component) {
          var navigation = _this.props.navigation;
          component = _react.default.createElement(component, {
            navigation: navigation
          });
        }

        if (!component) {
          component = _react.default.createElement(_reactNative.Text, null, "\u6CA1\u6709\u5185\u5BB9");
        }

        return component;
      };

      _this.componentName = props.navigation.getParam('componentName', '');
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(DevDetail, [{
      key: "render",
      value: function render() {
        var page = this._renderByName(this.componentName);

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, page);
      }
    }]);
    return DevDetail;
  }(_react.default.Component);

  var _default = DevDetail;
  exports.default = _default;
},11861,[14305,14320,14323,14371,14377,14386,10297,10033,11864]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _ScaleViewDemo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Demo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _GestureDemo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ScrollDemo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LottieView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RobotDemo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _RoomDemo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _Parallax = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _AutoTest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _DrawerTest = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _SafeViewDemo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _TaskDemo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _default = {
    ScaleView: _ScaleViewDemo.default,
    GestureDemo: _GestureDemo.default,
    ScrollDemo: _ScrollDemo.default,
    SafeViewDemo: _SafeViewDemo.default,
    Demo: _Demo.default,
    LottieView: _LottieView.default,
    RobotDemo: _RobotDemo.default,
    RoomDemo: _RoomDemo.default,
    Parallax: _Parallax.default,
    AutoTest: _AutoTest.default,
    DrawerTest: _DrawerTest.default,
    TaskDemo: _TaskDemo.default
  };
  exports.default = _default;
},11864,[14305,11867,11873,11879,11882,11888,11891,11894,11897,11900,11903,11906,11909]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _DevButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var CIRCLE_SIZE = 200;
  var SENSITY = 1.5;

  var ScaleView = function (_React$Component) {
    (0, _inherits2.default)(ScaleView, _React$Component);

    function ScaleView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ScaleView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ScaleView).call(this, props));

      _this._handleStartShouldSetPanResponder = function () {
        return true;
      };

      _this._handleMoveShouldSetPanResponder = function () {
        return true;
      };

      _this._handlePanResponderGrant = function () {};

      _this._handlePanResponderStart = function (event, gestureState) {
        _this._logEvents('===start===', event, gestureState);

        var _event$nativeEvent = event.nativeEvent,
            identifier = _event$nativeEvent.identifier,
            locationX = _event$nativeEvent.locationX,
            locationY = _event$nativeEvent.locationY;
        var _gestureState$numberA = gestureState.numberActiveTouches,
            numberActiveTouches = _gestureState$numberA === undefined ? 0 : _gestureState$numberA;
        _this.touchPoint[+identifier] = {
          x: locationX,
          y: locationY
        };

        if (numberActiveTouches <= 0) {
          return;
        }

        if (numberActiveTouches > 1) {
          var idens = Object.keys(_this.touchPoint);

          if (idens.length < 2) {
            return;
          }

          var _this$touchPoint$iden = _this.touchPoint[idens[0]],
              x0 = _this$touchPoint$iden.x,
              y0 = _this$touchPoint$iden.y;
          var _this$touchPoint$iden2 = _this.touchPoint[idens[1]],
              x1 = _this$touchPoint$iden2.x,
              y1 = _this$touchPoint$iden2.y;
          _this.originDistance = Math.sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0));
        }
      };

      _this._handlePanResponderMove = function (event, gestureState) {
        _this._logEvents('===move===', event, gestureState);

        var _event$nativeEvent2 = event.nativeEvent,
            identifier = _event$nativeEvent2.identifier,
            x1 = _event$nativeEvent2.locationX,
            y1 = _event$nativeEvent2.locationY;
        var _gestureState$numberA2 = gestureState.numberActiveTouches,
            numberActiveTouches = _gestureState$numberA2 === undefined ? 0 : _gestureState$numberA2;
        _this.touchPoint[+identifier] = {
          x: x1,
          y: y1
        };

        if (numberActiveTouches <= 0) {
          return;
        }

        if (numberActiveTouches > 1) {
          var idens = Object.keys(_this.touchPoint);

          if (idens.length < 2) {
            return;
          }

          var other = idens.find(function (iden) {
            return +iden !== +identifier;
          });

          if (other === undefined) {
            return;
          }

          var _this$touchPoint = _this.touchPoint[+other],
              x0 = _this$touchPoint.x,
              y0 = _this$touchPoint.y;
          var distance = Math.sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0));

          _logger.default.info("originScale: " + _this.originScale + ", origin:" + _this.originDistance + ", current:" + distance);

          var oldScale = _this.state.scale;
          var scale = _this.originScale * distance / _this.originDistance;

          if (Math.abs(oldScale - scale) < SENSITY) {
            _this.setState({
              scale: scale
            });
          }
        }
      };

      _this._handlePanResponderEnd = function (event, gestureState) {
        _this._logEvents('===end===', event, gestureState);
      };

      _this._handlePanResponderRelease = function (event, gestureState) {
        _this._logEvents('===Release===', event, gestureState);

        var identifier = event.nativeEvent.identifier;
        delete _this.touchPoint[identifier];
        var scale = _this.state.scale;
        _this.originScale = scale;
      };

      _this._handlePanResponderTerminate = function (event, gestureState) {
        _this._logEvents('===Terminate===', event, gestureState);
      };

      _this._logEvents = function (tag, event, gestureState) {
        var _ref = event.nativeEvent || {},
            changedTouches = _ref.changedTouches,
            touches = _ref.touches,
            restEvent = (0, _objectWithoutProperties2.default)(_ref, ["changedTouches", "touches"]);

        _logger.default.info(tag + "-event, " + JSON.stringify(restEvent));

        _logger.default.info(tag + "-gesture, " + JSON.stringify(gestureState));
      };

      _this.originDistance = 1;
      _this.originScale = 1.0;
      _this.originRotate = 0.0;
      _this.state = {
        scale: _this.originScale,
        rotate: _this.originRotate
      };
      _this.touchPoint = {};
      _this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: _this._handleStartShouldSetPanResponder,
        onMoveShouldSetPanResponder: _this._handleMoveShouldSetPanResponder,
        onPanResponderGrant: _this._handlePanResponderGrant,
        onPanResponderStart: _this._handlePanResponderStart,
        onPanResponderEnd: _this._handlePanResponderEnd,
        onPanResponderMove: _this._handlePanResponderMove,
        onPanResponderRelease: _this._handlePanResponderRelease,
        onPanResponderTerminate: _this._handlePanResponderTerminate
      });
      return _this;
    }

    (0, _createClass2.default)(ScaleView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            scale = _this$state.scale,
            rotate = _this$state.rotate;

        _logger.default.info("render, scale: " + scale);

        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.container
        }, this._panResponder.panHandlers), _react.default.createElement(_reactNative.View, {
          style: [styles.circle, {
            transform: [{
              scale: scale
            }]
          }]
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.rect, {
            transform: [{
              rotate: rotate + "rad"
            }]
          }]
        })), _react.default.createElement(_DevButton.default, {
          title: "\u7F29\u653E",
          style: styles.btn,
          onPress: function onPress() {
            _logger.default.info("touch: " + scale);

            _this2.setState({
              scale: scale * 1.2
            });
          }
        }), _react.default.createElement(_DevButton.default, {
          title: "\u5237\u65B0",
          style: styles.rbtn,
          onPress: function onPress() {
            _logger.default.info("refresh: " + scale);

            _this2.forceUpdate();
          }
        }));
      }
    }]);
    return ScaleView;
  }(_react.default.Component);

  exports.default = ScaleView;

  var styles = _reactNative.StyleSheet.create({
    circle: {
      width: CIRCLE_SIZE,
      height: CIRCLE_SIZE,
      left: -100,
      backgroundColor: 'yellow',
      borderRadius: 100
    },
    rect: {
      width: 400,
      height: CIRCLE_SIZE,
      backgroundColor: 'green'
    },
    container: {
      flex: 1,
      backgroundColor: 'red',
      justifyContent: 'center',
      alignItems: 'center'
    },
    btn: {
      position: 'absolute',
      bottom: 20,
      left: 50
    },
    rbtn: {
      position: 'absolute',
      bottom: 20,
      right: 50
    }
  });
},11867,[14305,14344,14407,14320,14323,14371,14377,14386,10297,10033,10100,11870]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var DevButton = function (_React$PureComponent) {
    (0, _inherits2.default)(DevButton, _React$PureComponent);

    function DevButton() {
      (0, _classCallCheck2.default)(this, DevButton);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DevButton).apply(this, arguments));
    }

    (0, _createClass2.default)(DevButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            onPress = _this$props.onPress,
            style = _this$props.style,
            title = _this$props.title;
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: onPress
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.btnContainer, style]
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.title
        }, title)));
      }
    }]);
    return DevButton;
  }(_react.default.PureComponent);

  exports.default = DevButton;

  var styles = _reactNative.StyleSheet.create({
    btnContainer: {
      width: 80,
      height: 40,
      backgroundColor: '#00f',
      alignItems: 'center',
      justifyContent: 'center'
    },
    title: {
      fontSize: 14,
      color: 'white'
    }
  });
},11870,[14305,14320,14323,14371,14377,14386,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _ListItem2 = _$$_REQUIRE(_dependencyMap[10]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _api = _$$_REQUIRE(_dependencyMap[12]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Bubble = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ModeView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _ui = _$$_REQUIRE(_dependencyMap[16]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[18]);

  var _MapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _FileUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var Colors = _Consts.default.Colors;
  var keyEvent = '7.13';
  var OPTIONS = ['周一', '周二', '周三', '周四', '周五', '周六', '周日', '周一', '周二', '周三', '周四', '周五', '周六', '周日', '周一', '周二', '周三', '周四'];

  var Demo = function (_React$Component) {
    (0, _inherits2.default)(Demo, _React$Component);

    function Demo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Demo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Demo).call(this, props));

      _this._fetchFile = function (fileName) {
        var path = 'music/voice_config.json';

        _miot.Host.file.getFDSFileInfoWithObjName(path).then(function (res) {
          _logger.default.log('getfileurl success', JSON.stringify(res));

          var url = res.url;

          if (url) {
            _miot.Host.file.downloadFile(url, 'temp.txt').then(function (r) {
              _logger.default.log('download success', JSON.stringify(r));
            }).catch(function (e) {
              _logger.default.log('download fail', JSON.stringify(e));
            });
          }
        }).catch(function (err) {
          _logger.default.log('getfileurl fail', JSON.stringify(err));
        });
      };

      _this._addLog = function (str) {
        var log = _this.state.log;

        _this.setState({
          log: log + "\n" + str
        });
      };

      _this.state = {
        showRoom: false,
        log: ''
      };
      return _this;
    }

    (0, _createClass2.default)(Demo, [{
      key: "_readStorage",
      value: function _readStorage() {
        _miot.Host.file.getStorageInfo().then(function (result) {
          alert(JSON.stringify(result));
        }).catch(function (e, result) {
          alert(JSON.stringify(result));
        });
      }
    }, {
      key: "_readFileList",
      value: function _readFileList() {
        _miot.Host.file.readFileList().then(function (result) {}).catch(function (e, result) {
          alert(JSON.stringify(result));
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            _this$state$showRoom = _this$state.showRoom,
            showRoom = _this$state$showRoom === undefined ? false : _this$state$showRoom,
            logs = _this$state.logs;
        return _react.default.createElement(_reactNative.ScrollView, null, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            height: 80
          }
        }), _react.default.createElement(_Bubble.default, {
          style: {
            marginTop: 30
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: 10,
            height: 10,
            borderRadius: 10,
            backgroundColor: '#00f',
            marginRight: 5
          }
        }), _react.default.createElement(_reactNative.Text, null, "\u6D4B\u8BD5\u6CE1\u6CE1\u7EC4\u4EF6")), _react.default.createElement(_Bubble.default, null, _react.default.createElement(_reactNative.Text, null, "\u540D\u5B57\u4E00\u5B9A\u8981\u957F\u957F\u957F\u957F\u957F\u957F\u957F\u4E0D\u4E86\u4E86")), _react.default.createElement(_ListItem.default, {
          title: "ks3 clean file",
          onPress: function onPress() {
            _miot.Service.callSmartHomeAPI('/home/getfileurl_v3', {
              "provider": "ks3",
              "bucket": "h1b-cn",
              "obj_name": "2021/02/26/1419492895/320200715_114611555.record"
            }).then(function (res) {
              alert(JSON.stringify(res, null, '\t'));
            }).catch(function (e) {
              alert(e);
            });
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "ks3 list",
          onPress: function onPress() {
            var EXPIRE = 2505600;
            var now = Math.ceil(Date.now() / 1000);
            var end = now - EXPIRE;
            var end0 = new Date(end * 1000);
            end0.setHours(0, 0, 1);
            end = Math.ceil(end0.getTime() / 1000);
            var p = {
              did: _miot.Device.deviceID,
              uid: _miot.Service.account.ID,
              type: "event",
              key: "cleanFinish",
              time_start: end,
              time_end: now
            };

            _miot.Service.callSmartHomeAPI('/user/get_user_device_data', p).then(function (res) {
              alert(JSON.stringify(res, null, '\t'));
            }).catch(function (e) {
              alert(e);
            });
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "ks3",
          onPress: function onPress() {
            _miot.Service.callSmartHomeAPI('/v2/home/get_interim_file_url_pro', {
              "provider": "ks3",
              "bucket": "h1b-cn",
              "obj_name": "1419492895/320200715/0",
              "use_https": true
            }).then(function (res) {
              alert(JSON.stringify(res, null, '\t'));
            }).catch(function (e) {
              alert(e);
            });
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u6D4B\u8BD5fds\u6587\u4EF6\u4E0A\u4F20",
          onPress: function onPress() {
            var did = _miot.Device.deviceID;
            var suffix = '';

            _miot.Host.file.generateObjNameAndUrlForFDSUpload(did, suffix).then(function (res) {
              if (res.hasOwnProperty(suffix) && res[suffix]) {
                var obj = res[suffix];
                var _obj$obj_name = obj.obj_name,
                    obj_name = _obj$obj_name === undefined ? '' : _obj$obj_name,
                    pwd = obj.pwd;
                var index = obj_name.lastIndexOf('/');

                if (index < 0) {
                  return Promise.reject('invalid name');
                }

                var name = obj_name.substring(index + 1);
                _this2.file_obj_name = obj_name;
                _this2.password = pwd;

                _logger.default.log('pre upload', JSON.stringify(res));

                return {
                  name: name,
                  url: obj.url,
                  method: obj.method
                };
              }

              return Promise.reject('generate file fail');
            }).then(function (obj) {
              var name = obj.name;
              var content = 'Test Upload File';
              return _miot.Host.file.writeFile(name, content).then(function (r) {
                _logger.default.log('write file success', JSON.stringify(r));

                var param = {
                  uploadUrl: obj.url,
                  method: obj.method || 'POST',
                  headers: {
                    'Content-Type': ''
                  },
                  files: [{
                    filename: name
                  }]
                };

                _miot.Host.file.readFile(name).then(function (fileData) {
                  _logger.default.info("read file success: " + fileData);
                }).catch(function (re) {
                  _logger.default.info("read file fail: " + re);
                });

                _miot.Host.file.uploadFileToFDS(param).then(function (rr) {
                  _logger.default.info("\u4E0A\u4F20\u6210\u529F" + JSON.stringify(rr));
                }).catch(function (err) {
                  _logger.default.info("\u4E0A\u4F20\u5931\u8D25" + JSON.stringify(err));
                });
              }).catch(function (err) {
                _logger.default.info("\u5B58\u50A8\u4E34\u65F6\u6587\u4EF6\u5931\u8D25" + JSON.stringify(err));
              });
            }).catch(function (err) {
              _logger.default.info("error: " + JSON.stringify(err));
            });
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u4E0A\u62A5",
          onPress: function onPress() {
            _miot.Service.smarthome.setDeviceData([{
              did: _miot.Device.deviceID,
              uid: _miot.Service.account.ID,
              time: parseInt(Date.now() / 1000, 10),
              type: 'event',
              key: keyEvent,
              value: JSON.stringify(["" + _this2.file_obj_name, "" + _this2.password])
            }]).then(function (r) {
              _logger.default.log('upload event', JSON.stringify(r));
            }).catch(function (e) {
              _logger.default.log('upload fail', JSON.stringify(e));
            });
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u4E0B\u8F7D\u6587\u4EF6",
          onPress: function onPress() {
            var now = parseInt(Date.now() / 1000, 10);
            var start = now - 3600;

            _logger.default.info("start: " + start + ", now: " + now);

            _this2._fetchFile(_this2.file_obj_name);
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "Host Api\u751F\u6210\u4E34\u65F6\u6587\u4EF6",
          onPress: function onPress() {
            var name = _miot.Device.owner.ID + "/" + _miot.Device.deviceID + "/" + 0;

            _miot.Host.file.getFDSFileInfoWithObjName(name).then(function (res) {
              var str = JSON.stringify(res);

              _this2._addLog(str);
            }).catch(function (err) {
              var str = JSON.stringify(err);

              _this2._addLog(str);
            });
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8C03\u7528callMethod",
          onPress: function onPress() {
            _miot.Device.getDeviceWifi().callMethod('get_prop', ['2.1']).then(function (res) {}).catch(function (err) {});
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8C03\u7528local callMethod",
          onPress: function onPress() {
            _miot.Device.getDeviceWifi().callMethodFromLocal('get_prop', ['2.1']).then(function (res) {}).catch(function (err) {});
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8C03\u7528cloud callMethod",
          onPress: function onPress() {
            _miot.Device.getDeviceWifi().callMethodFromCloud('get_prop', ['2.1']).then(function (res) {}).catch(function (err) {});
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8C03\u7528loadProperties",
          onPress: function onPress() {
            _miot.Device.getDeviceWifi().loadProperties('prop.2.1', 'prop.2.2').then(function (res) {}).catch(function (err) {});
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "Smart Api\u751F\u6210\u4E34\u65F6\u6587\u4EF6",
          onPress: function onPress() {
            _MapApi.default.genTempUrl(0).then(function (res) {
              var str = JSON.stringify(res);

              _this2._addLog(str);
            }).catch(function (err) {
              var str = JSON.stringify(err);

              _this2._addLog(str);
            });
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u751F\u6210\u4E34\u65F6url",
          onPress: function onPress() {
            _MapApi.default.genFDSUrl('voice_config.json').then(function (res) {}).catch(function (error) {});
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u8BED\u97F3\u5305",
          onPress: function onPress() {
            var url = 'http://mihome.info/voice_config.json';

            _miot.Host.file.downloadFile(url, 'voice_config.json').then(function (res) {
              Object.keys(res).map(function (item, index) {});

              _miot.Host.file.readFile(res['filename']).then(function (message) {
                var dict = JSON.parse(message);
              }).catch(function (error) {});
            }).catch(function (error) {});
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u83B7\u53D6\u6E05\u626B\u8BB0\u5F55",
          onPress: function onPress() {
            _api.CloudApi.loadCleanList();
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u83B7\u53D6\u5730\u56FE\u5217\u8868",
          onPress: function onPress() {
            _api.CloudApi.loadMapList();
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u83B7\u53D6\u5B58\u50A8\u7A7A\u95F4",
          onPress: function onPress() {
            _this2._readStorage();
          }
        }), _react.default.createElement(_ListItem.default, {
          title: "\u83B7\u53D6\u6587\u4EF6\u5217\u8868",
          onPress: function onPress() {
            _this2._readFileList();
          }
        }), _react.default.createElement(_ListItem2.ListItemWithSwitch, {
          title: "ListItemWithSwitch",
          value: true,
          valueTextStyle: {
            color: Colors.mainColor
          },
          onTintColor: Colors.mainColor
        }), _react.default.createElement(_ListItem.default, {
          title: "\u623F\u95F4\u9009\u62E9",
          onPress: function onPress() {
            _this2.setState({
              showRoom: true
            });
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            flexDirection: 'row',
            justifyContent: 'space-around'
          }
        }, _react.default.createElement(_ModeView.default, {
          value: true,
          text: "\u98CE\u673A",
          selectedIcon: _$$_REQUIRE(_dependencyMap[21])
        }), _react.default.createElement(_ModeView.default, {
          value: true,
          text: "\u5F00\u5173",
          selectedIcon: _$$_REQUIRE(_dependencyMap[22])
        }), _react.default.createElement(_ModeView.default, {
          value: true,
          text: "\u626B\u62D6",
          selectedIcon: _$$_REQUIRE(_dependencyMap[23])
        }), _react.default.createElement(_ui.SingleChoseDialog, {
          key: "roomPicker",
          visible: showRoom,
          dataSource: OPTIONS,
          cancelable: true,
          cancel: _localString.default.cancel,
          confirm: _localString.default.confirm,
          onConfirm: function onConfirm(res) {
            _logger.default.info(res);

            _this2.setState({
              showRoom: false
            });
          },
          onDismiss: function onDismiss() {
            _this2.setState({
              showRoom: false
            });
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: baseStyles.log
        }, logs), _react.default.createElement(_reactNativeSvg.Svg, {
          height: "60",
          width: "200"
        }, _react.default.createElement(_reactNativeSvg.Text, {
          fill: "rgb(51,51,51)",
          stroke: "rgb(255,255,255)",
          fontSize: "20",
          fontWeight: "bold",
          x: "100",
          y: "20",
          textAnchor: "middle"
        }, "STROKED TEXT"), _react.default.createElement(_reactNativeSvg.Text, {
          fill: "rgb(51,51,51)",
          stroke: "rgb(255,255,0)",
          fontSize: "20",
          fontWeight: "bold",
          textAnchor: "middle",
          x: "100",
          y: "40"
        }, "STROKED TEXT"))));
      }
    }]);
    return Demo;
  }(_react.default.Component);

  exports.default = Demo;

  var baseStyles = _reactNative.StyleSheet.create({
    log: {
      marginTop: 5,
      backgroundColor: '#f7f7f7',
      flexDirection: 'column',
      width: '94%',
      paddingBottom: 5
    }
  });
},11873,[14305,14320,14323,14371,14377,14386,10297,10033,10329,10074,10338,10100,10091,10064,11636,10439,10230,10016,11485,11672,11675,10472,11876,10484]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 88,
    "height": 88,
    "scales": [1, 2, 3],
    "hash": "1540baecc0275a610bfeeb400fe206bb",
    "name": "remote_pause",
    "type": "png"
  });
},11876,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _GestureView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[9]);

  var CIRCLE_SIZE = 100;
  var WIDTH = 200;

  var Demo = function (_React$Component) {
    (0, _inherits2.default)(Demo, _React$Component);

    function Demo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Demo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Demo).call(this, props));

      _this._onPress = function () {
        var singleRotatable = _this.state.singleRotatable;

        _this.setState({
          singleRotatable: !singleRotatable
        });
      };

      _this.state = {
        singleRotatable: false
      };
      return _this;
    }

    (0, _createClass2.default)(Demo, [{
      key: "render",
      value: function render() {
        var singleRotatable = this.state.singleRotatable;
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_GestureView.default, {
          style: {
            top: 200,
            left: 100,
            backgroundColor: '#00f',
            transform: [{
              rotate: '0deg'
            }]
          },
          draggable: {
            x: {
              min: 10,
              max: 200
            },
            y: {
              min: 10,
              max: 300
            }
          },
          rotatable: true,
          scalable: true,
          singleRotatable: singleRotatable,
          onChange: function onChange(event, style) {}
        }, _react.default.createElement(_reactNative.View, {
          style: styles.rect
        })), _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "normal",
          style: styles.btn,
          onPress: this._onPress
        }, "\u5207\u6362"));
      }
    }]);
    return Demo;
  }(_react.default.Component);

  exports.default = Demo;

  var styles = _reactNative.StyleSheet.create({
    rect: {
      width: WIDTH,
      height: CIRCLE_SIZE,
      backgroundColor: 'green'
    },
    btn: {
      position: 'absolute',
      left: 20,
      right: 20,
      bottom: 20
    }
  });
},11879,[14305,14320,14323,14371,14377,14386,10297,10033,10547,11251]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _ScrollBottomDrawer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _CleanControl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var ScrollDemo = function (_React$Component) {
    (0, _inherits2.default)(ScrollDemo, _React$Component);

    function ScrollDemo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ScrollDemo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ScrollDemo).call(this, props));

      _this.handleOnScroll = function (event) {
        var y = event.nativeEvent.contentOffset.y;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            topHeight = _assertThisInitialize.topHeight;

        var progress = Math.min(Math.max(1 - y / topHeight, 0), 1);

        _this.setState({
          progress: progress
        });
      };

      _this.topHeight = 400;
      _this.state = {
        progress: 1
      };
      return _this;
    }

    (0, _createClass2.default)(ScrollDemo, [{
      key: "render",
      value: function render() {
        var topHeight = this.topHeight;
        var progress = this.state.progress;
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.square, {
            opacity: progress
          }]
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.rect, {
            opacity: progress
          }]
        }), _react.default.createElement(_ScrollBottomDrawer.default, {
          topHeight: topHeight,
          onScroll: this.handleOnScroll
        }, _react.default.createElement(_CleanControl.default, null)));
      }
    }]);
    return ScrollDemo;
  }(_react.default.Component);

  exports.default = ScrollDemo;

  var styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      flexDirection: 'column',
      flex: 1
    },
    rect: {
      width: 100,
      backgroundColor: '#f0f',
      height: 200
    },
    square: {
      width: 100,
      height: 100,
      backgroundColor: '#00f'
    }
  });
},11882,[14305,14320,14323,14371,14377,14374,14386,10297,10033,11885,10403]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var ScrollBottomDrawer = function (_React$Component) {
    (0, _inherits2.default)(ScrollBottomDrawer, _React$Component);

    function ScrollBottomDrawer() {
      (0, _classCallCheck2.default)(this, ScrollBottomDrawer);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ScrollBottomDrawer).apply(this, arguments));
    }

    (0, _createClass2.default)(ScrollBottomDrawer, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            style = _this$props.style,
            enable = _this$props.enable,
            onScroll = _this$props.onScroll,
            onScrollEndDrag = _this$props.onScrollEndDrag,
            _this$props$topHeight = _this$props.topHeight,
            topHeight = _this$props$topHeight === undefined ? 0 : _this$props$topHeight,
            children = _this$props.children,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["style", "enable", "onScroll", "onScrollEndDrag", "topHeight", "children"]);
        return _react.default.createElement(_reactNative.ScrollView, (0, _extends2.default)({
          style: [styles.scrollView, style],
          enable: enable,
          onScroll: onScroll,
          onScrollEndDrag: onScrollEndDrag,
          showsVerticalScrollIndicator: false
        }, other, {
          onTouchStart: function onTouchStart() {
            return logger.log('111');
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.topView, {
            height: topHeight
          }]
        }), children);
      }
    }]);
    return ScrollBottomDrawer;
  }(_react.default.Component);

  exports.default = ScrollBottomDrawer;

  var styles = _reactNative.StyleSheet.create({
    topView: {
      width: '100%'
    },
    scrollView: {
      flex: 1,
      top: 0,
      bottom: 0,
      backgroundColor: 'transparent',
      position: 'absolute'
    }
  });
},11885,[14305,14344,14407,14320,14323,14371,14377,14386,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _lottieReactNative = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[9]);

  var LottiePage = function (_React$Component) {
    (0, _inherits2.default)(LottiePage, _React$Component);

    function LottiePage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, LottiePage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LottiePage).call(this, props));

      _this._onPress = function () {
        if (_this.lv) {
          _this.lv.play();
        }
      };

      _this.state = {};
      _this.progressArr = [0, 20, 30, 50, 70, 80, 90, 110, 120];
      _this.index = 0;
      return _this;
    }

    (0, _createClass2.default)(LottiePage, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: baseStyle.container
        }, _react.default.createElement(_lottieReactNative.default, {
          style: {
            width: 36,
            height: 36,
            backgroundColor: 'transparent'
          },
          hardwareAccelerationAndroid: false,
          ref: function ref(lv) {
            _this2.lv = lv;
          },
          loop: true,
          autoPlay: false,
          source: _$$_REQUIRE(_dependencyMap[10])
        }), _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "normal",
          onPress: this._onPress
        }, "\u64AD\u653E"));
      }
    }]);
    return LottiePage;
  }(_react.default.Component);

  exports.default = LottiePage;

  var baseStyle = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#00f'
    }
  });
},11888,[14305,14320,14323,14371,14377,14386,10297,10033,11570,11251,11594]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Robot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var STATUS = _Robot.default.STATUS;

  var RobotDemo = function (_React$Component) {
    (0, _inherits2.default)(RobotDemo, _React$Component);

    function RobotDemo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RobotDemo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RobotDemo).call(this, props));
      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(RobotDemo, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_Robot.default, {
          status: STATUS.CHARGE
        }), _react.default.createElement(_Robot.default, {
          status: STATUS.SWEEP
        }), _react.default.createElement(_Robot.default, {
          status: STATUS.SLEEP
        }), _react.default.createElement(_Robot.default, {
          status: STATUS.FAULT
        }));
      }
    }]);
    return RobotDemo;
  }(_react.default.Component);

  exports.default = RobotDemo;

  var styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      flexDirection: 'column',
      justifyContent: 'space-between',
      flex: 1
    }
  });
},11891,[14305,14320,14323,14371,14377,14386,10297,10033,11564]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[8]);

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _common = _$$_REQUIRE(_dependencyMap[11]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var selectIcon = _$$_REQUIRE(_dependencyMap[13]);

  var Colors = _Consts.default.Colors;

  var RoomDemo = function (_React$Component) {
    (0, _inherits2.default)(RoomDemo, _React$Component);

    function RoomDemo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RoomDemo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RoomDemo).call(this, props));

      _this._renameRoom = function () {
        _this.setState({
          showLoading: true
        });
      };

      _this._onSelect = function (selectIndex) {
        var _this$state$options = _this.state.options,
            options = _this$state$options === undefined ? [] : _this$state$options;
        var isLast = selectIndex === options.length - 1;

        if (isLast) {
          _this.roomName = '';

          _this.setState({
            showInput: true
          });
        } else {
          _this.setState({
            showLoading: true
          });
        }
      };

      _this._addRoomName = function (roomName) {
        _common.logger.info("add room name: " + roomName);

        _this.setState({
          showLoading: true
        });

        _this._renameRoom();
      };

      _this.roomName = '';
      _this.state = {
        msg: '',
        showRoom: false,
        selectRoom: -1,
        options: [{
          title: '办公室'
        }, {
          title: '卧室'
        }, {
          title: '卫生间'
        }, {
          title: '自定义'
        }]
      };
      return _this;
    }

    (0, _createClass2.default)(RoomDemo, [{
      key: "_addLog",
      value: function _addLog(text) {
        var msg = this.state.msg;
        this.setState({
          msg: msg + "\n" + text
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            msg = _this$state.msg,
            options = _this$state.options,
            _this$state$showRoom = _this$state.showRoom,
            showRoom = _this$state$showRoom === undefined ? false : _this$state$showRoom,
            _this$state$showLoadi = _this$state.showLoading,
            showLoading = _this$state$showLoadi === undefined ? false : _this$state$showLoadi,
            showInput = _this$state.showInput,
            _this$state$selectRoo = _this$state.selectRoom,
            selectRoom = _this$state$selectRoo === undefined ? -1 : _this$state$selectRoo;
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_ListItem.ListItem, {
          title: "\u52A0\u8F7D\u623F\u95F4",
          onPress: function onPress() {
            _Service.default.room.loadAllRoom(true).then(function (res) {
              _this2._addLog(JSON.stringify(res));
            }).catch(function (err) {
              _this2._addLog(JSON.stringify(err));
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "\u4FEE\u6539\u623F\u95F4",
          onPress: function onPress() {
            _this2.setState({
              showRoom: true
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "\u521B\u5EFA\u623F\u95F4",
          onPress: function onPress() {
            _Service.default.room.createRoom('书房1').then(function (res) {
              _this2._addLog(JSON.stringify(res));
            }).catch(function (err) {
              _this2._addLog(JSON.stringify(err));
            });
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            padding: 15
          }
        }, _react.default.createElement(_reactNative.Text, null, msg)), _react.default.createElement(_Dialog.ChoiceDialog, {
          visible: showRoom,
          title: _common.localString.reset_name,
          options: options,
          selectedIndexArray: [selectRoom],
          color: Colors.mainColor,
          icon: selectIcon,
          onDismiss: function onDismiss() {
            _this2.setState({
              showRoom: false
            });
          },
          onSelect: function onSelect(res) {
            _common.logger.info("choose room: " + JSON.stringify(res));

            _this2.setState({
              selectRoom: +res[0]
            });

            _this2._onSelect(+res[0]);
          },
          type: _Dialog.ChoiceDialog.TYPE.SINGLE
        }), _react.default.createElement(_Dialog.InputDialog, {
          visible: showInput,
          title: _common.localString.add_name,
          cancelable: true,
          singleLine: true,
          inputs: [{
            textInputProps: {
              maxLength: 12,
              autoFocus: true
            },
            placeholder: _common.localString.room_name_length_limit,
            onChangeText: function onChangeText(text) {
              _this2.roomName = text;

              _common.logger.info("text change" + text);
            }
          }],
          buttons: [{
            text: _common.localString.cancel
          }, {
            text: _common.localString.confirm,
            style: {
              color: Colors.mainColor
            },
            callback: function callback() {
              _this2.setState({
                showInput: false
              });

              _this2._addRoomName(_this2.roomName);
            }
          }],
          onDismiss: function onDismiss() {
            _this2.setState({
              showInput: false
            });
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          message: _common.localString.ctrling,
          timeout: 5000
        }));
      }
    }]);
    return RoomDemo;
  }(_react.default.Component);

  exports.default = RoomDemo;
},11894,[14305,14320,14323,14371,14377,14386,10297,10033,10338,10062,10755,10109,10064,11825]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[8]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      windowWidth = _Dimensions$get.width,
      windowHeight = _Dimensions$get.height;

  var _Dimensions$get2 = _reactNative.Dimensions.get('screen'),
      screenWidth = _Dimensions$get2.width,
      screenHeight = _Dimensions$get2.height;

  var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);
  var titleBarHeight = 44;
  var backgroundContentHeight = 400;
  var safeAreaHeight = 0;
  var contentInsetBottom = 400;
  var scrollViewHeight = windowHeight - statusBarHeight - titleBarHeight;

  var ParallaxAndroid = function (_React$Component) {
    (0, _inherits2.default)(ParallaxAndroid, _React$Component);

    function ParallaxAndroid(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ParallaxAndroid);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ParallaxAndroid).call(this, props));
      _this.state = {
        scrollMode: false,
        contentInsetY: contentInsetBottom
      };
      _this.myRef = _react.default.createRef();
      return _this;
    }

    (0, _createClass2.default)(ParallaxAndroid, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.View, {
          style: {
            width: windowWidth,
            height: windowHeight,
            backgroundColor: '#fff'
          }
        }, this.state.scrollMode && this._renderBackground(), _react.default.createElement(_reactNative.ScrollView, {
          ref: this.myRef,
          style: styles.foregroundContainer,
          showsVerticalScrollIndicator: false,
          onScroll: function onScroll(e) {
            return _this2._onScroll(e);
          },
          onScrollEndDrag: function onScrollEndDrag() {
            return _this2._onScrollEndDrag();
          },
          onScrollBeginDrag: function onScrollBeginDrag() {
            return _this2._onScrollBeginDrag();
          }
        }, this._renderForegroundContent()), !this.state.scrollMode && this._renderBackground({
          position: 'absolute',
          top: 0
        }));
      }
    }, {
      key: "_renderBackground",
      value: function _renderBackground(props) {
        return _react.default.createElement(_reactNative.View, {
          style: [styles.backgroundContainer, props]
        }, _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: "#f2f2f2",
          onPress: function onPress(_) {
            return alert('press background');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.backgroundContent
        }, _react.default.createElement(_reactNative.Text, null, props ? '浮在上面' : '沉到下面'))));
      }
    }, {
      key: "_renderForegroundContent",
      value: function _renderForegroundContent() {
        var _this3 = this;

        var contentHeight = 480;
        var bottomBlankHeight = scrollViewHeight - contentHeight > 0 ? scrollViewHeight - contentHeight : 0;
        return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.topBlank
        }, _react.default.createElement(_reactNative.Text, null, "\u9876\u90E8\u900F\u660E\u5360\u4F4D")), _react.default.createElement(_reactNative.View, {
          style: styles.foregroundContent
        }, Array.from({
          length: 6
        }, function (item, index) {
          return index;
        }).map(function (item) {
          return _react.default.createElement(_reactNative.TouchableHighlight, {
            key: item,
            underlayColor: "#fff",
            onPress: function onPress(_) {
              return _this3._onPress(item);
            },
            style: {
              marginBottom: 15
            }
          }, _react.default.createElement(_reactNative.View, {
            style: styles.foregroundContentCard
          }, _react.default.createElement(_reactNative.Text, null, item)));
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.bottomBlank, {
            height: bottomBlankHeight
          }]
        }, _react.default.createElement(_reactNative.Text, null, "\u5E95\u90E8\u767D\u8272\u80CC\u666F\u5360\u4F4D")));
      }
    }, {
      key: "_onPress",
      value: function _onPress(item) {
        alert("press " + item);
      }
    }, {
      key: "_onScrollBeginDrag",
      value: function _onScrollBeginDrag() {
        this.setState({
          scrollMode: true
        });
      }
    }, {
      key: "_onScroll",
      value: function _onScroll(e) {
        this.contentOffsetY = e['nativeEvent']['contentOffset']['y'] + e['nativeEvent']['velocity']['y'] * 40;
      }
    }, {
      key: "_onScrollEndDrag",
      value: function _onScrollEndDrag() {
        var _ref = this.myRef || {},
            current = _ref.current;

        if (this.contentOffsetY < 200) {
          current && current.scrollTo({
            x: 0,
            y: 0,
            animated: true
          });
          this.setState({
            scrollMode: false
          });
        } else if (this.contentOffsetY < contentInsetBottom) {
          current && current.scrollTo({
            x: 0,
            y: contentInsetBottom,
            animated: true
          });
        }
      }
    }]);
    return ParallaxAndroid;
  }(_react.default.Component);

  exports.default = ParallaxAndroid;

  var styles = _reactNative.StyleSheet.create({
    backgroundContainer: {
      width: windowWidth,
      backgroundColor: 'lightpink',
      height: backgroundContentHeight,
      alignItems: 'center',
      justifyContent: 'center'
    },
    backgroundContent: {
      backgroundColor: 'lightblue',
      height: 200,
      width: windowWidth / 2,
      justifyContent: 'center',
      alignItems: 'center'
    },
    foregroundContainer: {
      position: "absolute",
      backgroundColor: "green",
      height: scrollViewHeight
    },
    topBlank: {
      height: backgroundContentHeight,
      backgroundColor: 'transparent',
      justifyContent: 'flex-end',
      alignItems: 'center'
    },
    foregroundContent: {
      width: windowWidth,
      backgroundColor: 'lightblue',
      padding: 15
    },
    bottomBlank: {
      backgroundColor: '#fff',
      justifyContent: 'center',
      alignItems: 'center'
    },
    foregroundContentCard: {
      borderRadius: 20,
      height: 60,
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#fff'
    }
  });
},11897,[14305,14320,14323,14371,14377,14386,10297,10033,13696]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[9]);

  var _api = _$$_REQUIRE(_dependencyMap[10]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var PROP = _Consts.default.PROP;

  var AutoTest = function (_React$Component) {
    (0, _inherits2.default)(AutoTest, _React$Component);

    function AutoTest(props) {
      var _this;

      (0, _classCallCheck2.default)(this, AutoTest);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AutoTest).call(this, props));

      _this._startTasks = function () {
        _this._stopTasks();

        _this.syncTask = setInterval(function () {
          var id = ++_this.id;

          _api.SpecApi.specS(PROP.TIMING, JSON.stringify({
            tz: 8,
            tzs: 2888000,
            id: id,
            time: [[68400, 1, 1, 1, [4]], [1587986460, 1, 1, 1, []]]
          })).then(function (res) {
            _this._addMsg(JSON.stringify(res));
          });
        }, 1000);
      };

      _this._stopTasks = function () {
        if (_this.syncTask !== null) {
          clearInterval(_this.syncTask);
          _this.syncTask = null;
        }
      };

      _this._addMsg = function (str) {
        var msg = _this.state.msg;

        _this.setState({
          msg: msg + "\n" + str
        });
      };

      _this.syncTask = null;
      _this.state = {
        msg: ''
      };
      _this.id = 0;
      return _this;
    }

    (0, _createClass2.default)(AutoTest, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this._stopTasks();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var msg = this.state.msg;
        return _react.default.createElement(_reactNative.ScrollView, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.ListItem, {
          title: "\u5F00\u59CB\u53D1\u9001\u5B9A\u65F6\u4EFB\u52A1",
          onPress: function onPress() {
            _this2._startTasks();
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "\u505C\u6B62\u53D1\u9001\u5B9A\u65F6\u4EFB\u52A1",
          onPress: function onPress() {
            _this2._stopTasks();
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            padding: 20
          }
        }, _react.default.createElement(_reactNative.Text, null, msg)));
      }
    }]);
    return AutoTest;
  }(_react.default.Component);

  exports.default = AutoTest;
},11900,[14305,14320,14323,14371,14377,14386,10297,10033,10332,10338,10091,10064]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _BottomDrawer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var DrawerTest = function (_React$Component) {
    (0, _inherits2.default)(DrawerTest, _React$Component);

    function DrawerTest() {
      (0, _classCallCheck2.default)(this, DrawerTest);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerTest).apply(this, arguments));
    }

    (0, _createClass2.default)(DrawerTest, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#006600',
            flexDirection: 'column'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            height: 400,
            backgroundColor: '#666600'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "Hello world")), _react.default.createElement(_BottomDrawer.default, null, _react.default.createElement(_reactNative.View, {
          style: {
            height: 600,
            backgroundColor: '#ffff00',
            flexDirection: 'column'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "111111"), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "222222"), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "333333"), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "444444"), _react.default.createElement(_reactNative.Text, {
          style: styles.text
        }, "555555"))));
      }
    }]);
    return DrawerTest;
  }(_react.default.Component);

  exports.default = DrawerTest;

  var styles = _reactNative.StyleSheet.create({
    text: {
      color: '#ff00ff',
      fontSize: 18
    }
  });
},11903,[14305,14320,14323,14371,14377,14386,10297,10033,11789]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var SafeViewDemo = function (_React$Component) {
    (0, _inherits2.default)(SafeViewDemo, _React$Component);

    function SafeViewDemo() {
      (0, _classCallCheck2.default)(this, SafeViewDemo);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SafeViewDemo).apply(this, arguments));
    }

    (0, _createClass2.default)(SafeViewDemo, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: {
            flex: 1,
            backgroundColor: '#f0f'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#ff0'
          }
        }));
      }
    }]);
    return SafeViewDemo;
  }(_react.default.Component);

  exports.default = SafeViewDemo;
},11906,[14305,14320,14323,14371,14377,14386,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ListItem = _$$_REQUIRE(_dependencyMap[9]);

  var _CycleTask = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var TaskDemo = function (_React$Component) {
    (0, _inherits2.default)(TaskDemo, _React$Component);

    function TaskDemo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TaskDemo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TaskDemo).call(this, props));

      _this._task = function () {
        var t = Date.now();
        _this.t = t;
        return _FunUtils.default.wait(2500).then(function () {
          _this.id += 1;
          return false;
        });
      };

      _this._addMsg = function (str) {
        var msg = _this.state.msg;

        _this.setState({
          msg: msg + "\n" + str
        });
      };

      _this.syncTask = new _CycleTask.default(2000, true, 300);
      _this.state = {
        msg: ''
      };
      _this.id = 0;
      _this.t = Date.now();
      return _this;
    }

    (0, _createClass2.default)(TaskDemo, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.syncTask.stop();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var msg = this.state.msg;
        return _react.default.createElement(_reactNative.ScrollView, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.ListItem, {
          title: "\u5F00\u59CB\u6267\u884C\u5FAA\u73AF\u4EFB\u52A1",
          onPress: function onPress() {
            _this2.syncTask.start(_this2._task, true, 2200);
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "\u5F00\u59CB\u6267\u884C\u975E\u5FAA\u73AF\u4EFB\u52A1",
          onPress: function onPress() {
            _this2.syncTask.start(_this2._task, false, 2800);
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: "\u505C\u6B62\u6267\u884C\u4EFB\u52A1",
          onPress: function onPress() {
            _this2.syncTask.stop();
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            padding: 20
          }
        }, _react.default.createElement(_reactNative.Text, null, msg)));
      }
    }]);
    return TaskDemo;
  }(_react.default.Component);

  exports.default = TaskDemo;
},11909,[14305,14320,14323,14371,14377,14386,10297,10033,10332,10338,11702,10106]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[8]);

  var _RemoteController = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _api = _$$_REQUIRE(_dependencyMap[13]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _LdStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var ACTION = _Consts.default.ACTION,
      RemoteConsts = _Consts.default.RemoteConsts,
      Colors = _Consts.default.Colors;

  var RemoteCtlPage = function (_React$Component) {
    (0, _inherits2.default)(RemoteCtlPage, _React$Component);

    function RemoteCtlPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RemoteCtlPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RemoteCtlPage).call(this, props));

      _this._onPress = function () {
        _api.LocalApi.localAction(ACTION.REMOTE_CONTROL, RemoteConsts.CHARGE).then(function (success) {
          if (!success) {}
        });
      };

      props.navigation.setParams({
        titleProps: {
          backgroundColor: _LdStyles.default.mainColor,
          title: _localString.default.remote_control,
          type: _NavigationBar.default.TYPE.DARK,
          left: [{
            key: _NavigationBar.default.ICON.BACK,
            onPress: function onPress() {
              return _this.props.navigation.goBack();
            }
          }]
        }
      });
      _this.state = {
        hasCtl: false
      };
      return _this;
    }

    (0, _createClass2.default)(RemoteCtlPage, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state$hasCtl = this.state.hasCtl,
            hasCtl = _this$state$hasCtl === undefined ? false : _this$state$hasCtl;
        var tip = hasCtl ? _localString.default.tip_sweep_nearby : _localString.default.back_avoid_tip;
        return _react.default.createElement(_HdContainView.default, {
          style: {
            backgroundColor: 'white'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#FFFFFF'
          }
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_RemoteController.default, {
          onCtl: function onCtl(remoteAction) {
            if (remoteAction !== RemoteConsts.CLEAN && remoteAction !== RemoteConsts.PAUSE) {
              return;
            }

            var _this2$state$hasCtl = _this2.state.hasCtl,
                hasCtl = _this2$state$hasCtl === undefined ? false : _this2$state$hasCtl;

            if (!hasCtl) {
              _this2.setState({
                hasCtl: true
              });
            }
          }
        }))));
      }
    }]);
    return RemoteCtlPage;
  }(_react.default.Component);

  exports.default = RemoteCtlPage;

  RemoteCtlPage.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;

    var _ref2 = navigation.state.params || {},
        titleProps = _ref2.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_NavigationBar.default, titleProps)
    };
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      backgroundColor: '#ffffff',
      flex: 1,
      flexDirection: 'column',
      position: 'relative'
    },
    tip: {
      fontSize: 13,
      color: '#666666',
      textAlign: 'center'
    },
    btn: {
      marginBottom: 20
    }
  });
},11912,[14305,14320,14323,14371,14377,14386,10297,10033,11251,11915,10016,10064,10409,10091,10332,10719,10088,11852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _FanComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _api = _$$_REQUIRE(_dependencyMap[12]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _mobxReact = _$$_REQUIRE(_dependencyMap[14]);

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[16]);

  var _temp;

  var RemoteConsts = _Consts.default.RemoteConsts,
      ACTION = _Consts.default.ACTION,
      StatusConsts = _Consts.default.StatusConsts,
      PROP = _Consts.default.PROP;
  var btnImgs = {
    start: _$$_REQUIRE(_dependencyMap[17]),
    pause: _$$_REQUIRE(_dependencyMap[18])
  };
  var RemoteController = (0, _mobxReact.inject)('robotStore')((0, _mobxReact.observer)((_temp = function (_React$Component) {
    (0, _inherits2.default)(RemoteController, _React$Component);

    function RemoteController(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RemoteController);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RemoteController).call(this, props));

      _this.handlePushMessage = function (msg) {
        _this.setState((0, _objectSpread2.default)({}, msg.prop));
      };

      _this._startRemote = function (direction) {
        _this._stopRemote();

        _api.LocalApi.localAction(ACTION.REMOTE_CONTROL, direction);

        _this._startTimer = setInterval(function () {
          _api.LocalApi.localAction(ACTION.REMOTE_CONTROL, direction);
        }, 400);
      };

      _this.synprops = function () {
        var delayTiem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;
        setTimeout(function () {
          _api.SpecApi.syncProps([PROP.STATUS, PROP.SWEEP_MODE]).then(function (msg) {
            _this.setState((0, _objectSpread2.default)({}, msg));
          });
        }, delayTiem);
      };

      _this._callback = function (remoteAction) {
        var onCtl = _this.props.onCtl;

        if (onCtl) {
          onCtl(remoteAction);
        }
      };

      _this._isStarted = function () {
        var status = _this.props.robotStore.status;
        var ss = _this.state.status;
        return ss == StatusConsts.BACK_CHARGE || status == StatusConsts.SWEEP;
      };

      _this._toggle = function () {
        var local = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        if (local == true && _this.state.sweepMode != 0) {
          _this.setState({
            visible: true
          });

          return;
        }

        var isStarted = _this._isStarted();

        var remoteStatus = isStarted ? 0 : 1;
        var command;

        if (local) {
          command = RemoteConsts.CLEAN;
        } else {
          command = isStarted ? RemoteConsts.PAUSE : RemoteConsts.PAUSE;
        }

        _this._callback(command);

        if (local) {
          _api.LocalApi.localAction(ACTION.REMOTE_CONTROL, command).then(function (success) {
            var robotStore = _this.props.robotStore;

            if (!success) {
              robotStore.updateState({
                remoteStatus: 1 - remoteStatus
              });
            } else {
              robotStore.updateState({
                remoteStatus: remoteStatus
              });
            }

            _this.synprops();
          });
        } else {
          var _this$state = _this.state,
              sweepMode = _this$state.sweepMode,
              status = _this$state.status;

          if (sweepMode == 0 || status == 5) {
            _api.SpecApi.specA(ACTION.START_SWEEP, [1, ""]).then(function (success) {
              if (success) {} else {
                _this.showResult(false);
              }

              _this.synprops();
            });
          } else {
            _api.LocalApi.localAction(ACTION.REMOTE_CONTROL, RemoteConsts.PAUSE).then(function (success) {
              var robotStore = _this.props.robotStore;

              if (!success) {
                robotStore.updateState({
                  remoteStatus: 1 - remoteStatus
                });
              } else {
                robotStore.updateState({
                  remoteStatus: remoteStatus
                });
              }

              _this.synprops();
            });
          }
        }
      };

      _this._stopRemote = function () {
        if (_this._startTimer != null) {
          clearInterval(_this._startTimer);
          _this._startTimer = null;
        }
      };

      _this._exit = function () {
        _api.LocalApi.localAction(ACTION.REMOTE_CONTROL, RemoteConsts.EXIT_REMOTE).then(function (success) {
          if (success) {
            var robotStore = _this.props.robotStore;
            robotStore.updateState({
              remoteStatus: 0
            });
          }
        });
      };

      _this.showResult = function (success) {
        if (!success) {
          _UIUtils.default.info(_localString.default.ctrl_fail);
        }
      };

      _this.onDismiss = function () {
        _this.setState({
          visible: false
        });
      };

      _this.stopSweep = function () {
        _api.SpecApi.specA(ACTION.STOP_SWEEPING).then(function (success) {
          if (success) {} else {
            _this.showResult(false);
          }

          _this.setState({
            visible: false
          });

          _this.synprops();
        });
      };

      _this._startTimer = null;
      _this.state = {
        hasCtl: false,
        status: 0,
        sweepMode: 0,
        visible: false
      };
      return _this;
    }

    (0, _createClass2.default)(RemoteController, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        _PushManager.default.addObserver('RemoteControllerObserver', this.handlePushMessage, {
          props: [PROP.STATUS, PROP.SWEEP_MODE]
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _PushManager.default.removeObserver('RemoteControllerObserver');

        this._stopRemote();

        this._exit();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props$robotStor = this.props.robotStore,
            _this$props$robotStor2 = _this$props$robotStor.remoteStatus,
            remoteStatus = _this$props$robotStor2 === undefined ? 0 : _this$props$robotStor2,
            status = _this$props$robotStor.status;
        var _this$state2 = this.state,
            sweepMode = _this$state2.sweepMode,
            ss = _this$state2.status;
        var started = ss == StatusConsts.SWEEP || ss == StatusConsts.BACK_CHARGE;
        var btnImg;

        if (sweepMode == 0 || ss == 5) {
          btnImg = _localString.default.start_clean;
          started = false;
        } else {
          if (ss == 4) {
            btnImg = _localString.default.pause_clean;
            started = true;
          } else {
            btnImg = _localString.default.continue_clean;
            started = false;
          }
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.containerBox
        }, _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.View, {
          style: styles.inner
        }, _react.default.createElement(_FanComponent.default, {
          style: {
            position: 'absolute',
            top: -3
          },
          disable: started,
          onPressIn: function onPressIn() {
            _this2._startRemote(RemoteConsts.FORWARD);
          },
          onPressOut: this._stopRemote
        }), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            _this2._toggle();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.btnStart
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.btnStartTxt
        }, btnImg))), _react.default.createElement(_FanComponent.default, {
          disable: started,
          style: {
            position: 'absolute',
            bottom: -3,
            transform: [{
              rotate: '180deg'
            }]
          },
          onPressIn: function onPressIn() {
            _this2._startRemote(RemoteConsts.BACK);
          },
          onPressOut: this._stopRemote
        }), _react.default.createElement(_FanComponent.default, {
          disable: started,
          style: {
            position: 'absolute',
            right: -45,
            transform: [{
              rotate: '90deg'
            }]
          },
          onPressIn: function onPressIn() {
            _this2._startRemote(RemoteConsts.TURN_RIGHT);
          },
          onPressOut: this._stopRemote
        }), _react.default.createElement(_FanComponent.default, {
          disable: started,
          style: {
            position: 'absolute',
            left: -45,
            transform: [{
              rotate: '-90deg'
            }]
          },
          onPressIn: function onPressIn() {
            _this2._startRemote(RemoteConsts.TURN_LEFT);
          },
          onPressOut: this._stopRemote
        }))), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.inSitu,
          onPress: function onPress() {
            _this2._toggle(true);
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[19]),
          resizeMode: "contain",
          style: styles.inSituIcon
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.inSituText
        }, _localString.default.focus_cleaning)), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.visible,
          showTitle: false,
          showButton: false,
          onDismiss: function onDismiss(_) {
            _this2.onDismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.fixedPoint
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModePrompt
        }, _localString.default.sweeper_work), _react.default.createElement(_reactNative.View, {
          style: styles.isModeBtn
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.isModeBtnYex, styles.isModeBtnLi],
          onPress: function onPress() {
            _this2.stopSweep();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModeBtnYesTxt
        }, _localString.default.confirm)), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.isModeBtnLi],
          onPress: function onPress() {
            _this2.onDismiss();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.isModeBtnNoTxt
        }, _localString.default.cancel))))));
      }
    }]);
    return RemoteController;
  }(_react.default.Component), _temp)));

  var styles = _reactNative.StyleSheet.create({
    isModeBox: {
      marginTop: 30
    },
    fixedPoint: {
      paddingHorizontal: 20,
      marginTop: 30
    },
    isModePrompt: {
      fontSize: 16,
      color: '#939AA9',
      textAlign: 'center',
      marginTop: 10
    },
    isModeBtn: {
      marginTop: 20,
      marginBottom: 50
    },
    isModeBtnYesTxt: {
      color: '#5C92FF',
      fontSize: 16
    },
    isModeBtnNo: {
      borderRadius: 8,
      backgroundColor: '#F3F5F8'
    },
    isModeBtnNoTxt: {
      color: '#B6BDCA',
      fontSize: 16
    },
    isModeBtnLi: {
      height: 44,
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 20
    },
    isModeBtnYex: {
      borderRadius: 8,
      backgroundColor: 'rgba(92, 146, 255, 0.1)'
    },
    containerBox: {
      flex: 1,
      width: '100%',
      justifyContent: 'center',
      alignContent: 'center',
      position: 'relative'
    },
    inSitu: {
      position: 'absolute',
      bottom: 0,
      left: 0,
      width: '100%',
      justifyContent: 'center',
      alignItems: 'center',
      paddingVertical: 20,
      backgroundColor: '#fff'
    },
    inSituText: {
      color: '#939AA9',
      fontSize: 16,
      marginTop: 10
    },
    inSituIcon: {
      width: 40,
      height: 40
    },
    container: {
      position: 'absolute',
      width: 262,
      height: 262,
      borderRadius: 40,
      backgroundColor: 'rgba(92, 146, 255, .1)',
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center',
      left: '50%',
      top: '40%',
      marginTop: -131,
      marginLeft: -131
    },
    inner: {
      width: 240,
      height: 240,
      flexDirection: 'column',
      justifyContent: 'center',
      alignItems: 'center'
    },
    btnStart: {
      width: 90,
      height: 90,
      backgroundColor: '#5C92FF',
      borderRadius: 20,
      justifyContent: 'center',
      alignItems: 'center'
    },
    btnStartTxt: {
      color: '#fff',
      fontSize: 16
    }
  });

  var _default = RemoteController;
  exports.default = _default;
},11915,[14305,14314,14320,14323,14371,14377,14386,10297,10033,11918,10409,10016,10091,10064,10004,11711,10755,11927,11876,11930]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var fanImgs = {
    normal: _$$_REQUIRE(_dependencyMap[8]),
    pressed: _$$_REQUIRE(_dependencyMap[9])
  };

  var FanComponet = function (_React$Component) {
    (0, _inherits2.default)(FanComponet, _React$Component);

    function FanComponet(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FanComponet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FanComponet).call(this, props));
      _this.state = {
        pressed: false
      };
      return _this;
    }

    (0, _createClass2.default)(FanComponet, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$props = this.props,
            _this$props$disable = _this$props.disable,
            disable = _this$props$disable === undefined ? false : _this$props$disable,
            _onPressIn = _this$props.onPressIn,
            _onPressOut = _this$props.onPressOut,
            style = _this$props.style;
        var pressed = this.state.pressed;
        var fanImg = !disable && pressed ? fanImgs.pressed : fanImgs.normal;
        var triangleOpacity = disable ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, style]
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            opacity: triangleOpacity,
            position: 'absolute'
          },
          source: fanImg
        }), _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {},
          onPressIn: function onPressIn() {
            if (disable) {
              return;
            }

            _this2.setState({
              pressed: true
            });

            if (_onPressIn) {
              _onPressIn();
            }
          },
          onPressOut: function onPressOut() {
            if (_onPressOut) {
              _onPressOut();
            }

            _this2.setState({
              pressed: false
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.touchArea
        })));
      }
    }]);
    return FanComponet;
  }(_react.default.Component);

  exports.default = FanComponet;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: 168,
      height: 84,
      alignItems: 'center',
      justifyContent: 'center'
    },
    touchArea: {
      width: 100,
      height: 60
    }
  });
},11918,[14305,14320,14323,14371,14377,14386,10297,10033,11921,11924]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 33,
    "height": 27,
    "scales": [1],
    "hash": "55680b01352a9cba882eb8709dc2126e",
    "name": "trianglePu",
    "type": "png"
  });
},11921,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 33,
    "height": 27,
    "scales": [1],
    "hash": "baa641a4d31353e5de3e3c38f5efc50b",
    "name": "triangle_pressed",
    "type": "png"
  });
},11924,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 88,
    "height": 88,
    "scales": [1, 2, 3],
    "hash": "51a34bb2da5326654d3147a4f4e16626",
    "name": "remote_start",
    "type": "png"
  });
},11927,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "c2cb5e3cdb11bc8bec7411a2ec55d86e",
    "name": "controlyuandi",
    "type": "png"
  });
},11930,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _mobxReact = _$$_REQUIRE(_dependencyMap[10]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _api = _$$_REQUIRE(_dependencyMap[13]);

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[15]);

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _BasePage2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _class, _temp;

  var PROP = _Consts.default.PROP,
      Colors = _Consts.default.Colors;
  var TITLE = {
    mainBrush: _localString.default.main_bursh,
    sideBrush: _localString.default.side_bursh,
    filter: _localString.default.filter,
    sensor: _localString.default.sensor_maintain
  };
  var ICON = {
    mainBrush: _$$_REQUIRE(_dependencyMap[20]),
    sideBrush: _$$_REQUIRE(_dependencyMap[21]),
    filter: _$$_REQUIRE(_dependencyMap[22]),
    sensor: _$$_REQUIRE(_dependencyMap[23])
  };
  var PROP_MAP = {
    mainBrush: [PROP.MAIN_BRUSH_LEFT_TIME, PROP.MAIN_BRUSH_LIFE_LEVEL],
    sideBrush: [PROP.SIDE_BRUSH_LEFT_TIME, PROP.SIDE_BRUSH_LIFE_LEVEL],
    filter: [PROP.FILTER_LEFT_TIME, PROP.FILTER_LIFE_LEVEL],
    sensor: [PROP.SENSOR_LEFT_TIME, PROP.SENSOR_LEFT_LEVEL]
  };
  var MaterialList = (0, _mobxReact.inject)('materialListStore')((0, _mobxReact.observer)((_temp = _class = function (_BasePage) {
    (0, _inherits2.default)(MaterialList, _BasePage);

    function MaterialList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MaterialList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MaterialList).call(this, props));

      _this._handlePushMessage = function (message) {
        var _ref = message || {},
            prop = _ref.prop;

        var materialListStore = _this.props.materialListStore;
        materialListStore.updateData(prop);
      };

      _this._renderItem = function (_ref2) {
        var item = _ref2.item;

        var _ref3 = item || {},
            time = _ref3.time,
            level = _ref3.level,
            name = _ref3.name;

        var navigation = _this.props.navigation;
        var title = TITLE[name];
        var textColor = '#5696FF';

        if (!Number.isNaN(level)) {
          if (level <= 10) {
            textColor = '#FF655B';
          } else if (level <= 30) {
            textColor = '#FF9900';
          } else {
            textColor = '#5696FF';
          }
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.itemContainer
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 90,
            height: 90
          },
          source: ICON[name]
        }), _react.default.createElement(_reactNative.View, {
          style: styles.contentContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemTitle
        }, title), _react.default.createElement(_reactNative.Text, {
          style: styles.itemDesc
        }, _localString.default.can_use_x_day.format(time))), _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            alignItems: 'flex-end',
            marginTop: 12
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.textPercent, {
            color: textColor
          }]
        }, level), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 12,
            color: textColor,
            marginBottom: 2
          }
        }, "%"))), _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            _this.setState({
              showDialog: true,
              resetTitle: title,
              resetConter: item.reset,
              resetName: name
            });
          },
          hitSlop: {
            left: 15,
            right: 15,
            top: 10,
            bottom: 10
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#5C92FF'
          }
        }, _localString.default.reset)));
      };

      props.navigation.setParams({
        titleProps: {
          title: _localString.default.consumable_material_statistics
        }
      });
      _this.state = {
        showLoading: false,
        showDialog: false,
        resetTitle: null,
        resetConter: null,
        resetName: null
      };
      return _this;
    }

    (0, _createClass2.default)(MaterialList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _get2.default)((0, _getPrototypeOf2.default)(MaterialList.prototype), "componentDidMount", this).call(this);
        var props = [PROP.MAIN_BRUSH_LEFT_TIME, PROP.MAIN_BRUSH_LIFE_LEVEL, PROP.SIDE_BRUSH_LEFT_TIME, PROP.SIDE_BRUSH_LIFE_LEVEL, PROP.FILTER_LEFT_TIME, PROP.FILTER_LIFE_LEVEL, PROP.SENSOR_LEFT_TIME, PROP.SENSOR_LEFT_LEVEL];
        this.setState({
          showLoading: true
        }, function () {
          _api.SpecApi.syncProps(props, false, 1).then(function (res) {
            var materialListStore = _this2.props.materialListStore;
            materialListStore.updateData(res);

            _this2.setState({
              showLoading: false
            });
          }).catch(function () {
            _this2.setState({
              showLoading: false
            });

            if (_this2.mounted) {
              _UIUtils.default.info(_localString.default.load_fail);
            }
          });
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(MaterialList.prototype), "componentWillUnmount", this).call(this);
        this.mounted = false;

        this.setState = function () {};
      }
    }, {
      key: "specApi",
      value: function specApi(reset) {
        var _this3 = this;

        this.setState({
          showLoading: true
        });

        _api.SpecApi.specA(reset).then(function (success) {
          if (success) {
            setTimeout(function () {
              var props = [PROP.MAIN_BRUSH_LEFT_TIME, PROP.MAIN_BRUSH_LIFE_LEVEL, PROP.SIDE_BRUSH_LEFT_TIME, PROP.SIDE_BRUSH_LIFE_LEVEL, PROP.FILTER_LEFT_TIME, PROP.FILTER_LIFE_LEVEL, PROP.SENSOR_LEFT_TIME, PROP.SENSOR_LEFT_LEVEL];

              _api.SpecApi.syncProps(props, false, 1).then(function (res) {
                var materialListStore = _this3.props.materialListStore;
                materialListStore.updateData(res);

                _this3.setState({
                  showLoading: false,
                  showDialog: false
                });
              });
            }, 500);
          } else {
            _this3.setState({
              showLoading: false,
              showDialog: false
            });

            _UIUtils.default.info(_localString.default.operator_fail);
          }
        }).catch(function () {
          _UIUtils.default.info(_localString.default.operator_fail);

          _this3.setState({
            showLoading: false,
            showDialog: false
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var materialList = this.props.materialListStore.materialList;
        var _this$state$showLoadi = this.state.showLoading,
            showLoading = _this$state$showLoadi === undefined ? false : _this$state$showLoadi;
        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'column',
            backgroundColor: Colors.backgroundColor
          }
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.FlatList, {
          style: {
            flex: 1,
            backgroundColor: Colors.backgroundColor
          },
          ItemSeparatorComponent: function ItemSeparatorComponent() {
            return _react.default.createElement(_Separator.default, null);
          },
          renderItem: this._renderItem,
          data: materialList,
          keyExtractor: function keyExtractor(item) {
            return item.name;
          }
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.showDialog,
          showTitle: false,
          showButton: false,
          onDismiss: function onDismiss() {
            _this4.setState({
              showDialog: false
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.resetAlert
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.resetAlertTitle
        }, _localString.default.reset_prompt), _react.default.createElement(_reactNative.View, {
          style: styles.resetAlertBtn
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.resetAlertBtnLi, styles.resetAlertBtnLiYes],
          onPress: function onPress() {
            _this4.setState({
              showDialog: false
            });

            _this4.specApi(_this4.state.resetConter);
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.resetAlertBtnLiYesTest
        }, _localString.default.confirm)), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.resetAlertBtnLi,
          onPress: function onPress() {
            _this4.setState({
              showDialog: false
            });
          }
        }, _react.default.createElement(_reactNative.Text, null, _localString.default.cancel))))), _react.default.createElement(_Dialog.LoadingDialog, {
          message: _localString.default.loading,
          visible: showLoading,
          timeout: 10000,
          onDismiss: function onDismiss() {
            _this4.setState({
              showLoading: false
            });
          }
        })));
      }
    }]);
    return MaterialList;
  }(_BasePage2.default), _class.navigationOptions = _HdNavigationBar.default, _temp)));

  var styles = _reactNative.StyleSheet.create({
    itemContainer: {
      flexDirection: 'row',
      height: 160,
      alignItems: 'center',
      paddingHorizontal: 24,
      backgroundColor: '#FFFFFF'
    },
    contentContainer: {
      flex: 1,
      flexDirection: 'column',
      justifyContent: 'space-between',
      marginLeft: 12
    },
    textContainer: {
      flexDirection: 'column',
      marginTop: 8
    },
    textPercent: {
      color: '#5696FF',
      fontSize: 20,
      fontFamily: 'Kmedium'
    },
    itemTitle: {
      color: '#000000',
      fontSize: 15,
      marginBottom: 4
    },
    itemDesc: {
      color: '#999999',
      fontSize: 12
    },
    resetAlert: {
      paddingHorizontal: 20,
      paddingTop: 40,
      paddingBottom: 10
    },
    resetAlertBtnLiYesTest: {
      color: '#5C92FF'
    },
    resetAlertBtnLiYes: {
      backgroundColor: 'rgba(92, 146, 255, .1)'
    },
    resetAlertBtn: {
      paddingVertical: 20
    },
    resetAlertBtnLi: {
      height: 44,
      borderRadius: 8,
      alignItems: 'center',
      justifyContent: 'center',
      marginBottom: 20
    },
    resetAlertTitle: {
      fontSize: 16,
      color: '#939AA9',
      textAlign: 'center'
    }
  });

  var _default = MaterialList;
  exports.default = _default;
},11933,[14305,14320,14323,14371,14377,14380,14386,10297,10033,10332,10004,10064,10016,10091,10409,10755,11711,11687,11936,11852,11939,11942,11945,11948]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _LdStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = HdNavigationBar = function HdNavigationBar(_ref) {
    var navigation = _ref.navigation;

    var _ref2 = navigation.state.params || {},
        titleProps = _ref2.titleProps;

    if (!titleProps) return {
      header: null
    };
    var title = titleProps.title,
        left = titleProps.left,
        right = titleProps.right;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        title: title,
        backgroundColor: _LdStyles.default.mainColor,
        type: _NavigationBar.default.TYPE.DARK,
        left: left ? left : [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            return navigation.goBack();
          }
        }],
        right: right ? right : []
      })
    };
  };

  exports.default = _default;
},11936,[14305,10297,10719,10088]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [2, 3],
    "hash": "828f388a2d374017fb2b60102eb0270f",
    "name": "main_brush_icon",
    "type": "png"
  });
},11939,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [2, 3],
    "hash": "eb312599b3685d58ed80110580f64b13",
    "name": "side_brush_icon",
    "type": "png"
  });
},11942,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [2, 3],
    "hash": "30540750ad8ba70f6f3db90ac487ec75",
    "name": "filter_icon",
    "type": "png"
  });
},11945,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 90,
    "height": 90,
    "scales": [2, 3],
    "hash": "ca878c5ab83cee3dcb5f1961ba3e258c",
    "name": "sensor_icon",
    "type": "png"
  });
},11948,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[8]);

  var _mobxReact = _$$_REQUIRE(_dependencyMap[9]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[10]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _api = _$$_REQUIRE(_dependencyMap[12]);

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Colors = _Consts.default.Colors,
      PROP = _Consts.default.PROP;
  var descs = {
    'sideBrush': _localString.default.side_bursh_desc,
    'mainBrush': _localString.default.main_bursh_desc,
    'filter': _localString.default.filter_desc,
    'sensor': _localString.default.sensor_desc
  };
  var POSTER = {
    mainBrush: _$$_REQUIRE(_dependencyMap[16]),
    sideBrush: _$$_REQUIRE(_dependencyMap[17]),
    filter: _$$_REQUIRE(_dependencyMap[18]),
    sensor: _$$_REQUIRE(_dependencyMap[19])
  };
  var PROP_MAP = {
    mainBrush: [PROP.MAIN_BRUSH_LEFT_TIME, PROP.MAIN_BRUSH_LIFE_LEVEL],
    sideBrush: [PROP.SIDE_BRUSH_LEFT_TIME, PROP.SIDE_BRUSH_LIFE_LEVEL],
    filter: [PROP.FILTER_LEFT_TIME, PROP.FILTER_LIFE_LEVEL]
  };
  var MaterialDetail = (0, _mobxReact.inject)('materialListStore')((0, _mobxReact.observer)(function (_React$Component) {
    (0, _inherits2.default)(MaterialDetail, _React$Component);

    function MaterialDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MaterialDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MaterialDetail).call(this, props));
      _this.state = {
        showConfirm: false
      };
      return _this;
    }

    (0, _createClass2.default)(MaterialDetail, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.setState = function () {};
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var materialListStore = this.props.materialListStore;
        var materialMap = materialListStore.materialMap;
        var params = this.props.navigation.state.params;

        var _ref = params || {},
            name = _ref.name;

        var _materialMap$name = materialMap[name],
            level = _materialMap$name.level,
            time = _materialMap$name.time,
            reset = _materialMap$name.reset,
            total = _materialMap$name.total,
            _materialMap$name$gid = _materialMap$name.gid,
            gid = _materialMap$name$gid === undefined ? 0 : _materialMap$name$gid;
        var desc = descs[name] || _localString.default.side_bursh_desc;
        desc = desc.format(total);
        var _this$state = this.state,
            _this$state$showConfi = _this$state.showConfirm,
            showConfirm = _this$state$showConfi === undefined ? false : _this$state$showConfi,
            _this$state$showLoadi = _this$state.showLoading,
            showLoading = _this$state$showLoadi === undefined ? false : _this$state$showLoadi;
        var textColor = '#5696FF';

        if (!Number.isNaN(level)) {
          if (level <= 10) {
            textColor = '#FF655B';
          } else if (level <= 30) {
            textColor = '#FF9900';
          } else {
            textColor = '#5696FF';
          }
        }

        var timeDesc = name === 'sensor' ? _localString.default.already_used.format(time) : _localString.default.can_use_x_day.format(time);
        alert(name);
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            backgroundColor: '#FFFFFF'
          }
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'column',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 30,
            color: textColor
          }
        }, _localString.default.remain_percent.format(level)), _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 15,
            color: '#666666',
            marginTop: 6
          }
        }, timeDesc), _react.default.createElement(_reactNative.Image, {
          style: {
            width: 150,
            height: 150,
            marginBottom: 30,
            marginTop: 60
          },
          source: POSTER[name]
        }), _react.default.createElement(_reactNative.View, {
          style: {
            paddingHorizontal: 40
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            fontSize: 13,
            color: '#666666',
            lineHeight: 18
          }
        }, desc)), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "normal",
          style: {
            marginBottom: 20
          },
          onPress: function onPress() {
            _this2.setState({
              showConfirm: true
            });
          }
        }, _localString.default.materail_reset), _react.default.createElement(_Dialog.LoadingDialog, {
          message: _localString.default.loading,
          visible: showLoading,
          timeout: 10000,
          onDismiss: function onDismiss() {
            _this2.setState({
              showLoading: false
            });
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          title: _localString.default.hint,
          message: _localString.default.confirm_reset_material,
          messageStyle: {
            alignSelf: 'center',
            textAlign: 'center',
            fontFamily: 'System'
          },
          visible: showConfirm,
          cancelable: true,
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: Colors.secondColor
            },
            callback: function callback() {
              _this2.setState({
                showConfirm: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: Colors.mainColor
            },
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            callback: function callback() {
              if (reset) {
                _this2.setState({
                  showConfirm: false,
                  showLoading: true
                }, function () {
                  _api.SpecApi.specA(reset).then(function (success) {
                    if (success) {
                      setTimeout(function () {
                        _api.SpecApi.syncProps(PROP_MAP[name], false, 2).then(function (res) {
                          materialListStore.updateData(res);

                          _this2.setState({
                            showLoading: false
                          });
                        });
                      }, 500);
                    } else {
                      _this2.setState({
                        showLoading: false
                      });

                      _UIUtils.default.info(_localString.default.operator_fail);
                    }
                  }).catch(function () {
                    _UIUtils.default.info(_localString.default.operator_fail);

                    _this2.setState({
                      showLoading: false
                    });
                  });
                });
              } else {
                _this2.setState({
                  showConfirm: false
                });
              }
            }
          }],
          onDismiss: function onDismiss() {
            _this2.setState({
              showConfirm: false
            });
          }
        })));
      }
    }]);
    return MaterialDetail;
  }(_react.default.Component)));
  var _default = MaterialDetail;
  exports.default = _default;
},11951,[14305,14320,14323,14371,14377,14386,10297,10033,11251,10004,10755,10016,10091,10409,10064,10332,11954,11957,11960,11963]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 150,
    "height": 150,
    "scales": [2, 3],
    "hash": "3548c90056ed257be1deaf436eacb1f4",
    "name": "main_brush_poster",
    "type": "png"
  });
},11954,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 150,
    "height": 150,
    "scales": [2, 3],
    "hash": "96e4390c126fef30acfea93b1e235041",
    "name": "side_brush_poster",
    "type": "png"
  });
},11957,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 150,
    "height": 150,
    "scales": [2, 3],
    "hash": "f0158aadac0dcdb5c33155a98617d802",
    "name": "filter_poster",
    "type": "png"
  });
},11960,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 150,
    "height": 150,
    "scales": [2, 3],
    "hash": "c3459949a6f20394fa041db4ba9cdd1f",
    "name": "sensor_poster",
    "type": "png"
  });
},11963,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _mobxReact = _$$_REQUIRE(_dependencyMap[9]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[10]);

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _DateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _api = _$$_REQUIRE(_dependencyMap[17]);

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _class, _temp;

  var PROP = _Consts.default.PROP,
      Colors = _Consts.default.Colors,
      LdStyles = _Consts.default.LdStyles;
  var DATE_TIME_TYPE = {
    START_TIME: 1,
    END_TIME: 2
  };
  var DEFAULT_START = 64800;
  var DEFAULT_END = 79200;
  var DisturbSetting = (0, _mobxReact.inject)('disturbStore')((0, _mobxReact.observer)((_temp = _class = function (_React$Component) {
    (0, _inherits2.default)(DisturbSetting, _React$Component);

    function DisturbSetting(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DisturbSetting);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DisturbSetting).call(this, props));

      _this._onSelect = function (dateType, res) {
        if (dateType === DATE_TIME_TYPE.START_TIME) {
          _this._onSelectStartTime(res);
        } else if (dateType === DATE_TIME_TYPE.END_TIME) {
          _this._onSelectEndTime(res);
        }
      };

      _this._onSelectStartTime = function (res) {
        _logger.default.info("start time: " + JSON.stringify(res));

        var rawArray = res.rawArray;

        _this.setState({
          start: rawArray
        });

        if (!_this._checkTime(0, _DateUtils.default.timeArrToDiff(rawArray))) {
          return;
        }

        _api.SpecApi.specSet(PROP.FORBID_MODE, JSON.stringify(_this.disturbTime)).then(function (code) {
          if (code !== _ApiCode.default.SUCCESS) {
            _this.showResult(code);
          } else {
            var disturbStore = _this.props.disturbStore;
            disturbStore.updateSetting(_this.disturbTime);
          }
        });
      };

      _this._onSelectEndTime = function (res) {
        _logger.default.info("end time: " + JSON.stringify(res));

        var rawArray = res.rawArray;

        _this.setState({
          end: rawArray
        });

        if (!_this._checkTime(1, _DateUtils.default.timeArrToDiff(rawArray))) {
          return;
        }

        _api.SpecApi.specSet(PROP.FORBID_MODE, JSON.stringify(_this.disturbTime)).then(function (code) {
          if (code !== _ApiCode.default.SUCCESS) {
            _this.showResult(code);
          } else {
            var disturbStore = _this.props.disturbStore;
            disturbStore.updateSetting(_this.disturbTime);
          }
        });
      };

      _this.showResult = function (code) {
        if (_ApiCode.default.SUCCESS === code) {
          _UIUtils.default.info(_localString.default.operator_success);
        } else {
          if (_ApiCode.default.ONING) {
            _UIUtils.default.info(_localString.default.wait_operate);
          } else {
            _UIUtils.default.info(_localString.default.operator_fail);
          }
        }
      };

      _this._onEnableChange = function (enable) {
        if (!_this._checkTime(2, enable ? 1 : 0)) {
          return;
        }

        _this.setState({
          enableTime: enable
        }, function () {
          _api.SpecApi.specSet(PROP.FORBID_MODE, JSON.stringify(_this.disturbTime)).then(function (code) {
            if (code !== _ApiCode.default.SUCCESS) {
              _this.showResult(code);

              _this.disturbTime.time[2] = enable ? 0 : 1;

              _this.setState({
                enableTime: !enable
              });
            } else {
              var disturbStore = _this.props.disturbStore;
              disturbStore.updateSetting(_this.disturbTime);
            }
          });
        });
      };

      props.navigation.setParams({
        titleProps: {
          backgroundColor: Colors.mainColor,
          title: _localString.default.no_disturb_setting,
          type: _NavigationBar.default.TYPE.DARK,
          left: [{
            key: _NavigationBar.default.ICON.BACK,
            onPress: function onPress() {
              return _this.props.navigation.goBack();
            }
          }]
        }
      });
      var _disturbStore = props.disturbStore;
      var tz = _disturbStore.tz,
          tzs = _disturbStore.tzs,
          _disturbStore$time = _disturbStore.time,
          t = _disturbStore$time === undefined ? [] : _disturbStore$time;
      _this.disturbTime = {
        tz: tz,
        tzs: tzs,
        time: (0, _toConsumableArray2.default)(t)
      };
      var _this$disturbTime$tim = _this.disturbTime.time,
          time = _this$disturbTime$tim === undefined ? [] : _this$disturbTime$tim;
      _this.state = {
        showTime: false,
        enableTime: time[2] === 1,
        start: _DateUtils.default.diffToTimeArr(time[0] === undefined ? DEFAULT_START : time[0]),
        end: _DateUtils.default.diffToTimeArr(time[1] === undefined ? DEFAULT_END : time[1])
      };
      return _this;
    }

    (0, _createClass2.default)(DisturbSetting, [{
      key: "_checkTime",
      value: function _checkTime(index, value) {
        this.disturbTime.time[0] = this.disturbTime.time[0] === undefined ? DEFAULT_START : this.disturbTime.time[0];
        this.disturbTime.time[1] = this.disturbTime.time[1] === undefined ? DEFAULT_END : this.disturbTime.time[1];
        this.disturbTime.time[2] = this.disturbTime.time[2] || 0;
        this.disturbTime.time[index] = value;

        _logger.default.info(this.disturbTime.time[0], this.disturbTime.time[1]);

        if (+this.disturbTime.time[0] === +this.disturbTime.time[1]) {
          _UIUtils.default.info(_localString.default.start_end_time_same);

          return false;
        }

        return true;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state = this.state,
            showTime = _this$state.showTime,
            dateTitle = _this$state.dateTitle,
            dateType = _this$state.dateType,
            start = _this$state.start,
            _this$state$current = _this$state.current,
            current = _this$state$current === undefined ? start : _this$state$current,
            _this$state$enableTim = _this$state.enableTime,
            enableTime = _this$state$enableTim === undefined ? false : _this$state$enableTim,
            end = _this$state.end;

        var startTimeStr = _DateUtils.default.formatTime(start);

        var endTimeStr = _DateUtils.default.formatTime(end);

        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_ListItem.ListItemWithSwitch, {
          value: enableTime,
          subtitleNumberOfLines: 2,
          title: _localString.default.no_disturb,
          onTintColor: Colors.mainColor,
          titleStyle: {
            fontFamily: 'System'
          },
          subtitleStyle: {
            fontFamily: 'System'
          },
          onValueChange: this._onEnableChange,
          showSeparator: true
        }), _react.default.createElement(_reactNative.View, {
          style: {
            height: 30,
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: Colors.secondColor,
            paddingLeft: 30,
            fontSize: 11
          }
        }, _localString.default.disturb_tips_setting)), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.start_time,
          containerStyle: {
            opacity: enableTime ? 1 : 0.3
          },
          disabled: !enableTime,
          onPress: function onPress() {
            _this2.setState({
              showTime: true,
              dateTitle: _localString.default.start_time,
              dateType: DATE_TIME_TYPE.START_TIME,
              current: start
            });
          },
          value: startTimeStr
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.end_time,
          containerStyle: {
            opacity: enableTime ? 1 : 0.3
          },
          disabled: !enableTime,
          showSeparator: false,
          onPress: function onPress() {
            _this2.setState({
              showTime: true,
              dateTitle: _localString.default.end_time,
              dateType: DATE_TIME_TYPE.END_TIME,
              current: end
            });
          },
          value: endTimeStr
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: {
            color: Colors.secondColor,
            fontSize: 11,
            paddingHorizontal: 30,
            paddingTop: 20
          }
        }, _localString.default.disturb_tips_des)), _react.default.createElement(_MHDatePicker.default, {
          key: "timePicker",
          visible: showTime,
          confirmColor: Colors.mainColor,
          showSubtitle: false,
          title: dateTitle,
          type: _MHDatePicker.default.TYPE.TIME24,
          current: current,
          onDismiss: function onDismiss() {
            return _this2.setState({
              showTime: false
            });
          },
          onSelect: function onSelect(res) {
            _this2._onSelect(dateType, res);
          }
        }));
      }
    }]);
    return DisturbSetting;
  }(_react.default.Component), _class.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;

    var _ref2 = navigation.state.params || {},
        titleProps = _ref2.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_NavigationBar.default, titleProps)
    };
  }, _temp)));
  var _default = DisturbSetting;
  exports.default = _default;
},11966,[14305,14359,14320,14323,14371,14377,14386,10297,10033,10004,10338,10716,10332,10016,10100,10064,11813,10091,10409,10103,10719,11852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _mobxReact = _$$_REQUIRE(_dependencyMap[11]);

  var _mobx = _$$_REQUIRE(_dependencyMap[12]);

  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _DateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _api = _$$_REQUIRE(_dependencyMap[16]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _common = _$$_REQUIRE(_dependencyMap[19]);

  var _BasePage2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _class, _temp;

  var PROP = _Consts.default.PROP,
      Colors = _Consts.default.Colors;
  var MAX_COUNT = 10;
  var CLEAN_STR = {
    1: _localString.default.silent,
    2: _localString.default.standard,
    3: _localString.default.middle,
    4: _localString.default.strong
  };
  var TASK_STR = {
    1: _localString.default.small,
    2: _localString.default.in,
    3: _localString.default.big
  };
  var TimeCleanList = (0, _mobxReact.inject)('disturbStore', 'timingStore')((0, _mobxReact.observer)((_temp = _class = function (_BasePage) {
    (0, _inherits2.default)(TimeCleanList, _BasePage);

    function TimeCleanList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TimeCleanList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeCleanList).call(this, props));

      _this._loadProps = function () {
        return _api.SpecApi.syncP([PROP.TIMING]).then(function (res) {
          var timingStore = _this.props.timingStore;

          if (res && res.timing) {
            timingStore.parse(res.timing);

            _this.forceUpdate();

            return true;
          }

          return false;
        });
      };

      _this._onAddClick = function () {
        var navigation = _this.props.navigation;
        var ishasAutoArea = _this.props.navigation.state.params["ishasAutoArea"];

        _common.logger.info('Time Clean, Add');

        navigation.navigate('TimeCleanDetail', {
          title: _localString.default.timing_sweep,
          index: -1,
          'ishasAutoArea': ishasAutoArea
        });
      };

      _this._renderEmpty = function () {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.empty
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            width: 84,
            height: 114,
            marginBottom: 18
          },
          source: _$$_REQUIRE(_dependencyMap[25])
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            fontFamily: 'System',
            color: '#999999'
          }
        }, _localString.default.no_schedule)));
      };

      _this._renderFooter = function () {
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            height: 100
          }
        });
      };

      _this._renderItem = function (_ref) {
        var item = _ref.item,
            index = _ref.index;

        var weekStr = _DateUtils.default.getWeekStr(item[4]);

        var timeStr = _DateUtils.default.getTimeStr(item[0]);

        var ishasAutoArea = _this.props.navigation.state.params["ishasAutoArea"];
        var autoAreaValue = ishasAutoArea();
        var selectDataContent = '';

        for (var i = 0; i < item[6].length; i++) {
          for (var j = 0; j < autoAreaValue.length; j++) {
            if (item[6][i] == autoAreaValue[j].id) {
              selectDataContent += autoAreaValue[j].name + (i == item[6].length - 1 ? '' : '、');
            }
          }
        }

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            var navigation = _this.props.navigation;

            _common.logger.info("Time Clean, Edit, index: " + index + ", item: " + JSON.stringify(item));

            navigation.navigate('TimeCleanDetail', {
              index: index,
              item: item,
              'ishasAutoArea': ishasAutoArea
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.item
        }, _react.default.createElement(_reactNative.View, {
          style: {
            justifyContent: 'space-between',
            paddingVertical: 2
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.itemTitle
        }, timeStr), _react.default.createElement(_reactNative.Text, {
          style: styles.itemDesc
        }, weekStr), _react.default.createElement(_reactNative.Text, {
          style: styles.itemDesc
        }, CLEAN_STR[item[2]] + " / " + TASK_STR[item[5]], " ", selectDataContent != '' ? '/' : '', " ", selectDataContent, " / ", selectDataContent == '' ? _localString.default.global_clean : _localString.default.zone_clean)), _react.default.createElement(_Switch.default, {
          value: +item[1] === 1,
          onTintColor: Colors.mainColor,
          onValueChange: function onValueChange(enable) {
            _this._changeEnable(index, enable);
          }
        })));
      };

      _this._changeEnable = function (index, enable) {
        var timingStore = _this.props.timingStore;
        var timing = (0, _mobx.toJS)(timingStore);
        var timer = timing.time[index];
        var oldtime = timer[0];
        var needAdjust = enable && timer[4].length <= 0;

        if (needAdjust) {
          timing.time[index][0] = _this._adjustTime(oldtime);
        }

        timing.time[index][1] = enable ? 1 : 0;

        _api.SpecApi.specSet(PROP.TIMING, JSON.stringify(timing)).then(function (code) {
          if (code !== _ApiCode.default.SUCCESS) {
            timing.time[index][1] = enable ? 0 : 1;

            if (needAdjust) {
              timing.time[index][0] = oldtime;
            }

            if (code === _ApiCode.default.ONING) {
              _UIUtils.default.info(_localString.default.wait_operate);
            } else {
              _UIUtils.default.info(_localString.default.operator_fail);
            }

            _this.forceUpdate();
          } else {
            if (needAdjust) {
              _this.forceUpdate();
            }
          }
        });
      };

      _this._renderTip = function () {
        var disturbStore = _this.props.disturbStore;
        var time = disturbStore.time;

        if (time[2]) {
          var tip = _localString.default.time_clean_disturb_tip.format(_DateUtils.default.formatTime(time[0]), _DateUtils.default.formatTime(time[1]));

          return _react.default.createElement(_reactNative.View, {
            style: styles.disturbTipContainer
          }, _react.default.createElement(_reactNative.Text, {
            style: styles.disturbTipText
          }, tip));
        }

        return null;
      };

      props.navigation.setParams({
        titleProps: {
          backgroundColor: Colors.mainColor,
          title: _localString.default.timing_sweep,
          type: _NavigationBar.default.TYPE.DARK,
          left: [{
            key: _NavigationBar.default.ICON.BACK,
            onPress: function onPress() {
              return _this.props.navigation.goBack();
            }
          }]
        }
      });
      return _this;
    }

    (0, _createClass2.default)(TimeCleanList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(TimeCleanList.prototype), "componentDidMount", this).call(this);

        _FunUtils.default.retry(this._loadProps, 3).catch(function () {
          return false;
        });
      }
    }, {
      key: "_adjustTime",
      value: function _adjustTime(t) {
        var old = new Date(t * 1000);
        var date = new Date();
        date.setHours(old.getHours(), old.getMinutes(), 20);
        var now = Date.now();
        var time = date.getTime();

        if (now - time > 0) {
          time += _DateUtils.default.DAY_MS;
        }

        return Math.floor(time / 1000);
      }
    }, {
      key: "render",
      value: function render() {
        var time = this.props.timingStore.time;
        var data = (0, _mobx.toJS)(time);

        _common.logger.info("data: " + JSON.stringify(data));

        var disable = data.length >= MAX_COUNT;
        return _react.default.createElement(_HdContainView.default, null, this._renderTip(), _react.default.createElement(_reactNative.FlatList, {
          style: {
            flex: 1
          },
          ItemSeparatorComponent: function ItemSeparatorComponent() {
            return _react.default.createElement(_Separator.default, null);
          },
          ListEmptyComponent: this._renderEmpty,
          ListFooterComponent: this._renderFooter,
          renderItem: this._renderItem,
          data: data,
          keyExtractor: function keyExtractor(item, index) {
            return "" + index;
          }
        }), disable ? _react.default.createElement(_reactNative.Image, {
          style: styles.add,
          source: _$$_REQUIRE(_dependencyMap[26])
        }) : _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: this._onAddClick
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.add,
          source: _$$_REQUIRE(_dependencyMap[27])
        })));
      }
    }]);
    return TimeCleanList;
  }(_BasePage2.default), _class.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;

    var _ref3 = navigation.state.params || {},
        titleProps = _ref3.titleProps;

    if (!titleProps) return {
      header: null
    };
    return {
      header: _react.default.createElement(_NavigationBar.default, titleProps)
    };
  }, _temp)));

  var styles = _reactNative.StyleSheet.create({
    disturbTipContainer: {
      height: 35,
      paddingLeft: 24,
      width: '100%',
      justifyContent: 'center',
      backgroundColor: '#5696FF'
    },
    disturbTipText: {
      color: '#FFFFFF',
      fontSize: 12
    },
    add: {
      position: 'absolute',
      width: 60,
      height: 60,
      bottom: 25,
      right: 25
    },
    empty: {
      width: '100%',
      height: 400,
      alignItems: 'center',
      justifyContent: 'center'
    },
    item: {
      height: 60,
      width: '100%',
      paddingHorizontal: 24,
      paddingVertical: 5,
      flexDirection: 'row',
      justifyContent: 'space-between',
      backgroundColor: '#FFFFFF'
    },
    itemTitle: {
      color: '#000000',
      fontSize: 14
    },
    itemDesc: {
      color: '#000000',
      opacity: 0.6,
      fontSize: 11
    }
  });

  var _default = TimeCleanList;
  exports.default = _default;
},11969,[14305,14320,14323,14371,14377,14380,14386,10297,10033,10332,10347,10004,10007,10930,10016,11813,10091,10064,10409,10109,11687,10106,10103,11852,10719,11972,11975,11978]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 84,
    "height": 114,
    "scales": [2, 3],
    "hash": "42a0dcedf2f6cc6c4a5d0e6899348dc9",
    "name": "no_timing",
    "type": "png"
  });
},11972,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 62,
    "height": 62,
    "scales": [2, 3],
    "hash": "c23f7df2a38a69b7c64fddc252ee2117",
    "name": "btn_add_disable",
    "type": "png"
  });
},11975,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 66,
    "height": 66,
    "scales": [1, 2, 3],
    "hash": "1ad80a6118d1029a6c49fc59ca1c2174",
    "name": "btn_add",
    "type": "png"
  });
},11978,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[10]);

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[13]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _mobxReact = _$$_REQUIRE(_dependencyMap[15]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[16]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _api = _$$_REQUIRE(_dependencyMap[19]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _DateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _class, _temp;

  var PROP = _Consts.default.PROP,
      Colors = _Consts.default.Colors;
  var CLEAN_MODE_OPTIONS = [{
    title: _localString.default.sweep
  }, {
    title: _localString.default.mop
  }, {
    title: _localString.default.sweep_mop
  }];
  var GEAR_OPTIONS = [{
    title: _localString.default.silent
  }, {
    title: _localString.default.standard
  }, {
    title: _localString.default.middle
  }, {
    title: _localString.default.strong
  }];

  var selectIcon = _$$_REQUIRE(_dependencyMap[26]);

  var TimeCleanDetail = (0, _mobxReact.inject)('timingStore')((0, _mobxReact.observer)((_temp = _class = function (_React$Component) {
    (0, _inherits2.default)(TimeCleanDetail, _React$Component);

    function TimeCleanDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TimeCleanDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TimeCleanDetail).call(this, props));

      _this.handlePushMessage = function (msg) {
        if (msg.prop.mop || msg.prop.mop == false) {
          _this.setState({
            isMop: msg.prop.mop
          });
        }
      };

      _this._exit = function () {
        _this.setState({
          showExit: true
        });
      };

      _this._doExit = function () {
        var navigation = _this.props.navigation;
        navigation.goBack();
      };

      _this._save = function () {
        if (_this.isSave) {
          _logger.default.info('is save, can not edit');

          return;
        }

        _this.isSave = true;
        var _this$state = _this.state,
            gear = _this$state.gear,
            mode = _this$state.mode,
            current = _this$state.current,
            enable = _this$state.enable,
            selectWeek = _this$state.selectWeek,
            fanLevelIndex = _this$state.fanLevelIndex,
            waterLevelIndex = _this$state.waterLevelIndex,
            addMapDataId = _this$state.addMapDataId;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            isNew = _assertThisInitialize.isNew,
            index = _assertThisInitialize.index;

        var date = new Date();
        date.setHours(current[0], current[1], 0);
        var now = Date.now();
        var time = date.getTime();
        var en = enable;

        if (now < time) {
          en = 1;
        }

        if (selectWeek.length <= 0 && now - time > 0) {
          time += _DateUtils.default.DAY_MS;
        }

        var t = selectWeek.length > 0 ? _DateUtils.default.timeArrToDiff(current) : Math.floor(time / 1000);
        var realWeek = selectWeek.map(function (v) {
          if (+v === 6) {
            return 0;
          }

          return +v + 1;
        });
        var curTime = [t, en, fanLevelIndex + 1, +mode, realWeek, waterLevelIndex + 1, addMapDataId];
        var _this$props = _this.props,
            timingStore = _this$props.timingStore,
            navigation = _this$props.navigation;
        var timeArr = timingStore.time,
            tz = timingStore.tz,
            tzs = timingStore.tzs;
        var hasSame = timeArr.find(function (item) {
          if (Math.floor(t / 60) !== Math.floor(item[0] / 60)) {
            return false;
          }

          for (var i = 2; i < curTime.length - 1; i++) {
            if (curTime[i] != item[i]) {
              return false;
            }
          }

          if (realWeek.length != item[4]) {
            return false;
          }

          for (var j = 0; j < realWeek.length; j++) {
            if (realWeek[j] != item[4][j]) {
              return false;
            }
          }

          return true;
        });

        if (hasSame) {
          _UIUtils.default.info(_localString.default.has_same_timing);

          _this.isSave = false;

          _logger.default.info('has the same timming');

          return;
        }

        var newTime = {
          tz: tz,
          tzs: tzs,
          time: (0, _toConsumableArray2.default)(timeArr)
        };

        if (isNew) {
          newTime.time.push(curTime);
        } else {
          newTime.time[index] = curTime;
        }

        _this.setState({
          showLoading: true
        }, function () {
          _api.SpecApi.specSet(PROP.TIMING, JSON.stringify(newTime)).then(function (code) {
            if (code !== _ApiCode.default.SUCCESS) {
              if (code === _ApiCode.default.ONING) {
                _UIUtils.default.info(_localString.default.wait_operate);
              } else {
                _UIUtils.default.info(_localString.default.operator_fail);
              }

              _this.isSave = false;

              _this.setState({
                showLoading: false
              });
            } else {
              if (isNew) {
                timingStore.addItem(curTime);
              } else {
                timingStore.updateItem(curTime, index);
              }

              _this.isSave = false;

              _this.setState({
                showLoading: false
              }, function () {
                navigation.goBack();
              });
            }
          }).catch(function () {
            _UIUtils.default.info(_localString.default.operator_fail);

            _this.isSave = false;

            _this.setState({
              showLoading: false
            });
          });
        });
      };

      _this._onDel = function () {
        var _assertThisInitialize2 = (0, _assertThisInitialized2.default)(_this),
            isNew = _assertThisInitialize2.isNew,
            index = _assertThisInitialize2.index;

        if (isNew || index < 0) {
          return;
        }

        _this.setState({
          showLoading: true
        }, function () {
          var _this$props2 = _this.props,
              timingStore = _this$props2.timingStore,
              navigation = _this$props2.navigation;
          var timeArr = timingStore.time,
              tz = timingStore.tz,
              tzs = timingStore.tzs;
          var newTime = {
            tz: tz,
            tzs: tzs,
            time: (0, _toConsumableArray2.default)(timeArr)
          };
          newTime.time.splice(index, 1);

          _api.SpecApi.specSet(PROP.TIMING, JSON.stringify(newTime)).then(function (code) {
            if (code !== _ApiCode.default.SUCCESS) {
              if (code === _ApiCode.default.ONING) {
                _UIUtils.default.info(_localString.default.wait_operate);
              } else {
                _UIUtils.default.info(_localString.default.operator_fail);
              }

              _this.setState({
                showLoading: false
              });
            } else {
              timingStore.removeItem(index);

              _this.setState({
                showLoading: false
              }, function () {
                navigation.goBack();
              });
            }
          }).catch(function () {
            _UIUtils.default.info(_localString.default.operator_fail);

            _this.setState({
              showLoading: false
            });
          });
        });
      };

      _this._onSelect = function (res) {
        var rawArray = res.rawArray;

        _this.setState({
          current: rawArray
        });
      };

      var _navigation = props.navigation;

      _navigation.setParams({
        title: _localString.default.timing_sweep
      });

      _this.index = _navigation.getParam('index');

      var _item = _navigation.getParam('item');

      _this.isNew = _this.index < 0 || _item === undefined;

      _logger.default.info("index: " + _this.index + ", item: " + JSON.stringify(_item));

      var week = _this.isNew ? [] : _item[4];

      var _selectWeek = week.map(function (v) {
        if (+v === 0) {
          return 6;
        }

        return +v - 1;
      });

      var _now = new Date();

      var oldtime = _this.isNew ? [_now.getHours(), _now.getMinutes()] : _DateUtils.default.diffToTimeArr(_item[0]);
      _this.state = {
        showWeek: false,
        showTime: false,
        showGear: false,
        showMode: false,
        showLoading: false,
        showDialog: false,
        showExit: false,
        gear: _this.isNew ? 1 : _item[2],
        mode: _this.isNew ? 0 : _item[3],
        enable: _this.isNew ? 1 : _item[1],
        oldtime: oldtime,
        editItem: _item,
        current: oldtime,
        selectWeek: _selectWeek,
        suctionLi: [{
          img: _$$_REQUIRE(_dependencyMap[27])
        }, {
          img: _$$_REQUIRE(_dependencyMap[28])
        }, {
          img: _$$_REQUIRE(_dependencyMap[29])
        }, {
          img: _$$_REQUIRE(_dependencyMap[30])
        }],
        waterVolume: [{
          img: _$$_REQUIRE(_dependencyMap[31])
        }, {
          img: _$$_REQUIRE(_dependencyMap[32])
        }, {
          img: _$$_REQUIRE(_dependencyMap[33])
        }],
        fanLevelIndex: null,
        fanLevelTxt: '',
        fanLevelIcon: '',
        waterLevelIndex: null,
        waterLevelTxt: '',
        waterLevelIcon: '',
        reservationTxt: '',
        addMapData: null,
        addMapDataName: '',
        addMapDataId: [],
        isMop: false
      };
      _this.isSave = false;
      _this.saveFunc = _this._save.bind((0, _assertThisInitialized2.default)(_this));
      _this.exitFunc = _this._exit.bind((0, _assertThisInitialized2.default)(_this));
      props.navigation.setParams({
        saveFunc: _this.saveFunc,
        exitFunc: _this.exitFunc
      });
      return _this;
    }

    (0, _createClass2.default)(TimeCleanDetail, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _api.SpecApi.syncProps([PROP.MOP]).then(function (msg) {
          _this2.setState({
            isMop: msg.mop
          });
        });

        _PushManager.default.addObserver('TimeCleanDetailObserver', this.handlePushMessage, {
          props: [PROP.MOP]
        });

        this.cleanMapEdit = _reactNative.DeviceEventEmitter.addListener('cleanMapEdit', function (msg) {
          _this2.setState({
            addMapDataName: '',
            addMapDataId: []
          }, function () {
            for (var i = 0; i < msg.length; i++) {
              _this2.state.addMapDataName += msg[i].name + (i == msg.length - 1 ? '' : '、');

              _this2.state.addMapDataId.push(msg[i].id);
            }

            _this2.setState({
              addMapData: msg,
              addMapDataName: _this2.state.addMapDataName,
              addMapDataId: _this2.state.addMapDataId
            });
          });
        });
        this.editFun();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.cleanMapEdit.emitter.removeAllListeners('cleanMapEdit');

        _PushManager.default.removeObserver('TimeCleanDetailObserver');
      }
    }, {
      key: "editFun",
      value: function editFun() {
        if (this.state.editItem) {
          var ishasAutoArea = this.props.navigation.state.params["ishasAutoArea"];
          var autoAreaValue = ishasAutoArea();
          var selectDataContent = '';

          for (var i = 0; i < this.state.editItem[6].length; i++) {
            for (var j = 0; j < autoAreaValue.length; j++) {
              if (this.state.editItem[6][i] == autoAreaValue[j].id) {
                this.state.addMapDataId.push(autoAreaValue[j].id);
                selectDataContent += autoAreaValue[j].name + (i == this.state.editItem[6].length - 1 ? '' : '、');
              }
            }
          }

          this.setState({
            addMapDataName: selectDataContent,
            addMapDataId: this.state.addMapDataId
          });
          this.suctionIcon(this.state.editItem[2] - 1);
          this.HydraulicIcon(this.state.editItem[5] - 1);
        } else {
          this.suctionIcon(0);
          this.HydraulicIcon(1);
        }
      }
    }, {
      key: "onDismiss",
      value: function onDismiss() {
        this.state.showMode = false;
      }
    }, {
      key: "suctionIcon",
      value: function suctionIcon(fanLevelIndex) {
        var img = '',
            test = '';

        switch (fanLevelIndex) {
          case 0:
            img = _$$_REQUIRE(_dependencyMap[34]);
            test = _localString.default.silent;
            break;

          case 1:
            img = _$$_REQUIRE(_dependencyMap[35]);
            test = _localString.default.standard;
            break;

          case 2:
            img = _$$_REQUIRE(_dependencyMap[36]);
            test = _localString.default.middle;
            break;

          case 3:
            img = _$$_REQUIRE(_dependencyMap[37]);
            test = _localString.default.strong;
            break;
        }

        this.setState({
          fanLevelIndex: fanLevelIndex,
          fanLevelTxt: test,
          fanLevelIcon: img
        });
      }
    }, {
      key: "HydraulicIcon",
      value: function HydraulicIcon(waterLevelIndex) {
        var img = '',
            test = '';

        switch (waterLevelIndex) {
          case 0:
            img = _$$_REQUIRE(_dependencyMap[38]);
            test = _localString.default.small;
            break;

          case 1:
            img = _$$_REQUIRE(_dependencyMap[39]);
            test = _localString.default.in;
            break;

          case 2:
            img = _$$_REQUIRE(_dependencyMap[40]);
            test = _localString.default.big;
            break;
        }

        this.setState({
          waterLevelIndex: waterLevelIndex,
          waterLevelTxt: test,
          waterLevelIcon: img
        });
      }
    }, {
      key: "reservationClcik",
      value: function reservationClcik() {
        this.setState({
          showMode: false,
          reservationTxt: this.state.fanLevelTxt + "/" + this.state.waterLevelTxt
        });
      }
    }, {
      key: "selectCleanMap",
      value: function selectCleanMap() {
        var ishasAutoArea = this.props.navigation.state.params["ishasAutoArea"];
        var autoAreaValue = ishasAutoArea();

        if (autoAreaValue.length) {
          this.props.navigation.navigate('TimeCleanMap');
        } else {
          _UIUtils.default.info(_localString.default.noMap_prompt);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state2 = this.state,
            showWeek = _this$state2.showWeek,
            showTime = _this$state2.showTime,
            showGear = _this$state2.showGear,
            showMode = _this$state2.showMode,
            current = _this$state2.current,
            mode = _this$state2.mode,
            _this$state2$gear = _this$state2.gear,
            gear = _this$state2$gear === undefined ? 1 : _this$state2$gear,
            showLoading = _this$state2.showLoading,
            selectWeek = _this$state2.selectWeek,
            _this$state2$showDial = _this$state2.showDialog,
            showDialog = _this$state2$showDial === undefined ? false : _this$state2$showDial,
            _this$state2$showExit = _this$state2.showExit,
            showExit = _this$state2$showExit === undefined ? false : _this$state2$showExit,
            oldtime = _this$state2.oldtime;
        var date = new Date();
        var g = +gear - 1;

        if (g < 0) {
          g = 0;
        }

        date.setHours(current[0], current[1], 59);
        var time = date.getTime();

        if (selectWeek.length <= 0 && Date.now() - time > 0) {
          time += _DateUtils.default.DAY_MS;
        }

        var t = selectWeek.length > 0 ? _DateUtils.default.timeArrToDiff(current) : Math.floor(time / 1000);
        var realWeek = selectWeek.map(function (v) {
          if (+v === 6) {
            return 0;
          }

          return +v + 1;
        });

        var weekStr = _DateUtils.default.getWeekStr(realWeek);

        var timeStr = _DateUtils.default.getTimeStr(t);

        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.repeat,
          subtitle: weekStr,
          onPress: function onPress() {
            return _this3.setState({
              showWeek: true
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.clean_time,
          subtitle: timeStr,
          onPress: function onPress() {
            return _this3.setState({
              showTime: true,
              oldtime: current
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.mode_setting,
          subtitle: this.state.reservationTxt != '' ? this.state.reservationTxt : this.state.fanLevelTxt + "/" + this.state.waterLevelTxt,
          showSeparator: +mode !== 1,
          onPress: function onPress() {
            return _this3.setState({
              showMode: true
            });
          }
        }), _react.default.createElement(_ListItem.ListItem, {
          title: _localString.default.cleaning_range,
          subtitle: this.state.addMapDataName != '' ? this.state.addMapDataName : _localString.default.global_clean,
          showSeparator: false,
          onPress: function onPress() {
            _this3.selectCleanMap();
          }
        }), _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this.isNew ? null : _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "delete",
          style: {
            marginBottom: 24
          },
          onPress: function onPress() {
            _this3.setState({
              showDialog: true
            });
          }
        }, _localString.default.remove)), _react.default.createElement(_MHDatePicker.default, {
          key: "timePicker",
          visible: showTime,
          title: _localString.default.timing_time,
          showSubtitle: false,
          type: _MHDatePicker.default.TYPE.TIME24,
          current: oldtime,
          confirmColor: Colors.mainColor,
          onDismiss: function onDismiss() {
            return _this3.setState({
              showTime: false
            });
          },
          onSelect: this._onSelect
        }), _react.default.createElement(_Dialog.ChoiceDialog, {
          visible: showWeek,
          title: _localString.default.repeat,
          onDismiss: function onDismiss() {
            _this3.setState({
              showWeek: false
            });
          },
          color: Colors.mainColor,
          selectedIndexArray: selectWeek,
          options: [{
            title: _localString.default.monday
          }, {
            title: _localString.default.tuesday
          }, {
            title: _localString.default.wednesday
          }, {
            title: _localString.default.thursday
          }, {
            title: _localString.default.friday
          }, {
            title: _localString.default.saturday
          }, {
            title: _localString.default.sunday
          }],
          type: _Dialog.ChoiceDialog.TYPE.MULTIPLE,
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: Colors.secondColor
            },
            callback: function callback() {
              _this3.setState({
                showWeek: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: Colors.mainColor
            },
            callback: function callback(result) {
              _this3.setState({
                showWeek: false,
                selectWeek: result
              });
            }
          }]
        }), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: showMode,
          showTitle: false,
          showButton: false,
          onDismiss: function onDismiss(_) {
            return _this3.onDismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.reservation
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.reservationTitle
        }, _localString.default.regular_mode), _react.default.createElement(_reactNative.View, {
          style: styles.reservationViceTitle
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.reservationTitle
        }, _localString.default.suction), _react.default.createElement(_reactNative.Text, {
          style: styles.reservationViceType
        }, this.state.fanLevelTxt)), _react.default.createElement(_reactNative.View, {
          style: styles.reservationType
        }, this.state.suctionLi.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            style: [styles.suctionLi, _this3.state.fanLevelIndex == index ? styles.suctionActive : ''],
            key: index,
            onPress: function onPress() {
              _this3.suctionIcon(index);
            }
          }, _react.default.createElement(_reactNative.Image, {
            source: _this3.state.fanLevelIndex == index ? _this3.state.fanLevelIcon : item.img,
            resizeMode: "contain",
            style: styles.suctionLiIcon
          }));
        })), _react.default.createElement(_reactNative.View, {
          style: styles.reservationViceTitle
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.reservationTitle
        }, _localString.default.mopping_water), _react.default.createElement(_reactNative.Text, {
          style: [styles.reservationViceType, this.state.isMop ? '' : styles.noMop]
        }, this.state.isMop ? this.state.waterLevelTxt : _localString.default.isMop_take)), _react.default.createElement(_reactNative.View, {
          style: styles.reservationType
        }, this.state.waterVolume.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            style: [styles.suctionLi, _this3.state.waterLevelIndex == index ? styles.suctionActive : ''],
            key: index,
            onPress: function onPress() {
              _this3.HydraulicIcon(index);
            }
          }, _react.default.createElement(_reactNative.Image, {
            source: _this3.state.waterLevelIndex == index ? _this3.state.waterLevelIcon : item.img,
            resizeMode: "contain",
            style: styles.suctionLiIcon
          }));
        })), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.customModeBtn,
          onPress: function onPress() {
            _this3.reservationClcik();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.customModeBtnTxt
        }, _localString.default.confirm)))), _react.default.createElement(_Dialog.ChoiceDialog, {
          visible: showGear,
          color: Colors.mainColor,
          title: _localString.default.gear,
          selectedIndexArray: [g],
          icon: selectIcon,
          options: GEAR_OPTIONS,
          onDismiss: function onDismiss() {
            _this3.setState({
              showGear: false
            });
          },
          onSelect: function onSelect(res) {
            _logger.default.info("timing mode: " + JSON.stringify(res));

            _this3.setState({
              gear: +res[0] + 1
            });
          },
          type: _Dialog.ChoiceDialog.TYPE.SINGLE
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          timeout: 10000,
          message: _localString.default.ctrling
        }), _react.default.createElement(_Dialog.MessageDialog, {
          title: _localString.default.hint,
          message: _localString.default.del_cur_timing,
          visible: showDialog,
          cancelable: true,
          messageStyle: {
            alignSelf: 'center',
            textAlign: 'center',
            fontFamily: 'System'
          },
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: Colors.secondColor
            },
            callback: function callback() {
              _this3.setState({
                showDialog: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: Colors.mainColor
            },
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            callback: function callback() {
              _this3.setState({
                showDialog: false
              });

              _this3._onDel();
            }
          }],
          onDismiss: function onDismiss() {
            _this3.setState({
              showDialog: false
            });
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          title: _localString.default.hint,
          message: _localString.default.exit_with_not_save,
          visible: showExit,
          cancelable: true,
          messageStyle: {
            alignSelf: 'center',
            textAlign: 'center'
          },
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: Colors.secondColor
            },
            callback: function callback() {
              _this3.setState({
                showExit: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: Colors.mainColor
            },
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            callback: function callback() {
              _this3.setState({
                showExit: false
              });

              _this3._doExit();
            }
          }],
          onDismiss: function onDismiss() {
            _this3.setState({
              showExit: false
            });
          }
        }));
      }
    }]);
    return TimeCleanDetail;
  }(_react.default.Component), _class.navigationOptions = function (_ref) {
    var navigation = _ref.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        type: _NavigationBar.default.TYPE.DARK,
        title: _localString.default.timing_sweep,
        backgroundColor: Colors.mainColor,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            var func = navigation.getParam('exitFunc');

            if (func != null) {
              func();
            }
          }
        }],
        right: [{
          key: _NavigationBar.default.ICON.COMPLETE,
          onPress: function onPress() {
            var func = navigation.getParam('saveFunc');

            if (func != null) {
              func();
            }
          }
        }]
      })
    };
  }, _temp)));

  var styles = _reactNative.StyleSheet.create({
    noMop: {
      color: '#939AA9'
    },
    reservation: {
      backgroundColor: '#fff',
      paddingHorizontal: 20,
      paddingVertical: 30,
      borderRadius: 10
    },
    reservationTitle: {
      color: '#03211C',
      fontSize: 16
    },
    reservationViceTitle: {
      marginTop: 20,
      flexDirection: 'row'
    },
    reservationViceType: {
      fontSize: 14,
      color: '#5C92FF'
    },
    reservationType: {
      flexDirection: 'row',
      height: 48,
      borderRadius: 27,
      backgroundColor: '#eee',
      marginTop: 20
    },
    suctionLiIcon: {
      width: 30,
      height: 30
    },
    suctionLi: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 27,
      borderWidth: 1,
      borderColor: '#eee'
    },
    suctionActive: {
      backgroundColor: '#ffff',
      borderColor: '#5C92FF'
    },
    customModeBtn: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#5C92FF',
      height: 44,
      borderRadius: 8,
      marginTop: 40
    },
    customModeBtnTxt: {
      color: '#fff',
      fontSize: 16
    }
  });

  var _default = TimeCleanDetail;
  exports.default = _default;
},11981,[14305,14359,14320,14323,14371,14377,14374,14386,10297,10033,10338,10719,10716,10755,10332,10004,11251,10064,10016,10091,10100,10409,11813,10103,11711,11852,11825,11726,11729,11732,11735,11738,11741,11744,11768,11771,11774,11777,11759,11762,11765]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _MapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Dock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _BaseMap2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[19]);

  var _MapContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _common = _$$_REQUIRE(_dependencyMap[21]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _HeadInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _ShowForbidZone = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _PathBeautify = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var CleanDetail = function (_BaseMap) {
    (0, _inherits2.default)(CleanDetail, _BaseMap);

    function CleanDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CleanDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CleanDetail).call(this, props));

      _this._retryLoadMap = function () {
        return _FunUtils.default.retry(_this._loadMap, 3).then(function (success) {
          return success;
        }).catch(function () {
          return false;
        }).then(function (res) {
          _this.setState({
            showLoading: false
          });

          if (!res) {
            _UIUtils.default.info(_localString.default.load_fail);
          }
        });
      };

      _this._loadMap = function () {
        var fileName = _this.cleanData.fileName;
        return _MapApi.default.genFDSUrl(fileName).then(function (res) {
          var _ref = res || {},
              url = _ref.url,
              name = _ref.name;

          if (url && name) {
            return _MapApi.default.fetchFile(url, name).then(_this._handleMapFile);
          }

          return false;
        });
      };

      _this.afterHandleMap = function (res) {
        var mapConfig = _this.mapData.mapConfig;

        var _ref2 = res || {},
            _ref2$ratio = _ref2.ratio,
            ratio = _ref2$ratio === undefined ? 1 : _ref2$ratio;

        var posArray = mapConfig.posArray,
            area = mapConfig.area;
        _this.machinePos = _MapUtils.default.calcPathEndPos(posArray, mapConfig, ratio);

        var _MapUtils$calcZones = _MapUtils.default.calcZones(area, mapConfig, ratio),
            forbidArray = _MapUtils$calcZones.forbidArray;

        var result = _this.pathBeautify.beautifyPath(posArray);

        _this.beautifyPath = _MapUtils.default.calcPath(result, mapConfig, ratio, false);
        _this.forbidArray = forbidArray;

        _this.setState((0, _objectSpread2.default)({}, res));
      };

      _this._renderZones = function () {
        var noMap = _this.state.noMap;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            forbidArray = _assertThisInitialize.forbidArray;

        var forbidView = forbidArray.map(function (forbid, index) {
          return _react.default.createElement(_ShowForbidZone.default, {
            key: "forbid-" + index,
            zone: forbid.vertexs,
            forbidType: forbid.forbidType,
            isClick: false
          });
        });

        if (noMap || forbidView.length <= 0) {
          return null;
        }

        return forbidView;
      };

      props.navigation.setParams({
        titleProps: {
          title: _localString.default.sweep_record
        }
      });
      _this.cleanData = props.navigation.getParam('data');
      _this.spotArray = [];
      _this.zoneArray = [];
      _this.forbidArray = [];
      _this.pathBeautify = new _PathBeautify.default();
      _this.beautifyPath = '';
      return _this;
    }

    (0, _createClass2.default)(CleanDetail, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(CleanDetail.prototype), "componentDidMount", this).call(this);

        _common.logger.log('clean detail ====== cdm ====== showLoading: true');

        this.setState({
          showLoading: true
        }, this._retryLoadMap);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state = this.state,
            _this$state$exit = _this$state.exit,
            exit = _this$state$exit === undefined ? false : _this$state$exit,
            ratio = _this$state.ratio,
            _this$state$showLoadi = _this$state.showLoading,
            showLoading = _this$state$showLoadi === undefined ? false : _this$state$showLoadi,
            noMap = _this$state.noMap;

        if (exit) {
          return null;
        }

        var _this$dockPos = this.dockPos,
            x = _this$dockPos.x,
            y = _this$dockPos.y,
            angle = _this$dockPos.angle;
        var _this$cleanData = this.cleanData,
            area = _this$cleanData.area,
            mins = _this$cleanData.mins;
        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_reactNative.ImageBackground, {
          style: {
            height: '100%',
            width: '100%'
          },
          source: _$$_REQUIRE(_dependencyMap[29])
        }, _react.default.createElement(_reactNative.View, {
          style: {
            height: '100%',
            width: '100%'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            backgroundColor: '#FFFFFF',
            height: 80,
            zIndex: 20
          }
        }, _react.default.createElement(_HeadInfo.default, {
          title: area,
          sup: "m\xB2",
          desc: _localString.default.cleand
        }), _react.default.createElement(_HeadInfo.default, {
          title: mins,
          sup: "min",
          desc: _localString.default.clean_time
        })), _react.default.createElement(_Separator.default, null), _react.default.createElement(_MapContainer.default, {
          exit: exit,
          ratio: ratio,
          noMap: noMap,
          mapImage: this.mapImage,
          areaCenter: this.areaCenter,
          mapData: this.mapData,
          clickable: false
        }, _react.default.createElement(_react.Fragment, null, this._renderPath(), this._renderZones(), _react.default.createElement(_Dock.default, {
          x: x,
          y: y,
          angle: angle,
          noMap: noMap
        }), this._renderMachine(this.machinePos))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          timeout: 10000,
          message: _localString.default.loading
        }))));
      }
    }]);
    return CleanDetail;
  }(_BaseMap2.default);

  exports.default = CleanDetail;
  CleanDetail.navigationOptions = _HdNavigationBar.default;
},11984,[14308,14305,14314,14320,14323,14371,14374,14377,14380,14386,10016,10033,10297,11618,10719,11672,11987,11678,10106,10755,11990,10109,10332,11993,11555,10409,11708,11852,11936,11798]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var Dock = function (_React$PureComponent) {
    (0, _inherits2.default)(Dock, _React$PureComponent);

    function Dock() {
      (0, _classCallCheck2.default)(this, Dock);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Dock).apply(this, arguments));
    }

    (0, _createClass2.default)(Dock, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            x = _this$props.x,
            y = _this$props.y,
            _this$props$angle = _this$props.angle,
            angle = _this$props$angle === undefined ? 0 : _this$props$angle,
            noMap = _this$props.noMap;

        if (noMap || !x && !y) {
          return null;
        }

        return _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[8]),
          style: [{
            position: 'absolute',
            transform: [{
              translateX: x - 8
            }, {
              translateY: y - 11
            }, {
              rotate: angle + "deg"
            }]
          }]
        });
      }
    }]);
    return Dock;
  }(_react.default.PureComponent);

  exports.default = Dock;
},11987,[14305,14320,14323,14371,14377,14386,10297,10033,11714]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _GestureView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _MapComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _RoomNameView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      ScreenWidth = _Dimensions$get.width;

  var MapContainer = function (_React$Component) {
    (0, _inherits2.default)(MapContainer, _React$Component);

    function MapContainer(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MapContainer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MapContainer).call(this, props));

      _this._onMapClick = function (event, autoAreaValue) {
        var _event$nativeEvent = event.nativeEvent,
            locationX = _event$nativeEvent.locationX,
            locationY = _event$nativeEvent.locationY;
        var _this$props = _this.props,
            _this$props$selectAre = _this$props.selectAreaArray,
            selectAreaArray = _this$props$selectAre === undefined ? [] : _this$props$selectAre,
            _this$props$ratio = _this$props.ratio,
            ratio = _this$props$ratio === undefined ? 1 : _this$props$ratio,
            mapData = _this$props.mapData,
            onSelectAreaChanged = _this$props.onSelectAreaChanged;
        var _mapData$mapConfig = mapData.mapConfig,
            width = _mapData$mapConfig.width,
            height = _mapData$mapConfig.height,
            data = mapData.data;

        var id = _MapUtils.default.calcAreaId(data, locationX, locationY, width, height, ratio);

        if (id <= 0) {
          if (onSelectAreaChanged) {
            onSelectAreaChanged(selectAreaArray);
          }

          return;
        }

        var index = selectAreaArray.indexOf(id);
        var areaArray;

        if (index >= 0) {
          areaArray = selectAreaArray.filter(function (item) {
            return item !== id;
          });
        } else {
          areaArray = [].concat((0, _toConsumableArray2.default)(selectAreaArray), [id]);
        }

        if (onSelectAreaChanged) {
          onSelectAreaChanged(areaArray);
        }
      };

      _this._renderMapImage = function (mapImage, noMap, ratio, mapData, noFlicker) {
        var _mapData$mapConfig2 = mapData.mapConfig,
            width = _mapData$mapConfig2.width,
            height = _mapData$mapConfig2.height;

        if (!noMap && mapImage) {
          return _react.default.createElement(_MapComponent.default, {
            noFlicker: noFlicker,
            width: width,
            height: height,
            ratio: ratio,
            source: {
              uri: mapImage
            }
          });
        }

        return null;
      };

      _this._onMapLayout = function (event) {
        var _event$nativeEvent$la = event.nativeEvent.layout,
            height = _event$nativeEvent$la.height,
            width = _event$nativeEvent$la.width,
            x = _event$nativeEvent$la.x,
            y = _event$nativeEvent$la.y;
      };

      _this.state = {};
      return _this;
    }

    (0, _createClass2.default)(MapContainer, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            _this$props2$exit = _this$props2.exit,
            exit = _this$props2$exit === undefined ? false : _this$props2$exit,
            noMap = _this$props2.noMap,
            gestureStyle = _this$props2.gestureStyle,
            _this$props2$selectAr = _this$props2.selectAreaArray,
            selectAreaArray = _this$props2$selectAr === undefined ? [] : _this$props2$selectAr,
            mapData = _this$props2.mapData,
            areaCenter = _this$props2.areaCenter,
            _this$props2$noFlicke = _this$props2.noFlicker,
            noFlicker = _this$props2$noFlicke === undefined ? false : _this$props2$noFlicke,
            ratio = _this$props2.ratio,
            mapImage = _this$props2.mapImage,
            draggable = _this$props2.draggable,
            _this$props2$isMapSho = _this$props2.isMapShowCustom,
            isMapShowCustom = _this$props2$isMapSho === undefined ? false : _this$props2$isMapSho,
            _this$props2$showInde = _this$props2.showIndex,
            showIndex = _this$props2$showInde === undefined ? false : _this$props2$showInde,
            other = (0, _objectWithoutProperties2.default)(_this$props2, ["children", "exit", "noMap", "gestureStyle", "selectAreaArray", "mapData", "areaCenter", "noFlicker", "ratio", "mapImage", "draggable", "isMapShowCustom", "showIndex"]);

        if (exit || noMap) {
          return null;
        }

        var _ref = mapData || {},
            _ref$mapConfig = _ref.mapConfig,
            autoAreaValue = _ref$mapConfig.autoAreaValue,
            width = _ref$mapConfig.width,
            height = _ref$mapConfig.height,
            _ref$colorMap = _ref.colorMap,
            colorMap = _ref$colorMap === undefined ? {} : _ref$colorMap;

        var minWidth = -width * ratio / 2;
        var maxWidth = ScreenWidth - width * ratio / 2;
        var minHeight = -height * ratio / 2;
        var maxHeight = height * ratio / 2;
        var drag = draggable !== true ? draggable : {
          x: {
            min: minWidth,
            max: maxWidth
          },
          y: {
            min: minHeight,
            max: maxHeight
          }
        };
        var style = (0, _extends2.default)({
          justifyContent: 'center',
          alignSelf: 'center'
        }, gestureStyle);
        return _react.default.createElement(_reactNative.View, {
          style: {
            width: '200%',
            alignSelf: 'center',
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_GestureView.default, (0, _extends2.default)({
          onClick: this._onMapClick,
          autoAreaValue: autoAreaValue,
          draggable: drag,
          rotatable: false,
          style: style,
          singleRotatable: false,
          scalable: {
            min: 0.7,
            max: 2.5
          }
        }, other), _react.default.createElement(_reactNative.View, null, this._renderMapImage(mapImage, noMap, ratio, mapData, noFlicker), children, _react.default.createElement(_RoomNameView.default, {
          showIndex: showIndex,
          iscustomSwitch: isMapShowCustom,
          autoAreaValue: autoAreaValue,
          colorMap: colorMap,
          areaCenter: areaCenter,
          selectAreaArray: selectAreaArray
        }))));
      }
    }]);
    return MapContainer;
  }(_react.default.Component);

  exports.default = MapContainer;
  MapContainer.propTypes = (0, _objectSpread2.default)({}, _GestureView.default.propTypes, {
    noFlicker: _propTypes.default.bool,
    exit: _propTypes.default.bool,
    ratio: _propTypes.default.number,
    onSelectAreaChanged: _propTypes.default.func,
    mapImage: _propTypes.default.string,
    areaCenter: _propTypes.default.object
  });
  MapContainer.defaultProps = {
    noFlicker: false,
    exit: false,
    ratio: 1
  };
},11990,[14305,14314,14344,14407,14359,14320,14323,14371,14377,14386,10297,10033,10318,10547,11693,11630,11618]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var HeadInfo = function (_React$Component) {
    (0, _inherits2.default)(HeadInfo, _React$Component);

    function HeadInfo(props) {
      var _this;

      (0, _classCallCheck2.default)(this, HeadInfo);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HeadInfo).call(this, props));

      _this._handleLayout = function (event) {
        var width = event.nativeEvent.layout.width;

        _this.setState({
          left: width
        }, function () {
          setTimeout(function () {
            _this.setState({
              visible: true
            });
          }, 400);
        });
      };

      _this.state = {
        left: 0,
        visible: false
      };
      return _this;
    }

    (0, _createClass2.default)(HeadInfo, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.setState = function () {};
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            _this$props$title = _this$props.title,
            title = _this$props$title === undefined ? '--' : _this$props$title,
            sup = _this$props.sup,
            desc = _this$props.desc,
            other = (0, _objectWithoutProperties2.default)(_this$props, ["title", "sup", "desc"]);
        var _this$state = this.state,
            left = _this$state.left,
            _this$state$visible = _this$state.visible,
            visible = _this$state$visible === undefined ? false : _this$state$visible;
        var opacity = visible ? 1 : 0;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.itemContainer]
        }, other), _react.default.createElement(_reactNative.Text, {
          style: styles.headDesc
        }, desc), _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer,
          onLayout: this._handleLayout
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.headTitle
        }, title)), _react.default.createElement(_reactNative.Text, {
          style: [styles.sup, {
            left: left,
            opacity: opacity
          }]
        }, sup)));
      }
    }]);
    return HeadInfo;
  }(_react.default.Component);

  exports.default = HeadInfo;
  HeadInfo.propTypes = {
    title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    sup: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    desc: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
  };

  var styles = _reactNative.StyleSheet.create({
    itemContainer: {
      flex: 1,
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center'
    },
    titleContainer: {
      flexDirection: 'row',
      alignItems: 'flex-start',
      justifyContent: 'center',
      alignSelf: 'center'
    },
    headTitle: {
      fontSize: 20,
      opacity: 0.8,
      color: '#000000',
      alignSelf: 'center',
      fontFamily: 'Kmedium'
    },
    sup: {
      fontSize: 13,
      opacity: 0.6,
      color: '#000000',
      position: 'absolute'
    },
    headDesc: {
      fontSize: 12,
      opacity: 0.6,
      color: '#000000',
      textAlign: 'center'
    }
  });
},11993,[14305,14344,14407,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _miot = _$$_REQUIRE(_dependencyMap[9]);

  var _mobxReact = _$$_REQUIRE(_dependencyMap[10]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[11]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[14]);

  var _MapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Service = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _BasePage2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _class, _temp;

  var Colors = _Consts.default.Colors;
  var MapList = (0, _mobxReact.inject)('mapStore')((0, _mobxReact.observer)((_temp = _class = function (_BasePage) {
    (0, _inherits2.default)(MapList, _BasePage);

    function MapList(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MapList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MapList).call(this, props));

      _this._deleteMapList = function (mapId) {
        var _this$state$list = _this.state.list,
            list = _this$state$list === undefined ? [] : _this$state$list;

        for (var i = 0; i < list.length; i++) {
          var item = list[i];

          if (item.mapid === mapId) {
            _logger.default.log("\u5220\u9664\u5730\u56FE\u6210\u529F,MapId:" + item.mapid);

            list.splice(i, 1);
            i--;
          }
        }

        _this.setState({
          list: list
        });
      };

      _this._rename = function (mapId, name) {
        var _this$state$list2 = _this.state.list,
            list = _this$state$list2 === undefined ? [] : _this$state$list2;

        for (var i = 0; i < list.length; i++) {
          var item = list[i];

          if (item.mapid === mapId) {
            list[i].map_name = name;
            break;
          }
        }

        _this.setState({
          list: list
        });
      };

      _this._renderEmpty = function () {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            height: 400,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            marginBottom: 18
          },
          source: _$$_REQUIRE(_dependencyMap[22])
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            fontFamily: 'System',
            color: '#999999'
          }
        }, _localString.default.no_map)));
      };

      _this._loadMapList = function () {
        _MapApi.default.genTempUrl(1).then(function (res) {
          var url = res.url;

          _this._fetchFile(url);
        }).catch(function (e) {
          _this.setState({
            showLoading: false
          });

          _logger.default.info("load map list fail: " + JSON.stringify(e));
        });
      };

      _this.refrensh = function () {
        _this.setState({
          showLoading: true
        });

        _this._loadMapList();
      };

      _this._fetchFile = function (url) {
        _miot.Host.file.downloadFile(url, '2').then(function () {
          _miot.Host.file.readFile('2').then(function (res) {
            var mapList = JSON.parse(res);

            _logger.default.info("load map list success, " + JSON.stringify(mapList));

            var cuid = _Service.default.account.ID;
            var oid = _miot.Device.owner.ID;
            var list = mapList.bkmap_list.map(function (item) {
              var mapid = item.mapid,
                  record_obj_name = item.record_obj_name,
                  map_index = item.map_index,
                  bkmap_obj_name = item.bkmap_obj_name,
                  map_name = item.map_name,
                  uid = item.uid;

              if (uid === undefined || uid === cuid || uid === oid) {
                return {
                  mapid: mapid,
                  record_obj_name: record_obj_name,
                  map_index: map_index,
                  bkmap_obj_name: bkmap_obj_name,
                  map_name: map_name,
                  uid: uid
                };
              }

              return null;
            }).filter(function (item) {
              return item !== null;
            });

            _this.setState({
              list: list,
              showLoading: false
            });
          }).catch(function (e) {
            _this.setState({
              showLoading: false
            });

            _logger.default.info("read map list fail, " + JSON.stringify(e));
          });
        }).catch(function (err) {
          _this.setState({
            showLoading: false
          });

          _logger.default.info("download map list fail, " + JSON.stringify(err));
        });
      };

      _this._renderItem = function (_ref) {
        var item = _ref.item;
        var mapid = item.mapid,
            record_obj_name = item.record_obj_name,
            map_index = item.map_index,
            bkmap_obj_name = item.bkmap_obj_name,
            map_name = item.map_name;
        var mapName = '';

        if (map_name === '') {
          mapName = _localString.default.map_x.format("" + mapid.toString(16).substr(3, 4).toUpperCase());
        } else if (map_name.substr(0, 1) == '#') {
          mapName = map_name.replace('#', _localString.default.map);
        } else {
          mapName = map_name;
        }

        var currentMapId = _this.props.mapStore.currentMapId;
        var isCurrent = currentMapId === mapid && mapid;
        var value = isCurrent ? _localString.default.current_map : '';
        return _react.default.createElement(_ListItem.ListItem, {
          title: mapName,
          value: value,
          onPress: function onPress() {
            var params = {
              mapid: mapid,
              record_obj_name: record_obj_name,
              bkmap_obj_name: bkmap_obj_name,
              mapName: mapName,
              map_index: map_index
            };
            var navigation = _this.props.navigation;

            _logger.default.log("map_index: " + map_index);

            navigation.push('MapDetail', {
              data: params,
              isCurrent: isCurrent,
              mapName: mapName
            });
          }
        });
      };

      _this.state = {
        showLoading: false,
        list: []
      };
      return _this;
    }

    (0, _createClass2.default)(MapList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        (0, _get2.default)((0, _getPrototypeOf2.default)(MapList.prototype), "componentDidMount", this).call(this);

        _reactNative.DeviceEventEmitter.addListener('rename', function (mapId, name) {
          _this2._rename(mapId, name);
        });

        _reactNative.DeviceEventEmitter.addListener('deleteMap', function (param) {
          _this2._deleteMapList(param);
        });

        this.setState({
          showLoading: true
        });

        this._loadMapList();
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(MapList.prototype), "componentWillUnmount", this).call(this);

        _reactNative.DeviceEventEmitter.removeAllListeners();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state = this.state,
            list = _this$state.list,
            showLoading = _this$state.showLoading;
        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'column',
            backgroundColor: Colors.backgroundColor
          }
        }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.FlatList, {
          data: list,
          ListEmptyComponent: this._renderEmpty,
          renderItem: this._renderItem,
          keyExtractor: function keyExtractor(item) {
            return item.record_obj_name + "_" + item.bkmap_obj_name;
          },
          style: {
            flex: 1
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          timeout: 5000,
          message: _localString.default.loading
        })));
      }
    }]);
    return MapList;
  }(_BasePage2.default), _class.navigationOptions = function (_ref2) {
    var navigation = _ref2.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        backgroundColor: "#5696FF",
        type: _NavigationBar.default.TYPE.DARK,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.goBack();
          }
        }],
        title: _localString.default.map_list
      })
    };
  }, _temp)));
  var _default = MapList;
  exports.default = _default;
},11996,[14305,14320,14323,14371,14377,14380,14386,10297,10033,10074,10004,10338,10016,10100,10755,11672,10062,11687,10332,10064,10719,11852,11999]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 138,
    "height": 138,
    "scales": [2, 3],
    "hash": "29ff2116d47c8da4326f9457d83b4b66",
    "name": "no_map",
    "type": "png"
  });
},11999,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _DisturbStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _TimingStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _MaterialListStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _RoomStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _RobotStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _MapStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _default = {
    disturbStore: _DisturbStore.default,
    timingStore: _TimingStore.default,
    materialListStore: _MaterialListStore.default,
    roomStore: _RoomStore.default,
    robotStore: _RobotStore.default,
    mapStore: _MapStore.default
  };
  exports.default = _default;
},12002,[14305,12005,12011,12014,12017,11795,11627]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _mobx = _$$_REQUIRE(_dependencyMap[3]);

  var _TimeZoneUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var DisturbStore = function () {
    function DisturbStore() {
      (0, _classCallCheck2.default)(this, DisturbStore);
    }

    (0, _createClass2.default)(DisturbStore, [{
      key: "reset",
      value: function reset() {
        this.tzs = _TimeZoneUtils.default.tzs();
        this.tz = _TimeZoneUtils.default.tz(this.tzs);
        this.time = [75600, 32400, 0];
      }
    }, {
      key: "parse",
      value: function parse(jsonStr) {
        var failValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [64800, 79200, 0];

        var curtzs = _TimeZoneUtils.default.tzs();

        var curtz = _TimeZoneUtils.default.tz(curtzs);

        var jsonTime = {};

        if (jsonStr) {
          try {
            jsonTime = JSON.parse(jsonStr);
          } catch (e) {
            jsonTime = null;
          }
        }

        var _ref = jsonTime || {},
            _ref$tz = _ref.tz,
            tz = _ref$tz === undefined ? curtz : _ref$tz,
            _ref$tzs = _ref.tzs,
            tzs = _ref$tzs === undefined ? curtzs : _ref$tzs,
            _ref$time = _ref.time,
            time = _ref$time === undefined ? failValue : _ref$time;

        this.tz = tz;
        this.tzs = tzs;
        this.time = time;

        if (curtzs !== tz) {
          this.changeZone(curtzs);
        }
      }
    }, {
      key: "updateSetting",
      value: function updateSetting(data) {
        var _ref2 = data || {},
            _ref2$time = _ref2.time,
            time = _ref2$time === undefined ? this.time : _ref2$time,
            _ref2$tz = _ref2.tz,
            tz = _ref2$tz === undefined ? this.tz : _ref2$tz,
            _ref2$tzs = _ref2.tzs,
            tzs = _ref2$tzs === undefined ? this.tzs : _ref2$tzs;

        this.tz = tz;
        this.tzs = tzs;
        this.time = time;
      }
    }, {
      key: "changeZone",
      value: function changeZone(timeZoneSecond) {
        if (timeZoneSecond === this.tzs) {
          return;
        }

        if (this.time.length < 3) {
          _logger.default.log("invalid time : " + this.time);

          return;
        }

        var from = this.tzs;
        this.tzs = timeZoneSecond;
        this.tz = _TimeZoneUtils.default.tz(this.tzs);
        var t = this.time;
        this.time = [_TimeZoneUtils.default.timeTransform(t[0], from, timeZoneSecond), _TimeZoneUtils.default.timeTransform(t[1], from, timeZoneSecond), t[2]];
      }
    }]);
    return DisturbStore;
  }();

  (0, _mobx.decorate)(DisturbStore, {
    tz: _mobx.observable,
    tzs: _mobx.observable,
    time: _mobx.observable,
    reset: _mobx.action,
    parse: _mobx.action,
    updateSetting: _mobx.action,
    changeZone: _mobx.action
  });
  var disturbStore = new DisturbStore();
  disturbStore.reset();
  var _default = disturbStore;
  exports.default = _default;
},12005,[14305,14320,14323,10007,12008,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var DAY = 86400;

  function tzs() {
    var date = new Date();
    return -date.getTimezoneOffset() * 60;
  }

  function tz(offset) {
    var diff = offset !== undefined ? offset : tzs();
    return Math.floor(diff / 3600);
  }

  function timeTransform(time, from, to) {
    if (!to) {
      var d = new Date();
      to = -d.getTimezoneOffset() * 60;
    }

    var seconds = Array.isArray(time) ? +time[0] * 3600 + +time[1] * 60 : +time;
    var target = (to - from + seconds + DAY) % DAY;

    if (Array.isArray(time)) {
      return [Math.floor(target / 3600), Math.floor(target % 3600 / 60)];
    }

    return target;
  }

  var _default = {
    DAY: DAY,
    tz: tz,
    tzs: tzs,
    timeTransform: timeTransform
  };
  exports.default = _default;
},12008,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _mobx = _$$_REQUIRE(_dependencyMap[3]);

  var _TimeZoneUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var TimingStore = function () {
    function TimingStore() {
      var _this = this;

      (0, _classCallCheck2.default)(this, TimingStore);

      this.updateState = function (state) {
        if (_this.state === 1) {
          return;
        }

        _this.state = state;
      };

      this.sortList = function (list) {
        if (list.length <= 0) {
          return list;
        }

        list.sort(function (l, r) {
          if (l[1] !== r[1]) {
            return r[1] - l[1];
          }

          if (l[0] > _TimeZoneUtils.default.DAY && r[0] < _TimeZoneUtils.default.DAY || l[0] < _TimeZoneUtils.default.DAY && r[0] > _TimeZoneUtils.default.DAY) {
            return r[0] - l[0];
          }

          return l[0] - r[0];
        });
        return list;
      };
    }

    (0, _createClass2.default)(TimingStore, [{
      key: "reset",
      value: function reset() {
        this.tzs = _TimeZoneUtils.default.tzs();
        this.tz = _TimeZoneUtils.default.tz(this.tzs);
        this.time = [];
        this.state = 0;
      }
    }, {
      key: "parse",
      value: function parse(jsonStr) {
        var curtzs = _TimeZoneUtils.default.tzs();

        var curtz = _TimeZoneUtils.default.tz(curtzs);

        var jsonTime = {};

        if (jsonStr) {
          try {
            jsonTime = JSON.parse(jsonStr);
            this.state = 1;
          } catch (e) {
            jsonTime = null;
            this.state = -1;
          }
        }

        var _ref = jsonTime || {},
            _ref$tz = _ref.tz,
            tz = _ref$tz === undefined ? curtz : _ref$tz,
            _ref$tzs = _ref.tzs,
            tzs = _ref$tzs === undefined ? curtzs : _ref$tzs,
            _ref$time = _ref.time,
            time = _ref$time === undefined ? [] : _ref$time;

        this.tz = tz;
        this.tzs = tzs;
        this.time = time;

        if (curtzs !== tz) {
          this.changeZone(curtzs);
        }
      }
    }, {
      key: "addItem",
      value: function addItem(item) {
        this.time.push(item);
      }
    }, {
      key: "updateItem",
      value: function updateItem(item, index) {
        if (index < 0 || index >= this.time.length) {
          this.addItem(item);
          return;
        }

        this.time[index] = item;
      }
    }, {
      key: "removeItem",
      value: function removeItem(index) {
        if (index < 0 || index >= this.time.length) {
          return;
        }

        this.time.splice(index, 1);
      }
    }, {
      key: "updateSetting",
      value: function updateSetting(data) {
        var _ref2 = data || {},
            _ref2$time = _ref2.time,
            time = _ref2$time === undefined ? this.time : _ref2$time,
            _ref2$tz = _ref2.tz,
            tz = _ref2$tz === undefined ? this.tz : _ref2$tz,
            _ref2$tzs = _ref2.tzs,
            tzs = _ref2$tzs === undefined ? this.tzs : _ref2$tzs;

        this.tz = tz;
        this.tzs = tzs;
        this.time = time;
      }
    }, {
      key: "changeZone",
      value: function changeZone(timeZoneSecond) {
        var _this2 = this;

        if (timeZoneSecond === this.tzs) {
          return;
        }

        var t = this.time.map(function (item) {
          item[0] = _TimeZoneUtils.default.timeTransform(item[0], _this2.tzs, timeZoneSecond);
          return item;
        });
        this.tzs = timeZoneSecond;
        this.tz = _TimeZoneUtils.default.tz(this.tzs);
        this.time = t;
      }
    }]);
    return TimingStore;
  }();

  (0, _mobx.decorate)(TimingStore, {
    tz: _mobx.observable,
    tzs: _mobx.observable,
    state: _mobx.observable,
    reset: _mobx.action,
    parse: _mobx.action,
    changeZone: _mobx.action,
    addItem: _mobx.action
  });
  var timingStore = new TimingStore();
  timingStore.reset();
  var _default = timingStore;
  exports.default = _default;
},12011,[14305,14320,14323,10007,12008]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _mobx = _$$_REQUIRE(_dependencyMap[3]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var ACTION = _Consts.default.ACTION;
  var MINS = 60;
  var MATERRIAL_MAP = {
    mainBrush: {
      reset: ACTION.RESET_MAIN_BRUSH_LIFE,
      total: 320,
      name: 'mainBrush',
      gid: 0
    },
    sideBrush: {
      reset: ACTION.RESET_SIDE_BRUSH_LIFE,
      total: 160,
      name: 'sideBrush',
      gid: 0
    },
    filter: {
      name: 'filter',
      total: 155,
      reset: ACTION.RESET_FILTER_LIFE,
      gid: 0
    },
    sensor: {
      name: 'sensor',
      total: 30,
      reset: ACTION.RESET_SENSOR_LIFE,
      gid: 0
    }
  };
  var PROP_MAP = {
    mainBrushLeftTime: {
      type: 'mainBrush',
      value: 'time'
    },
    mainBrushLifeLevel: {
      type: 'mainBrush',
      value: 'level'
    },
    sideBrushLeftTime: {
      type: 'sideBrush',
      value: 'time'
    },
    sideBrushLifeLevel: {
      type: 'sideBrush',
      value: 'level'
    },
    filterLeftTime: {
      type: 'filter',
      value: 'time'
    },
    filterLifeLevel: {
      type: 'filter',
      value: 'level'
    },
    sensorLeftTime: {
      type: 'sensor',
      value: 'time'
    },
    sensorLeftLevel: {
      type: 'sensor',
      value: 'level'
    }
  };

  var MaterialListStore = function () {
    function MaterialListStore() {
      (0, _classCallCheck2.default)(this, MaterialListStore);
    }

    (0, _createClass2.default)(MaterialListStore, [{
      key: "reset",
      value: function reset() {
        var _this = this;

        this.materialMap = {};
        Object.keys(MATERRIAL_MAP).forEach(function (key) {
          _this.materialMap[key] = {
            time: '--',
            level: '--',
            total: MATERRIAL_MAP[key].total,
            name: MATERRIAL_MAP[key].name,
            reset: MATERRIAL_MAP[key].reset,
            gid: MATERRIAL_MAP[key].gid
          };
        });
      }
    }, {
      key: "updateData",
      value: function updateData() {
        var _this2 = this;

        var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        Object.keys(props).forEach(function (propName) {
          var _ref = PROP_MAP[propName] || {},
              type = _ref.type,
              value = _ref.value;

          if (!type || !value) {
            return;
          }

          var material = _this2.materialMap[type];

          if (!material) {
            return;
          }

          var v = props[propName];

          if (value === 'time') {
            material[value] = v;
          } else {
            material[value] = v;
          }

          _this2.materialMap[type] = material;
        });
      }
    }, {
      key: "materialList",
      get: function get() {
        return Object.values((0, _mobx.toJS)(this.materialMap));
      }
    }]);
    return MaterialListStore;
  }();

  (0, _mobx.decorate)(MaterialListStore, {
    materialList: _mobx.computed,
    materialMap: _mobx.observable,
    updateData: _mobx.action,
    reset: _mobx.action
  });
  var materialListStore = new MaterialListStore();
  materialListStore.reset();
  var _default = materialListStore;
  exports.default = _default;
},12014,[14305,14320,14323,10007,10064]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _mobx = _$$_REQUIRE(_dependencyMap[3]);

  var RoomStore = function () {
    function RoomStore() {
      (0, _classCallCheck2.default)(this, RoomStore);
      this.roomList = [];
    }

    (0, _createClass2.default)(RoomStore, [{
      key: "reset",
      value: function reset() {
        this.roomList = [];
      }
    }, {
      key: "updateRoomList",
      value: function updateRoomList(list) {
        if (list && list.length > 0) {
          this.roomList = list;
        }
      }
    }, {
      key: "addRoom",
      value: function addRoom(data) {
        var _ref = data || {},
            id = _ref.id,
            name = _ref.name;

        this.roomList.push({
          id: id,
          name: name
        });
      }
    }, {
      key: "renameRoom",
      value: function renameRoom() {}
    }]);
    return RoomStore;
  }();

  (0, _mobx.decorate)(RoomStore, {
    roomList: _mobx.observable,
    updateRoomList: _mobx.action,
    addRoom: _mobx.action,
    renameRoom: _mobx.action,
    reset: _mobx.action
  });
  var roomStore = new RoomStore();
  roomStore.reset();
  var _default = roomStore;
  exports.default = _default;
},12017,[14305,14320,14323,10007]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _ForbidZone = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _api = _$$_REQUIRE(_dependencyMap[15]);

  var _Dialog = _$$_REQUIRE(_dependencyMap[16]);

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _StatusConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _Robot = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _MapOpConst = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _AsyncMapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _MapContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _BaseMap2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _Dock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _events = _$$_REQUIRE(_dependencyMap[31]);

  var _mobxReact = _$$_REQUIRE(_dependencyMap[32]);

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

  var _class, _temp;

  var ACTION = _Consts.default.ACTION,
      EVENT = _Consts.default.EVENT,
      METHOD = _Consts.default.METHOD;
  var PROP = _Consts.default.PROP;
  var VirtualMap = (0, _mobxReact.inject)('robotStore')((0, _mobxReact.observer)((_temp = _class = function (_BaseMap) {
    (0, _inherits2.default)(VirtualMap, _BaseMap);

    function VirtualMap(props) {
      var _this;

      (0, _classCallCheck2.default)(this, VirtualMap);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(VirtualMap).call(this, props));

      _this._deleteWall = function (position) {
        var forbidWallArray = _this.state.forbidWallArray;
        var temp = [];

        for (var i = 0; i < forbidWallArray.length; i++) {
          temp.push(forbidWallArray[i]);
        }

        for (var _i = 0; _i < _this.refArray.length; _i++) {
          if (_this.refArray[_i]._returnPosition() == position) {
            temp.splice(_i, 1);

            _this.refArray.splice(_i, 1);

            break;
          }
        }

        _this.areIndex--;

        _this.setState({
          forbidWallArray: temp
        });
      };

      _this.afterHandleMap = function (res) {
        var mapConfig = _this.mapData.mapConfig;

        var _ref = res || {},
            _ref$ratio = _ref.ratio,
            ratio = _ref$ratio === undefined ? 1 : _ref$ratio;

        var area = mapConfig.area,
            width = mapConfig.width,
            height = mapConfig.height;

        var _MapUtils$calcZones = _MapUtils.default.calcZones(area, mapConfig, ratio),
            _MapUtils$calcZones$f = _MapUtils$calcZones.forbidArray,
            forbidArray = _MapUtils$calcZones$f === undefined ? [] : _MapUtils$calcZones$f;

        var forbidView = forbidArray.map(function (forbid, index) {
          _this.keyIndex++;
          _this.areIndex++;
          return _react.default.createElement(_ForbidZone.default, {
            key: "forbid-" + index,
            mapWidth: width * ratio,
            mapHeight: height * ratio,
            zone: forbid.vertexs,
            isClick: true,
            forbidType: forbid.forbidType,
            position: _this.keyIndex,
            zoneName: forbid.tag,
            isWall: false,
            ref: function ref(_ref2) {
              if (_ref2) {
                var _forbidView = _ref2;

                _this.refArray.push(_forbidView);
              }
            },
            deleteWall: _this._deleteWall,
            showBorder: false,
            setBorder: _this._setBorder
          });
        });

        _this.setState((0, _objectSpread2.default)({
          forbidWallArray: forbidView
        }, res));
      };

      _this.doExit = function () {
        var navigation = _this.props.navigation;
        var status = navigation.state.params.status;

        if (status == _StatusConsts.default.SWEEP) {
          _api.SpecApi.specA(ACTION.CONTINUE_SWEEP).then(function (success) {
            if (!success) {
              _UIUtils.default.info(_localString.default.ctrl_fail);
            } else {
              var robotStore = _this.props.robotStore;
              robotStore.updateState({
                status: _StatusConsts.default.SWEEP
              });
            }

            _this.setState({
              exit: true,
              showLoading: false
            }, function () {
              if (!_this.exitView) {
                navigation.goBack();
              }

              _this.exitView = true;
            });
          });
        } else {
          _this.setState({
            exit: true,
            showLoading: false
          }, function () {
            if (!_this.exitView) {
              navigation.goBack();
            }

            _this.exitView = true;
          });
        }
      };

      _this._retryLoadMap = function () {
        if (_this.loading) {
          return _FunUtils.default.wait(2000);
        }

        _this.loading = true;
        return _FunUtils.default.retry(_this.loadMap, 3).then(function () {
          _this.loading = false;

          _this.setState({
            showLoading: false
          });
        }).catch(function (err) {
          _this.loading = false;

          _this.setState({
            showLoading: false
          });
        });
      };

      _this._setBorder = function (position) {
        for (var i = 0; i < _this.refArray.length; i++) {
          if (_this.refArray[i]) {
            if (_this.refArray[i]._returnPosition() == position) {
              _this.refArray[i].setShowBorder(true);
            } else {
              _this.refArray[i].setShowBorder(false);
            }
          }
        }
      };

      _this._addForbidWall = function () {
        var mapConfig = _this.mapData.mapConfig;
        var _mapConfig$width = mapConfig.width,
            width = _mapConfig$width === undefined ? 0 : _mapConfig$width,
            _mapConfig$height = mapConfig.height,
            height = _mapConfig$height === undefined ? 0 : _mapConfig$height;
        var _this$state = _this.state,
            noMap = _this$state.noMap,
            ratio = _this$state.ratio,
            forbidWallArray = _this$state.forbidWallArray,
            mapScale = _this$state.mapScale;
        var temp = [];

        for (var i = 0; i < forbidWallArray.length; i++) {
          temp.push(forbidWallArray[i]);
        }

        _this.position = _this.refArray.length;

        if (!noMap) {
          if (forbidWallArray.length >= 10) {
            _UIUtils.default.info(_localString.default.more_than_forbid_length.format(10));

            return;
          }

          _this.keyIndex++;
          _this.areIndex++;
          temp.push(_react.default.createElement(_ForbidZone.default, {
            key: "forbid--" + _this.keyIndex,
            mapWidth: width * ratio,
            forbidType: 'all',
            mapHeight: height * ratio,
            mapScale: mapScale,
            zone: [],
            isClick: true,
            position: _this.keyIndex,
            zoneName: '',
            isWall: true,
            ref: function ref(_ref3) {
              if (_ref3) {
                var forbidView = _ref3;

                _this.refArray.push(forbidView);
              }
            },
            deleteWall: _this._deleteWall,
            showBorder: true,
            setBorder: _this._setBorder
          }));

          _this._setBorder(_this.keyIndex);

          _this.setState({
            forbidWallArray: temp
          });
        }
      };

      _this._addForbidZone = function (forbidType) {
        var mapConfig = _this.mapData.mapConfig;
        var _this$state2 = _this.state,
            noMap = _this$state2.noMap,
            ratio = _this$state2.ratio,
            forbidWallArray = _this$state2.forbidWallArray,
            mapScale = _this$state2.mapScale;
        var width = mapConfig.width,
            height = mapConfig.height;
        _this.position = _this.refArray.length;
        var temp = [];

        for (var i = 0; i < forbidWallArray.length; i++) {
          temp.push(forbidWallArray[i]);
        }

        if (!noMap) {
          if (forbidWallArray.length >= 10) {
            _UIUtils.default.info(_localString.default.more_than_forbid_length.format(10));

            return;
          }

          _this.keyIndex++;
          _this.areIndex++;
          temp.push(_react.default.createElement(_ForbidZone.default, {
            key: "forbid--" + _this.keyIndex,
            mapWidth: width * ratio,
            mapHeight: height * ratio,
            mapScale: mapScale,
            forbidType: forbidType,
            zone: [],
            isClick: true,
            position: _this.keyIndex,
            zoneName: forbidType == 'all' ? _localString.default.Sweeping_area + _this.areIndex : _localString.default.Mopping_area + _this.areIndex,
            isWall: false,
            ref: function ref(_ref4) {
              if (_ref4) {
                var forbidView = _ref4;

                _this.refArray.push(forbidView);
              }
            },
            deleteWall: _this._deleteWall,
            showBorder: true,
            setBorder: _this._setBorder
          }));

          _this._setBorder(_this.keyIndex);

          _this.setState({
            forbidWallArray: temp
          });
        }
      };

      _this._getZoneData = function (value) {
        var ratio = _this.state.ratio;
        var mapConfig = _this.mapData.mapConfig;
        var height = mapConfig.height,
            xMin = mapConfig.xMin,
            yMin = mapConfig.yMin,
            resolution = mapConfig.resolution;

        var leftTop = _MapUtils.default.screenToDevice(value[0][0], value[0][1], height, xMin, yMin, resolution, ratio);

        var rightTop = _MapUtils.default.screenToDevice(value[1][0], value[1][1], height, xMin, yMin, resolution, ratio);

        var leftBottom = _MapUtils.default.screenToDevice(value[2][0], value[2][1], height, xMin, yMin, resolution, ratio);

        var rightBottom = _MapUtils.default.screenToDevice(value[3][0], value[3][1], height, xMin, yMin, resolution, ratio);

        var zoneArray = [[leftTop.x, leftTop.y], [rightTop.x, rightTop.y], [rightBottom.x, rightBottom.y], [leftBottom.x, leftBottom.y]];
        return zoneArray;
      };

      _this.onSave = function () {
        var mapConfig = _this.mapData.mapConfig;
        var mapId = mapConfig.mapId;
        var _this$dockPos = _this.dockPos,
            _this$dockPos$x = _this$dockPos.x,
            x = _this$dockPos$x === undefined ? 0 : _this$dockPos$x,
            _this$dockPos$y = _this$dockPos.y,
            y = _this$dockPos$y === undefined ? 0 : _this$dockPos$y;
        var _this$machinePos = _this.machinePos,
            _this$machinePos$mach = _this$machinePos.machineLeft,
            machineLeft = _this$machinePos$mach === undefined ? 0 : _this$machinePos$mach,
            _this$machinePos$mach2 = _this$machinePos.machineTop,
            machineTop = _this$machinePos$mach2 === undefined ? 0 : _this$machinePos$mach2;
        var noMap = _this.state.noMap;

        if (noMap) {
          return;
        }

        if (_this.refArray.length > 10) {
          _UIUtils.default.info(_localString.default.more_than_forbid_length.format(10));

          return;
        }

        var vertexs = [];

        for (var i = 0; i < _this.refArray.length; i++) {
          if (_this.refArray[i]) {
            var array = _this.refArray[i].returnXY();

            if (array[0][0] == array[1][0] && array[0][0] == array[2][0] && array[0][0] == array[3][0]) {
              _logger.default.log("禁区四个坐标点一样,不予添加");

              break;
            }

            var pileIsInside = false;

            if (x != 0 && y != 0) {
              pileIsInside = _MapUtils.default.pointIsInside(array[0][0], array[0][1], array[1][0], array[1][1], array[3][0], array[3][1], array[2][0], array[2][1], x, y);
            }

            var robotIsInside = false;

            if (machineLeft > 10 && machineTop > 10) {
              robotIsInside = _MapUtils.default.pointIsInside(array[0][0], array[0][1], array[1][0], array[1][1], array[3][0], array[3][1], array[2][0], array[2][1], machineLeft, machineTop);
            }

            if (pileIsInside || robotIsInside) {
              _UIUtils.default.info(_localString.default.machine_inside);

              return;
            } else {
              var vertexsData = {
                'type': _this.refArray[i].returnForbidType(),
                'axis': _this._getZoneData(array),
                'tag': _this.refArray[i].tagNameFun()
              };
              vertexs.push(vertexsData);
            }
          }
        }

        if (vertexs.length > 10) {
          _UIUtils.default.info(_localString.default.more_than_forbid_length.format(10));

          return;
        }

        var data = {
          mapId: mapId,
          vertexs: vertexs,
          Type: _MapOpConst.default.FORBIDEN_SET
        };

        _this._doSetForbidWall(data);
      };

      _this._doSetForbidWall = function (value) {
        if (_this.setForbidFlag) {
          return;
        }

        _this.setForbidFlag = true;

        _this.setState({
          showLoading: true
        });

        _AsyncMapApi.default.specS(PROP.RESTRICTED_ZONE, value, 12000).then(function (code) {
          var c = +code;
          return _FunUtils.default.wait(1000).then(function () {
            if (c === _ApiCode.default.ONING) {} else if (c === _ApiCode.default.SUCCESS || c === _ApiCode.default.WAIT_TIME_OUT) {
              _UIUtils.default.info(_localString.default.ctl_success);

              _this._setBorder(-1);
            } else if (c === _ApiCode.default.TIME_OUT) {
              _this._setBorder(-1);

              _UIUtils.default.info(_localString.default.time_out);
            } else {
              _UIUtils.default.info(_localString.default.ctrl_fail);
            }

            _this.setState({
              showLoading: false
            });

            _this.setForbidFlag = false;
            return c;
          });
        });
      };

      _this._resetMap = function () {
        _this.setState({
          exit: true
        }, _this.props.navigation.goBack);
      };

      _this._renderZones = function () {
        var _this$state3 = _this.state,
            noMap = _this$state3.noMap,
            _this$state3$forbidAr = _this$state3.forbidArray,
            forbidArray = _this$state3$forbidAr === undefined ? [] : _this$state3$forbidAr,
            ratio = _this$state3.ratio,
            mapScale = _this$state3.mapScale;
        var mapConfig = _this.mapData.mapConfig;
        var _mapConfig$width2 = mapConfig.width,
            width = _mapConfig$width2 === undefined ? 0 : _mapConfig$width2,
            _mapConfig$height2 = mapConfig.height,
            height = _mapConfig$height2 === undefined ? 0 : _mapConfig$height2;

        if (noMap || forbidArray.length <= 0) {
          return null;
        }

        _this.refArray = [];
        var forbidView = forbidArray.map(function (forbid, index) {
          _this.keyIndex++;
          _this.areIndex++;
          return _react.default.createElement(_ForbidZone.default, {
            key: "forbid-" + _this.keyIndex,
            mapWidth: width * ratio,
            mapHeight: height * ratio,
            zone: forbid,
            mapScale: mapScale,
            isClick: true,
            position: _this.keyIndex,
            zoneIndex: _this.areIndex,
            isWall: forbid.length > 0 && forbid.length < 4 ? true : false,
            ref: function ref(_ref5) {
              if (_ref5) {
                var _forbidView2 = _ref5;

                _this.refArray.push(_forbidView2);
              }
            },
            deleteWall: _this._deleteWall,
            showBorder: index == forbidArray.length - 1 && forbid.length < 4 ? true : false,
            setBorder: _this._setBorder
          });
        });

        _this.setState({
          forbidWallArray: forbidView
        });
      };

      _this._getForbidWall = function () {
        if (_this.state.forbidWallArray == undefined) {
          return null;
        } else if (_this.state.forbidWallArray.length == 0) {
          return null;
        } else {
          return _this.state.forbidWallArray;
        }
      };

      _this._renderRobot = function () {
        var _this$machinePos2 = _this.machinePos,
            _this$machinePos2$mac = _this$machinePos2.machineLeft,
            machineLeft = _this$machinePos2$mac === undefined ? 0 : _this$machinePos2$mac,
            _this$machinePos2$mac2 = _this$machinePos2.machineTop,
            machineTop = _this$machinePos2$mac2 === undefined ? 0 : _this$machinePos2$mac2;

        if (machineLeft != 0 && machineTop != 0) {
          return _react.default.createElement(_Robot.default, {
            center: {
              x: machineLeft,
              y: machineTop
            },
            style: {
              position: 'absolute'
            }
          });
        }

        return null;
      };

      _this._onScaleEnd = function (event, style) {
        var mapScale = (0, _events.scales)(style);

        _this.setState({
          mapScale: mapScale
        });

        _this._updateMapScale(mapScale);
      };

      _this._updateMapScale = function (scale) {
        for (var i = 0; i < _this.refArray.length; i++) {
          if (_this.refArray[i]) {
            _this.refArray[i].updateMapScale(scale);
          }
        }
      };

      props.navigation.setParams({
        titleProps: {
          title: _localString.default.virtual_wall,
          right: [{
            key: _NavigationBar.default.ICON.COMPLETE,
            onPress: function onPress() {
              _this.onSave();
            }
          }]
        }
      });
      _this.keyIndex = 0;
      _this.areIndex = 0;
      _this.refArray = [];
      _this.position = 0;
      _this.setForbidFlag = false;
      _this.url = '';
      _this.exitView = false;
      _this.state = {
        exit: false,
        showLoading: true,
        dialogVisiable: false,
        forbidArray: [],
        originalPath: [],
        path: '',
        forbidCount: 0,
        forbidWallArray: [],
        mapScale: 1.0,
        editIndex: -1
      };
      return _this;
    }

    (0, _createClass2.default)(VirtualMap, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(VirtualMap.prototype), "componentWillUnmount", this).call(this);

        this.setState = function () {
          return;
        };

        _logger.default.info('==== virtual map cwu ====');

        if (!this.exitView) {
          this.exitView = true;
          this.doExit();
        }
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        _logger.default.info('==== virtual map cdm ====');

        var navigation = this.props.navigation;
        navigation.setParams({
          doExit: this.doExit,
          onSave: this.onSave
        });

        this._retryLoadMap();
      }
    }, {
      key: "_keyIndexFun",
      value: function _keyIndexFun() {
        this.keyIndex--;
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$state4 = this.state,
            showLoading = _this$state4.showLoading,
            _this$state4$exit = _this$state4.exit,
            exit = _this$state4$exit === undefined ? false : _this$state4$exit,
            ratio = _this$state4.ratio,
            noMap = _this$state4.noMap;
        var _this$dockPos2 = this.dockPos,
            x = _this$dockPos2.x,
            y = _this$dockPos2.y,
            angle = _this$dockPos2.angle;

        if (exit) {
          return null;
        }

        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_reactNative.ImageBackground, {
          style: {
            height: '100%',
            width: '100%'
          },
          source: _$$_REQUIRE(_dependencyMap[35])
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_MapContainer.default, {
          exit: exit,
          gestureStyle: {
            height: '200%',
            width: '200%'
          },
          ratio: ratio,
          noMap: noMap,
          mapImage: this.mapImage,
          areaCenter: this.areaCenter,
          mapData: this.mapData,
          onScaleEnd: this._onScaleEnd
        }, _react.default.createElement(_react.Fragment, null, this._getForbidWall(), _react.default.createElement(_Dock.default, {
          x: x,
          y: y,
          angle: angle,
          noMap: noMap
        }), this._renderRobot()))), _react.default.createElement(_reactNative.View, {
          style: styles.bottomViewStyle
        }, _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 0.3,
          onPress: function onPress() {
            _this2._addForbidWall('wall');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.itemContainer, {
            opacity: this.state.noMap ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[36]),
          style: {
            width: 24,
            height: 24
          }
        }), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: {
            fontSize: 12,
            color: '#939AA9',
            textAlign: "center",
            marginTop: 6
          }
        }, _localString.default.add_wall))), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 0.3,
          onPress: function onPress() {
            _this2._addForbidZone('all');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.itemContainer, {
            opacity: this.state.noMap ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[37]),
          style: {
            width: 24,
            height: 24
          }
        }), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: {
            fontSize: 12,
            color: '#939AA9',
            textAlign: "center",
            marginTop: 6
          }
        }, _localString.default.add_zone))), _react.default.createElement(_reactNative.TouchableOpacity, {
          activeOpacity: 0.3,
          onPress: function onPress() {
            _this2._addForbidZone('mop');
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.itemContainer, {
            opacity: this.state.noMap ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[37]),
          style: {
            width: 24,
            height: 24
          }
        }), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: {
            fontSize: 12,
            color: '#939AA9',
            textAlign: "center",
            marginTop: 6
          }
        }, _localString.default.add_mop_forbidZone)))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          timeout: 15000,
          message: _localString.default.loading
        }))));
      }
    }]);
    return VirtualMap;
  }(_BaseMap2.default), _class.navigationOptions = _HdNavigationBar.default, _temp)));

  var styles = _reactNative.StyleSheet.create({
    bottomViewStyle: {
      width: '100%',
      backgroundColor: '#FFFFFF',
      paddingBottom: 20,
      paddingTop: 10,
      justifyContent: "space-evenly",
      flexDirection: 'row'
    },
    itemContainer: {
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: "center",
      width: 120
    }
  });

  var _default = VirtualMap;
  exports.default = _default;
},12020,[14305,14308,14314,14320,14323,14371,14377,14380,14386,10297,10033,10016,12023,10409,10064,10091,10755,11618,10719,10061,11564,10100,10332,11711,10079,11816,10106,10103,11990,11678,11987,11540,10004,11936,11852,11798,12026,12029]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[8]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _GestureView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _math = _$$_REQUIRE(_dependencyMap[11]);

  var _events = _$$_REQUIRE(_dependencyMap[12]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var MIN_SVG = {
    width: 60,
    height: 60
  };

  var ForbidZone = function (_React$Component) {
    (0, _inherits2.default)(ForbidZone, _React$Component);
    (0, _createClass2.default)(ForbidZone, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.setState({
          showBorder: this.props.showBorder || false,
          mapScale: this.props.mapScale || 1.0
        });
        this.getData();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps() {
        this.getData();
        return true;
      }
    }]);

    function ForbidZone(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ForbidZone);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ForbidZone).call(this, props));

      _this.getData = function () {
        var _this$props = _this.props,
            _this$props$zone = _this$props.zone,
            zone = _this$props$zone === undefined ? [] : _this$props$zone,
            isWall = _this$props.isWall,
            mapWidth = _this$props.mapWidth,
            mapHeight = _this$props.mapHeight;

        if (zone.length < 4) {
          _this.marginLeft = mapWidth / 2 - 74;
          _this.marginTop = mapHeight / 2 - 54;
          _this.svgWidth = 148;
          _this.svgHeight = isWall ? 50 : 106;
          _this.myAngle = 0;
          _this.isWall = isWall;
        } else {
          _this.insideWidth = Math.round(Math.sqrt(Math.pow(zone[1][0] - zone[0][0], 2) + Math.pow(zone[1][1] - zone[0][1], 2)));
          _this.insideHeight = Math.round(Math.sqrt(Math.pow(zone[0][0] - zone[3][0], 2) + Math.pow(zone[0][1] - zone[3][1], 2)));
          _this.insideOriginX = (zone[0][0] + zone[1][0] + zone[2][0] + zone[3][0]) / 4;
          _this.insideOriginY = (zone[0][1] + zone[1][1] + zone[2][1] + zone[3][1]) / 4;
          _this.marginLeft = _this.insideOriginX - _this.insideWidth / 2 - 24;
          _this.marginTop = _this.insideOriginY - _this.insideHeight / 2 - 24;
          _this.isWall = _this.insideHeight < 5 || _this.insideWidth < 5;

          if (_this.isWall) {
            _this.svgWidth = _this.insideWidth + 48;
            _this.svgHeight = 50;
          } else {
            _this.svgWidth = _this.insideWidth + 48;
            _this.svgHeight = _this.insideHeight + 48;
          }

          var v1 = {};
          v1.x = 1;
          v1.y = 0;
          var v2 = {};
          v2.x = zone[1][0] - zone[0][0];
          v2.y = zone[1][1] - zone[0][1];
          var directFlag = zone[1][1] < zone[0][1] ? true : false;
          var v1_v2_1 = v2.x * v1.x + v2.y * v1.y;
          var v1_v2_2 = Math.sqrt(v2.x * v2.x + v2.y * v2.y);
          var arcthea = 0;

          if (v1_v2_2) {
            arcthea = Math.acos(v1_v2_1 / v1_v2_2);
          }

          _this.myAngle = (0, _math.toDeg)(arcthea);

          if (directFlag) {
            _this.myAngle = 360 - _this.myAngle;
          }
        }

        _this.draggable = {
          x: {
            min: -20,
            max: mapWidth - 40
          },
          y: {
            min: -20,
            max: mapHeight
          }
        };

        _this.setState(function (prevState) {
          return {
            left: _this.marginLeft,
            top: _this.marginTop,
            rotate: _this.myAngle,
            svgWidth: _this.svgWidth,
            svgHeight: _this.svgHeight,
            outWidth: _this.svgWidth - 24,
            outHeight: _this.svgHeight - 24,
            insideWidth: _this.svgWidth - 48,
            insideHeight: _this.svgHeight - 48 < 2 ? 2 : _this.svgHeight - 48,
            isScale: false,
            isRotate: false
          };
        });
      };

      _this._rotatePoint = function (v, angle) {
        var _ref = v || {},
            x = _ref.x,
            y = _ref.y;

        if (x === undefined || y === undefined) {
          return {
            x: 0,
            y: 0
          };
        }

        var rad = angle * Math.PI / 180;
        var xt = x * Math.cos(rad) - y * Math.sin(rad);
        var yt = x * Math.sin(rad) + y * Math.cos(rad);
        return {
          x: xt,
          y: yt
        };
      };

      _this._getRotatePosition = function (x, y, originX, originY, angle) {
        var v = {
          x: x - originX,
          y: y - originY
        };

        var rv = _this._rotatePoint(v, angle);

        return {
          x: rv.x + originX,
          y: rv.y + originY
        };
      };

      _this._renderBorder = function () {
        var _this$state$showBorde = _this.state.showBorder,
            showBorder = _this$state$showBorde === undefined ? false : _this$state$showBorde;
        var _this$state = _this.state,
            outWidth = _this$state.outWidth,
            outHeight = _this$state.outHeight;

        if (showBorder) {
          return _react.default.createElement(_reactNativeSvg.Rect, {
            x: "12",
            y: "12",
            width: outWidth,
            height: outHeight,
            fill: "transparent",
            strokeWidth: "1",
            stroke: "#FFFFFF"
          });
        }
      };

      _this._delete = function () {
        _this.props.deleteWall(_this.props.position);
      };

      _this._returnPosition = function () {
        var position = _this.props.position;
        return position;
      };

      _this._renderIcons = function () {
        var showBorder = _this.state.showBorder;

        if (showBorder) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              position: 'absolute',
              width: '100%',
              height: '100%'
            }
          }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, _this._deletePanResponder.panHandlers, {
            style: {
              width: 20,
              height: 20
            },
            source: _$$_REQUIRE(_dependencyMap[14])
          })), _this.isWall ? null : _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, _this._rotatePanResponder.panHandlers, {
            source: _$$_REQUIRE(_dependencyMap[15]),
            style: [{
              width: 20,
              height: 20,
              position: 'absolute',
              right: 0
            }]
          })), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({}, _this._scalePanResponder.panHandlers, {
            source: _$$_REQUIRE(_dependencyMap[16]),
            style: [{
              width: 20,
              height: 20,
              position: 'absolute',
              bottom: 0,
              right: 0
            }]
          })));
        }
      };

      _this._deletePanResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return false;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {
          return false;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {
          return true;
        },
        onResponderTerminationRequest: function onResponderTerminationRequest() {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          _this._delete();
        }
      });
      _this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {
          return false;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          if (_this.props.setBorder) {
            _this.props.setBorder(_this.props.position);
          }
        }
      });
      _this._rotatePanResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return false;
        },
        onMoveShouldSetResponderCapture: function onMoveShouldSetResponderCapture() {
          return false;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {
          return true;
        },
        onResponderTerminationRequest: function onResponderTerminationRequest() {
          return true;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          _this.setState({
            isRotate: true
          });
        },
        onPanResponderEnd: function onPanResponderEnd() {
          _this.setState({
            isRotate: false
          });
        }
      });
      _this._scalePanResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetResponder: function onMoveShouldSetResponder() {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderGrant: function onPanResponderGrant(e, g) {
          _this._svgW = _this.svgWidth;
          _this._svgH = _this.svgHeight;
          _this._originLeft = _this.marginLeft;
          _this._originTop = _this.marginTop;
          var rotate = _this.state.rotate;
          _this._rotate = rotate;
        },
        onPanResponderMove: function onPanResponderMove(evt, g) {
          var _this$state2 = _this.state,
              rotate = _this$state2.rotate,
              _this$state2$mapScale = _this$state2.mapScale,
              mapScale = _this$state2$mapScale === undefined ? 1.0 : _this$state2$mapScale;

          if (_this.isWall) {
            var originX = _this._originLeft + _this._svgW / 2;
            var originY = _this._originTop + _this._svgH / 2;
            var startPt = {
              x: _this._originLeft + 24,
              y: _this._originTop + 25
            };
            var endPt = {
              x: _this._originLeft + _this._svgW - 24,
              y: _this._originTop + _this._svgH - 25
            };

            var rotateStartPt = _this._getRotatePosition(startPt.x, startPt.y, originX, originY, _this._rotate);

            var rotateEndPt = _this._getRotatePosition(endPt.x, endPt.y, originX, originY, _this._rotate);

            var targetPt = {
              x: rotateEndPt.x + g.dx / mapScale,
              y: rotateEndPt.y + g.dy / mapScale
            };
            var v = {
              x: targetPt.x - rotateStartPt.x,
              y: targetPt.y - rotateStartPt.y
            };
            var v_long = Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));
            var w = Math.max(32, v_long);
            targetPt = {
              x: rotateStartPt.x + v.x / v_long * w,
              y: rotateStartPt.y + v.y / v_long * w
            };
            w = w + 48;
            var h = 50;
            var arcthea = 0;

            if (v_long > 0) {
              arcthea = Math.acos(v.x / v_long);
            }

            var r = (0, _math.toDeg)(arcthea);

            if (v.y < 0) {
              r = 360 - r;
            }

            var new_center = {
              x: (targetPt.x + rotateStartPt.x) / 2,
              y: (targetPt.y + rotateStartPt.y) / 2
            };

            var new_lt = _this._getRotatePosition(rotateStartPt.x, rotateStartPt.y, new_center.x, new_center.y, -r);

            _this.svgWidth = w;
            _this.svgHeight = h;
            _this.myAngle = r;

            _this.setViewProps(new_lt.x - 24, new_lt.y - 25, w, h);
          } else {
            var p = _this._rotatePoint({
              x: g.dx / mapScale,
              y: g.dy / mapScale
            }, -rotate);

            var _w = _this._svgW + p.x;

            var _h = _this._svgH + p.y;

            _w = Math.max(MIN_SVG.width, _w);
            _h = Math.max(MIN_SVG.height, _h);

            var rp = _this._rotatePoint({
              x: _w - _this._svgW,
              y: _h - _this._svgH
            }, rotate);

            var diffX = (_w - _this._svgW - rp.x) / 2;
            var diffY = (_h - _this._svgH - rp.y) / 2;
            _this.svgWidth = _w;
            _this.svgHeight = _h;

            _this.setViewProps(_this._originLeft - diffX, _this._originTop - diffY, _w, _h);
          }
        }
      });
      return _this;
    }

    (0, _createClass2.default)(ForbidZone, [{
      key: "returnForbidType",
      value: function returnForbidType() {
        var forbidType = this.props.forbidType;
        return forbidType;
      }
    }, {
      key: "tagNameFun",
      value: function tagNameFun() {
        var _this$props$zoneName = this.props.zoneName,
            zoneName = _this$props$zoneName === undefined ? '' : _this$props$zoneName;
        return zoneName;
      }
    }, {
      key: "returnXY",
      value: function returnXY() {
        var originX = this.marginLeft + this.state.svgWidth / 2;
        var originY = this.marginTop + this.state.svgHeight / 2;
        var lt = {
          x: this.marginLeft + 24,
          y: this.marginTop + 24
        };
        var rb = {
          x: this.marginLeft + this.state.svgWidth - 24,
          y: this.marginTop + this.state.svgHeight - 24
        };
        var rt = {
          x: rb.x,
          y: lt.y
        };
        var lb = {
          x: lt.x,
          y: rb.y
        };
        var rotate = this.myAngle < 0 ? this.myAngle + 360 : this.myAngle;
        var leftTop = (0, _math.getRotatePosition)(lt.x, lt.y, originX, originY, rotate);
        var rightTop = (0, _math.getRotatePosition)(rt.x, rt.y, originX, originY, rotate);
        var bottomLeft = (0, _math.getRotatePosition)(lb.x, lb.y, originX, originY, rotate);
        var bottomRight = (0, _math.getRotatePosition)(rb.x, rb.y, originX, originY, rotate);
        return [leftTop, rightTop, bottomLeft, bottomRight];
      }
    }, {
      key: "setShowBorder",
      value: function setShowBorder(isShow) {
        this.setState({
          showBorder: isShow
        });
      }
    }, {
      key: "updateMapScale",
      value: function updateMapScale(scale) {
        this.setState({
          mapScale: scale
        });
      }
    }, {
      key: "setViewProps",
      value: function setViewProps(left, top, width, height) {
        this.marginLeft = left;
        this.marginTop = top;

        if (this.isWall) {
          this.setState({
            left: left,
            top: top,
            svgWidth: width,
            outWidth: width - 24,
            insideWidth: width - 48,
            rotate: this.myAngle
          });
        } else {
          this.setState({
            left: left,
            top: top,
            svgWidth: width,
            svgHeight: height,
            outWidth: width - 24,
            outHeight: height - 24,
            insideWidth: width - 48,
            insideHeight: height - 48
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var borderWidth = this.isWall ? 0 : 1;
        var opacity = this.isWall ? 1 : 0.6;
        var isClick = this.props.isClick;
        var _this$state3 = this.state,
            isRotate = _this$state3.isRotate,
            _this$state3$mapScale = _this$state3.mapScale,
            mapScale = _this$state3$mapScale === undefined ? 1.0 : _this$state3$mapScale;
        var draggable = isClick && !isRotate;
        return _react.default.createElement(_GestureView.default, {
          draggable: draggable,
          scalable: false,
          rotatable: false,
          outterScale: mapScale,
          singleRotatable: isRotate,
          style: {
            position: 'absolute',
            zIndex: 300,
            left: this.marginLeft,
            top: this.marginTop,
            transform: [{
              rotate: this.myAngle + "deg"
            }],
            alignItems: 'flex-end'
          },
          onEnd: function onEnd(event, gestureState, styles) {
            var left = styles.left,
                top = styles.top;
            var currentRotate = (0, _events.angles)(styles);
            var r = parseFloat(currentRotate.replace('deg', ''));

            if (currentRotate) {
              _this2.marginLeft = left;
              _this2.marginTop = top;
              _this2.myAngle = r;

              _this2.setState({
                left: left,
                top: top,
                isRotate: false,
                rotate: r
              });
            } else {
              _this2.marginLeft = left;
              _this2.marginTop = top;

              _this2.setState({
                left: left,
                top: top,
                isRotate: false
              });
            }

            _logger.default.log("\u7981\u533A\u6ED1\u52A8\u540E\u6570\u636E:" + _this2.marginLeft + ", " + _this2.marginTop);
          }
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({}, this._panResponder.panHandlers, {
          style: {
            justifyContent: 'center',
            alignItems: 'center'
          }
        }), _react.default.createElement(_reactNativeSvg.Svg, {
          width: this.state.svgWidth,
          height: this.state.svgHeight
        }, this._renderBorder(), _react.default.createElement(_reactNativeSvg.Rect, {
          x: "24",
          y: "24",
          width: this.state.insideWidth,
          height: this.state.insideHeight,
          stroke: this.props.forbidType == 'all' || this.props.forbidType == 'wall' ? "#DE0000" : "#F66C00",
          strokeWidth: borderWidth,
          fill: this.props.forbidType == 'all' || this.props.forbidType == 'wall' ? "#F78384" : "#F3B07F",
          fillOpacity: opacity
        }), this.props.zoneName != '' || this.props.zoneName ? _react.default.createElement(_reactNativeSvg.Text, {
          fill: "#fff",
          fontSize: "12",
          fontWeight: "bold",
          x: this.state.svgWidth / 2,
          y: this.state.svgHeight / 2,
          textAnchor: "middle"
        }, this.props.zoneName == 'xiaomi' ? '' : this.props.zoneName) : null), this._renderIcons()));
      }
    }]);
    return ForbidZone;
  }(_react.default.Component);

  exports.default = ForbidZone;
},12023,[14305,14344,14320,14371,14377,14323,14386,10297,11485,10033,10547,11537,11540,10100,11543,11546,11549]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 25,
    "height": 25,
    "scales": [1, 2, 3],
    "hash": "9f0450f835cfb536839aefa72e53ef97",
    "name": "ic_wall",
    "type": "png"
  });
},12026,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "dd7656d53c36a9ffafe6bb00cdc97b89",
    "name": "ic_zone_zone",
    "type": "png"
  });
},12029,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[10]);

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[13]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _api = _$$_REQUIRE(_dependencyMap[15]);

  var _DateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19]));

  var _HeadInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _BasePage2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _NavUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _reactNativeSwipeout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var MODE_STR = {
    0: _localString.default.global_clean,
    1: _localString.default.global_clean,
    2: _localString.default.fix_point_clean,
    3: _localString.default.zone_clean,
    4: _localString.default.fix_point_clean,
    5: _localString.default.zone_clean,
    6: _localString.default.zone_clean,
    7: _localString.default.global_clean,
    8: _localString.default.zone_clean,
    9: _localString.default.global_clean,
    10: _localString.default.edge_sweep,
    11: _localString.default.zone_clean,
    12: _localString.default.global_clean
  };
  var PROP = _Consts.default.PROP,
      Colors = _Consts.default.Colors;

  var CleanList = function (_BasePage) {
    (0, _inherits2.default)(CleanList, _BasePage);

    function CleanList(_props) {
      var _this;

      (0, _classCallCheck2.default)(this, CleanList);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CleanList).call(this, _props));

      _this._loadData = function () {
        return _api.CloudApi.loadCleanList().then(function (res) {
          if (res && res.length > 0) {
            var allArea = 0;
            var allMins = 0;
            var list = res.map(function (item) {
              var time = item.time,
                  value = item.value;
              var arr = JSON.parse(value);
              var v = JSON.parse(arr[0]);

              var _ref = v || {},
                  _ref$CleanInfo = _ref.CleanInfo;

              _ref$CleanInfo = _ref$CleanInfo === undefined ? {} : _ref$CleanInfo;
              var _ref$CleanInfo$area = _ref$CleanInfo.area,
                  area = _ref$CleanInfo$area === undefined ? 0 : _ref$CleanInfo$area,
                  _ref$CleanInfo$mins = _ref$CleanInfo.mins,
                  mins = _ref$CleanInfo$mins === undefined ? 0 : _ref$CleanInfo$mins;
              allArea += area;
              allMins += mins;
              return {
                time: time,
                value: v
              };
            });
            var count = list.length;

            _this.setState({
              list: list,
              totalCleanAreas: allArea,
              cleanCounts: count,
              totalCleanTime: allMins
            });
          }

          return true;
        }).catch(function () {
          return false;
        });
      };

      _this._filterProps = function (props) {
        var keys = Object.keys(props).filter(function (key) {
          return _this.state[key] !== props[key];
        });
        var res = keys.reduce(function (result, key) {
          result[key] = props[key];
          return result;
        }, {});
        return res;
      };

      _this._getTimeStr = function (time) {
        var _Host$locale$language = _Host.default.locale.language,
            language = _Host$locale$language === undefined ? 'zh' : _Host$locale$language;

        if (language.indexOf('zh') >= 0) {
          return _DateUtils.default.dateFormat(time, _localString.default.date_format);
        }

        return _DateUtils.default.dateFormat(time, 'hh:mm MM/dd');
      };

      _this._getTimeDuration = function (t) {
        if (t) {
          if (+t > 3600) {
            return (+t / 3600).toFixed(1) + "h";
          }

          return (+t / 60).toFixed(1) + "min";
        }

        return '--';
      };

      _this._renderItem = function (_ref2) {
        var item = _ref2.item;
        var value = item.value;

        var _ref3 = value || {},
            CleanInfo = _ref3.CleanInfo,
            Password = _ref3.Password,
            FileName = _ref3.FileName;

        var _ref4 = CleanInfo || {},
            mode = _ref4.mode,
            _ref4$area = _ref4.area,
            area = _ref4$area === undefined ? '--㎡' : _ref4$area,
            _ref4$mins = _ref4.mins,
            mins = _ref4$mins === undefined ? 0 : _ref4$mins,
            start = _ref4.start;

        var title = _this._getTimeStr(start * 1000);

        var sub = (MODE_STR[mode] || '--') + " | " + area + "\u33A1 | " + _localString.default.mins.format(mins);

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.cleanUpLi,
          onPress: function onPress() {
            var params = (0, _objectSpread2.default)({}, CleanInfo, {
              fileName: FileName,
              password: Password
            });
            var navigation = _this.props.navigation;
            navigation.push('CleanDetail', {
              data: params
            });
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.cleanUpIcon
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[26]),
          resizeMode: "contain",
          style: styles.cleanUpImg
        })), _react.default.createElement(_reactNative.View, {
          style: styles.cleanUpContent
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.cleanUptitle
        }, title), _react.default.createElement(_reactNative.Text, {
          style: styles.cleanUpsubtitle
        }, sub)), _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[27]),
          resizeMode: "contain",
          style: styles.cleanUpRight
        }));
      };

      _this._renderHeader = function () {
        var _this$state = _this.state,
            totalCleanAreas = _this$state.totalCleanAreas,
            _this$state$cleanCoun = _this$state.cleanCounts,
            cleanCounts = _this$state$cleanCoun === undefined ? 0 : _this$state$cleanCoun,
            totalCleanTime = _this$state.totalCleanTime;
        var tc = '--';

        if (totalCleanTime) {
          var tt = totalCleanTime / 60;
          tc = tt.toFixed(tt < 0.1 ? 2 : 1);
        }

        var items = [{
          title: totalCleanAreas || '--',
          desc: _localString.default.total_area,
          sup: '㎡',
          key: 'totalArea'
        }, {
          title: tc,
          desc: _localString.default.total_duration,
          sup: 'h',
          key: 'totalDuration'
        }, {
          title: cleanCounts || '--',
          desc: _localString.default.total_count,
          sup: '',
          key: 'totalCount'
        }].map(function (item) {
          return _react.default.createElement(_HeadInfo.default, {
            key: item.key,
            title: item.title,
            sup: item.sup,
            desc: item.desc
          });
        });
        return _react.default.createElement(_reactNative.View, {
          style: styles.headContainer
        }, items);
      };

      _this._renderEmpty = function () {
        return _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            height: 400,
            alignItems: 'center',
            justifyContent: 'center'
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            marginBottom: 18
          },
          source: _$$_REQUIRE(_dependencyMap[28])
        }), _react.default.createElement(_reactNative.Text, {
          style: {
            fontFamily: 'System',
            color: '#999999'
          }
        }, _localString.default.no_clean_record)));
      };

      _props.navigation.setParams({
        titleProps: {
          title: _localString.default.sweep_record
        }
      });

      _this.state = {
        list: [],
        isDelList: false
      };
      return _this;
    }

    (0, _createClass2.default)(CleanList, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(CleanList.prototype), "componentDidMount", this).call(this);

        _FunUtils.default.retry(this._loadData, 3).catch(function (err) {
          return err;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var list = this.state.list;

        var header = this._renderHeader();

        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            flexDirection: 'column',
            backgroundColor: '#fff',
            paddingHorizontal: 20,
            paddingBottom: 20,
            paddingTop: 10
          }
        }, _react.default.createElement(_reactNative.FlatList, {
          data: list,
          showsVerticalScrollIndicator: false,
          ListEmptyComponent: this._renderEmpty,
          renderItem: this._renderItem,
          keyExtractor: function keyExtractor(item) {
            return "" + item.time;
          },
          style: {
            flex: 1
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.isDelList,
          title: _localString.default.hint,
          message: '是否清空全部清扫记录',
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: 'lightpink'
            },
            callback: function callback(_) {
              return _this2.setState({
                isDelList: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: 'lightblue'
            },
            backgroundColor: {
              bgColorNormal: '#5C92FF'
            },
            callback: function callback(_) {}
          }],
          onDismiss: function onDismiss(_) {
            return _this2.setState({
              isDelList: false
            });
          }
        })));
      }
    }]);
    return CleanList;
  }(_BasePage2.default);

  exports.default = CleanList;
  CleanList.navigationOptions = _HdNavigationBar.default;

  var styles = _reactNative.StyleSheet.create({
    cleanUpLi: {
      backgroundColor: '#eee',
      paddingVertical: 20,
      paddingHorizontal: 15,
      borderRadius: 8,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 10
    },
    cleanUpRight: {
      width: 15,
      height: 15
    },
    cleanUptitle: {
      color: '#03211C',
      fontSize: 15
    },
    cleanUpsubtitle: {
      color: '#626772',
      fontSize: 12
    },
    cleanUpContent: {
      flex: 1,
      paddingLeft: 10
    },
    cleanUpIcon: {
      width: 40,
      height: 40,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 8,
      backgroundColor: '#5C92FF'
    },
    cleanUpImg: {
      width: 30,
      height: 30
    },
    headContainer: {
      flexDirection: 'row',
      height: 64,
      justifyContent: 'space-around',
      alignItems: 'center',
      backgroundColor: '#fff',
      paddingHorizontal: 24
    },
    titleContainer: {
      flexDirection: 'row',
      alignItems: 'flex-start'
    },
    headTitle: {
      fontSize: 20,
      opacity: 0.8,
      color: '#000000'
    },
    sup: {
      fontSize: 13,
      opacity: 0.6,
      color: '#000000'
    },
    headDesc: {
      fontSize: 12,
      opacity: 0.6,
      color: '#000000'
    },
    empty: {
      width: '100%',
      height: 200,
      alignItems: 'center',
      justifyContent: 'center'
    },
    itemContainer: {
      flex: 1,
      flexDirection: 'column',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });
},12032,[14305,14314,14320,14323,14371,14377,14380,14386,10297,10033,10338,10035,10719,10755,10016,10091,11813,10064,10106,10332,11993,11687,11822,11936,11852,12035,12047,12050,11999]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _reactTweenState = _$$_REQUIRE(_dependencyMap[0]);

  var _reactTweenState2 = _interopRequireDefault(_reactTweenState);

  var _NativeButton = _$$_REQUIRE(_dependencyMap[1]);

  var _NativeButton2 = _interopRequireDefault(_NativeButton);

  var _styles = _$$_REQUIRE(_dependencyMap[2]);

  var _styles2 = _interopRequireDefault(_styles);

  var _react = _$$_REQUIRE(_dependencyMap[3]);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = _$$_REQUIRE(_dependencyMap[4]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _createReactClass = _$$_REQUIRE(_dependencyMap[5]);

  var _createReactClass2 = _interopRequireDefault(_createReactClass);

  var _reactNative = _$$_REQUIRE(_dependencyMap[6]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var SwipeoutBtn = (0, _createReactClass2.default)({
    displayName: 'SwipeoutBtn',
    propTypes: {
      backgroundColor: _propTypes2.default.string,
      color: _propTypes2.default.string,
      component: _propTypes2.default.node,
      onPress: _propTypes2.default.func,
      text: _propTypes2.default.node,
      type: _propTypes2.default.string,
      underlayColor: _propTypes2.default.string
    },
    getDefaultProps: function getDefaultProps() {
      return {
        backgroundColor: null,
        color: null,
        component: null,
        underlayColor: null,
        height: 0,
        onPress: null,
        disabled: false,
        text: 'Click me',
        type: '',
        width: 0
      };
    },
    render: function render() {
      var btn = this.props;
      var styleSwipeoutBtn = [_styles2.default.swipeoutBtn];
      if (btn.type === 'delete') styleSwipeoutBtn.push(_styles2.default.colorDelete);else if (btn.type === 'primary') styleSwipeoutBtn.push(_styles2.default.colorPrimary);else if (btn.type === 'secondary') styleSwipeoutBtn.push(_styles2.default.colorSecondary);
      if (btn.backgroundColor) styleSwipeoutBtn.push([{
        backgroundColor: btn.backgroundColor
      }]);
      styleSwipeoutBtn.push([{
        height: btn.height,
        width: btn.width
      }]);
      var styleSwipeoutBtnComponent = [];
      styleSwipeoutBtnComponent.push([{
        height: btn.height,
        width: btn.width
      }]);
      var styleSwipeoutBtnText = [_styles2.default.swipeoutBtnText];
      if (btn.color) styleSwipeoutBtnText.push({
        color: btn.color
      });
      return _react2.default.createElement(_NativeButton2.default, {
        onPress: this.props.onPress,
        underlayColor: this.props.underlayColor,
        disabled: this.props.disabled,
        style: [_styles2.default.swipeoutBtnTouchable, styleSwipeoutBtn],
        textStyle: styleSwipeoutBtnText
      }, btn.component ? _react2.default.createElement(_reactNative.View, {
        style: styleSwipeoutBtnComponent
      }, btn.component) : btn.text);
    }
  });
  var Swipeout = (0, _createReactClass2.default)({
    displayName: 'Swipeout',
    mixins: [_reactTweenState2.default.Mixin],
    propTypes: {
      autoClose: _propTypes2.default.bool,
      backgroundColor: _propTypes2.default.string,
      close: _propTypes2.default.bool,
      left: _propTypes2.default.array,
      onOpen: _propTypes2.default.func,
      onClose: _propTypes2.default.func,
      right: _propTypes2.default.array,
      scroll: _propTypes2.default.func,
      style: (_reactNative.ViewPropTypes || _reactNative.View.propTypes).style,
      sensitivity: _propTypes2.default.number,
      buttonWidth: _propTypes2.default.number,
      disabled: _propTypes2.default.bool
    },
    getDefaultProps: function getDefaultProps() {
      return {
        disabled: false,
        rowID: -1,
        sectionID: -1,
        sensitivity: 50
      };
    },
    getInitialState: function getInitialState() {
      return {
        autoClose: this.props.autoClose || false,
        btnWidth: 0,
        btnsLeftWidth: 0,
        btnsRightWidth: 0,
        contentHeight: 0,
        contentPos: 0,
        contentWidth: 0,
        openedRight: false,
        swiping: false,
        tweenDuration: 160,
        timeStart: null
      };
    },
    componentWillMount: function componentWillMount() {
      var _this = this;

      this._panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(event, gestureState) {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(event, gestureState) {
          return _this.state.openedLeft || _this.state.openedRight;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(event, gestureState) {
          return Math.abs(gestureState.dx) > _this.props.sensitivity && Math.abs(gestureState.dy) <= _this.props.sensitivity;
        },
        onPanResponderGrant: this._handlePanResponderGrant,
        onPanResponderMove: this._handlePanResponderMove,
        onPanResponderRelease: this._handlePanResponderEnd,
        onPanResponderTerminate: this._handlePanResponderEnd,
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        }
      });
    },
    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
      if (nextProps.close) this._close();
      if (nextProps.openRight) this._openRight();
      if (nextProps.openLeft) this._openLeft();
    },
    _handlePanResponderGrant: function _handlePanResponderGrant(e, gestureState) {
      var _this2 = this;

      if (this.props.disabled) return;

      if (!this.state.openedLeft && !this.state.openedRight) {
        this._callOnOpen();
      } else {
        this._callOnClose();
      }

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var buttonWidth = _this2.props.buttonWidth || width / 5;

        _this2.setState({
          btnWidth: buttonWidth,
          btnsLeftWidth: _this2.props.left ? buttonWidth * _this2.props.left.length : 0,
          btnsRightWidth: _this2.props.right ? buttonWidth * _this2.props.right.length : 0,
          swiping: true,
          timeStart: new Date().getTime()
        });
      });
    },
    _handlePanResponderMove: function _handlePanResponderMove(e, gestureState) {
      if (this.props.disabled) return;
      var posX = gestureState.dx;
      var posY = gestureState.dy;
      var leftWidth = this.state.btnsLeftWidth;
      var rightWidth = this.state.btnsRightWidth;
      if (this.state.openedRight) var posX = gestureState.dx - rightWidth;else if (this.state.openedLeft) var posX = gestureState.dx + leftWidth;
      var moveX = Math.abs(posX) > Math.abs(posY);

      if (this.props.scroll) {
        if (moveX) this.props.scroll(false);else this.props.scroll(true);
      }

      if (this.state.swiping) {
        if (posX < 0 && this.props.right) {
          this.setState({
            contentPos: Math.min(posX, 0)
          });
        } else if (posX > 0 && this.props.left) {
          this.setState({
            contentPos: Math.max(posX, 0)
          });
        }

        ;
      }
    },
    _handlePanResponderEnd: function _handlePanResponderEnd(e, gestureState) {
      if (this.props.disabled) return;
      var posX = gestureState.dx;
      var contentPos = this.state.contentPos;
      var contentWidth = this.state.contentWidth;
      var btnsLeftWidth = this.state.btnsLeftWidth;
      var btnsRightWidth = this.state.btnsRightWidth;
      var openX = contentWidth * 0.33;
      var openLeft = posX > openX || posX > btnsLeftWidth / 2;
      var openRight = posX < -openX || posX < -btnsRightWidth / 2;
      if (this.state.openedRight) var openRight = posX - openX < -openX;
      if (this.state.openedLeft) var openLeft = posX + openX > openX;
      var timeDiff = new Date().getTime() - this.state.timeStart < 200;

      if (timeDiff) {
        var openRight = posX < -openX / 10 && !this.state.openedLeft;
        var openLeft = posX > openX / 10 && !this.state.openedRight;
      }

      if (this.state.swiping) {
        if (openRight && contentPos < 0 && posX < 0) {
          this._open(-btnsRightWidth, 'right');
        } else if (openLeft && contentPos > 0 && posX > 0) {
          this._open(btnsLeftWidth, 'left');
        } else {
          this._close();
        }
      }

      if (this.props.scroll) this.props.scroll(true);
    },
    _tweenContent: function _tweenContent(state, endValue) {
      this.tweenState(state, {
        easing: _reactTweenState2.default.easingTypes.easeInOutQuad,
        duration: endValue === 0 ? this.state.tweenDuration * 1.5 : this.state.tweenDuration,
        endValue: endValue
      });
    },
    _rubberBandEasing: function _rubberBandEasing(value, limit) {
      if (value < 0 && value < limit) return limit - Math.pow(limit - value, 0.85);else if (value > 0 && value > limit) return limit + Math.pow(value - limit, 0.85);
      return value;
    },
    _autoClose: function _autoClose(btn) {
      if (this.state.autoClose) this._close();
      var onPress = btn.onPress;
      if (onPress) onPress();
    },
    _open: function _open(contentPos, direction) {
      var left = direction === 'left';
      var _props = this.props,
          sectionID = _props.sectionID,
          rowID = _props.rowID,
          onOpen = _props.onOpen;
      onOpen && onOpen(sectionID, rowID, direction);

      this._tweenContent('contentPos', contentPos);

      this.setState({
        contentPos: contentPos,
        openedLeft: left,
        openedRight: !left,
        swiping: false
      });
    },
    _close: function _close() {
      var _props2 = this.props,
          sectionID = _props2.sectionID,
          rowID = _props2.rowID,
          onClose = _props2.onClose;

      if (onClose && (this.state.openedLeft || this.state.openedRight)) {
        var direction = this.state.openedRight ? 'right' : 'left';
        onClose(sectionID, rowID, direction);
      }

      this._tweenContent('contentPos', 0);

      this._callOnClose();

      this.setState({
        openedRight: false,
        openedLeft: false,
        swiping: false
      });
    },
    _callOnClose: function _callOnClose() {
      if (this.props.onClose) this.props.onClose(this.props.sectionID, this.props.rowID);
    },
    _callOnOpen: function _callOnOpen() {
      if (this.props.onOpen) this.props.onOpen(this.props.sectionID, this.props.rowID);
    },
    _openRight: function _openRight() {
      var _this3 = this;

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var btnWidth = _this3.props.buttonWidth || width / 5;

        _this3.setState({
          btnWidth: btnWidth,
          btnsRightWidth: _this3.props.right ? btnWidth * _this3.props.right.length : 0
        }, function () {
          _this3._tweenContent('contentPos', -_this3.state.btnsRightWidth);

          _this3._callOnOpen();

          _this3.setState({
            contentPos: -_this3.state.btnsRightWidth,
            openedLeft: false,
            openedRight: true,
            swiping: false
          });
        });
      });
    },
    _openLeft: function _openLeft() {
      var _this4 = this;

      this.refs.swipeoutContent.measure(function (ox, oy, width, height) {
        var btnWidth = _this4.props.buttonWidth || width / 5;

        _this4.setState({
          btnWidth: btnWidth,
          btnsLeftWidth: _this4.props.left ? btnWidth * _this4.props.left.length : 0
        }, function () {
          _this4._tweenContent('contentPos', _this4.state.btnsLeftWidth);

          _this4._callOnOpen();

          _this4.setState({
            contentPos: _this4.state.btnsLeftWidth,
            openedLeft: true,
            openedRight: false,
            swiping: false
          });
        });
      });
    },
    render: function render() {
      var contentWidth = this.state.contentWidth;
      var posX = this.getTweeningValue('contentPos');
      var styleSwipeout = [_styles2.default.swipeout, this.props.style];

      if (this.props.backgroundColor) {
        styleSwipeout.push([{
          backgroundColor: this.props.backgroundColor
        }]);
      }

      var limit = -this.state.btnsRightWidth;
      if (posX > 0) var limit = this.state.btnsLeftWidth;
      var styleLeftPos = {
        left: {
          left: 0,
          overflow: 'hidden',
          width: Math.min(limit * (posX / limit), limit)
        }
      };
      var styleRightPos = {
        right: {
          left: Math.abs(contentWidth + Math.max(limit, posX)),
          right: 0
        }
      };
      var styleContentPos = {
        content: {
          transform: [{
            translateX: this._rubberBandEasing(posX, limit)
          }]
        }
      };
      var styleContent = [_styles2.default.swipeoutContent];
      styleContent.push(styleContentPos.content);
      var styleRight = [_styles2.default.swipeoutBtns];
      styleRight.push(styleRightPos.right);
      var styleLeft = [_styles2.default.swipeoutBtns];
      styleLeft.push(styleLeftPos.left);
      var isRightVisible = posX < 0;
      var isLeftVisible = posX > 0;
      return _react2.default.createElement(_reactNative.View, {
        style: styleSwipeout
      }, _react2.default.createElement(_reactNative.View, _extends({
        ref: 'swipeoutContent',
        style: styleContent,
        onLayout: this._onLayout
      }, this._panResponder.panHandlers), this.props.children), this._renderButtons(this.props.right, isRightVisible, styleRight), this._renderButtons(this.props.left, isLeftVisible, styleLeft));
    },
    _onLayout: function _onLayout(event) {
      var _event$nativeEvent$la = event.nativeEvent.layout,
          width = _event$nativeEvent$la.width,
          height = _event$nativeEvent$la.height;
      this.setState({
        contentWidth: width,
        contentHeight: height
      });
    },
    _renderButtons: function _renderButtons(buttons, isVisible, style) {
      if (buttons && isVisible) {
        return _react2.default.createElement(_reactNative.View, {
          style: style
        }, buttons.map(this._renderButton));
      } else {
        return _react2.default.createElement(_reactNative.View, null);
      }
    },
    _renderButton: function _renderButton(btn, i) {
      var _this5 = this;

      return _react2.default.createElement(SwipeoutBtn, {
        backgroundColor: btn.backgroundColor,
        color: btn.color,
        component: btn.component,
        disabled: btn.disabled,
        height: this.state.contentHeight,
        key: i,
        onPress: function onPress() {
          return _this5._autoClose(btn);
        },
        text: btn.text,
        type: btn.type,
        underlayColor: btn.underlayColor,
        width: this.state.btnWidth
      });
    }
  });
  Swipeout.NativeButton = _NativeButton2.default;
  Swipeout.SwipeoutButton = SwipeoutBtn;
  exports.default = Swipeout;
},12035,[12038,12041,12044,10297,10318,10456,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  !function (e, n) {
    "object" == typeof exports && "object" == typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define([], n) : "object" == typeof exports ? exports.tweenState = n() : e.tweenState = n();
  }(this, function () {
    return function (e) {
      function n(r) {
        if (t[r]) return t[r].exports;
        var a = t[r] = {
          exports: {},
          id: r,
          loaded: false
        };
        return e[r].call(a.exports, a, a.exports, n), a.loaded = true, a.exports;
      }

      var t = {};
      return n.m = e, n.c = t, n.p = "", n(0);
    }({
      0: function _(e, n, t) {
        e.exports = t(90);
      },
      1: function _(e, n) {
        function t() {
          c = false, o.length ? s = o.concat(s) : f = -1, s.length && r();
        }

        function r() {
          if (!c) {
            var e = setTimeout(t);
            c = true;

            for (var n = s.length; n;) {
              for (o = s, s = []; ++f < n;) {
                o && o[f].run();
              }

              f = -1, n = s.length;
            }

            o = null, c = false, clearTimeout(e);
          }
        }

        function a(e, n) {
          this.fun = e, this.array = n;
        }

        function u() {}

        var o,
            i = e.exports = {},
            s = [],
            c = false,
            f = -1;
        i.nextTick = function (e) {
          var n = new Array(arguments.length - 1);
          if (arguments.length > 1) for (var t = 1; t < arguments.length; t++) {
            n[t - 1] = arguments[t];
          }
          s.push(new a(e, n)), 1 !== s.length || c || setTimeout(r, 0);
        }, a.prototype.run = function () {
          this.fun.apply(null, this.array);
        }, i.title = "browser", i.browser = true, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = u, i.addListener = u, i.once = u, i.off = u, i.removeListener = u, i.removeAllListeners = u, i.emit = u, i.binding = function (e) {
          throw new Error("process.binding is not supported");
        }, i.cwd = function () {
          return "/";
        }, i.chdir = function (e) {
          throw new Error("process.chdir is not supported");
        }, i.umask = function () {
          return 0;
        };
      },
      90: function _(e, n, t) {
        "use strict";

        function r(e) {
          return e && e.__esModule ? e : {
            "default": e
          };
        }

        Object.defineProperty(n, "__esModule", {
          value: true
        });
        var a = t(165),
            u = r(a),
            o = t(91),
            i = r(o),
            s = "ADDITIVE",
            c = a.easeInOutQuad,
            f = 300,
            l = 0,
            h = {
          ADDITIVE: "ADDITIVE",
          DESTRUCTIVE: "DESTRUCTIVE"
        },
            v = {
          _rafID: null,
          getInitialState: function getInitialState() {
            return {
              tweenQueue: []
            };
          },
          componentWillUnmount: function componentWillUnmount() {
            i["default"].cancel(this._rafID), this._rafID = -1;
          },
          tweenState: function tweenState(e, n) {
            var t = this,
                r = n.easing,
                a = n.duration,
                u = n.delay,
                o = n.beginValue,
                v = n.endValue,
                d = n.onEnd,
                p = n.stackBehavior;
            this.setState(function (n) {
              var I = n,
                  w = undefined,
                  g = undefined;
              if ("string" == typeof e) w = e, g = e;else {
                for (var M = 0; M < e.length - 1; M++) {
                  I = I[e[M]];
                }

                w = e[e.length - 1], g = e.join("|");
              }
              var m = {
                easing: r || c,
                duration: null == a ? f : a,
                delay: null == u ? l : u,
                beginValue: null == o ? I[w] : o,
                endValue: v,
                onEnd: d,
                stackBehavior: p || s
              },
                  x = n.tweenQueue;
              return m.stackBehavior === h.DESTRUCTIVE && (x = n.tweenQueue.filter(function (e) {
                return e.pathHash !== g;
              })), x.push({
                pathHash: g,
                config: m,
                initTime: Date.now() + m.delay
              }), I[w] = m.endValue, 1 === x.length && (t._rafID = (0, i["default"])(t._rafCb)), {
                tweenQueue: x
              };
            });
          },
          getTweeningValue: function getTweeningValue(e) {
            var n = this.state,
                t = undefined,
                r = undefined;
            if ("string" == typeof e) t = n[e], r = e;else {
              t = n;

              for (var a = 0; a < e.length; a++) {
                t = t[e[a]];
              }

              r = e.join("|");
            }

            for (var u = Date.now(), a = 0; a < n.tweenQueue.length; a++) {
              var o = n.tweenQueue[a],
                  i = o.pathHash,
                  s = o.initTime,
                  c = o.config;

              if (i === r) {
                var f = u - s > c.duration ? c.duration : Math.max(0, u - s),
                    l = 0 === c.duration ? c.endValue : c.easing(f, c.beginValue, c.endValue, c.duration),
                    h = l - c.endValue;
                t += h;
              }
            }

            return t;
          },
          _rafCb: function _rafCb() {
            var e = this.state;

            if (0 !== e.tweenQueue.length) {
              for (var n = Date.now(), t = [], r = 0; r < e.tweenQueue.length; r++) {
                var a = e.tweenQueue[r],
                    u = a.initTime,
                    o = a.config;
                n - u < o.duration ? t.push(a) : o.onEnd && o.onEnd();
              }

              -1 !== this._rafID && (this.setState({
                tweenQueue: t
              }), this._rafID = (0, i["default"])(this._rafCb));
            }
          }
        };
        n["default"] = {
          Mixin: v,
          easingTypes: u["default"],
          stackBehavior: h
        }, e.exports = n["default"];
      },
      91: function _(e, n, t) {
        for (var r = t(92), a = "undefined" == typeof window ? {} : window, u = ["moz", "webkit"], o = "AnimationFrame", i = a["requestAnimationFrame"], s = a["cancelAnimationFrame"] || a["cancelRequestAnimationFrame"], c = 0; c < u.length && !i; c++) {
          i = a[u[c] + "Request" + o], s = a[u[c] + "Cancel" + o] || a[u[c] + "CancelRequest" + o];
        }

        if (!i || !s) {
          var f = 0,
              l = 0,
              h = [],
              v = 16.666666666666668;
          i = function i(e) {
            if (0 === h.length) {
              var n = r(),
                  t = Math.max(0, v - (n - f));
              f = t + n, setTimeout(function () {
                var e = h.slice(0);
                h.length = 0;

                for (var n = 0; n < e.length; n++) {
                  if (!e[n].cancelled) try {
                    e[n].callback(f);
                  } catch (t) {
                    setTimeout(function () {
                      throw t;
                    }, 0);
                  }
                }
              }, Math.round(t));
            }

            return h.push({
              handle: ++l,
              callback: e,
              cancelled: false
            }), l;
          }, s = function s(e) {
            for (var n = 0; n < h.length; n++) {
              h[n].handle === e && (h[n].cancelled = true);
            }
          };
        }

        e.exports = function (e) {
          return i.call(a, e);
        }, e.exports.cancel = function () {
          s.apply(a, arguments);
        };
      },
      92: function _(e, n, t) {
        (function (n) {
          (function () {
            var t, r, a;
            "undefined" != typeof performance && null !== performance && performance.now ? e.exports = function () {
              return performance.now();
            } : "undefined" != typeof n && null !== n && n.hrtime ? (e.exports = function () {
              return (t() - a) / 1e6;
            }, r = n.hrtime, t = function t() {
              var e;
              return e = r(), 1e9 * e[0] + e[1];
            }, a = t()) : Date.now ? (e.exports = function () {
              return Date.now() - a;
            }, a = Date.now()) : (e.exports = function () {
              return new Date().getTime() - a;
            }, a = new Date().getTime());
          }).call(this);
        }).call(n, t(1));
      },
      165: function _(e, n) {
        "use strict";

        var t = {
          linear: function linear(e, n, t, r) {
            var a = t - n;
            return a * e / r + n;
          },
          easeInQuad: function easeInQuad(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e + n;
          },
          easeOutQuad: function easeOutQuad(e, n, t, r) {
            var a = t - n;
            return -a * (e /= r) * (e - 2) + n;
          },
          easeInOutQuad: function easeInOutQuad(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e + n : -a / 2 * (--e * (e - 2) - 1) + n;
          },
          easeInCubic: function easeInCubic(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e + n;
          },
          easeOutCubic: function easeOutCubic(e, n, t, r) {
            var a = t - n;
            return a * ((e = e / r - 1) * e * e + 1) + n;
          },
          easeInOutCubic: function easeInOutCubic(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e + n : a / 2 * ((e -= 2) * e * e + 2) + n;
          },
          easeInQuart: function easeInQuart(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e * e + n;
          },
          easeOutQuart: function easeOutQuart(e, n, t, r) {
            var a = t - n;
            return -a * ((e = e / r - 1) * e * e * e - 1) + n;
          },
          easeInOutQuart: function easeInOutQuart(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e * e + n : -a / 2 * ((e -= 2) * e * e * e - 2) + n;
          },
          easeInQuint: function easeInQuint(e, n, t, r) {
            var a = t - n;
            return a * (e /= r) * e * e * e * e + n;
          },
          easeOutQuint: function easeOutQuint(e, n, t, r) {
            var a = t - n;
            return a * ((e = e / r - 1) * e * e * e * e + 1) + n;
          },
          easeInOutQuint: function easeInOutQuint(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? a / 2 * e * e * e * e * e + n : a / 2 * ((e -= 2) * e * e * e * e + 2) + n;
          },
          easeInSine: function easeInSine(e, n, t, r) {
            var a = t - n;
            return -a * Math.cos(e / r * (Math.PI / 2)) + a + n;
          },
          easeOutSine: function easeOutSine(e, n, t, r) {
            var a = t - n;
            return a * Math.sin(e / r * (Math.PI / 2)) + n;
          },
          easeInOutSine: function easeInOutSine(e, n, t, r) {
            var a = t - n;
            return -a / 2 * (Math.cos(Math.PI * e / r) - 1) + n;
          },
          easeInExpo: function easeInExpo(e, n, t, r) {
            var a = t - n;
            return 0 == e ? n : a * Math.pow(2, 10 * (e / r - 1)) + n;
          },
          easeOutExpo: function easeOutExpo(e, n, t, r) {
            var a = t - n;
            return e == r ? n + a : a * (-Math.pow(2, -10 * e / r) + 1) + n;
          },
          easeInOutExpo: function easeInOutExpo(e, n, t, r) {
            var a = t - n;
            return 0 === e ? n : e === r ? n + a : (e /= r / 2) < 1 ? a / 2 * Math.pow(2, 10 * (e - 1)) + n : a / 2 * (-Math.pow(2, -10 * --e) + 2) + n;
          },
          easeInCirc: function easeInCirc(e, n, t, r) {
            var a = t - n;
            return -a * (Math.sqrt(1 - (e /= r) * e) - 1) + n;
          },
          easeOutCirc: function easeOutCirc(e, n, t, r) {
            var a = t - n;
            return a * Math.sqrt(1 - (e = e / r - 1) * e) + n;
          },
          easeInOutCirc: function easeInOutCirc(e, n, t, r) {
            var a = t - n;
            return (e /= r / 2) < 1 ? -a / 2 * (Math.sqrt(1 - e * e) - 1) + n : a / 2 * (Math.sqrt(1 - (e -= 2) * e) + 1) + n;
          },
          easeInElastic: function easeInElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 1 === (e /= r) ? n + i : (u || (u = .3 * r), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), -(a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u)) + n);
          },
          easeOutElastic: function easeOutElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 1 === (e /= r) ? n + i : (u || (u = .3 * r), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), a * Math.pow(2, -10 * e) * Math.sin((e * r - o) * (2 * Math.PI) / u) + i + n);
          },
          easeInOutElastic: function easeInOutElastic(e, n, t, r) {
            var a,
                u,
                o,
                i = t - n;
            return o = 1.70158, u = 0, a = i, 0 === e ? n : 2 === (e /= r / 2) ? n + i : (u || (u = r * 0.44999999999999996), a < Math.abs(i) ? (a = i, o = u / 4) : o = u / (2 * Math.PI) * Math.asin(i / a), 1 > e ? -0.5 * (a * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u)) + n : a * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * r - o) * (2 * Math.PI) / u) * .5 + i + n);
          },
          easeInBack: function easeInBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), u * (e /= r) * e * ((a + 1) * e - a) + n;
          },
          easeOutBack: function easeOutBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), u * ((e = e / r - 1) * e * ((a + 1) * e + a) + 1) + n;
          },
          easeInOutBack: function easeInOutBack(e, n, t, r, a) {
            var u = t - n;
            return undefined === a && (a = 1.70158), (e /= r / 2) < 1 ? u / 2 * (e * e * (((a *= 1.525) + 1) * e - a)) + n : u / 2 * ((e -= 2) * e * (((a *= 1.525) + 1) * e + a) + 2) + n;
          },
          easeInBounce: function easeInBounce(e, n, r, a) {
            var u,
                o = r - n;
            return u = t.easeOutBounce(a - e, 0, o, a), o - u + n;
          },
          easeOutBounce: function easeOutBounce(e, n, t, r) {
            var a = t - n;
            return (e /= r) < 0.36363636363636365 ? a * (7.5625 * e * e) + n : 0.7272727272727273 > e ? a * (7.5625 * (e -= 0.5454545454545454) * e + .75) + n : 0.9090909090909091 > e ? a * (7.5625 * (e -= 0.8181818181818182) * e + .9375) + n : a * (7.5625 * (e -= 0.9545454545454546) * e + .984375) + n;
          },
          easeInOutBounce: function easeInOutBounce(e, n, r, a) {
            var u,
                o = r - n;
            return a / 2 > e ? (u = t.easeInBounce(2 * e, 0, o, a), .5 * u + n) : (u = t.easeOutBounce(2 * e - a, 0, o, a), .5 * u + .5 * o + n);
          }
        };
        e.exports = t;
      }
    });
  });
},12038,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends2 = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  var _react = _$$_REQUIRE(_dependencyMap[1]);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = _$$_REQUIRE(_dependencyMap[2]);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _createReactClass = _$$_REQUIRE(_dependencyMap[3]);

  var _createReactClass2 = _interopRequireDefault(_createReactClass);

  var _reactNative = _$$_REQUIRE(_dependencyMap[4]);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var styles = _reactNative.StyleSheet.create({
    button: {
      flexDirection: 'row',
      alignSelf: 'stretch',
      justifyContent: 'center'
    },
    textButton: {
      fontSize: 14,
      alignSelf: 'center'
    },
    opacity: {
      opacity: 0.8
    }
  });

  var NativeButton = (0, _createReactClass2.default)({
    displayName: 'NativeButton',
    propTypes: _extends({}, _reactNative.TouchableWithoutFeedback.propTypes, {
      textStyle: _propTypes2.default.any,
      disabledStyle: _propTypes2.default.any,
      children: _propTypes2.default.node.isRequired,
      underlayColor: _propTypes2.default.string,
      background: _propTypes2.default.any
    }),
    statics: {
      isAndroid: _reactNative.Platform.OS === 'android'
    },
    getDefaultProps: function getDefaultProps() {
      return {
        textStyle: null,
        disabledStyle: null,
        underlayColor: null
      };
    },
    _renderText: function _renderText() {
      if (typeof this.props.children !== 'string') {
        return this.props.children;
      }

      return _react2.default.createElement(_reactNative.Text, {
        numberOfLines: 1,
        ellipsizeMode: _reactNative.Platform.OS === 'ios' ? 'clip' : 'tail',
        style: [styles.textButton, this.props.textStyle]
      }, this.props.children);
    },
    render: function render() {
      var disabledStyle = this.props.disabled ? this.props.disabledStyle || styles.opacity : {};
      var buttonProps = {
        accessibilityComponentType: this.props.accessibilityComponentType,
        accessibilityTraits: this.props.accessibilityTraits,
        accessible: this.props.accessible,
        delayLongPress: this.props.delayLongPress,
        delayPressIn: this.props.delayPressIn,
        delayPressOut: this.props.delayPressOut,
        disabled: this.props.disabled,
        hitSlop: this.props.hitSlop,
        onLayout: this.props.onLayout,
        onPress: this.props.onPress,
        onPressIn: this.props.onPressIn,
        onPressOut: this.props.onPressOut,
        onLongPress: this.props.onLongPress,
        pressRetentionOffset: this.props.pressRetentionOffset
      };

      if (NativeButton.isAndroid) {
        buttonProps = _extends2(buttonProps, {
          background: this.props.background || _reactNative.TouchableNativeFeedback.SelectableBackground()
        });
        return _react2.default.createElement(_reactNative.TouchableNativeFeedback, buttonProps, _react2.default.createElement(_reactNative.View, {
          style: [styles.button, this.props.style, disabledStyle]
        }, this._renderText()));
      }

      return _react2.default.createElement(_reactNative.TouchableHighlight, _extends({}, buttonProps, {
        style: [styles.button, this.props.style, disabledStyle],
        underlayColor: this.props.underlayColor
      }), this._renderText());
    }
  });
  exports.default = NativeButton;
},12041,[14344,10297,10318,10456,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var styles = _reactNative.StyleSheet.create({
    swipeout: {
      backgroundColor: '#dbddde',
      overflow: 'hidden'
    },
    swipeoutBtnTouchable: {
      flex: 1
    },
    swipeoutBtn: {
      alignItems: 'center',
      backgroundColor: '#b6bec0',
      flex: 1,
      justifyContent: 'center',
      overflow: 'hidden'
    },
    swipeoutBtnText: {
      color: '#fff',
      textAlign: 'center'
    },
    swipeoutBtns: {
      bottom: 0,
      flex: 1,
      flexDirection: 'row',
      position: 'absolute',
      right: 0,
      top: 0
    },
    swipeoutContent: {},
    colorDelete: {
      backgroundColor: '#fb3d38'
    },
    colorPrimary: {
      backgroundColor: '#006fff'
    },
    colorSecondary: {
      backgroundColor: '#fd9427'
    }
  });

  exports.default = styles;
},12044,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "542dc47f98da1cd65a6b39e41435bb6b",
    "name": "cleanUp",
    "type": "png"
  });
},12047,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 42,
    "height": 42,
    "scales": [1],
    "hash": "31007d097d33af64cc7174eeebedcd4a",
    "name": "ic_more",
    "type": "png"
  });
},12050,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _resources = _$$_REQUIRE(_dependencyMap[19]);

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[21]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _ScrollChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _BaseMap2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _MapContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _AsyncMapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _ObjectUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var _api = _$$_REQUIRE(_dependencyMap[33]);

  var _mobx = _$$_REQUIRE(_dependencyMap[34]);

  var screenWidth = _reactNative.Dimensions.get('window').width;

  var screenHeight = _reactNative.Dimensions.get('window').height;

  var selectIcon = _$$_REQUIRE(_dependencyMap[35]);

  var Colors = _Consts.default.Colors,
      ACTION = _Consts.default.ACTION,
      MapOpConst = _Consts.default.MapOpConst,
      PROP = _Consts.default.PROP;
  var ERR_MSG = {
    '-112': _localString.default.too_small_to_split,
    '-114': _localString.default.err_not_enough_two_room
  };

  var ZoneEdit = function (_BaseMap) {
    (0, _inherits2.default)(ZoneEdit, _BaseMap);

    function ZoneEdit(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ZoneEdit);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ZoneEdit).call(this, props));

      _this._loadProps = function () {
        return _api.SpecApi.syncP([PROP.TIMING]).then(function (res) {
          if (res && res.timing) {
            _this.timing = res;
            return true;
          }

          return false;
        }).catch(function (error) {});
      };

      _this._retryLoadMap = function () {
        if (_this.loading) {
          return _FunUtils.default.wait(2000);
        }

        _this.loading = true;
        return _FunUtils.default.retry(_this.loadMap, 3).then(function () {
          _this.loading = false;

          _this.setState({
            showLoading: false
          });
        }).catch(function (err) {
          _this.loading = false;

          _this.setState({
            showLoading: false
          });
        });
      };

      _this.afterHandleMap = function (res) {
        var _this$mapData = _this.mapData,
            _this$mapData$originD = _this$mapData.originData,
            originData = _this$mapData$originD === undefined ? [] : _this$mapData$originD,
            dataChanged = _this$mapData.dataChanged;

        if (dataChanged) {
          var fillData = originData.map(function (v) {
            if (v === 255 || v === 127) {
              return v;
            } else {
              return 0x3F & v;
            }
          });
          res.fillData = fillData;
        }

        _this.setState((0, _objectSpread2.default)({}, res));
      };

      _this._cancelSelect = function () {
        _this.setState({
          selectAreaArray: [],
          lineX1: 0,
          lineY1: 0,
          lineX2: 0,
          lineY2: 0,
          isSplit: false
        });
      };

      _this._handlePushMessage = function (msg) {
        var _ref = msg || {},
            _ref$event = _ref.event;

        _ref$event = _ref$event === undefined ? {} : _ref$event;
        var mapUpdate = _ref$event.mapUpdate;

        var _ref2 = mapUpdate || {},
            value = _ref2.value;

        _this._cancelSelect();

        if (+value === 0) {
          _FunUtils.default.wait(1000).then(_this._retryLoadMap);
        }
      };

      _this._handleMapOpResult = function (code) {
        var c = +code;

        if (c === _ApiCode.default.ONING) {
          return c;
        }

        _this._cancelSelect();

        return _FunUtils.default.wait(2000).then(_this._retryLoadMap).then(function () {
          if (c === _ApiCode.default.SUCCESS) {} else if (c === _ApiCode.default.TIME_OUT || c === _ApiCode.default.WAIT_TIME_OUT) {} else {
            var msg = ERR_MSG[c] || _localString.default.ctrl_fail;

            _UIUtils.default.info(msg);
          }

          return c;
        });
      };

      _this._loadMiRoom = function () {
        var forceRelaod = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        _miot.Service.room.loadAllRoom(forceRelaod).then(function (res) {
          var roomNames = res.map(function (room) {
            var roomID = room.roomID,
                name = room.name;
            return {
              title: name,
              id: roomID
            };
          });
          roomNames.push({
            title: _localString.default.custom_name,
            id: -1
          });

          _this.setState({
            miRooms: res,
            options: roomNames,
            miRoomsLoaded: true
          });
        }).catch(function (err) {
          return _logger.default.info(err);
        });
      };

      _this._mergeMap = function (isSaveTime) {
        var _this$mapData$mapConf = _this.mapData.mapConfig,
            autoAreaId = _this$mapData$mapConf.autoAreaId,
            mapId = _this$mapData$mapConf.mapId,
            _this$mapData$mapConf2 = _this$mapData$mapConf.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf2 === undefined ? [] : _this$mapData$mapConf2;
        var _this$state$selectAre = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre === undefined ? [] : _this$state$selectAre;
        var s = selectAreaArray[0];
        var b = selectAreaArray[1];

        if (isSaveTime) {
          _this._mergeSaveTime(s, b);

          _this.setState({
            isDataTye: 0,
            isMessageDialog: false
          });
        }

        if (s < b) {
          s = b;
          b = selectAreaArray[0];
        }

        var areaCount = autoAreaValue.length;
        var data = {
          AutoAreaId: autoAreaId,
          Extra: {
            pixel1: s,
            pixel2: b
          },
          MapId: mapId,
          Operate: 'merge',
          Type: MapOpConst.AREA_MERGE
        };

        _logger.default.info('merge area, show loading');

        _this.setState({
          showLoading: true
        }, function () {
          _AsyncMapApi.default.specA(ACTION.SET_AUTO_AREA, data).then(_this._handleMapOpResult).then(function (code) {
            if (code === _ApiCode.default.TIME_OUT || code === _ApiCode.default.WAIT_TIME_OUT) {
              var _this$mapData$mapConf3 = _this.mapData.mapConfig.autoAreaValue,
                  _autoAreaValue = _this$mapData$mapConf3 === undefined ? [] : _this$mapData$mapConf3;

              if (_autoAreaValue.length !== areaCount - 1) {
                _UIUtils.default.info(_localString.default.time_out);
              }
            }
          });
        });
      };

      _this._splitSaveTime = function () {
        if (_this.s1 == null) {
          return;
        }

        var selectAreaArray = _this.state.selectAreaArray;

        if (_this._timeForSplit(selectAreaArray[0])) {
          _this.setState({
            isDataTye: 2,
            isMessageDialog: true,
            isMessageDialogTxt: _localString.default.Split_Time_Tips
          });
        } else {
          _this._splitMap();
        }
      };

      _this._splitMap = function (saveTime) {
        if (_this.s1 == null) {
          return;
        }

        var mapConfig = _this.mapData.mapConfig;
        var resolution = mapConfig.resolution,
            xMin = mapConfig.xMin,
            yMin = mapConfig.yMin,
            autoAreaId = mapConfig.autoAreaId,
            mapId = mapConfig.mapId,
            height = mapConfig.height,
            _mapConfig$autoAreaVa = mapConfig.autoAreaValue,
            autoAreaValue = _mapConfig$autoAreaVa === undefined ? [] : _mapConfig$autoAreaVa;

        if (autoAreaValue.length > 60) {
          return;
        }

        var _this$state = _this.state,
            selectAreaArray = _this$state.selectAreaArray,
            _this$state$ratio = _this$state.ratio,
            ratio = _this$state$ratio === undefined ? 1 : _this$state$ratio;

        var pos1 = _MapUtils.default.screenToDevice(_this.s1.x, _this.s1.y, height, xMin, yMin, resolution, ratio);

        var pos2 = _MapUtils.default.screenToDevice(_this.s2.x, _this.s2.y, height, xMin, yMin, resolution, ratio);

        var pixel = selectAreaArray[0];

        if (saveTime) {
          _this._splitSaveTimeData(pixel);

          _this.setState({
            isDataTye: 0,
            isMessageDialog: false
          });
        }

        var areaCount = autoAreaValue.length;
        var data = {
          AutoAreaId: autoAreaId,
          Extra: {
            p1: [pos1.x, pos1.y],
            p2: [pos2.x, pos2.y],
            pixel: pixel
          },
          MapId: mapId,
          Operate: 'split',
          Type: MapOpConst.AREA_SPLIT
        };

        _logger.default.info('merge area, show loading');

        _this.setState({
          showLoading: true
        }, function () {
          _AsyncMapApi.default.specA(ACTION.SET_AUTO_AREA, data).then(_this._handleMapOpResult).then(function (code) {
            if (code === _ApiCode.default.TIME_OUT || code === _ApiCode.default.WAIT_TIME_OUT) {
              var _this$mapData$mapConf4 = _this.mapData.mapConfig.autoAreaValue,
                  _autoAreaValue2 = _this$mapData$mapConf4 === undefined ? [] : _this$mapData$mapConf4;

              if (_autoAreaValue2.length !== areaCount + 1) {
                _UIUtils.default.info(_localString.default.time_out);
              }
            }
          });
        });
      };

      _this._onSplit = function () {
        var _this$state$selectAre2 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre2 === undefined ? [] : _this$state$selectAre2;
        var _this$mapData$mapConf5 = _this.mapData.mapConfig;
        _this$mapData$mapConf5 = _this$mapData$mapConf5 === undefined ? {} : _this$mapData$mapConf5;
        var _this$mapData$mapConf6 = _this$mapData$mapConf5.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf6 === undefined ? [] : _this$mapData$mapConf6;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);
        } else if (selectAreaArray.length !== 1) {
          _UIUtils.default.info(_localString.default.err_not_enough_split);
        } else {
          _this.s1 = null;
          _this.s2 = null;

          _this.setState({
            isSplit: true
          });
        }
      };

      _this._onMerge = function () {
        var _this$state$selectAre3 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre3 === undefined ? [] : _this$state$selectAre3;
        var _this$mapData2 = _this.mapData,
            _this$mapData2$mapCon = _this$mapData2.mapConfig;
        _this$mapData2$mapCon = _this$mapData2$mapCon === undefined ? {} : _this$mapData2$mapCon;
        var _this$mapData2$mapCon2 = _this$mapData2$mapCon.autoAreaValue,
            autoAreaValue = _this$mapData2$mapCon2 === undefined ? [] : _this$mapData2$mapCon2,
            _this$mapData2$adjace = _this$mapData2.adjacencyMap,
            adjacencyMap = _this$mapData2$adjace === undefined ? {} : _this$mapData2$adjace;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);
        } else if (selectAreaArray.length !== 2) {
          _UIUtils.default.info(_localString.default.err_not_enough_two_room);
        } else {
          var arr = adjacencyMap[selectAreaArray[0]] || [];

          if (arr.indexOf(selectAreaArray[1]) >= 0 || arr.indexOf("" + selectAreaArray[1]) >= 0) {
            if (_this._timeForMerge(selectAreaArray[0], selectAreaArray[1])) {
              _this.setState({
                isDataTye: 1,
                isMessageDialog: true,
                isMessageDialogTxt: _localString.default.Merge_Time_Tips
              });
            } else {
              _this._mergeMap();
            }
          } else {
            _UIUtils.default.info(_localString.default.err_not_enough_two_room);
          }
        }
      };

      _this._onRename = function () {
        var _this$state$selectAre4 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre4 === undefined ? [] : _this$state$selectAre4;
        var _this$mapData$mapConf7 = _this.mapData.mapConfig;
        _this$mapData$mapConf7 = _this$mapData$mapConf7 === undefined ? {} : _this$mapData$mapConf7;
        var _this$mapData$mapConf8 = _this$mapData$mapConf7.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf8 === undefined ? [] : _this$mapData$mapConf8;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);

          return;
        }

        if (selectAreaArray.length !== 1) {
          _UIUtils.default.info(_localString.default.err_not_enough_rename);

          return;
        }

        var miRoomsLoaded = _this.state.miRoomsLoaded;

        if (!miRoomsLoaded) {
          _this._loadMiRoom();

          _this.setState({
            showInput: true
          });

          return;
        }

        _this.setState({
          showRoom: true
        });
      };

      _this._checkName = function (name) {
        var _this$state$options = _this.state.options,
            options = _this$state$options === undefined ? [] : _this$state$options;

        if (name === '' || name === undefined || name === null) {
          _UIUtils.default.info(_localString.default.name_cannot_empty);

          return false;
        } else if (_ObjectUtils.default.hasSpecialCharacters(name)) {
          _UIUtils.default.info(_localString.default.name_invalid);

          return false;
        }

        var index = options.findIndex(function (item) {
          return item.title === name;
        });

        if (index >= 0) {
          _UIUtils.default.info(_localString.default.room_name_can_not_same);

          return false;
        }

        return true;
      };

      _this._doRename = function (data) {
        _logger.default.info("do rename, " + JSON.stringify(data));

        var _ref3 = data || {},
            name = _ref3.name,
            id = _ref3.id;

        var mapConfig = _this.mapData.mapConfig;
        var mapId = mapConfig.mapId;
        var _this$state$selectAre5 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre5 === undefined ? [] : _this$state$selectAre5;
        var areaId = +selectAreaArray[0];
        var param = {
          MapId: mapId,
          AreaId: areaId,
          Name: name,
          Type: MapOpConst.AREA_RENAME
        };

        if (id) {
          param.RoomId = "" + id;
        }

        _AsyncMapApi.default.specA(ACTION.CHANGE_AREA_NAME, param).then(_this._handleMapOpResult).then(function (code) {
          var timeout = +code === _ApiCode.default.TIME_OUT || +code === _ApiCode.default.WAIT_TIME_OUT;

          if (+code === _ApiCode.default.SUCCESS || timeout) {
            var _ref4 = _this.mapData || {},
                _mapConfig = _ref4.mapConfig;

            var _ref5 = _mapConfig || {},
                autoAreaValue = _ref5.autoAreaValue;

            var area = autoAreaValue.find(function (item) {
              return item.id === areaId;
            });

            if (timeout && area && area.name !== name) {
              _UIUtils.default.info(_localString.default.timeout);
            }

            if (area && +code === _ApiCode.default.SUCCESS) {
              area.name = name;
            }

            _this.forceUpdate();
          }
        });
      };

      _this._onSelect = function (selectIndex) {
        var _this$state$options2 = _this.state.options,
            options = _this$state$options2 === undefined ? [] : _this$state$options2;
        var id = options[selectIndex].id;

        if (+id === -1) {
          _this.roomName = '';

          _this.setState({
            showInput: true
          });
        } else {
          _this.setState({
            showLoading: true
          });

          _this._doRename({
            id: id,
            name: options[selectIndex].title
          });
        }
      };

      _this._addRoomName = function (roomName) {
        _logger.default.info("add room name: " + roomName);

        _this.setState({
          showLoading: true
        });

        _miot.Service.room.createRoom(roomName).then(function (res) {
          var _ref6 = res || {},
              roomID = _ref6.roomID;

          if (roomID) {
            _this._loadMiRoom(true);
          }

          _this._doRename({
            name: roomName,
            id: roomID
          });
        }).catch(function (err) {
          _this.setState({
            showLoading: false
          });

          _this._doRename({
            name: roomName
          });

          _logger.default.info(err);
        });
      };

      _this.doExit = function () {
        _logger.default.info('do exit, dismiss loading');

        _this.setState({
          exit: true,
          showLoading: false
        }, function () {
          _reactNative.DeviceEventEmitter.emit('refreshData', null);

          _this.props.navigation.pop();
        });
      };

      _this._onSelectAreaChange = function (areaArray) {
        var _this$mapData$mapConf9 = _this.mapData.mapConfig;
        _this$mapData$mapConf9 = _this$mapData$mapConf9 === undefined ? {} : _this$mapData$mapConf9;
        var _this$mapData$mapConf10 = _this$mapData$mapConf9.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf10 === undefined ? [] : _this$mapData$mapConf10;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);

          return;
        }

        _this.setState({
          selectAreaArray: areaArray
        });
      };

      _this._handleStart = function (event, gesture) {
        var _event$nativeEvent = event.nativeEvent,
            locationX = _event$nativeEvent.locationX,
            locationY = _event$nativeEvent.locationY,
            pageX = _event$nativeEvent.pageX,
            pageY = _event$nativeEvent.pageY,
            target = _event$nativeEvent.target;
        var x0 = gesture.x0,
            y0 = gesture.y0;
        var isSplit = _this.state.isSplit;

        if (isSplit) {
          _this.setState({
            lineX1: locationX,
            lineY1: locationY,
            lineX2: locationX,
            lineY2: locationY
          });
        }
      };

      _this._handleChange = function (event) {
        var isSplit = _this.state.isSplit;

        if (isSplit) {
          var _event$nativeEvent2 = event.nativeEvent,
              locationX = _event$nativeEvent2.locationX,
              locationY = _event$nativeEvent2.locationY;

          _this.setState({
            lineX2: locationX,
            lineY2: locationY
          });
        }
      };

      _this._handleEnd = function (event) {
        var _this$state2 = _this.state,
            isSplit = _this$state2.isSplit,
            lineX1 = _this$state2.lineX1,
            lineY1 = _this$state2.lineY1;
        var _event$nativeEvent3 = event.nativeEvent,
            locationX = _event$nativeEvent3.locationX,
            locationY = _event$nativeEvent3.locationY;

        if (isSplit) {
          if ((locationX - lineX1) * (locationX - lineX1) + (locationY - lineY1) * (locationY - lineY1) < 25) {
            _this.setState({
              lineX1: 0,
              lineY1: 0,
              lineX2: 0,
              lineY2: 0
            });

            return;
          }

          _this.setState({
            lineX2: locationX,
            lineY2: locationY
          });

          var points = _this.calEndPoints(lineX1, lineY1, locationX, locationY);

          if (points != null && points.length > 1) {
            _this.setState({
              lineX1: points[0].x,
              lineY1: points[0].y,
              lineX2: points[1].x,
              lineY2: points[1].y
            });
          } else {
            _UIUtils.default.info(_localString.default.line_need_close_to_wall);

            _this.setState({
              lineX1: 0,
              lineY1: 0,
              lineX2: 0,
              lineY2: 0
            });
          }
        }
      };

      _this._renderBottomView = function (isSplit) {
        if (isSplit) {
          var icons = _resources.Images.navigation.light;
          return _react.default.createElement(_reactNative.View, {
            style: [styles.bottomViewStyle, {
              paddingHorizontal: 15
            }]
          }, _react.default.createElement(_ImageButton.default, {
            onPress: _this._cancelSelect,
            source: icons.close.normal,
            highlightedSource: icons.close.press
          }), _react.default.createElement(_reactNative.View, {
            style: {
              flex: 1,
              alignItems: 'center',
              justifyContent: 'center',
              paddingHorizontal: 5
            }
          }, _react.default.createElement(_reactNative.Text, {
            style: {
              fontSize: 15,
              color: '#333333',
              textAlign: 'center'
            }
          }, _localString.default.drawline_to_split)), _react.default.createElement(_ImageButton.default, {
            onPress: _this._splitSaveTime,
            source: icons.complete.normal,
            highlightedSource: icons.complete.press
          }));
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.bottomViewStyle
        }, _react.default.createElement(BottomIcon, {
          icon: _$$_REQUIRE(_dependencyMap[36]),
          name: _localString.default.merge,
          onPress: _this._onMerge
        }), _react.default.createElement(BottomIcon, {
          icon: _$$_REQUIRE(_dependencyMap[37]),
          name: _localString.default.segmentation,
          onPress: _this._onSplit
        }), _react.default.createElement(BottomIcon, {
          icon: _$$_REQUIRE(_dependencyMap[38]),
          name: _localString.default.reset_name,
          onPress: _this._onRename
        }));
      };

      props.navigation.setParams({
        titleProps: {
          title: _localString.default.zone_edit
        }
      });
      _this.roomName = '';

      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
          state = _assertThisInitialize.state;

      _this.state = (0, _objectSpread2.default)({}, state, {
        showRoom: false,
        showInput: false,
        isSplit: false,
        isMerge: false,
        dialogVisiable: false,
        left: 0,
        top: 0,
        scale: 1.0,
        lineX1: 0,
        lineY1: 0,
        lineX2: 0,
        lineY2: 0,
        miRooms: [],
        selectRoomNameIndex: -1,
        msg: '',
        miRoomsLoaded: false,
        fillData: null,
        options: [{
          title: _localString.default.custom_name,
          id: -1
        }],
        showLoading: false,
        isMessageDialog: false,
        isMessageDialogTxt: null,
        isDataTye: 0
      });

      _logger.default.info('zone edit constructor');

      return _this;
    }

    (0, _createClass2.default)(ZoneEdit, [{
      key: "onDismiss",
      value: function onDismiss() {
        this.setState({
          isMessageDialog: false
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(ZoneEdit.prototype), "componentDidMount", this).call(this);

        _FunUtils.default.retry(this._loadProps, 3).catch(function () {
          return false;
        });

        _logger.default.info('zone edit, componentDidMount, loading');

        this.setState({
          showLoading: true
        });

        this._retryLoadMap();

        this._loadMiRoom(true);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(ZoneEdit.prototype), "componentWillUnmount", this).call(this);

        _logger.default.info('ZoneEdit, componentWillUnmount, dismiss loading');

        this.setState({
          showLoading: false
        });

        this.setState = function () {
          return;
        };
      }
    }, {
      key: "_mergeSaveTime",
      value: function _mergeSaveTime(a, b) {
        var _this2 = this;

        var timeData = JSON.parse(this.timing.timing);
        var timeArray = timeData["time"];

        for (i = 0; i < timeArray.length; i++) {
          var arr = timeArray[i];
          var tempArr = arr[arr.length - 1];

          if (tempArr.indexOf(a.toString()) != -1 || tempArr.indexOf(b.toString()) != -1 || tempArr.indexOf(a) != -1 || tempArr.indexOf(b) != -1) {
            arr.splice(arr.length - 1, 1, []);
            timeArray.splice(i, 1, arr);
          }
        }

        timeData["time"] = timeArray;

        _api.SpecApi.specSet(PROP.TIMING, JSON.stringify(timeData)).then(function (code) {
          if (code !== _ApiCode.default.SUCCESS) {
            if (code === _ApiCode.default.ONING) {
              _UIUtils.default.info(_localString.default.wait_operate);
            } else {
              _UIUtils.default.info(_localString.default.operator_fail);
            }
          } else {
            _this2.timing.timing = JSON.stringify(timeData);
          }
        });
      }
    }, {
      key: "_timeForSplit",
      value: function _timeForSplit(a) {
        var timeArray = JSON.parse(this.timing.timing)["time"];
        var isRes = false;

        if (timeArray) {
          for (i = 0; i < timeArray.length; i++) {
            var arr = timeArray[i];
            var tempArr = arr[arr.length - 1];

            if (tempArr.indexOf(a.toString()) != -1 || tempArr.indexOf(a) != -1) {
              isRes = true;
              break;
            }
          }

          return isRes;
        }
      }
    }, {
      key: "_splitSaveTimeData",
      value: function _splitSaveTimeData(a) {
        var _this3 = this;

        var timeData = JSON.parse(this.timing.timing);
        var timeArray = timeData["time"];

        for (i = 0; i < timeArray.length; i++) {
          var arr = timeArray[i];
          var tempArr = arr[arr.length - 1];

          if (tempArr.indexOf(a.toString()) != -1 || tempArr.indexOf(a) != -1) {
            arr.splice(arr.length - 1, 1, []);
            timeArray.splice(i, 1, arr);
          }
        }

        timeData["time"] = timeArray;

        _api.SpecApi.specSet(PROP.TIMING, JSON.stringify(timeData)).then(function (code) {
          if (code !== _ApiCode.default.SUCCESS) {
            if (code === _ApiCode.default.ONING) {
              _UIUtils.default.info(_localString.default.wait_operate);
            } else {
              _UIUtils.default.info(_localString.default.operator_fail);
            }
          } else {
            _this3.timing.timing = JSON.stringify(timeData);
          }
        });
      }
    }, {
      key: "calEndPoints",
      value: function calEndPoints(x1, y1, x2, y2) {
        var _this$mapData3 = this.mapData,
            _this$mapData3$mapCon = _this$mapData3.mapConfig,
            width = _this$mapData3$mapCon.width,
            height = _this$mapData3$mapCon.height,
            data = _this$mapData3.data,
            _this$mapData3$hasFil = _this$mapData3.hasFillValue,
            hasFillValue = _this$mapData3$hasFil === undefined ? false : _this$mapData3$hasFil;
        var _this$state3 = this.state,
            _this$state3$selectAr = _this$state3.selectAreaArray,
            selectAreaArray = _this$state3$selectAr === undefined ? [] : _this$state3$selectAr,
            _this$state3$ratio = _this$state3.ratio,
            ratio = _this$state3$ratio === undefined ? 1 : _this$state3$ratio;
        var roomId = selectAreaArray[0] || 1;

        var p1 = _utils.default.screenToMapPoint(x1, y1, width, height, {
          scale: ratio
        });

        var p2 = _utils.default.screenToMapPoint(x2, y2, width, height, {
          scale: ratio
        });

        if (p1 == null || p2 == null) {
          return null;
        }

        var points = null;
        var _this$state$fillData = this.state.fillData,
            fillData = _this$state$fillData === undefined ? data : _this$state$fillData;

        if (hasFillValue) {
          points = _utils.default.calEndPointsEx(fillData, roomId, p1, p2, width, height);
        } else {
          points = _utils.default.calEndPoints(data, roomId, p1, p2, width, height);
        }

        if (points == null || points.length < 2) {
          return null;
        }

        var s1 = _utils.default.mapToScreenPoint(points[0].x, points[0].y, width, height, {
          scale: ratio
        });

        var s2 = _utils.default.mapToScreenPoint(points[1].x, points[1].y, width, height, {
          scale: ratio
        });

        this.s1 = s1;
        this.s2 = s2;
        return [s1, s2];
      }
    }, {
      key: "_timeForMerge",
      value: function _timeForMerge(a, b) {
        var timeArray = JSON.parse(this.timing.timing)["time"];
        var isRes = false;

        if (timeArray) {
          for (i = 0; i < timeArray.length; i++) {
            var arr = timeArray[i];
            var tempArr = arr[arr.length - 1];

            if (tempArr.indexOf(a.toString()) != -1 || tempArr.indexOf(b.toString()) != -1 || tempArr.indexOf(a) != -1 || tempArr.indexOf(b) != -1) {
              isRes = true;
              break;
            }
          }

          return isRes;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var _this$state4 = this.state,
            lineX1 = _this$state4.lineX1,
            lineX2 = _this$state4.lineX2,
            lineY1 = _this$state4.lineY1,
            lineY2 = _this$state4.lineY2,
            _this$state4$showLoad = _this$state4.showLoading,
            showLoading = _this$state4$showLoad === undefined ? false : _this$state4$showLoad,
            _this$state4$showRoom = _this$state4.showRoom,
            showRoom = _this$state4$showRoom === undefined ? false : _this$state4$showRoom,
            _this$state4$exit = _this$state4.exit,
            exit = _this$state4$exit === undefined ? false : _this$state4$exit,
            options = _this$state4.options,
            selectRoomNameIndex = _this$state4.selectRoomNameIndex,
            _this$state4$showInpu = _this$state4.showInput,
            showInput = _this$state4$showInpu === undefined ? false : _this$state4$showInpu,
            isSplit = _this$state4.isSplit,
            _this$state4$selectAr = _this$state4.selectAreaArray,
            selectAreaArray = _this$state4$selectAr === undefined ? [] : _this$state4$selectAr,
            ratio = _this$state4.ratio;

        if (exit) {
          return null;
        }

        var bottomView = this._renderBottomView(isSplit);

        return _react.default.createElement(_reactNative.ImageBackground, {
          style: {
            height: '100%',
            width: '100%'
          },
          source: _$$_REQUIRE(_dependencyMap[39])
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            height: '100%'
          }
        }, _react.default.createElement(_MapContainer.default, {
          showIndex: true,
          exit: exit,
          ratio: ratio,
          mapImage: this.mapImage,
          areaCenter: this.areaCenter,
          mapData: this.mapData,
          selectAreaArray: selectAreaArray,
          onSelectAreaChanged: this._onSelectAreaChange,
          draggable: !isSplit,
          clickable: !isSplit,
          onStart: this._handleStart,
          onChange: this._handleChange,
          onEnd: this._handleEnd
        }, _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNativeSvg.Svg, {
          style: {
            position: 'absolute',
            zIndex: 200
          },
          height: screenHeight,
          width: screenWidth
        }, _react.default.createElement(_reactNativeSvg.Line, {
          x1: lineX1,
          y1: lineY1,
          x2: lineX2,
          y2: lineY2,
          stroke: "red",
          strokeWidth: "1"
        })))), bottomView, _react.default.createElement(_ScrollChoiceDialog.default, {
          visible: showRoom,
          title: _localString.default.reset_name,
          options: options,
          selectedIndexArray: [selectRoomNameIndex],
          color: Colors.mainColor,
          icon: selectIcon,
          onDismiss: function onDismiss() {
            _this4.setState({
              showRoom: false
            });
          },
          onSelect: function onSelect(res) {
            _logger.default.info("choose room: " + JSON.stringify(res));

            _this4.setState({
              selectRoom: +res[0]
            });

            _this4._onSelect(+res[0]);
          },
          type: _Dialog.ChoiceDialog.TYPE.SINGLE
        }), _react.default.createElement(_Dialog.InputDialog, {
          visible: showInput,
          title: _localString.default.add_name,
          cancelable: true,
          singleLine: true,
          inputs: [{
            textInputProps: {
              maxLength: 12,
              autoFocus: true
            },
            placeholder: _localString.default.room_name_length_limit,
            onChangeText: function onChangeText(text) {
              _this4.roomName = text;

              _logger.default.info("text change" + text);
            }
          }],
          buttons: [{
            text: _localString.default.cancel
          }, {
            text: _localString.default.confirm,
            style: {
              color: Colors.mainColor
            },
            callback: function callback() {
              _this4.setState({
                showInput: false
              });

              if (!_this4._checkName(_this4.roomName)) {
                return;
              }

              var miRoomsLoaded = _this4.state.miRoomsLoaded;

              if (miRoomsLoaded) {
                _this4._addRoomName(_this4.roomName);
              } else {
                _this4.setState({
                  showLoading: true
                }, function () {
                  _this4._doRename({
                    name: _this4.roomName
                  });
                });
              }
            }
          }],
          onDismiss: function onDismiss() {
            _this4.setState({
              showInput: false
            });
          }
        }), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.isMessageDialog,
          title: _localString.default.hint,
          message: this.state.isMessageDialogTxt,
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: 'lightpink'
            },
            callback: function callback(_) {
              return _this4.setState({
                isMessageDialog: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: 'lightblue'
            },
            callback: function callback(_) {
              switch (_this4.state.isDataTye) {
                case 1:
                  _this4._mergeMap(true);

                  break;

                case 2:
                  _this4._splitMap(true);

                  break;
              }
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this4.onDismiss();
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          message: _localString.default.ctrling
        })));
      }
    }]);
    return ZoneEdit;
  }(_BaseMap2.default);

  exports.default = ZoneEdit;
  ZoneEdit.navigationOptions = _HdNavigationBar.default;

  function BottomIcon(props) {
    var name = props.name,
        icon = props.icon,
        onPress = props.onPress;
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      onPress: onPress
    }, _react.default.createElement(_reactNative.View, {
      style: styles.bottomIconContainer
    }, _react.default.createElement(_reactNative.Image, {
      style: styles.bottomIcon,
      source: icon
    }), _react.default.createElement(_reactNative.Text, {
      style: styles.bottomText
    }, name)));
  }

  var styles = _reactNative.StyleSheet.create({
    bottomViewStyle: {
      width: '100%',
      backgroundColor: '#FFFFFF',
      alignItems: 'center',
      justifyContent: 'space-evenly',
      flexDirection: 'row',
      paddingVertical: 20
    },
    bottomIconContainer: {
      flex: 1,
      alignItems: 'center'
    },
    bottomIcon: {
      width: 24,
      height: 24
    },
    bottomText: {
      fontSize: 12,
      color: '#939AA9',
      textAlign: 'center',
      marginTop: 6
    }
  });
},12053,[14308,14305,14314,14320,14323,14371,14374,14377,14380,14386,10297,11485,10033,10074,10100,10016,11807,10719,10200,10077,10409,10755,10064,11711,12056,11678,10106,11990,11618,11816,10103,11669,11936,10091,10007,11825,12059,12062,12065,11798]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _ChoiceDialog2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var ScrollChoiceDialog = function (_ChoiceDialog) {
    (0, _inherits2.default)(ScrollChoiceDialog, _ChoiceDialog);

    function ScrollChoiceDialog() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ScrollChoiceDialog);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ScrollChoiceDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this._renderItem = function (_ref) {
        var item = _ref.item,
            index = _ref.index;
        return _react.default.createElement(_ChoiceItem.default, {
          type: _this.props.type,
          title: item.title || '',
          subtitle: item.subtitle || '',
          selected: _this.state.selectedArray[index],
          color: _this.props.color,
          icon: _this.props.icon,
          onPress: function onPress(selected) {
            return _this._onPress(selected, index);
          }
        });
      };

      _this._renderContent = function () {
        var options = _this.props.options;
        var views;

        if (options.length >= 8) {
          return _react.default.createElement(_reactNative.FlatList, {
            style: {
              height: 400
            },
            showsHorizontalScrollIndicator: false,
            showsVerticalScrollIndicator: false,
            renderItem: _this._renderItem,
            ItemSeparatorComponent: function ItemSeparatorComponent() {
              return _react.default.createElement(_Separator.default, null);
            },
            data: options,
            keyExtractor: function keyExtractor(item, index) {
              return (item.title || '') + "-" + index;
            }
          });
        } else {
          views = options.map(function (option, index) {
            return _react.default.createElement(_reactNative.View, {
              key: (option.title || '') + index
            }, _react.default.createElement(_Separator.default, null), _react.default.createElement(_ChoiceItem.default, {
              type: _this.props.type,
              title: option.title || '',
              subtitle: option.subtitle || '',
              selected: _this.state.selectedArray[index],
              color: _this.props.color,
              icon: _this.props.icon,
              onPress: function onPress(selected) {
                return _this._onPress(selected, index);
              }
            }));
          });
        }

        return views;
      };

      return _this;
    }

    (0, _createClass2.default)(ScrollChoiceDialog, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        if (!this.props.visible) return null;

        var views = this._renderContent();

        return _react.default.createElement(_Dialog.AbstractDialog, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          title: this.props.title,
          showButton: this.props.type === _ChoiceDialog2.default.TYPE.MULTIPLE,
          buttons: this.buttons,
          onDismiss: function onDismiss() {
            return _this2._onDismiss();
          }
        }, views, this.props.type === _ChoiceDialog2.default.TYPE.MULTIPLE ? _react.default.createElement(_Separator.default, null) : null);
      }
    }]);
    return ScrollChoiceDialog;
  }(_ChoiceDialog2.default);

  exports.default = ScrollChoiceDialog;
},12056,[14305,14320,14323,14371,14377,14386,10297,10033,10734,10755,10731,10332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "1652162a7f14758dbdbeebbedb2bcde3",
    "name": "ic_edit_merge",
    "type": "png"
  });
},12059,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "a0200496b7e23fa36f70f4fd688b25ea",
    "name": "ic_edit_devision",
    "type": "png"
  });
},12062,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 72,
    "height": 72,
    "scales": [1],
    "hash": "55130b2ba80dadf3355e3a0516198b25",
    "name": "ic_edit_rename",
    "type": "png"
  });
},12065,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _miot = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _api = _$$_REQUIRE(_dependencyMap[17]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[19]);

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _MapStore = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _mobxReact = _$$_REQUIRE(_dependencyMap[22]);

  var _StatusConsts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _ShowForbidZone = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _AsyncMapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _MapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _MapContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _Dock = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _BaseMap2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[33]);

  var _ObjectUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[34]));

  var _MapData = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[35]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[36]));

  var _class, _temp;

  var PROP = _Consts.default.PROP,
      ACTION = _Consts.default.ACTION,
      Colors = _Consts.default.Colors,
      MapOpConst = _Consts.default.MapOpConst,
      METHOD = _Consts.default.METHOD;
  var MapDetail = (0, _mobxReact.inject)('robotStore')((0, _mobxReact.observer)((_temp = _class = function (_BaseMap) {
    (0, _inherits2.default)(MapDetail, _BaseMap);

    function MapDetail(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MapDetail);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MapDetail).call(this, props));

      _this._retryLoadMap = function () {
        return _FunUtils.default.retry(_this._loadMap, 3).then(function (success) {
          if (!success) {
            _UIUtils.default.info(_localString.default.load_fail);
          }

          _this.setState({
            showLoading: false
          });
        }).catch(function () {
          _UIUtils.default.info(_localString.default.load_fail);

          _this.setState({
            showLoading: false
          });
        });
      };

      _this._loadMap = function () {
        var _this$data = _this.data,
            fileName = _this$data.record_obj_name,
            map_index = _this$data.map_index;

        if (map_index !== undefined) {
          return _this._fetchUrl(map_index).then(function (url) {
            if (!url) {
              return false;
            }

            var name = _this.nameGenerator.next('map');

            return _MapApi.default.fetchFile(url, name).then(_this._handleMapFile);
          });
        } else {
          return _MapApi.default.genFDSUrl(fileName).then(function (res) {
            var _ref = res || {},
                url = _ref.url,
                name = _ref.name;

            if (url && name) {
              return _MapApi.default.fetchFile(url, name).then(_this._handleMapFile);
            }

            return false;
          });
        }
      };

      _this.afterHandleMap = function (res) {
        var mapConfig = _this.mapData.mapConfig;

        var _ref2 = res || {},
            _ref2$ratio = _ref2.ratio,
            ratio = _ref2$ratio === undefined ? 1 : _ref2$ratio;

        var area = mapConfig.area;

        var _MapUtils$calcZones = _MapUtils.default.calcZones(area, mapConfig, ratio),
            forbidArray = _MapUtils$calcZones.forbidArray;

        _this.forbidArray = forbidArray;

        _this.setState((0, _objectSpread2.default)({}, res));
      };

      _this._renderZones = function () {
        var noMap = _this.state.noMap;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            _assertThisInitialize2 = _assertThisInitialize.forbidArray,
            forbidArray = _assertThisInitialize2 === undefined ? [] : _assertThisInitialize2;

        if (noMap || forbidArray.length <= 0) {
          return null;
        }

        var forbidView = forbidArray.map(function (forbid, index) {
          return _react.default.createElement(_ShowForbidZone.default, {
            key: "forbid-" + index,
            zone: forbid.vertexs,
            forbidType: forbid.forbidType,
            isClick: false
          });
        });
        return forbidView;
      };

      _this._renderMachine = function (machinePos) {
        var noMap = _this.state.noMap;

        var _ref3 = machinePos || {},
            x = _ref3.x,
            y = _ref3.y;

        if (noMap || !x || !y) {
          return null;
        }

        return _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[37]),
          style: [{
            position: 'absolute',
            transform: [{
              translateX: x - 11
            }, {
              translateY: y - 11
            }]
          }]
        });
      };

      _this.doExit = function () {
        _reactNative.DeviceEventEmitter.emit('refreshData', null);

        _logger.default.info(' map detail ====== do exit ======  showloading: false');

        _this.setState({
          exit: true,
          showLoading: false
        }, function () {
          _this.props.navigation.goBack();
        });
      };

      _this._loadMapData = function (index) {
        return _MapApi.default.genTempUrl(index).then(function (urlInfo) {
          var url = urlInfo.url;

          if (url) {
            return _MapApi.default.fetchMapListFile(url, "mapData" + index, 10000);
          }

          _logger.default.info('gen data url fail');

          return {
            code: _ApiCode.default.FAIL
          };
        }).catch(function (err) {
          _logger.default.info("load data err: " + JSON.stringify(err));

          return {
            code: _ApiCode.default.FAIL
          };
        });
      };

      _this._loadSetMapData = function (index) {
        return _MapApi.default.genTempUrl(index).then(function (urlInfo) {
          var url = urlInfo.url;

          if (url) {
            return _MapApi.default.fetchFile(url, "mapData" + index, 10000);
          }

          _logger.default.info('gen data url fail');

          return {
            code: _ApiCode.default.FAIL
          };
        }).catch(function (err) {
          _logger.default.info("load data err: " + JSON.stringify(err));

          return {
            code: _ApiCode.default.FAIL
          };
        });
      };

      _this._showDeleteMsg = function () {
        _this.setState({
          showDialog: true,
          message: _localString.default.delete_current_map,
          currentHint: 'deleteMap'
        });
      };

      _this._handleMapOpResult = function (code) {
        var c = +code;
        return _FunUtils.default.wait(2000).then(function () {
          if (c === _ApiCode.default.SUCCESS) {
            _UIUtils.default.info(_localString.default.ctl_success);
          } else if (c === _ApiCode.default.TIME_OUT || c === _ApiCode.default.WAIT_TIME_OUT) {} else {}

          return c;
        });
      };

      _this._deleteMap = function () {
        var _ref4 = _this.data || {},
            mapid = _ref4.mapid;

        if (mapid) {
          if (_this.isDeleteMap) {
            return;
          }

          _this.isDeleteMap = true;

          _this.setState({
            showLoading: true,
            msg: _localString.default.ctrling
          });

          var data = {
            MapId: mapid,
            Type: MapOpConst.MAPLIST_DELETE
          };

          _AsyncMapApi.default.specA(ACTION.DELETE_MAP_LIST, data).then(_this._handleMapOpResult).then(function (code) {
            if (code !== _ApiCode.default.SUCCESS) {
              return _this._loadMapData(1).then(function (content) {
                var _ref5 = content || {},
                    code = _ref5.code,
                    data = _ref5.data;

                var list;

                if (code === _ApiCode.default.SUCCESS && data) {
                  list = _MapUtils.default.parseMapList(data);
                }

                if (list) {
                  if (list.findIndex(function (m) {
                    return m.mapid === mapid;
                  }) < 0) {
                    _UIUtils.default.info(_localString.default.ctl_success);

                    return true;
                  }
                }

                if (code === _ApiCode.default.TIME_OUT || code === _ApiCode.default.WAIT_TIME_OUT) {
                  _UIUtils.default.info(_localString.default.time_out);
                } else {
                  _UIUtils.default.info(_localString.default.ctrl_fail);
                }

                return false;
              });
            } else {
              return code === _ApiCode.default.SUCCESS;
            }
          }).then(function (success) {
            _this.isDeleteMap = false;

            _this.setState({
              showLoading: false
            }, function () {
              if (success) {
                _reactNative.DeviceEventEmitter.emit('deleteMap', mapid);

                var navigation = _this.props.navigation;
                navigation.goBack();
              }
            });
          });
        }
      };

      _this._isWorking = function (hint) {
        var status = _this.props.robotStore.status;
        var s = +status;

        if (s === _StatusConsts.default.BACK_CHARGE) {
          _this.setState({
            showDialog: true,
            message: _localString.default.set_will_stop_back_charge,
            currentHint: hint
          });

          return true;
        } else if (s === _StatusConsts.default.SWEEP) {
          _this.setState({
            showDialog: true,
            message: _localString.default.set_will_stop_work,
            currentHint: hint
          });

          return true;
        }

        return false;
      };

      _this._setMap = function () {
        if (!_this._isWorking('setMap')) {
          _this.setState({
            showLoading: true,
            msg: _localString.default.loading
          });

          _this._doSetMap();
        }
      };

      _this._doSetMap = function () {
        var bkmapName = _this.data.bkmap_obj_name;

        if (_this.isSetMap) {
          return;
        }

        _this.isSetMap = true;

        _miot.Host.file.getFDSFileInfoWithObjName(bkmapName).then(function (res) {
          var url = res.url;

          if (url) {
            var value = Base64.encode(url);

            _this.setState({
              showLoading: true,
              msg: _localString.default.ctrling
            });

            var param = {
              Url: value,
              Type: MapOpConst.MAPLIST_SET
            };

            _AsyncMapApi.default.specA(ACTION.SET_CURRENT_MAP, param, false, 30000).then(_this._handleMapOpResult).then(function (code) {
              if (code !== _ApiCode.default.SUCCESS) {
                return _this._loadSetMapData(0).then(function (content) {
                  var code = content.code,
                      data = content.data;

                  if (code === _ApiCode.default.SUCCESS && data) {
                    if (!_this.currentMapData) {
                      _this.currentMapData = new _MapData.default();
                    }

                    if (_this.currentMapData.parseMap(data)) {
                      var mapId = _this.currentMapData.mapConfig.mapId;

                      var _ref6 = _this.data || {},
                          mapid = _ref6.mapid;

                      if (mapId === mapid) {
                        _UIUtils.default.info(_localString.default.ctl_success);

                        return true;
                      }
                    }
                  }

                  if (code === _ApiCode.default.WAIT_TIME_OUT || code === _ApiCode.default.TIME_OUT) {
                    _UIUtils.default.info(_localString.default.time_out);
                  } else {
                    _UIUtils.default.info(_localString.default.ctrl_fail);
                  }

                  return false;
                });
              }

              return code === _ApiCode.default.SUCCESS;
            }).then(function (success) {
              if (success) {
                _this.isCurrent = true;
                var mapid = _this.data.mapid;

                _MapStore.default.updateCurrent(mapid);

                var navigation = _this.props.navigation;
                navigation.setParams({
                  isCurrent: true
                });
              }

              _this.isSetMap = false;

              _this.setState({
                showLoading: false
              });
            });
          } else {
            _this.isSetMap = false;

            _this.setState({
              showLoading: false
            });
          }
        }).catch(function (err) {
          _this.isSetMap = false;

          _this.setState({
            showLoading: false
          });

          _logger.default.log("getfileurl fail, name: " + bkmapName + ", err: " + err);
        });
      };

      _this._renderSetMap = function (isCurrent) {
        var opacity = isCurrent ? 0.3 : 1;

        var view = _react.default.createElement(_reactNative.View, {
          style: [styles.setMap, {
            opacity: opacity
          }]
        }, _react.default.createElement(_reactNative.Text, {
          style: {
            color: '#FFFFFF',
            fontSize: 13
          }
        }, isCurrent ? _localString.default.already_set_current_map : _localString.default.set_map));

        if (isCurrent) {
          return view;
        } else {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            activeOpacity: 0.3,
            onPress: function onPress() {
              _this._setMap();
            }
          }, view);
        }
      };

      _this._handleHintConfirm = function (hint) {
        if (hint === 'setMap') {
          _this.setState({
            showLoading: true,
            msg: _localString.default.ctrling
          }, function () {
            _api.SpecApi.specA(ACTION.STOP_SWEEPING).then(function (success) {
              if (success) {
                _this._doSetMap();
              } else {
                _this.setState({
                  showLoading: false
                });

                _UIUtils.default.info(_localString.default.ctrl_fail);
              }
            });
          });
        } else if (hint === 'rename') {
          _api.SpecApi.specA(ACTION.STOP_SWEEPING).then(function (success) {
            if (success) {
              _this.setState({
                showNameDialog: true
              });
            } else {
              _UIUtils.default.info(_localString.default.ctrl_fail);
            }
          });
        } else if (hint === 'deleteMap') {
          _this._deleteMap();
        }
      };

      _this._onRename = function () {
        if (!_this.isCurrent || !_this._isWorking('rename')) {
          _this.setState({
            showNameDialog: true
          });
        }
      };

      _this._doRename = function (result) {
        var _ref7 = _this.data || {},
            mapid = _ref7.mapid;

        var name = result.textInputArray[0];

        if (name === '') {
          _this.setState({
            showNameDialog: false
          }, function () {
            _UIUtils.default.info(_localString.default.name_cannot_empty);
          });

          return;
        } else if (_ObjectUtils.default.hasSpecialCharacters(name)) {
          _this.setState({
            showNameDialog: false
          }, function () {
            _UIUtils.default.info(_localString.default.name_invalid);
          });

          return;
        }

        if (_this.isRename) {
          return;
        }

        _this.isRename = true;

        _this.setState({
          showNameDialog: false,
          showLoading: true,
          msg: _localString.default.ctrling
        });

        var value = {
          MapId: mapid,
          Name: name,
          Type: MapOpConst.MAPLIST_RENAME
        };

        _AsyncMapApi.default.specA(ACTION.CHANGE_MAP_NAME, value).then(_this._handleMapOpResult).then(function (code) {
          if (code !== _ApiCode.default.SUCCESS) {
            return _this._loadMapData(1).then(function (content) {
              var code = content.code,
                  data = content.data;
              var list;

              if (code === _ApiCode.default.SUCCESS && data) {
                list = _MapUtils.default.parseMapList(data);
              }

              if (list) {
                var mapInfo = list.find(function (m) {
                  return m.mapid === mapid;
                });

                if (mapInfo && mapInfo.map_name === name) {
                  _UIUtils.default.info(_localString.default.ctl_success);

                  return true;
                }
              }

              if (code === _ApiCode.default.WAIT_TIME_OUT || _ApiCode.default.TIME_OUT === code) {
                _UIUtils.default.info(_localString.default.time_out);
              } else {
                _UIUtils.default.info(_localString.default.ctrl_fail);
              }

              return false;
            });
          } else {
            return _ApiCode.default.SUCCESS === code;
          }
        }).then(function (success) {
          if (success) {
            _this.props.navigation.setParams({
              mapName: value.Name
            });

            _reactNative.DeviceEventEmitter.emit('rename', _this.data.mapid, value.Name);
          }

          _this.isRename = false;

          _this.setState({
            showLoading: false
          });
        });
      };

      _this.data = props.navigation.getParam('data');
      _this.isCurrent = props.navigation.getParam('isCurrent') || false;
      _this.isDeleteMap = false;
      _this.isRename = false;
      _this.isSetMap = false;

      var _assertThisInitialize3 = (0, _assertThisInitialized2.default)(_this),
          state = _assertThisInitialize3.state;

      _this.state = (0, _objectSpread2.default)({}, state, {
        showNameDialog: false,
        showLoading: false,
        msg: _localString.default.loading
      });
      _this.forbidArray = [];
      _this.currentMapData = null;
      return _this;
    }

    (0, _createClass2.default)(MapDetail, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(MapDetail.prototype), "componentDidMount", this).call(this);
        var navigation = this.props.navigation;
        navigation.setParams({
          deleteMap: this._showDeleteMsg,
          doExit: this.doExit
        });

        _logger.default.info('map detail ====== cdm ====== showLoading: true');

        this.setState({
          showLoading: true,
          msg: _localString.default.loading
        }, this._retryLoadMap);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(MapDetail.prototype), "componentWillUnmount", this).call(this);

        _logger.default.info(' map detail ====== cwu ====== ');

        if (this.currentMapData !== null) {
          this.currentMapData.reset();
        }

        this.setState = function () {
          return;
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var isCurrent = this.isCurrent;
        var navigation = this.props.navigation;

        var setMapBtn = this._renderSetMap(isCurrent);

        var _this$state = this.state,
            _this$state$exit = _this$state.exit,
            exit = _this$state$exit === undefined ? false : _this$state$exit,
            ratio = _this$state.ratio,
            _this$state$showLoadi = _this$state.showLoading,
            showLoading = _this$state$showLoadi === undefined ? false : _this$state$showLoadi,
            noMap = _this$state.noMap,
            _this$state$showDialo = _this$state.showDialog,
            showDialog = _this$state$showDialo === undefined ? false : _this$state$showDialo,
            _this$state$message = _this$state.message,
            message = _this$state$message === undefined ? '' : _this$state$message,
            _this$state$currentHi = _this$state.currentHint,
            currentHint = _this$state$currentHi === undefined ? '' : _this$state$currentHi,
            msg = _this$state.msg;

        if (exit) {
          return null;
        }

        var _this$dockPos = this.dockPos,
            x = _this$dockPos.x,
            y = _this$dockPos.y,
            angle = _this$dockPos.angle;
        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_reactNative.ImageBackground, {
          style: {
            height: '100%',
            width: '100%'
          },
          source: _$$_REQUIRE(_dependencyMap[38])
        }, _react.default.createElement(_reactNative.View, {
          style: {
            height: '100%',
            width: '100%'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flex: 2
          }
        }, _react.default.createElement(_MapContainer.default, {
          exit: exit,
          ratio: ratio,
          noMap: noMap,
          mapImage: this.mapImage,
          areaCenter: this.areaCenter,
          mapData: this.mapData,
          clickable: false
        }, _react.default.createElement(_react.Fragment, null, this._renderZones(), _react.default.createElement(_Dock.default, {
          x: x,
          y: y,
          angle: angle,
          noMap: noMap
        })))), _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            alignItems: 'center'
          }
        }, _react.default.createElement(_reactNativeUiKitten.RkButton, {
          rkType: "normal",
          style: {
            marginBottom: 10
          },
          onPress: this._onRename
        }, _localString.default.reset_name)), setMapBtn, _react.default.createElement(_Dialog.InputDialog, {
          visible: this.state.showNameDialog,
          title: _localString.default.reset_name,
          onDismiss: function onDismiss() {
            _this2.setState({
              showNameDialog: false
            });
          },
          inputs: [{
            defaultValue: navigation.state.params.mapName,
            textInputProps: {
              maxLength: 12
            }
          }],
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: '#626364'
            },
            callback: function callback(_) {
              return _this2.setState({
                showNameDialog: false
              });
            }
          }, {
            style: {
              color: Colors.mainColor
            },
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            callback: this._doRename
          }]
        }), _react.default.createElement(_Dialog.MessageDialog, {
          title: _localString.default.hint,
          message: message,
          visible: showDialog,
          cancelable: true,
          messageStyle: {
            alignSelf: 'center',
            textAlign: 'center',
            fontFamily: 'System'
          },
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: Colors.secondColor
            },
            callback: function callback() {
              _this2.setState({
                showDialog: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: Colors.mainColor
            },
            backgroundColor: {
              bgColorNormal: Colors.mainColor,
              bgColorPressed: Colors.mainDarkColor
            },
            callback: function callback() {
              _this2.setState({
                showDialog: false
              });

              _this2._handleHintConfirm(currentHint);
            }
          }],
          onDismiss: function onDismiss() {
            _this2.setState({
              showDialog: false
            });
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          timeout: 35000,
          message: msg
        }))));
      }
    }]);
    return MapDetail;
  }(_BaseMap2.default), _class.navigationOptions = function (_ref8) {
    var navigation = _ref8.navigation;
    return {
      header: _react.default.createElement(_NavigationBar.default, {
        backgroundColor: "#5696FF",
        type: _NavigationBar.default.TYPE.DARK,
        left: [{
          key: _NavigationBar.default.ICON.BACK,
          onPress: function onPress() {
            navigation.state.params.doExit();
          }
        }],
        right: [{
          key: navigation.state.params.isCurrent ? null : _NavigationBar.default.ICON.DELETE,
          onPress: function onPress() {
            navigation.state.params.deleteMap();
          }
        }],
        title: navigation.state.params.mapName ? navigation.state.params.mapName : _localString.default.map
      })
    };
  }, _temp)));

  var styles = _reactNative.StyleSheet.create({
    body: {},
    container: {
      flex: 1
    },
    setName: {
      flexDirection: 'row',
      backgroundColor: '#F5F5F5',
      height: 42,
      borderRadius: 21,
      justifyContent: 'center',
      alignItems: 'center',
      marginLeft: 24,
      marginRight: 24,
      marginBottom: 10
    },
    setMap: {
      flexDirection: 'row',
      backgroundColor: _Consts.default.Colors.mainColor,
      height: 42,
      borderRadius: 21,
      justifyContent: 'center',
      alignItems: 'center',
      marginLeft: 24,
      marginRight: 24,
      marginBottom: 24
    }
  });

  var _default = MapDetail;
  exports.default = _default;
},12068,[14305,14308,14314,14320,14323,14371,14374,14377,14380,14386,10074,10033,10297,10719,10100,10016,10409,10091,10064,10755,11618,11627,10004,10061,11555,10332,11816,10106,10103,11672,11990,11987,11678,11251,11669,11684,11852,11615,11798]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _ListItem = _$$_REQUIRE(_dependencyMap[9]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _SpecApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _miot = _$$_REQUIRE(_dependencyMap[17]);

  var _tr = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[19]);

  var _LdStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _AsyncMapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var PROP = _Consts.default.PROP,
      ACTION = _Consts.default.ACTION,
      Colors = _Consts.default.Colors,
      StatusConsts = _Consts.default.StatusConsts;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var SYNC_MES = [PROP.VOLUME, PROP.CURRENT_VOICE];
  var PUSH_MES = [].concat(SYNC_MES, [PROP.VOICE_UPDATE_PROGRESS]);

  var SettingVoice = function (_React$Component) {
    (0, _inherits2.default)(SettingVoice, _React$Component);

    function SettingVoice(props) {
      var _this;

      (0, _classCallCheck2.default)(this, SettingVoice);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SettingVoice).call(this, props));

      _this.handlePushMessage = function (msg) {
        if (msg) {
          var voiceUpdateProgress = msg.prop.voiceUpdateProgress;

          if (voiceUpdateProgress) {
            var vProgress = JSON.parse(voiceUpdateProgress);

            if (vProgress.state == 'fail') {
              _UIUtils.default.info(_localString.default.operator_fail);

              _this.setState({
                voiceProgress: 0,
                downingVisiable: false,
                downIndex: -1
              });
            } else if (vProgress.state == 'downloaded') {
              _this.setState({
                currentVoice: vProgress.fileName,
                voiceProgress: 1,
                downIndex: -1
              });

              setTimeout(function () {
                _this.setState({
                  downingVisiable: false
                });
              }, 200);
            } else if (vProgress.state == 'downloading') {
              _this.setState({
                voiceProgress: vProgress.process * 0.01
              });
            }
          } else {
            _this.setState((0, _objectSpread2.default)({}, msg.prop));
          }
        }
      };

      props.navigation.setParams({
        titleProps: {
          title: _localString.default.voiceAndVolume
        }
      });
      _this.voiceProgressTask = null;
      _this.state = {
        volume: 10,
        loading: false,
        downIndex: -1,
        downingVisiable: false
      };
      return _this;
    }

    (0, _createClass2.default)(SettingVoice, [{
      key: "downloadVoiceList",
      value: function downloadVoiceList() {
        var _this2 = this;

        this.setState({
          loading: true
        });
        var voiceUrl = 'http://mihome.info/voice_config.json';

        _miot.Host.file.downloadFile(voiceUrl, 'voice_config.json').then(function (res) {
          _miot.Host.file.readFile(res['filename']).then(function (message) {
            var dict = JSON.parse(message);

            _this2.setState({
              voieceList: dict['voiceConfig'],
              loading: false
            });
          }).catch(function (error) {
            _this2.setState({
              loading: false
            });
          });
        }).catch(function (error) {
          _this2.setState({
            loading: false
          });
        });
      }
    }, {
      key: "setUpVoiceUI",
      value: function setUpVoiceUI() {
        return _react.default.createElement(_reactNative.FlatList, {
          style: styles.voiceBox,
          data: this.state.voieceList,
          renderItem: this._renderId.bind(this),
          refreshing: this.state.loading,
          onRefresh: this.downloadVoiceList.bind(this),
          keyExtractor: function keyExtractor(item, index) {
            return index;
          },
          showsVerticalScrollIndicator: false
        });
      }
    }, {
      key: "_renderId",
      value: function _renderId(_ref) {
        var _this3 = this;

        var item = _ref.item,
            index = _ref.index;
        var currentIndex = this.state.downIndex == index || this.state.downIndex == -1 ? true : false;
        var currentVoiceName = this.state.currentVoice == item['sub'];
        return _react.default.createElement(_reactNative.View, {
          style: styles.voiceLi
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.voiceLiTitle
        }, item['name']), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.voiceLiBtn, currentVoiceName ? null : currentIndex ? null : {
            opacity: 0.4
          }],
          onPress: function onPress() {
            _this3.updateVoice(item['sub'], item['fileName'], index);
          },
          disabled: this.state.downingVisiable || currentVoiceName
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.voiceLiBtnText
        }, currentVoiceName ? _localString.default.voice_Using : this.state.downIndex == index ? _localString.default.voice_Downing : _localString.default.voice_Start_Down)));
      }
    }, {
      key: "updateVoice",
      value: function updateVoice(name, url, index) {
        var _this4 = this;

        this.setState({
          downingVisiable: true,
          downIndex: index,
          voiceProgress: 0
        });
        var value = Base64.encode(url);
        var params = {
          Url: value,
          Type: 21,
          Name: name
        };

        _AsyncMapApi.default.specA(ACTION.UPDATE_NEW_VOICE, params, false, 1).then(function (res) {
          if (res == 36) {
            _this4.setState({
              downingVisiable: false,
              downIndex: -1,
              voiceProgress: 0
            });

            _UIUtils.default.info(_localString.default.time_out);
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this5 = this;

        this.downloadVoiceList();

        _SpecApi.default.syncProps(SYNC_MES).then(function (msg) {
          _this5.setState((0, _objectSpread2.default)({}, msg, {
            downingVisiable: false,
            downIndex: -1
          }));
        });

        _PushManager.default.addObserver('SettingVoice', this.handlePushMessage, {
          props: PUSH_MES
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _PushManager.default.removeObserver('SettingVoice');
      }
    }, {
      key: "showResult",
      value: function showResult(success) {
        if (success) {
          _UIUtils.default.info(_localString.default.operator_success);
        } else {
          _UIUtils.default.info(_localString.default.operator_fail);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;

        var _this$state$volume = this.state.volume,
            volume = _this$state$volume === undefined ? 50 : _this$state$volume;
        return _react.default.createElement(_HdContainView.default, {
          style: {
            backgroundColor: 'white'
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.volume
        }, _react.default.createElement(_ListItem.ListItemWithSlider, {
          title: _localString.default.voice_Setting,
          showSeparator: true,
          useNewType: false,
          titleStyle: {
            fontFamily: 'System',
            fontWeight: 'normal'
          },
          containerStyle: {
            width: screenWidth
          },
          showWithPercent: false,
          valueStyle: {
            color: Colors.mainColor
          },
          sliderStyle: {
            minimumTrackTintColor: Colors.mainColor,
            thumbTintColor: Colors.mainColor
          },
          onSlidingComplete: function onSlidingComplete(value) {
            var v = _this6.state.volume;

            _SpecApi.default.specS(PROP.VOLUME, value).then(function (success) {
              if (success) {
                _this6.setState({
                  volume: value
                });
              } else {
                _this6.showResult(false);

                _this6.setState({
                  volume: v
                });
              }
            });
          },
          sliderProps: {
            minimumValue: 10,
            maximumValue: 100,
            step: 1,
            value: volume || 10
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.voiceTitle
        }, _localString.default.voice_Language_Setting)), this.setUpVoiceUI(), _react.default.createElement(_Dialog.ProgressDialog, {
          autoDismiss: true,
          max: 100,
          visible: this.state.downingVisiable,
          message: _localString.default.voice_Downing,
          color: _LdStyles.default.mainColor,
          textColor: _LdStyles.default.mainColor,
          progress: this.state.voiceProgress
        }));
      }
    }]);
    return SettingVoice;
  }(_react.default.Component);

  exports.default = SettingVoice;
  SettingVoice.navigationOptions = _HdNavigationBar.default;

  var styles = _reactNative.StyleSheet.create({
    voiceBox: {
      paddingHorizontal: 20,
      flex: 1
    },
    voiceLi: {
      paddingHorizontal: 10,
      paddingVertical: 20,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      borderBottomColor: '#eee',
      borderBottomWidth: 1
    },
    voiceLiTitle: {
      color: '#939AA9',
      fontSize: 16,
      flex: 1,
      textAlign: 'left'
    },
    voiceLiBtn: {
      paddingHorizontal: 20,
      paddingVertical: 5,
      borderRadius: 18,
      backgroundColor: '#5C92FF'
    },
    voiceLiBtnText: {
      color: '#fff',
      fontSize: 14
    },
    voiceTitle: {
      backgroundColor: '#eee',
      color: '#777',
      paddingHorizontal: 20,
      paddingVertical: 10,
      fontSize: 12
    },
    volumeLi: {
      flexDirection: 'row',
      paddingHorizontal: 20
    },
    volumeLiText: {
      color: '#03211C',
      fontSize: 16,
      flex: 1
    }
  });
},12071,[14305,14314,14320,14323,14371,14377,14386,10297,10033,10338,10016,11936,11852,10064,10097,10409,11711,10074,10968,10755,10088,11816]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[19]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _BaseMap2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _MapContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _AsyncMapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _api = _$$_REQUIRE(_dependencyMap[30]);

  var screenWidth = _reactNative.Dimensions.get('window').width;

  var screenHeight = _reactNative.Dimensions.get('window').height;

  var selectIcon = _$$_REQUIRE(_dependencyMap[31]);

  var PROP = _Consts.default.PROP,
      ACTION = _Consts.default.ACTION,
      MapOpConst = _Consts.default.MapOpConst;
  var ERR_MSG = {
    '-112': _localString.default.too_small_to_split,
    '-114': _localString.default.err_not_enough_two_room
  };

  var CustomMade = function (_BaseMap) {
    (0, _inherits2.default)(CustomMade, _BaseMap);

    function CustomMade(props) {
      var _this;

      (0, _classCallCheck2.default)(this, CustomMade);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CustomMade).call(this, props));

      _this.handlePushMessage = function (msg) {
        if (msg.prop.mop || msg.prop.mop == false) {
          _this.setState({
            isMop: msg.prop.mop
          });
        }
      };

      _this._retryLoadMap = function () {
        if (_this.loading) {
          return _FunUtils.default.wait(2000);
        }

        _this.loading = true;
        return _FunUtils.default.retry(_this.loadMap, 3).then(function () {
          _this.loading = false;

          _this.setState({
            showLoading: false
          });
        }).catch(function (err) {
          _this.loading = false;

          _this.setState({
            showLoading: false
          });
        });
      };

      _this.afterHandleMap = function (res) {
        var _this$mapData = _this.mapData,
            _this$mapData$originD = _this$mapData.originData,
            originData = _this$mapData$originD === undefined ? [] : _this$mapData$originD,
            dataChanged = _this$mapData.dataChanged;

        if (dataChanged) {
          var fillData = originData.map(function (v) {
            if (v === 255 || v === 127) {
              return v;
            } else {
              return 0x3F & v;
            }
          });
          res.fillData = fillData;
        }

        _this.setState((0, _objectSpread2.default)({}, res));
      };

      _this._cancelSelect = function () {
        _this.setState({
          selectAreaArray: [],
          lineX1: 0,
          lineY1: 0,
          lineX2: 0,
          lineY2: 0,
          isSplit: false
        });
      };

      _this._handlePushMessage = function (msg) {
        var _ref = msg || {},
            _ref$event = _ref.event;

        _ref$event = _ref$event === undefined ? {} : _ref$event;
        var mapUpdate = _ref$event.mapUpdate;

        var _ref2 = mapUpdate || {},
            value = _ref2.value;

        _this._cancelSelect();

        if (+value === 0) {
          _FunUtils.default.wait(1000).then(_this._retryLoadMap);
        }
      };

      _this._handleMapOpResult = function (code) {
        var c = +code;

        if (c === _ApiCode.default.ONING) {
          return c;
        }

        _this._cancelSelect();

        return _FunUtils.default.wait(2000).then(_this._retryLoadMap).then(function () {
          if (c === _ApiCode.default.SUCCESS) {} else if (c === _ApiCode.default.TIME_OUT || c === _ApiCode.default.WAIT_TIME_OUT) {} else {
            var msg = ERR_MSG[c] || _localString.default.ctrl_fail;

            _UIUtils.default.info(msg);
          }

          return c;
        });
      };

      _this._loadMiRoom = function () {
        var forceRelaod = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        _miot.Service.room.loadAllRoom(forceRelaod).then(function (res) {
          var roomNames = res.map(function (room) {
            var roomID = room.roomID,
                name = room.name;
            return {
              title: name,
              id: roomID
            };
          });
          roomNames.push({
            title: _localString.default.custom_name,
            id: -1
          });

          _this.setState({
            miRooms: res,
            options: roomNames,
            miRoomsLoaded: true
          });
        }).catch(function (err) {
          return _logger.default.info(err);
        });
      };

      _this._mergeMap = function () {
        var _this$mapData$mapConf = _this.mapData.mapConfig,
            autoAreaId = _this$mapData$mapConf.autoAreaId,
            mapId = _this$mapData$mapConf.mapId,
            _this$mapData$mapConf2 = _this$mapData$mapConf.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf2 === undefined ? [] : _this$mapData$mapConf2;
        var _this$state$selectAre = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre === undefined ? [] : _this$state$selectAre;
        var s = selectAreaArray[0];
        var b = selectAreaArray[1];

        if (s < b) {
          s = b;
          b = selectAreaArray[0];
        }

        var areaCount = autoAreaValue.length;
        var data = {
          AutoAreaId: autoAreaId,
          Extra: {
            pixel1: s,
            pixel2: b
          },
          MapId: mapId,
          Operate: 'merge',
          Type: MapOpConst.AREA_MERGE
        };

        _logger.default.info('merge area, show loading');

        _this.setState({
          showLoading: true
        }, function () {
          _AsyncMapApi.default.specA(ACTION.SET_AUTO_AREA, data).then(_this._handleMapOpResult).then(function (code) {
            if (code === _ApiCode.default.TIME_OUT || code === _ApiCode.default.WAIT_TIME_OUT) {
              var _this$mapData$mapConf3 = _this.mapData.mapConfig.autoAreaValue,
                  _autoAreaValue = _this$mapData$mapConf3 === undefined ? [] : _this$mapData$mapConf3;

              if (_autoAreaValue.length !== areaCount - 1) {
                _UIUtils.default.info(_localString.default.time_out);
              }
            }
          });
        });
      };

      _this._splitMap = function () {
        if (_this.s1 == null) {
          return;
        }

        var mapConfig = _this.mapData.mapConfig;
        var resolution = mapConfig.resolution,
            xMin = mapConfig.xMin,
            yMin = mapConfig.yMin,
            autoAreaId = mapConfig.autoAreaId,
            mapId = mapConfig.mapId,
            height = mapConfig.height,
            _mapConfig$autoAreaVa = mapConfig.autoAreaValue,
            autoAreaValue = _mapConfig$autoAreaVa === undefined ? [] : _mapConfig$autoAreaVa;

        if (autoAreaValue.length > 60) {
          return;
        }

        var _this$state = _this.state,
            selectAreaArray = _this$state.selectAreaArray,
            _this$state$ratio = _this$state.ratio,
            ratio = _this$state$ratio === undefined ? 1 : _this$state$ratio;

        var pos1 = _MapUtils.default.screenToDevice(_this.s1.x, _this.s1.y, height, xMin, yMin, resolution, ratio);

        var pos2 = _MapUtils.default.screenToDevice(_this.s2.x, _this.s2.y, height, xMin, yMin, resolution, ratio);

        var pixel = selectAreaArray[0];
        var areaCount = autoAreaValue.length;
        var data = {
          AutoAreaId: autoAreaId,
          Extra: {
            p1: [pos1.x, pos1.y],
            p2: [pos2.x, pos2.y],
            pixel: pixel
          },
          MapId: mapId,
          Operate: 'split',
          Type: MapOpConst.AREA_SPLIT
        };

        _logger.default.info('merge area, show loading');

        _this.setState({
          showLoading: true
        }, function () {
          _AsyncMapApi.default.specA(ACTION.SET_AUTO_AREA, data).then(_this._handleMapOpResult).then(function (code) {
            if (code === _ApiCode.default.TIME_OUT || code === _ApiCode.default.WAIT_TIME_OUT) {
              var _this$mapData$mapConf4 = _this.mapData.mapConfig.autoAreaValue,
                  _autoAreaValue2 = _this$mapData$mapConf4 === undefined ? [] : _this$mapData$mapConf4;

              if (_autoAreaValue2.length !== areaCount + 1) {
                _UIUtils.default.info(_localString.default.time_out);
              }
            }
          });
        });
      };

      _this._onSplit = function () {
        var _this$state$selectAre2 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre2 === undefined ? [] : _this$state$selectAre2;
        var _this$mapData$mapConf5 = _this.mapData.mapConfig;
        _this$mapData$mapConf5 = _this$mapData$mapConf5 === undefined ? {} : _this$mapData$mapConf5;
        var _this$mapData$mapConf6 = _this$mapData$mapConf5.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf6 === undefined ? [] : _this$mapData$mapConf6;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);
        } else if (selectAreaArray.length !== 1) {
          _UIUtils.default.info(_localString.default.err_not_enough_split);
        } else {
          _this.s1 = null;
          _this.s2 = null;

          _this.setState({
            isSplit: true
          });
        }
      };

      _this._onMerge = function () {
        var _this$state$selectAre3 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre3 === undefined ? [] : _this$state$selectAre3;
        var _this$mapData2 = _this.mapData,
            _this$mapData2$mapCon = _this$mapData2.mapConfig;
        _this$mapData2$mapCon = _this$mapData2$mapCon === undefined ? {} : _this$mapData2$mapCon;
        var _this$mapData2$mapCon2 = _this$mapData2$mapCon.autoAreaValue,
            autoAreaValue = _this$mapData2$mapCon2 === undefined ? [] : _this$mapData2$mapCon2,
            _this$mapData2$adjace = _this$mapData2.adjacencyMap,
            adjacencyMap = _this$mapData2$adjace === undefined ? {} : _this$mapData2$adjace;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);
        } else if (selectAreaArray.length !== 2) {
          _UIUtils.default.info(_localString.default.err_not_enough_two_room);
        } else {
          var arr = adjacencyMap[selectAreaArray[0]] || [];

          if (arr.indexOf(selectAreaArray[1]) >= 0 || arr.indexOf("" + selectAreaArray[1]) >= 0) {
            _this._mergeMap();
          } else {
            _UIUtils.default.info(_localString.default.err_not_enough_two_room);
          }
        }
      };

      _this._onRename = function () {
        var _this$state$selectAre4 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre4 === undefined ? [] : _this$state$selectAre4;
        var _this$mapData$mapConf7 = _this.mapData.mapConfig;
        _this$mapData$mapConf7 = _this$mapData$mapConf7 === undefined ? {} : _this$mapData$mapConf7;
        var _this$mapData$mapConf8 = _this$mapData$mapConf7.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf8 === undefined ? [] : _this$mapData$mapConf8;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);

          return;
        }

        if (selectAreaArray.length !== 1) {
          _UIUtils.default.info(_localString.default.err_not_enough_rename);

          return;
        }

        var miRoomsLoaded = _this.state.miRoomsLoaded;

        if (!miRoomsLoaded) {
          _this._loadMiRoom();

          _this.setState({
            showInput: true
          });

          return;
        }

        _this.setState({
          showRoom: true
        });
      };

      _this._onSelect = function (selectIndex) {
        var _this$state$options = _this.state.options,
            options = _this$state$options === undefined ? [] : _this$state$options;
        var id = options[selectIndex].id;

        if (+id === -1) {
          _this.roomName = '';

          _this.setState({
            showInput: true
          });
        } else {
          _this.setState({
            showLoading: true
          });

          _this._doRename({
            id: id,
            name: options[selectIndex].title
          });
        }
      };

      _this.doExit = function () {
        _logger.default.info('do exit, dismiss loading');

        _this.setState({
          exit: true,
          showLoading: false
        }, function () {
          _reactNative.DeviceEventEmitter.emit('refreshData', null);

          _this.props.navigation.pop();
        });
      };

      _this._onSelectAreaChanged = function (areaArray) {
        var _this$mapData$mapConf9 = _this.mapData.mapConfig;
        _this$mapData$mapConf9 = _this$mapData$mapConf9 === undefined ? {} : _this$mapData$mapConf9;
        var _this$mapData$mapConf10 = _this$mapData$mapConf9.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf10 === undefined ? [] : _this$mapData$mapConf10;

        _this.setState({
          selectAreaArray: []
        }, function () {
          areaArray.splice(1, areaArray.length - 1);

          if (autoAreaValue.length <= 0) {
            _UIUtils.default.info(_localString.default.no_area);

            return;
          }

          var autoAreaIndex = autoAreaValue.findIndex(function (item) {
            return item.id == areaArray[0];
          });

          if (autoAreaValue[autoAreaIndex]) {
            _this.customSuction(autoAreaValue[autoAreaIndex].fanLevel != undefined ? autoAreaValue[autoAreaIndex].fanLevel - 1 : 1);

            _this.customWater(autoAreaValue[autoAreaIndex].waterPump != undefined ? autoAreaValue[autoAreaIndex].waterPump - 1 : 1);

            _this.setState({
              selectAreaArray: areaArray,
              custonMadvisible: true,
              mapName: autoAreaValue[autoAreaIndex].name,
              isCleanUp: autoAreaValue[autoAreaIndex].CleanCount == 2 ? true : false
            });
          }
        });
      };

      _this._handleStart = function (event, gesture) {
        var _event$nativeEvent = event.nativeEvent,
            locationX = _event$nativeEvent.locationX,
            locationY = _event$nativeEvent.locationY,
            pageX = _event$nativeEvent.pageX,
            pageY = _event$nativeEvent.pageY,
            target = _event$nativeEvent.target;
        var x0 = gesture.x0,
            y0 = gesture.y0;
        var isSplit = _this.state.isSplit;

        if (isSplit) {
          _this.setState({
            lineX1: locationX,
            lineY1: locationY,
            lineX2: locationX,
            lineY2: locationY
          });
        }
      };

      _this._handleChange = function (event) {
        var isSplit = _this.state.isSplit;

        if (isSplit) {
          var _event$nativeEvent2 = event.nativeEvent,
              locationX = _event$nativeEvent2.locationX,
              locationY = _event$nativeEvent2.locationY;

          _this.setState({
            lineX2: locationX,
            lineY2: locationY
          });
        }
      };

      _this._handleEnd = function (event) {
        var _this$state2 = _this.state,
            isSplit = _this$state2.isSplit,
            lineX1 = _this$state2.lineX1,
            lineY1 = _this$state2.lineY1;
        var _event$nativeEvent3 = event.nativeEvent,
            locationX = _event$nativeEvent3.locationX,
            locationY = _event$nativeEvent3.locationY,
            target = _event$nativeEvent3.target;

        if (isSplit) {
          if ((locationX - lineX1) * (locationX - lineX1) + (locationY - lineY1) * (locationY - lineY1) < 25) {
            _this.setState({
              lineX1: 0,
              lineY1: 0,
              lineX2: 0,
              lineY2: 0
            });

            return;
          }

          _this.setState({
            lineX2: locationX,
            lineY2: locationY
          });

          var points = _this.calEndPoints(lineX1, lineY1, locationX, locationY);

          if (points != null && points.length > 1) {
            _this.setState({
              lineX1: points[0].x,
              lineY1: points[0].y,
              lineX2: points[1].x,
              lineY2: points[1].y
            });
          } else {
            _UIUtils.default.info(_localString.default.line_need_close_to_wall);

            _this.setState({
              lineX1: 0,
              lineY1: 0,
              lineX2: 0,
              lineY2: 0
            });
          }
        }
      };

      props.navigation.setParams({
        titleProps: {
          title: _localString.default.custom_mode,
          right: [{
            key: _NavigationBar.default.ICON.COMPLETE,
            onPress: function onPress() {
              _this.addMapArea();
            }
          }]
        }
      });
      _this.roomName = '';

      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
          state = _assertThisInitialize.state;

      _this.state = (0, _objectSpread2.default)({}, state, {
        showRoom: false,
        showInput: false,
        isSplit: false,
        isMerge: false,
        dialogVisiable: false,
        left: 0,
        top: 0,
        scale: 1.0,
        lineX1: 0,
        lineY1: 0,
        lineX2: 0,
        lineY2: 0,
        miRooms: [],
        selectRoomNameIndex: -1,
        msg: '',
        miRoomsLoaded: false,
        fillData: null,
        options: [{
          title: _localString.default.custom_name,
          id: -1
        }],
        showLoading: false,
        custonMadvisible: false,
        suctionLi: [{
          img: _$$_REQUIRE(_dependencyMap[32])
        }, {
          img: _$$_REQUIRE(_dependencyMap[33])
        }, {
          img: _$$_REQUIRE(_dependencyMap[34])
        }, {
          img: _$$_REQUIRE(_dependencyMap[35])
        }],
        waterVolume: [{
          img: _$$_REQUIRE(_dependencyMap[36])
        }, {
          img: _$$_REQUIRE(_dependencyMap[37])
        }, {
          img: _$$_REQUIRE(_dependencyMap[38])
        }],
        suctionIcon: null,
        suctionIndex: null,
        waterIcon: null,
        waterIndex: null,
        isCleanUp: false,
        mapName: null,
        fanLevelTxt: '',
        waterLevelTxt: '',
        isMessageDialog: false,
        isDataTye: null,
        isMessageDialogTxt: null,
        isMop: false,
        customParams: null
      });

      _logger.default.info('zone edit constructor');

      return _this;
    }

    (0, _createClass2.default)(CustomMade, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _api.SpecApi.syncProps([PROP.MOP]).then(function (msg) {
          _this2.setState({
            isMop: msg.mop
          });
        });

        _PushManager.default.addObserver('CustomMadeOberver', this.handlePushMessage, {
          props: [PROP.MOP]
        });

        (0, _get2.default)((0, _getPrototypeOf2.default)(CustomMade.prototype), "componentDidMount", this).call(this);

        _logger.default.info('zone edit, componentDidMount, loading');

        this.setState({
          showLoading: true
        });

        this._retryLoadMap();

        this._loadMiRoom(true);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(CustomMade.prototype), "componentWillUnmount", this).call(this);

        _PushManager.default.removeObserver('CustomMadeOberver');

        _logger.default.info('ZoneEdit, componentWillUnmount, dismiss loading');

        this.setState({
          showLoading: false
        });

        this.setState = function () {
          return;
        };
      }
    }, {
      key: "calEndPoints",
      value: function calEndPoints(x1, y1, x2, y2) {
        var _this$mapData3 = this.mapData,
            _this$mapData3$mapCon = _this$mapData3.mapConfig,
            width = _this$mapData3$mapCon.width,
            height = _this$mapData3$mapCon.height,
            data = _this$mapData3.data,
            _this$mapData3$hasFil = _this$mapData3.hasFillValue,
            hasFillValue = _this$mapData3$hasFil === undefined ? false : _this$mapData3$hasFil;
        var _this$state3 = this.state,
            _this$state3$selectAr = _this$state3.selectAreaArray,
            selectAreaArray = _this$state3$selectAr === undefined ? [] : _this$state3$selectAr,
            _this$state3$ratio = _this$state3.ratio,
            ratio = _this$state3$ratio === undefined ? 1 : _this$state3$ratio;
        var roomId = selectAreaArray[0] || 1;

        var p1 = _utils.default.screenToMapPoint(x1, y1, width, height, {
          scale: ratio
        });

        var p2 = _utils.default.screenToMapPoint(x2, y2, width, height, {
          scale: ratio
        });

        if (p1 == null || p2 == null) {
          return null;
        }

        var points = null;
        var _this$state$fillData = this.state.fillData,
            fillData = _this$state$fillData === undefined ? data : _this$state$fillData;

        if (hasFillValue) {
          points = _utils.default.calEndPointsEx(fillData, roomId, p1, p2, width, height);
        } else {
          points = _utils.default.calEndPoints(data, roomId, p1, p2, width, height);
        }

        if (points == null || points.length < 2) {
          return null;
        }

        var s1 = _utils.default.mapToScreenPoint(points[0].x, points[0].y, width, height, {
          scale: ratio
        });

        var s2 = _utils.default.mapToScreenPoint(points[1].x, points[1].y, width, height, {
          scale: ratio
        });

        this.s1 = s1;
        this.s2 = s2;
        return [s1, s2];
      }
    }, {
      key: "onDismiss",
      value: function onDismiss() {
        this.setState({
          custonMadvisible: false,
          isMessageDialog: false,
          visible: false,
          selectAreaArray: []
        });
      }
    }, {
      key: "customSuction",
      value: function customSuction(index) {
        var img = '',
            test = '';

        switch (index) {
          case 0:
            img = _$$_REQUIRE(_dependencyMap[39]);
            test = _localString.default.silent;
            break;

          case 1:
            img = _$$_REQUIRE(_dependencyMap[40]);
            test = _localString.default.standard;
            break;

          case 2:
            img = _$$_REQUIRE(_dependencyMap[41]);
            test = _localString.default.middle;
            break;

          case 3:
            img = _$$_REQUIRE(_dependencyMap[42]);
            test = _localString.default.strong;
            break;
        }

        this.setState({
          suctionIcon: img,
          suctionIndex: index,
          fanLevelTxt: test
        });
      }
    }, {
      key: "customWater",
      value: function customWater(index) {
        var img = '',
            Test = '';

        switch (index) {
          case 0:
            img = _$$_REQUIRE(_dependencyMap[43]);
            Test = _localString.default.small;
            break;

          case 1:
            img = _$$_REQUIRE(_dependencyMap[44]);
            Test = _localString.default.in;
            break;

          case 2:
            img = _$$_REQUIRE(_dependencyMap[45]);
            Test = _localString.default.big;
            break;
        }

        this.setState({
          waterIcon: img,
          waterIndex: index,
          waterLevelTxt: Test
        });
      }
    }, {
      key: "setUpBtn",
      value: function setUpBtn() {
        var _this$mapData$mapConf11 = this.mapData.mapConfig,
            mapId = _this$mapData$mapConf11.mapId,
            _this$mapData$mapConf12 = _this$mapData$mapConf11.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf12 === undefined ? [] : _this$mapData$mapConf12;
        var isPush = false;
        var pushIndex = '';

        for (var i = 0; i < autoAreaValue.length; i++) {
          if (autoAreaValue[i].id == this.state.selectAreaArray[0]) {
            pushIndex = i;
            isPush = true;
          }
        }

        if (isPush) {
          autoAreaValue[pushIndex].fanLevel = this.state.suctionIndex + 1;
          autoAreaValue[pushIndex].waterPump = this.state.waterIndex + 1;
          autoAreaValue[pushIndex].CleanCount = !this.state.isCleanUp ? 1 : 2;
        } else {
          autoAreaValue.push({
            name: this.state.mapName,
            fanLevel: this.state.suctionIndex + 1,
            waterPump: this.state.waterIndex + 1,
            CleanCount: !this.state.isCleanUp ? 1 : 2
          });
        }

        this.mapData.mapConfig.autoAreaValue = autoAreaValue;
        this.setState({
          custonMadvisible: false,
          selectAreaArray: []
        });
      }
    }, {
      key: "addMapArea",
      value: function addMapArea() {
        var _this3 = this;

        var _this$mapData$mapConf13 = this.mapData.mapConfig,
            mapId = _this$mapData$mapConf13.mapId,
            _this$mapData$mapConf14 = _this$mapData$mapConf13.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf14 === undefined ? [] : _this$mapData$mapConf14;
        var autoAreaLi = [];

        for (var i = 0; i < autoAreaValue.length; i++) {
          if (autoAreaValue[i].fanLevel && autoAreaValue[i].CleanCount && autoAreaValue[i].waterPump) {
            autoAreaLi.push([autoAreaValue[i].id, autoAreaValue[i].fanLevel ? autoAreaValue[i].fanLevel : 1, autoAreaValue[i].waterPump ? autoAreaValue[i].waterPump : 1, autoAreaValue[i].CleanCount && autoAreaValue[i].CleanCount != 0 ? autoAreaValue[i].CleanCount : 1]);
          }
        }

        if (autoAreaLi.length == 0) {
          _UIUtils.default.info(_localString.default.customized_area);

          return false;
        }

        var params = {
          MapId: mapId,
          Cmd: 'set',
          Type: 13,
          AreaInfo: autoAreaLi
        };
        this.setState({
          customParams: params
        }, function () {
          if (autoAreaLi.length == autoAreaValue.length) {
            _this3.CUSTOM_MAP_MODEFun();
          } else {
            _this3.setState({
              isMessageDialog: true,
              isDataTye: 1,
              isMessageDialogTxt: _localString.default.no_set
            });
          }
        });
      }
    }, {
      key: "CUSTOM_MAP_MODEFun",
      value: function CUSTOM_MAP_MODEFun() {
        var _this4 = this;

        this.setState({
          showLoading: true
        }, function () {
          _AsyncMapApi.default.specA(ACTION.CUSTOM_MAP_MODE, _this4.state.customParams).then(function (res) {
            _api.SpecApi.specS(PROP.CUSTOM_SWITCH, true).then(function (success) {});

            _api.SpecApi.specSetNoFlatShake(PROP.SWEEP_TYPE, 2).then(function (success) {});

            _this4.setState({
              showLoading: false
            });

            if (res == 0) {
              _this4.props.navigation.goBack();
            }
          });
        });
      }
    }, {
      key: "cleanAllBtn",
      value: function cleanAllBtn() {
        var _this5 = this;

        var _this$mapData$mapConf15 = this.mapData.mapConfig,
            mapId = _this$mapData$mapConf15.mapId,
            _this$mapData$mapConf16 = _this$mapData$mapConf15.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf16 === undefined ? [] : _this$mapData$mapConf16;
        var params = {
          MapId: mapId,
          Cmd: 'clear',
          Type: 13,
          AreaInfo: []
        };
        this.setState({
          showLoading: true
        });

        _AsyncMapApi.default.specA(ACTION.CUSTOM_MAP_MODE, params).then(function (res) {
          _api.SpecApi.specS(PROP.CUSTOM_SWITCH, false).then(function (success) {});

          for (var i = 0; i < autoAreaValue.length; i++) {
            delete autoAreaValue[i].fanLevel;
            delete autoAreaValue[i].waterPump;
            delete autoAreaValue[i].CleanCount;
          }

          _this5.setState({
            showLoading: false,
            selectAreaArray: autoAreaValue
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this6 = this;

        var _this$state4 = this.state,
            lineX1 = _this$state4.lineX1,
            lineX2 = _this$state4.lineX2,
            lineY1 = _this$state4.lineY1,
            lineY2 = _this$state4.lineY2,
            _this$state4$showLoad = _this$state4.showLoading,
            showLoading = _this$state4$showLoad === undefined ? false : _this$state4$showLoad,
            _this$state4$showRoom = _this$state4.showRoom,
            showRoom = _this$state4$showRoom === undefined ? false : _this$state4$showRoom,
            _this$state4$exit = _this$state4.exit,
            exit = _this$state4$exit === undefined ? false : _this$state4$exit,
            options = _this$state4.options,
            selectRoomNameIndex = _this$state4.selectRoomNameIndex,
            _this$state4$showInpu = _this$state4.showInput,
            showInput = _this$state4$showInpu === undefined ? false : _this$state4$showInpu,
            isSplit = _this$state4.isSplit,
            _this$state4$selectAr = _this$state4.selectAreaArray,
            selectAreaArray = _this$state4$selectAr === undefined ? [] : _this$state4$selectAr,
            ratio = _this$state4.ratio;

        if (exit) {
          return null;
        }

        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_reactNative.ImageBackground, {
          style: {
            height: '100%',
            width: '100%'
          },
          source: _$$_REQUIRE(_dependencyMap[46])
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            height: '100%'
          }
        }, _react.default.createElement(_MapContainer.default, {
          showIndex: true,
          exit: exit,
          ratio: ratio,
          isMapShowCustom: true,
          mapImage: this.mapImage,
          areaCenter: this.areaCenter,
          mapData: this.mapData,
          selectAreaArray: selectAreaArray,
          onSelectAreaChanged: this._onSelectAreaChanged,
          draggable: !isSplit,
          clickable: !isSplit,
          onStart: this._handleStart,
          onChange: this._handleChange,
          onEnd: this._handleEnd
        }, _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNativeSvg.Svg, {
          style: {
            position: 'absolute',
            zIndex: 200
          },
          height: screenHeight,
          width: screenWidth
        }, _react.default.createElement(_reactNativeSvg.Line, {
          x1: lineX1,
          y1: lineY1,
          x2: lineX2,
          y2: lineY2,
          stroke: "red",
          strokeWidth: "1"
        })))), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.cleanBtn,
          onPress: function onPress() {
            _this6.setState({
              isMessageDialog: true,
              isDataTye: 2,
              isMessageDialogTxt: _localString.default.empty_set
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[47]),
          style: styles.cleanBtnIcon
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.cleanBtnText
        }, _localString.default.empty_mode)), _react.default.createElement(_Dialog.AbstractDialog, {
          visible: this.state.custonMadvisible,
          showTitle: false,
          showButton: false,
          onDismiss: function onDismiss(_) {
            return _this6.onDismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: styles.customMade
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.customMadeTitle]
        }, _localString.default.custom_mode), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: [styles.customMadeTitle, styles.customMadeTitleChilder]
        }, _localString.default.suction, " ", _react.default.createElement(_reactNative.Text, {
          style: styles.customMadeStatus
        }, this.state.fanLevelTxt), " "), _react.default.createElement(_reactNative.View, {
          style: styles.suckBox
        }, this.state.suctionLi.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: index,
            style: [styles.suckBoxChilder, _this6.state.suctionIndex == index ? styles.suckBoxActive : ''],
            onPress: function onPress() {
              _this6.customSuction(index);
            }
          }, _react.default.createElement(_reactNative.Image, {
            source: _this6.state.suctionIndex == index ? _this6.state.suctionIcon : item.img,
            style: styles.suckBoxImg
          }));
        }))), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: [styles.customMadeTitle, styles.customMadeTitleChilder]
        }, _localString.default.mopping_water, " ", _react.default.createElement(_reactNative.Text, {
          style: [styles.customMadeStatus, this.state.isMop ? '' : styles.noMop]
        }, this.state.isMop ? this.state.waterLevelTxt : _localString.default.isMop_take)), _react.default.createElement(_reactNative.View, {
          style: styles.suckBox
        }, this.state.waterVolume.map(function (item, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            key: index,
            style: [styles.suckBoxChilder, _this6.state.waterIndex == index ? styles.suckBoxActive : ''],
            onPress: function onPress() {
              _this6.customWater(index);
            }
          }, _react.default.createElement(_reactNative.Image, {
            source: _this6.state.waterIndex == index ? _this6.state.waterIcon : item.img,
            style: styles.suckBoxImg
          }));
        }))), _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, {
          style: styles.twoClean
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.customMadeTitle, {
            flex: 1
          }]
        }, _localString.default.double_sweep), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.offBtn,
          onPress: function onPress() {
            _this6.setState({
              isCleanUp: !_this6.state.isCleanUp
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: this.state.isCleanUp ? _$$_REQUIRE(_dependencyMap[48]) : _$$_REQUIRE(_dependencyMap[49]),
          style: styles.offBtnImg
        })))), _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.customBtn,
          onPress: function onPress() {
            _this6.setUpBtn();
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.customBtnTxt
        }, _localString.default.confirm)))), _react.default.createElement(_Dialog.MessageDialog, {
          visible: this.state.isMessageDialog,
          title: _localString.default.hint,
          message: this.state.isMessageDialogTxt,
          buttons: [{
            text: _localString.default.cancel,
            style: {
              color: 'lightpink'
            },
            callback: function callback(_) {
              return _this6.setState({
                isMessageDialog: false
              });
            }
          }, {
            text: _localString.default.confirm,
            style: {
              color: 'lightblue'
            },
            backgroundColor: {
              bgColorNormal: '#5C92FF'
            },
            callback: function callback(_) {
              _this6.setState({
                isMessageDialog: false
              }, function () {
                switch (_this6.state.isDataTye) {
                  case 1:
                    _this6.CUSTOM_MAP_MODEFun();

                    break;

                  case 2:
                    _this6.cleanAllBtn();

                    break;
                }
              });
            }
          }],
          onDismiss: function onDismiss(_) {
            return _this6.onDismiss('5');
          }
        }), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          message: _localString.default.ctrling
        }))));
      }
    }]);
    return CustomMade;
  }(_BaseMap2.default);

  exports.default = CustomMade;
  CustomMade.navigationOptions = _HdNavigationBar.default;

  var styles = _reactNative.StyleSheet.create({
    noMop: {
      color: '#939AA9'
    },
    cleanBtn: {
      position: 'absolute',
      right: 20,
      top: 20,
      justifyContent: 'center',
      alignItems: 'center'
    },
    cleanBtnIcon: {
      width: 40,
      height: 40
    },
    cleanBtnText: {
      fontSize: 12,
      color: '#626772',
      paddingTop: 4,
      textAlign: 'center'
    },
    suckBoxActive: {
      borderWidth: 1,
      borderColor: '#5C92FF',
      backgroundColor: '#fff',
      borderRadius: 27
    },
    customMade: {
      paddingHorizontal: 20,
      paddingVertical: 20
    },
    customMadeTitle: {
      color: '#03211C',
      fontSize: 16
    },
    customMadeStatus: {
      color: '#5C92FF',
      fontSize: 14
    },
    customMadeTitleChilder: {
      paddingVertical: 15
    },
    suckBox: {
      flexDirection: 'row',
      backgroundColor: '#eee',
      borderRadius: 27,
      alignItems: 'center',
      justifyContent: 'center'
    },
    suckBoxChilder: {
      flex: 1,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 19,
      paddingVertical: 9
    },
    suckBoxImg: {
      width: 30,
      height: 30
    },
    twoClean: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 20
    },
    offBtn: {
      width: 64,
      height: 32
    },
    offBtnImg: {
      width: 64,
      height: 32
    },
    customBtn: {
      height: 44,
      backgroundColor: '#5C92FF',
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 8,
      marginTop: 40
    },
    customBtnTxt: {
      color: '#FFFFFF',
      fontSize: 16
    }
  });
},12074,[14308,14305,14314,14320,14323,14371,14374,14377,14380,14386,10297,11485,10033,10074,10100,10016,11807,10719,10409,10755,10064,11678,10106,11990,11618,11816,10103,11936,11852,11711,10091,11825,11726,11729,11732,11735,11738,11741,11744,11768,11771,11774,11777,11759,11762,11765,11798,12077,11780,11783]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "99203c0dd8564be306192f2917f11dc9",
    "name": "ic_model_clean_del",
    "type": "png"
  });
},12077,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _miot = _$$_REQUIRE(_dependencyMap[13]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _utils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _resources = _$$_REQUIRE(_dependencyMap[19]);

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20]));

  var _Dialog = _$$_REQUIRE(_dependencyMap[21]);

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22]));

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23]));

  var _ScrollChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24]));

  var _BaseMap2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25]));

  var _FunUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26]));

  var _MapContainer = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27]));

  var _MapUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28]));

  var _AsyncMapApi = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29]));

  var _ApiCode = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30]));

  var _ObjectUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31]));

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32]));

  var screenWidth = _reactNative.Dimensions.get('window').width;

  var screenHeight = _reactNative.Dimensions.get('window').height;

  var selectIcon = _$$_REQUIRE(_dependencyMap[33]);

  var Colors = _Consts.default.Colors,
      ACTION = _Consts.default.ACTION,
      MapOpConst = _Consts.default.MapOpConst;
  var ERR_MSG = {
    '-112': _localString.default.too_small_to_split,
    '-114': _localString.default.err_not_enough_two_room
  };

  var ZoneEdit = function (_BaseMap) {
    (0, _inherits2.default)(ZoneEdit, _BaseMap);

    function ZoneEdit(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ZoneEdit);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ZoneEdit).call(this, props));

      _this._retryLoadMap = function () {
        if (_this.loading) {
          return _FunUtils.default.wait(2000);
        }

        _this.loading = true;
        return _FunUtils.default.retry(_this.loadMap, 3).then(function () {
          _this.loading = false;

          _this.setState({
            showLoading: false
          });
        }).catch(function (err) {
          _this.loading = false;

          _this.setState({
            showLoading: false
          });
        });
      };

      _this.afterHandleMap = function (res) {
        var _this$mapData = _this.mapData,
            _this$mapData$originD = _this$mapData.originData,
            originData = _this$mapData$originD === undefined ? [] : _this$mapData$originD,
            dataChanged = _this$mapData.dataChanged;

        if (dataChanged) {
          var fillData = originData.map(function (v) {
            if (v === 255 || v === 127) {
              return v;
            } else {
              return 0x3F & v;
            }
          });
          res.fillData = fillData;
        }

        _this.setState((0, _objectSpread2.default)({}, res));
      };

      _this._cancelSelect = function () {
        _this.setState({
          selectAreaArray: [],
          lineX1: 0,
          lineY1: 0,
          lineX2: 0,
          lineY2: 0,
          isSplit: false
        });
      };

      _this._handlePushMessage = function (msg) {
        var _ref = msg || {},
            _ref$event = _ref.event;

        _ref$event = _ref$event === undefined ? {} : _ref$event;
        var mapUpdate = _ref$event.mapUpdate;

        var _ref2 = mapUpdate || {},
            value = _ref2.value;

        _this._cancelSelect();

        if (+value === 0) {
          _FunUtils.default.wait(1000).then(_this._retryLoadMap);
        }
      };

      _this._handleMapOpResult = function (code) {
        var c = +code;

        if (c === _ApiCode.default.ONING) {
          return c;
        }

        _this._cancelSelect();

        return _FunUtils.default.wait(2000).then(_this._retryLoadMap).then(function () {
          if (c === _ApiCode.default.SUCCESS) {} else if (c === _ApiCode.default.TIME_OUT || c === _ApiCode.default.WAIT_TIME_OUT) {} else {
            var msg = ERR_MSG[c] || _localString.default.ctrl_fail;

            _UIUtils.default.info(msg);
          }

          return c;
        });
      };

      _this._loadMiRoom = function () {
        var forceRelaod = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

        _miot.Service.room.loadAllRoom(forceRelaod).then(function (res) {
          var roomNames = res.map(function (room) {
            var roomID = room.roomID,
                name = room.name;
            return {
              title: name,
              id: roomID
            };
          });
          roomNames.push({
            title: _localString.default.custom_name,
            id: -1
          });

          _this.setState({
            miRooms: res,
            options: roomNames,
            miRoomsLoaded: true
          });
        }).catch(function (err) {
          return _logger.default.info(err);
        });
      };

      _this._mergeMap = function () {
        var _this$mapData$mapConf = _this.mapData.mapConfig,
            autoAreaId = _this$mapData$mapConf.autoAreaId,
            mapId = _this$mapData$mapConf.mapId,
            _this$mapData$mapConf2 = _this$mapData$mapConf.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf2 === undefined ? [] : _this$mapData$mapConf2;
        var _this$state$selectAre = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre === undefined ? [] : _this$state$selectAre;
        var s = selectAreaArray[0];
        var b = selectAreaArray[1];

        if (s < b) {
          s = b;
          b = selectAreaArray[0];
        }

        var areaCount = autoAreaValue.length;
        var data = {
          AutoAreaId: autoAreaId,
          Extra: {
            pixel1: s,
            pixel2: b
          },
          MapId: mapId,
          Operate: 'merge',
          Type: MapOpConst.AREA_MERGE
        };

        _logger.default.info('merge area, show loading');

        _this.setState({
          showLoading: true
        }, function () {
          _AsyncMapApi.default.specA(ACTION.SET_AUTO_AREA, data).then(_this._handleMapOpResult).then(function (code) {
            if (code === _ApiCode.default.TIME_OUT || code === _ApiCode.default.WAIT_TIME_OUT) {
              var _this$mapData$mapConf3 = _this.mapData.mapConfig.autoAreaValue,
                  _autoAreaValue = _this$mapData$mapConf3 === undefined ? [] : _this$mapData$mapConf3;

              if (_autoAreaValue.length !== areaCount - 1) {
                _UIUtils.default.info(_localString.default.time_out);
              }
            }
          });
        });
      };

      _this._splitMap = function () {
        if (_this.s1 == null) {
          return;
        }

        var mapConfig = _this.mapData.mapConfig;
        var resolution = mapConfig.resolution,
            xMin = mapConfig.xMin,
            yMin = mapConfig.yMin,
            autoAreaId = mapConfig.autoAreaId,
            mapId = mapConfig.mapId,
            height = mapConfig.height,
            _mapConfig$autoAreaVa = mapConfig.autoAreaValue,
            autoAreaValue = _mapConfig$autoAreaVa === undefined ? [] : _mapConfig$autoAreaVa;

        if (autoAreaValue.length > 60) {
          return;
        }

        var _this$state = _this.state,
            selectAreaArray = _this$state.selectAreaArray,
            _this$state$ratio = _this$state.ratio,
            ratio = _this$state$ratio === undefined ? 1 : _this$state$ratio;

        var pos1 = _MapUtils.default.screenToDevice(_this.s1.x, _this.s1.y, height, xMin, yMin, resolution, ratio);

        var pos2 = _MapUtils.default.screenToDevice(_this.s2.x, _this.s2.y, height, xMin, yMin, resolution, ratio);

        var pixel = selectAreaArray[0];
        var areaCount = autoAreaValue.length;
        var data = {
          AutoAreaId: autoAreaId,
          Extra: {
            p1: [pos1.x, pos1.y],
            p2: [pos2.x, pos2.y],
            pixel: pixel
          },
          MapId: mapId,
          Operate: 'split',
          Type: MapOpConst.AREA_SPLIT
        };

        _logger.default.info('merge area, show loading');

        _this.setState({
          showLoading: true
        }, function () {
          _AsyncMapApi.default.specA(ACTION.SET_AUTO_AREA, data).then(_this._handleMapOpResult).then(function (code) {
            if (code === _ApiCode.default.TIME_OUT || code === _ApiCode.default.WAIT_TIME_OUT) {
              var _this$mapData$mapConf4 = _this.mapData.mapConfig.autoAreaValue,
                  _autoAreaValue2 = _this$mapData$mapConf4 === undefined ? [] : _this$mapData$mapConf4;

              if (_autoAreaValue2.length !== areaCount + 1) {
                _UIUtils.default.info(_localString.default.time_out);
              }
            }
          });
        });
      };

      _this._onSplit = function () {
        var _this$state$selectAre2 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre2 === undefined ? [] : _this$state$selectAre2;
        var _this$mapData$mapConf5 = _this.mapData.mapConfig;
        _this$mapData$mapConf5 = _this$mapData$mapConf5 === undefined ? {} : _this$mapData$mapConf5;
        var _this$mapData$mapConf6 = _this$mapData$mapConf5.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf6 === undefined ? [] : _this$mapData$mapConf6;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);
        } else if (selectAreaArray.length !== 1) {
          _UIUtils.default.info(_localString.default.err_not_enough_split);
        } else {
          _this.s1 = null;
          _this.s2 = null;

          _this.setState({
            isSplit: true
          });
        }
      };

      _this._onMerge = function () {
        var _this$state$selectAre3 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre3 === undefined ? [] : _this$state$selectAre3;
        var _this$mapData2 = _this.mapData,
            _this$mapData2$mapCon = _this$mapData2.mapConfig;
        _this$mapData2$mapCon = _this$mapData2$mapCon === undefined ? {} : _this$mapData2$mapCon;
        var _this$mapData2$mapCon2 = _this$mapData2$mapCon.autoAreaValue,
            autoAreaValue = _this$mapData2$mapCon2 === undefined ? [] : _this$mapData2$mapCon2,
            _this$mapData2$adjace = _this$mapData2.adjacencyMap,
            adjacencyMap = _this$mapData2$adjace === undefined ? {} : _this$mapData2$adjace;
        var selectData = [];

        if (autoAreaValue.length <= 0) {} else if (selectAreaArray.length == 0) {
          _reactNative.DeviceEventEmitter.emit('cleanMapEdit', selectData);

          _this.props.navigation.goBack();
        } else {
          for (var i = 0; i < selectAreaArray.length; i++) {
            for (var j = 0; j < autoAreaValue.length; j++) {
              if (selectAreaArray[i] == autoAreaValue[j].id) {
                selectData.push({
                  id: autoAreaValue[j].id,
                  name: autoAreaValue[j].name
                });
              }
            }
          }

          _reactNative.DeviceEventEmitter.emit('cleanMapEdit', selectData);

          _this.props.navigation.goBack();
        }
      };

      _this._onRename = function () {
        var _this$state$selectAre4 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre4 === undefined ? [] : _this$state$selectAre4;
        var _this$mapData$mapConf7 = _this.mapData.mapConfig;
        _this$mapData$mapConf7 = _this$mapData$mapConf7 === undefined ? {} : _this$mapData$mapConf7;
        var _this$mapData$mapConf8 = _this$mapData$mapConf7.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf8 === undefined ? [] : _this$mapData$mapConf8;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);

          return;
        }

        if (selectAreaArray.length !== 1) {
          _UIUtils.default.info(_localString.default.err_not_enough_rename);

          return;
        }

        var miRoomsLoaded = _this.state.miRoomsLoaded;

        if (!miRoomsLoaded) {
          _this._loadMiRoom();

          _this.setState({
            showInput: true
          });

          return;
        }

        _this.setState({
          showRoom: true
        });
      };

      _this._checkName = function (name) {
        var _this$state$options = _this.state.options,
            options = _this$state$options === undefined ? [] : _this$state$options;

        if (name === '' || name === undefined || name === null) {
          _UIUtils.default.info(_localString.default.name_cannot_empty);

          return false;
        } else if (_ObjectUtils.default.hasSpecialCharacters(name)) {
          _UIUtils.default.info(_localString.default.name_invalid);

          return false;
        }

        var index = options.findIndex(function (item) {
          return item.title === name;
        });

        if (index >= 0) {
          _UIUtils.default.info(_localString.default.room_name_can_not_same);

          return false;
        }

        return true;
      };

      _this._doRename = function (data) {
        _logger.default.info("do rename, " + JSON.stringify(data));

        var _ref3 = data || {},
            name = _ref3.name,
            id = _ref3.id;

        var mapConfig = _this.mapData.mapConfig;
        var mapId = mapConfig.mapId;
        var _this$state$selectAre5 = _this.state.selectAreaArray,
            selectAreaArray = _this$state$selectAre5 === undefined ? [] : _this$state$selectAre5;
        var areaId = +selectAreaArray[0];
        var param = {
          MapId: mapId,
          AreaId: areaId,
          Name: name,
          Type: MapOpConst.AREA_RENAME
        };

        if (id) {
          param.RoomId = "" + id;
        }

        _AsyncMapApi.default.specA(ACTION.CHANGE_AREA_NAME, param).then(_this._handleMapOpResult).then(function (code) {
          var timeout = +code === _ApiCode.default.TIME_OUT || +code === _ApiCode.default.WAIT_TIME_OUT;

          if (+code === _ApiCode.default.SUCCESS || timeout) {
            var _ref4 = _this.mapData || {},
                _mapConfig = _ref4.mapConfig;

            var _ref5 = _mapConfig || {},
                autoAreaValue = _ref5.autoAreaValue;

            var area = autoAreaValue.find(function (item) {
              return item.id === areaId;
            });

            if (timeout && area && area.name !== name) {
              _UIUtils.default.info(_localString.default.timeout);
            }

            if (area && +code === _ApiCode.default.SUCCESS) {
              area.name = name;
            }

            _this.forceUpdate();
          }
        });
      };

      _this._onSelect = function (selectIndex) {
        var _this$state$options2 = _this.state.options,
            options = _this$state$options2 === undefined ? [] : _this$state$options2;
        var id = options[selectIndex].id;

        if (+id === -1) {
          _this.roomName = '';

          _this.setState({
            showInput: true
          });
        } else {
          _this.setState({
            showLoading: true
          });

          _this._doRename({
            id: id,
            name: options[selectIndex].title
          });
        }
      };

      _this._addRoomName = function (roomName) {
        _logger.default.info("add room name: " + roomName);

        _this.setState({
          showLoading: true
        });

        _miot.Service.room.createRoom(roomName).then(function (res) {
          var _ref6 = res || {},
              roomID = _ref6.roomID;

          if (roomID) {
            _this._loadMiRoom(true);
          }

          _this._doRename({
            name: roomName,
            id: roomID
          });
        }).catch(function (err) {
          _this.setState({
            showLoading: false
          });

          _this._doRename({
            name: roomName
          });

          _logger.default.info(err);
        });
      };

      _this.doExit = function () {
        _logger.default.info('do exit, dismiss loading');

        _this.setState({
          exit: true,
          showLoading: false
        }, function () {
          _reactNative.DeviceEventEmitter.emit('refreshData', null);

          _this.props.navigation.pop();
        });
      };

      _this._onSelectAreaChange = function (areaArray) {
        var _this$mapData$mapConf9 = _this.mapData.mapConfig;
        _this$mapData$mapConf9 = _this$mapData$mapConf9 === undefined ? {} : _this$mapData$mapConf9;
        var _this$mapData$mapConf10 = _this$mapData$mapConf9.autoAreaValue,
            autoAreaValue = _this$mapData$mapConf10 === undefined ? [] : _this$mapData$mapConf10;

        if (autoAreaValue.length <= 0) {
          _UIUtils.default.info(_localString.default.no_area);

          return;
        }

        _this.setState({
          selectAreaArray: areaArray
        });
      };

      _this._handleStart = function (event, gesture) {
        var _event$nativeEvent = event.nativeEvent,
            locationX = _event$nativeEvent.locationX,
            locationY = _event$nativeEvent.locationY,
            pageX = _event$nativeEvent.pageX,
            pageY = _event$nativeEvent.pageY,
            target = _event$nativeEvent.target;
        var x0 = gesture.x0,
            y0 = gesture.y0;
        var isSplit = _this.state.isSplit;

        if (isSplit) {
          _this.setState({
            lineX1: locationX,
            lineY1: locationY,
            lineX2: locationX,
            lineY2: locationY
          });
        }
      };

      _this._handleChange = function (event) {
        var isSplit = _this.state.isSplit;

        if (isSplit) {
          var _event$nativeEvent2 = event.nativeEvent,
              locationX = _event$nativeEvent2.locationX,
              locationY = _event$nativeEvent2.locationY;

          _this.setState({
            lineX2: locationX,
            lineY2: locationY
          });
        }
      };

      _this._handleEnd = function (event) {
        var _this$state2 = _this.state,
            isSplit = _this$state2.isSplit,
            lineX1 = _this$state2.lineX1,
            lineY1 = _this$state2.lineY1;
        var _event$nativeEvent3 = event.nativeEvent,
            locationX = _event$nativeEvent3.locationX,
            locationY = _event$nativeEvent3.locationY;

        if (isSplit) {
          if ((locationX - lineX1) * (locationX - lineX1) + (locationY - lineY1) * (locationY - lineY1) < 25) {
            _this.setState({
              lineX1: 0,
              lineY1: 0,
              lineX2: 0,
              lineY2: 0
            });

            return;
          }

          _this.setState({
            lineX2: locationX,
            lineY2: locationY
          });

          var points = _this.calEndPoints(lineX1, lineY1, locationX, locationY);

          if (points != null && points.length > 1) {
            _this.setState({
              lineX1: points[0].x,
              lineY1: points[0].y,
              lineX2: points[1].x,
              lineY2: points[1].y
            });
          } else {
            _UIUtils.default.info(_localString.default.line_need_close_to_wall);

            _this.setState({
              lineX1: 0,
              lineY1: 0,
              lineX2: 0,
              lineY2: 0
            });
          }
        }
      };

      _this._renderBottomView = function (isSplit) {
        if (isSplit) {
          var icons = _resources.Images.navigation.light;
          return _react.default.createElement(_reactNative.View, {
            style: [styles.bottomViewStyle, {
              paddingHorizontal: 15
            }]
          }, _react.default.createElement(_ImageButton.default, {
            onPress: _this._cancelSelect,
            source: icons.close.normal,
            highlightedSource: icons.close.press
          }), _react.default.createElement(_reactNative.View, {
            style: {
              flex: 1,
              alignItems: 'center',
              justifyContent: 'center',
              paddingHorizontal: 5
            }
          }, _react.default.createElement(_reactNative.Text, {
            style: {
              fontSize: 15,
              color: '#333333',
              textAlign: 'center'
            }
          }, _localString.default.drawline_to_split)), _react.default.createElement(_ImageButton.default, {
            onPress: _this._splitMap,
            source: icons.complete.normal,
            highlightedSource: icons.complete.press
          }));
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.bottomViewStyle
        }, _react.default.createElement(BottomIcon, {
          icon: _$$_REQUIRE(_dependencyMap[34]),
          name: _localString.default.merge,
          onPress: _this._onMerge
        }), _react.default.createElement(BottomIcon, {
          icon: _$$_REQUIRE(_dependencyMap[35]),
          name: _localString.default.segmentation,
          onPress: _this._onSplit
        }), _react.default.createElement(BottomIcon, {
          icon: _$$_REQUIRE(_dependencyMap[36]),
          name: _localString.default.reset_name,
          onPress: _this._onRename
        }));
      };

      props.navigation.setParams({
        titleProps: {
          title: _localString.default.cleaning_range,
          right: [{
            key: _NavigationBar.default.ICON.COMPLETE,
            onPress: function onPress() {
              _this._onMerge();
            }
          }]
        }
      });
      _this.roomName = '';

      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
          state = _assertThisInitialize.state;

      _this.state = (0, _objectSpread2.default)({}, state, {
        showRoom: false,
        showInput: false,
        isSplit: false,
        isMerge: false,
        dialogVisiable: false,
        left: 0,
        top: 0,
        scale: 1.0,
        lineX1: 0,
        lineY1: 0,
        lineX2: 0,
        lineY2: 0,
        miRooms: [],
        selectRoomNameIndex: -1,
        msg: '',
        miRoomsLoaded: false,
        fillData: null,
        options: [{
          title: _localString.default.custom_name,
          id: -1
        }],
        showLoading: false
      });

      _logger.default.info('zone edit constructor');

      return _this;
    }

    (0, _createClass2.default)(ZoneEdit, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(ZoneEdit.prototype), "componentDidMount", this).call(this);

        _logger.default.info('zone edit, componentDidMount, loading');

        this.setState({
          showLoading: true
        });

        this._retryLoadMap();

        this._loadMiRoom(true);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        (0, _get2.default)((0, _getPrototypeOf2.default)(ZoneEdit.prototype), "componentWillUnmount", this).call(this);

        _logger.default.info('ZoneEdit, componentWillUnmount, dismiss loading');

        this.setState({
          showLoading: false
        });

        this.setState = function () {
          return;
        };
      }
    }, {
      key: "calEndPoints",
      value: function calEndPoints(x1, y1, x2, y2) {
        var _this$mapData3 = this.mapData,
            _this$mapData3$mapCon = _this$mapData3.mapConfig,
            width = _this$mapData3$mapCon.width,
            height = _this$mapData3$mapCon.height,
            data = _this$mapData3.data,
            _this$mapData3$hasFil = _this$mapData3.hasFillValue,
            hasFillValue = _this$mapData3$hasFil === undefined ? false : _this$mapData3$hasFil;
        var _this$state3 = this.state,
            _this$state3$selectAr = _this$state3.selectAreaArray,
            selectAreaArray = _this$state3$selectAr === undefined ? [] : _this$state3$selectAr,
            _this$state3$ratio = _this$state3.ratio,
            ratio = _this$state3$ratio === undefined ? 1 : _this$state3$ratio;
        var roomId = selectAreaArray[0] || 1;

        var p1 = _utils.default.screenToMapPoint(x1, y1, width, height, {
          scale: ratio
        });

        var p2 = _utils.default.screenToMapPoint(x2, y2, width, height, {
          scale: ratio
        });

        if (p1 == null || p2 == null) {
          return null;
        }

        var points = null;
        var _this$state$fillData = this.state.fillData,
            fillData = _this$state$fillData === undefined ? data : _this$state$fillData;

        if (hasFillValue) {
          points = _utils.default.calEndPointsEx(fillData, roomId, p1, p2, width, height);
        } else {
          points = _utils.default.calEndPoints(data, roomId, p1, p2, width, height);
        }

        if (points == null || points.length < 2) {
          return null;
        }

        var s1 = _utils.default.mapToScreenPoint(points[0].x, points[0].y, width, height, {
          scale: ratio
        });

        var s2 = _utils.default.mapToScreenPoint(points[1].x, points[1].y, width, height, {
          scale: ratio
        });

        this.s1 = s1;
        this.s2 = s2;
        return [s1, s2];
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state4 = this.state,
            lineX1 = _this$state4.lineX1,
            lineX2 = _this$state4.lineX2,
            lineY1 = _this$state4.lineY1,
            lineY2 = _this$state4.lineY2,
            _this$state4$showLoad = _this$state4.showLoading,
            showLoading = _this$state4$showLoad === undefined ? false : _this$state4$showLoad,
            _this$state4$showRoom = _this$state4.showRoom,
            showRoom = _this$state4$showRoom === undefined ? false : _this$state4$showRoom,
            _this$state4$exit = _this$state4.exit,
            exit = _this$state4$exit === undefined ? false : _this$state4$exit,
            options = _this$state4.options,
            selectRoomNameIndex = _this$state4.selectRoomNameIndex,
            _this$state4$showInpu = _this$state4.showInput,
            showInput = _this$state4$showInpu === undefined ? false : _this$state4$showInpu,
            isSplit = _this$state4.isSplit,
            _this$state4$selectAr = _this$state4.selectAreaArray,
            selectAreaArray = _this$state4$selectAr === undefined ? [] : _this$state4$selectAr,
            ratio = _this$state4.ratio;

        if (exit) {
          return null;
        }

        return _react.default.createElement(_reactNative.ImageBackground, {
          style: {
            height: '100%',
            width: '100%'
          },
          source: _$$_REQUIRE(_dependencyMap[37])
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: '100%',
            height: '100%'
          }
        }, _react.default.createElement(_MapContainer.default, {
          exit: exit,
          ratio: ratio,
          mapImage: this.mapImage,
          areaCenter: this.areaCenter,
          mapData: this.mapData,
          selectAreaArray: selectAreaArray,
          onSelectAreaChanged: this._onSelectAreaChange,
          draggable: !isSplit,
          clickable: !isSplit,
          onStart: this._handleStart,
          onChange: this._handleChange,
          onEnd: this._handleEnd
        }, _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNativeSvg.Svg, {
          style: {
            position: 'absolute',
            zIndex: 200
          },
          height: screenHeight,
          width: screenWidth
        }, _react.default.createElement(_reactNativeSvg.Line, {
          x1: lineX1,
          y1: lineY1,
          x2: lineX2,
          y2: lineY2,
          stroke: "red",
          strokeWidth: "1"
        })))), _react.default.createElement(_Dialog.LoadingDialog, {
          visible: showLoading,
          message: _localString.default.ctrling
        })));
      }
    }]);
    return ZoneEdit;
  }(_BaseMap2.default);

  exports.default = ZoneEdit;
  ZoneEdit.navigationOptions = _HdNavigationBar.default;

  function BottomIcon(props) {
    var name = props.name,
        icon = props.icon,
        onPress = props.onPress;
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      onPress: onPress
    }, _react.default.createElement(_reactNative.View, {
      style: styles.bottomIconContainer
    }, _react.default.createElement(_reactNative.Image, {
      style: styles.bottomIcon,
      source: icon
    }), _react.default.createElement(_reactNative.Text, {
      style: styles.bottomText
    }, name)));
  }

  var styles = _reactNative.StyleSheet.create({
    bottomViewStyle: {
      width: '100%',
      backgroundColor: '#FFFFFF',
      alignItems: 'center',
      justifyContent: 'space-evenly',
      flexDirection: 'row',
      paddingVertical: 20
    },
    bottomIconContainer: {
      flex: 1,
      alignItems: 'center'
    },
    bottomIcon: {
      width: 24,
      height: 24
    },
    bottomText: {
      fontSize: 12,
      color: '#939AA9',
      textAlign: 'center',
      marginTop: 6
    }
  });
},12080,[14308,14305,14314,14320,14323,14371,14374,14377,14380,14386,10297,11485,10033,10074,10100,10016,11807,10719,10200,10077,10409,10755,10064,11711,12056,11678,10106,11990,11618,11816,10103,11669,11936,11825,12059,12062,12065,11798]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var MyMap = function (_React$Component) {
    (0, _inherits2.default)(MyMap, _React$Component);

    function MyMap(props) {
      var _this;

      (0, _classCallCheck2.default)(this, MyMap);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MyMap).call(this, props));
      props.navigation.setParams({
        titleProps: {
          title: _localString.default.my_map,
          right: [{
            key: _NavigationBar.default.ICON.EDIT,
            onPress: function onPress() {
              _this.setState({
                isEdit: !_this.state.isEdit
              });
            }
          }]
        }
      });
      _this.state = {
        isMapLi: false,
        isEdit: false
      };
      return _this;
    }

    (0, _createClass2.default)(MyMap, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_HdContainView.default, {
          style: {
            backgroundColor: 'white'
          }
        }, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Text, {
          style: styles.savedMapTitle
        }, _localString.default.saved_map), this.state.isMapLi ? _react.default.createElement(_reactNative.View, {
          style: styles.noMap
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[12]),
          resizeMode: "contain",
          style: styles.noMapIcon
        }), _react.default.createElement(_reactNative.Text, {
          style: styles.noMapText
        }, _localString.default.NoMap)) : _react.default.createElement(_reactNative.View, {
          style: styles.mapLi
        }, _react.default.createElement(_reactNative.View, {
          style: styles.mapLiChilder
        }, _react.default.createElement(_reactNative.View, {
          style: styles.mapLiData
        }, _react.default.createElement(_reactNative.View, {
          style: styles.mapLiNameBox
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.mapLiName
        }, "\u53A8\u623F\u5730\u56FE"), _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[13]),
          resizeMode: "contain",
          style: styles.ediitNameIcon
        })), _react.default.createElement(_reactNative.Text, {
          style: styles.mapLiTime
        }, "2021-10-11 \u66F4\u65B0")), _react.default.createElement(_reactNative.View, {
          style: styles.mapLiImg
        }, this.state.isEdit ? _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.switchBox
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[14]),
          resizeMode: "contain",
          style: styles.deletedIcon
        })) : _react.default.createElement(_reactNative.TouchableOpacity, {
          style: [styles.switchBox, styles.switchBtn]
        }, _react.default.createElement(_reactNative.Image, {
          source: _$$_REQUIRE(_dependencyMap[15]),
          resizeMode: "contain",
          style: styles.switchIcon
        }))))))));
      }
    }]);
    return MyMap;
  }(_react.default.Component);

  exports.default = MyMap;
  MyMap.navigationOptions = _HdNavigationBar.default;

  var styles = _reactNative.StyleSheet.create({
    mapLi: {
      paddingHorizontal: 20
    },
    mapLiData: {
      paddingVertical: 10,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    mapLiNameBox: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center'
    },
    mapLiTime: {
      flex: 1,
      textAlign: 'right'
    },
    mapLiName: {
      fontSize: 16,
      color: '#03211C'
    },
    ediitNameIcon: {
      width: 20,
      height: 20,
      marginLeft: 10
    },
    mapLiImg: {
      height: 168,
      backgroundColor: '#F3F5F8',
      borderRadius: 13.34,
      position: 'relative'
    },
    switchBox: {
      position: 'absolute',
      top: 0,
      right: 0
    },
    deletedIcon: {
      width: 36,
      height: 24
    },
    switchIcon: {
      width: 54,
      height: 44
    },
    switchBtn: {
      top: -9
    },
    savedMapTitle: {
      fontSize: 12,
      color: '#939AA9',
      paddingHorizontal: 10,
      paddingVertical: 8,
      backgroundColor: '#F3F5F8'
    },
    noMap: {
      alignItems: 'center',
      justifyContent: 'center',
      paddingHorizontal: 50,
      paddingVertical: 40
    },
    noMapIcon: {
      width: 150,
      height: 157.33
    },
    noMapText: {
      color: '#939AA9',
      fontSize: 12,
      marginTop: 8
    }
  });
},12083,[14305,14320,14323,14371,14377,14386,10297,10033,10016,11936,11852,10719,12086,12089,12092,12095]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 162,
    "height": 154,
    "scales": [1],
    "hash": "176d102e21f5ab5c6ec48f1ef4d9fe10",
    "name": "nomap",
    "type": "png"
  });
},12086,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 120,
    "height": 120,
    "scales": [1],
    "hash": "0b1c762f27bc0936c114feb03810c200",
    "name": "ediitName",
    "type": "png"
  });
},12089,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 54,
    "height": 36,
    "scales": [1],
    "hash": "4cc91ae99aaa84b1ac2c4f554af7018d",
    "name": "ic_deleted",
    "type": "png"
  });
},12092,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 72,
    "height": 36,
    "scales": [1],
    "hash": "08be68887849da6cbaeeed132460d20c",
    "name": "ic_switch",
    "type": "png"
  });
},12095,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _readOnlyError2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ramda = _$$_REQUIRE(_dependencyMap[7]);

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _LdStyles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Host = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var ProductWebView = function (_React$Component) {
    (0, _inherits2.default)(ProductWebView, _React$Component);

    function ProductWebView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ProductWebView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProductWebView).call(this, props));
      props.navigation.setParams({
        titleProps: {
          title: _localString.default.product_description
        }
      });
      return _this;
    }

    (0, _createClass2.default)(ProductWebView, [{
      key: "render",
      value: function render() {
        var _Host$locale$language = _Host.default.locale.language,
            language = _Host$locale$language === undefined ? 'en' : _Host$locale$language;
        var allLanguage = {
          'ar': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/ar.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=qJEhYuUgztN/enCIwEbNnNREq48=',
          'zh': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/zh.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=S4HC/xmoQ3GLghRrLGsKOiKNdp0=',
          'de': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/de.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=LitV02xPX71TLi4TghsSXCZw1Fk=',
          'en': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/en.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=rkyPY0n6qELc8hcOrytPZoGqylQ=',
          'es': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/es.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=OhzKa/V+4k91bl2O3ueZWJOxULQ=',
          'fr': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/fr.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=ax+2vIXD8rdy0rsNoeDhrxGVDdE=',
          'ja': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/ja.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=jBJc77S6KGS2peBKo0Quo0e/twU=',
          'ko': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/ko.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=L+x4JW1gyEGB0Jns9oQYs3nIwUk=',
          'pl': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/pl.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=weWnX3xa0ggCIhJR1N1EWw9rY+I=',
          'ru': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/ru.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=6jdQkYpvMiyeysJhR4AOh1BjdzQ=',
          'tr': 'https://cnbj2.fds.api.xiaomi.com/sweep-robot-x1/instructions/tr.png?GalaxyAccessKeyId=5151729087601&Expires=9223372036854775807&Signature=ntuy5JAzozzOz0KNOjymTit6jeE='
        };
        var allLanguageArray = Object.keys(allLanguage);

        if (!allLanguageArray.includes(language)) {
          language = ((0, _readOnlyError2.default)("language"), 'en');
        }

        var uri = allLanguage[language];
        return _react.default.createElement(_HdContainView.default, {
          style: {
            backgroundColor: 'white',
            paddingBottom: _LdStyles.default.ldNavigationRadius
          }
        }, _react.default.createElement(_reactNative.WebView, {
          style: {
            flex: 1,
            marginTop: _LdStyles.default.ldNavigationRadius
          },
          source: {
            uri: uri
          },
          showsVerticalScrollIndicator: false,
          scalesPageToFit: true,
          automaticallyAdjustContentInsets: true,
          mixedContentMode: "always"
        }));
      }
    }]);
    return ProductWebView;
  }(_react.default.Component);

  ProductWebView.navigationOptions = _HdNavigationBar.default;
  var _default = ProductWebView;
  exports.default = _default;
},12098,[14305,12101,14320,14323,14371,14377,14386,10550,10297,10033,11936,11852,10016,10088,10035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _readOnlyError(name) {
    throw new Error("\"" + name + "\" is read-only");
  }

  module.exports = _readOnlyError;
},12101,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _HdNavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _HdContainView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _localString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Consts = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _api = _$$_REQUIRE(_dependencyMap[12]);

  var _PushManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _UIUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var PROP = _Consts.default.PROP,
      Colors = _Consts.default.Colors,
      ACTION = _Consts.default.ACTION;
  var PUSH_PROPS = [PROP.WORK_STATION_FREQ];

  var DustManager = function (_React$Component) {
    (0, _inherits2.default)(DustManager, _React$Component);

    function DustManager(props) {
      var _this;

      (0, _classCallCheck2.default)(this, DustManager);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DustManager).call(this, props));

      _this.handlePushMessage = function (msg) {
        if (msg.workStationFreq) {
          _this.DustManagerStart(msg.workStationFreq);
        }
      };

      props.navigation.setParams({
        titleProps: {
          title: _localString.default.dust_collect_manage
        }
      });
      _this.state = {
        DustManagerLi: [{
          name: _localString.default.never_collect_dust
        }, {
          name: _localString.default.clean_1_collect_dust
        }, {
          name: _localString.default.clean_2_collect_dust
        }, {
          name: _localString.default.clean_3_collect_dust
        }],
        DustManagerLiIndex: 3
      };
      return _this;
    }

    (0, _createClass2.default)(DustManager, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _PushManager.default.removeObserver("DustManager");
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        _api.SpecApi.syncProps(PUSH_PROPS).then(function (res) {
          if (Object.keys(res).includes("workStationFreq")) {
            _this2.DustManagerStart(res.workStationFreq);
          }
        }).catch(function (err) {});

        _PushManager.default.addObserver("DustManager", this.handlePushMessage, {
          props: PUSH_PROPS
        });
      }
    }, {
      key: "showResult",
      value: function showResult(success) {
        if (success) {
          _UIUtils.default.info(_localString.default.operator_success);
        } else {
          _UIUtils.default.info(_localString.default.operator_fail);
        }
      }
    }, {
      key: "setDustManager",
      value: function setDustManager(index) {
        var _this3 = this;

        _api.SpecApi.specS(PROP.WORK_STATION_FREQ, index).then(function (success) {
          _this3.showResult(success);

          if (success) {
            _this3.DustManagerStart(index);
          }
        });
      }
    }, {
      key: "DustManagerStart",
      value: function DustManagerStart(index) {
        this.setState({
          DustManagerLiIndex: index
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react.default.createElement(_HdContainView.default, null, _react.default.createElement(_reactNative.View, {
          style: styles.DustManagerBox
        }, _react.default.createElement(_reactNative.View, {
          style: styles.DustManagerLiBox
        }, this.state.DustManagerLi.map(function (item, indedx) {
          return _react.default.createElement(_reactNative.TouchableOpacity, {
            style: styles.DustManagerLi,
            key: indedx,
            onPress: function onPress() {
              _this4.setDustManager(indedx);
            }
          }, _react.default.createElement(_reactNative.Text, {
            style: [styles.DustManagerLiTxt, _this4.state.DustManagerLiIndex == indedx ? styles.DustManagerLiActive : '']
          }, item.name), _this4.state.DustManagerLiIndex == indedx ? _react.default.createElement(_reactNative.Image, {
            style: styles.DustManagerLiIcon,
            source: _$$_REQUIRE(_dependencyMap[15]),
            resizeMode: "contain"
          }) : null);
        })), _react.default.createElement(_reactNative.TouchableHighlight, {
          underlayColor: Colors.mainDarkColor,
          style: styles.DustManagerBtn,
          onPress: function onPress() {
            _api.SpecApi.specA(ACTION.START_DUST).then(function (success) {
              _this4.showResult(success);
            });
          }
        }, _react.default.createElement(_reactNative.Text, {
          style: styles.DustManagerBtnTest
        }, _localString.default.collect_dust_now))));
      }
    }]);
    return DustManager;
  }(_react.default.Component);

  exports.default = DustManager;
  DustManager.navigationOptions = _HdNavigationBar.default;

  var styles = _reactNative.StyleSheet.create({
    DustManagerBox: {
      flex: 1,
      paddingHorizontal: 20,
      paddingVertical: 10
    },
    DustManagerLi: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      borderBottomColor: '#ccc',
      borderBottomWidth: 1,
      paddingVertical: 20
    },
    DustManagerLiTxt: {
      fontSize: 16,
      color: '#939AA9',
      flex: 1
    },
    DustManagerLiIcon: {
      width: 20,
      height: 20
    },
    DustManagerLiActive: {
      color: '#83b2ff'
    },
    DustManagerBtn: {
      height: 44,
      backgroundColor: Colors.mainColor,
      borderRadius: 8,
      alignItems: 'center',
      justifyContent: 'center',
      marginTop: 40
    },
    DustManagerBtnTest: {
      color: '#fff',
      fontSize: 16
    }
  });
},12104,[14305,14320,14323,14371,14377,14386,10297,10033,11936,11852,10016,10064,10091,11711,10409,12107]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/projects/com.zhimi.vacuum/res/img",
    "width": 54,
    "height": 54,
    "scales": [1],
    "hash": "31b09f8c15cc0b9a0bee57f79bbad5b0",
    "name": "room_rightYes",
    "type": "png"
  });
},12107,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _api = _$$_REQUIRE(_dependencyMap[4]);

  var _logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var SYNC_DURATION = 1000;

  var PropsSyncManager = function () {
    function PropsSyncManager() {
      var _this = this;

      (0, _classCallCheck2.default)(this, PropsSyncManager);
      this.observers = {};
      this.propNames = [];
      this.syncPropsTimer = null;

      this.startSync = function () {
        _this.stopSync();

        if (_this.propNames.length <= 0) {
          return;
        }

        _this._syncProps().then(function () {
          clearTimeout(_this.syncPropsTimer);
          _this.syncPropsTimer = setTimeout(_this._syncProps, SYNC_DURATION);
        });
      };

      this._syncProps = function () {
        if (_this.propNames.length <= 0) {
          return Promise.resolve(false);
        }

        return _api.SpecApi.syncP(_this.propNames).then(function (res) {
          _this._notifyObservers(res);

          return true;
        });
      };

      this._notifyObservers = function (res) {
        Object.keys(_this.observers).forEach(function (key) {
          var _this$observers$key = _this.observers[key],
              names = _this$observers$key.names,
              handler = _this$observers$key.handler;
          var result = names.reduce(function (r, name) {
            if (res[name] !== undefined) {
              r[name] = res[name];
            }

            return r;
          }, {});

          _logger.default.info(key + " props callback, " + JSON.stringify(result));

          handler(result);
        });
      };

      this.stopSync = function () {
        if (_this.syncPropsTimer) {
          clearTimeout(_this.syncPropsTimer);
          _this.syncPropsTimer = null;
        }
      };

      this.reset = function () {
        _this.stopSync();

        _this.observers = {};
        _this.current = [];
      };
    }

    (0, _createClass2.default)(PropsSyncManager, [{
      key: "removeKey",
      value: function removeKey(key) {
        var observer = this.observers[key];

        if (!key || !observer) {
          return;
        }

        var _this$observers$key$u = this.observers[key].uniqueNames,
            uniqueNames = _this$observers$key$u === undefined ? [] : _this$observers$key$u;
        var names = this.propNames.filter(function (name) {
          return uniqueNames.indexOf(name) < 0;
        });
        this.propNames = names;
        delete this.observers[key];
      }
    }, {
      key: "addObserver",
      value: function addObserver(key, handler) {
        var _this2 = this,
            _this$propNames;

        var names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
        this.removeKey(key);
        var uniqueNames = names.filter(function (n) {
          return _this2.propNames.indexOf(n) < 0;
        });

        (_this$propNames = this.propNames).push.apply(_this$propNames, (0, _toConsumableArray2.default)(uniqueNames));

        this.observers[key] = {
          handler: handler,
          names: names,
          uniqueNames: uniqueNames
        };
      }
    }, {
      key: "removeObserver",
      value: function removeObserver(key) {
        this.removeKey(key);
      }
    }]);
    return PropsSyncManager;
  }();

  var propsSyncManager = new PropsSyncManager();
  var _default = propsSyncManager;
  exports.default = _default;
},12110,[14305,14359,14320,14323,10091,10100]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var width = 0,
      height = 0;

  var RNVConsole = function (_Component) {
    (0, _inherits2.default)(RNVConsole, _Component);

    function RNVConsole(props) {
      var _this;

      (0, _classCallCheck2.default)(this, RNVConsole);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RNVConsole).call(this, props));

      _this.formatToString = function (obj) {
        if (obj === null || obj === undefined || typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || typeof obj === 'function') {
          return '"' + String(obj) + '"';
        } else if (obj instanceof Date) {
          return 'Date(' + obj.toISOString() + ')';
        } else if (Array.isArray(obj)) {
          return 'Array(' + obj.length + ')[' + obj.map(function (elem) {
            return _this.formatToString(elem);
          }) + ']';
        } else if (obj.toString) {
          return 'object(' + JSON.stringify(obj) + ')';
        } else {
          return 'unknown data';
        }
      };

      _this.handleLogDataType = function (data) {};

      _this.openLogPanel = function () {
        _this.setState({
          isOpen: !_this.state.isOpen
        });
      };

      _this.clearLogArr = function () {
        if (global.consolePanelStack) {
          consolePanelStack.clearLogArr();
        }
      };

      _this.HideConsolePanel = function () {
        if (_this.state.isOpen) {
          _this.setState({
            isOpen: false
          });
        }
      };

      _this.renderHeadComponent = function () {
        return _react.default.createElement(_reactNative.View, {
          style: styles.header
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.fontFloat, {
            color: '#000000'
          }]
        }, "Console"));
      };

      var dimension = _reactNative.Dimensions.get('window');

      width = dimension.width;
      height = dimension.height;
      _this.logArr = [];
      _this.state = {
        logArr: [],
        isOpen: false,
        panelHeight: new _reactNative.Animated.Value(0)
      };
      return _this;
    }

    (0, _createClass2.default)(RNVConsole, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        if (!global.consolePanelStack) {
          _setup(global);
        }

        consolePanelStack.bindUpdateListener(function () {
          var arr = consolePanelStack.getLogArr();

          _this2.setState({
            logArr: arr
          });
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.setState = function () {
          return;
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var _this$state = this.state,
            logArr = _this$state.logArr,
            isOpen = _this$state.isOpen;
        var logView = [];
        var r = [];
        logView = logArr.map(function (item, index) {
          r = item.data.map(function (data, key) {
            return _this3.formatToString(data);
          });
          return {
            method: item.method,
            data: r.join(' '),
            date: item.date
          };
        });
        var showContent;

        if (isOpen) {
          showContent = _react.default.createElement(_reactNative.View, {
            style: [styles.container, {
              width: width,
              height: height / 2
            }]
          }, _react.default.createElement(_reactNative.FlatList, {
            style: {
              width: '100%',
              flex: 0.9
            },
            showsVerticalScrollIndicator: false,
            ListHeaderComponent: this.renderHeadComponent,
            data: logView,
            stickyHeaderIndices: [0],
            renderItem: function renderItem(_ref) {
              var item = _ref.item,
                  index = _ref.index;
              return _react.default.createElement(_reactNative.Text, {
                style: [styles.itemStyle, styles[item.method]]
              }, item.date, " | ", item.data);
            },
            keyExtractor: function keyExtractor(item, index) {
              return "console-panel-" + index.toString();
            }
          }), _react.default.createElement(_reactNative.View, {
            style: {
              flex: 0.1,
              backgroundColor: '#f2f4f4',
              flexDirection: 'row'
            }
          }, _react.default.createElement(_reactNative.TouchableOpacity, {
            onPress: this.clearLogArr,
            style: [styles.btnStyle, {
              borderRightWidth: 1,
              borderColor: '#999'
            }]
          }, _react.default.createElement(_reactNative.Text, {
            style: [styles.fontFloat, {
              color: '#000000'
            }]
          }, "Clear")), _react.default.createElement(_reactNative.TouchableOpacity, {
            onPress: this.HideConsolePanel,
            style: styles.btnStyle
          }, _react.default.createElement(_reactNative.Text, {
            style: [styles.fontFloat, {
              color: '#000000'
            }]
          }, "Hide"))));
        } else {
          showContent = _react.default.createElement(_reactNative.TouchableOpacity, {
            style: styles.float,
            onPress: this.openLogPanel
          }, _react.default.createElement(_reactNative.Text, {
            style: styles.fontFloat
          }, "RNVConsole"));
        }

        return showContent;
      }
    }]);
    return RNVConsole;
  }(_react.Component);

  var styles = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      zIndex: 999999999,
      elevation: 999999999,
      backgroundColor: '#ffffff',
      bottom: 0,
      right: 0
    },
    log: {
      fontSize: 12,
      color: '#000000'
    },
    warn: {
      fontSize: 12,
      color: '#FFA533'
    },
    error: {
      fontSize: 12,
      color: '#ff0000'
    },
    btnStyle: {
      flex: 0.5,
      justifyContent: 'center',
      alignItems: 'center'
    },
    float: {
      width: 100,
      height: 40,
      backgroundColor: '#32CD32',
      borderRadius: 4,
      alignItems: 'center',
      justifyContent: 'center',
      position: 'absolute',
      zIndex: 999999999,
      elevation: 999999999,
      bottom: 160,
      right: 10
    },
    fontFloat: {
      color: '#ffffff',
      fontSize: 14,
      fontWeight: 'bold'
    },
    flatlist: {
      position: 'absolute',
      zIndex: 999999999,
      elevation: 999999999,
      top: 100,
      height: height / 2,
      width: '100%',
      borderColor: '#999999',
      borderTopWidth: 1,
      backgroundColor: "#ffffff"
    },
    itemStyle: {
      borderBottomWidth: 1,
      borderColor: '#00FF33',
      marginLeft: 10,
      marginRight: 10,
      marginTop: 8,
      color: '#000000',
      marginBottom: 8
    },
    header: {
      height: 30,
      backgroundColor: '#f2f4f4',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });

  var _setUpGlobal = function _setUpGlobal(global, opt) {
    (function (global) {
      var ConsoleStack = function () {
        function ConsoleStack() {
          (0, _classCallCheck2.default)(this, ConsoleStack);
          this.logData = [];
          this.waittig = false;
          this.listeners = [];
        }

        (0, _createClass2.default)(ConsoleStack, [{
          key: "addLogToArr",
          value: function addLogToArr(method, data) {
            this.logData.unshift({
              method: method,
              data: data,
              date: timestamp()
            });
            this.notifyListeners();
          }
        }, {
          key: "notifyListeners",
          value: function notifyListeners() {
            var _this4 = this;

            if (this.waiting) {
              return;
            }

            this.timeout = setTimeout(function () {
              _this4.listeners.forEach(function (callback) {
                callback();
                clearTimeout(_this4.timeout);
                _this4.waiting = false;
              });
            }, 500);
            this.waiting = true;
          }
        }, {
          key: "clearLogArr",
          value: function clearLogArr() {
            this.logData.splice(0, this.logData.length);
            this.notifyListeners();
          }
        }, {
          key: "bindUpdateListener",
          value: function bindUpdateListener(callback) {
            this.listeners.push(callback);
          }
        }, {
          key: "getLogArr",
          value: function getLogArr() {
            return this.logData;
          }
        }]);
        return ConsoleStack;
      }();

      function formatter(len) {
        return function (input) {
          var str = String(input);
          var strLen = str.length;
          return '0'.repeat(len - strLen) + input;
        };
      }

      function timestamp() {
        var d = new Date();
        var f2 = formatter(2);
        return f2(d.getHours()) + ':' + f2(d.getMinutes()) + ':' + f2(d.getSeconds()) + '.' + formatter(3)(d.getMilliseconds());
      }

      function proxyConsole(console, ConsoleStack) {
        var methods = ['log', 'warn', 'error', 'info'];
        methods.forEach(function (method) {
          var f = console[method];
          console['_' + method] = f;

          console[method] = function () {
            var log = Array.prototype.slice.call(arguments);
            ConsoleStack.addLogToArr(method, log);
            f.apply(console, arguments);
          };
        });
      }

      if (!global.consolePanelStack) {
        var _consolePanelStack = new ConsoleStack();

        global.consolePanelStack = _consolePanelStack;
        proxyConsole(global.console, _consolePanelStack);

        if (opt && opt.console) {
          proxyConsole(opt.console, _consolePanelStack);
        }
      }
    })(global);
  };

  module.exports = {
    Panel: RNVConsole,
    showLogWhenDev: function showLogWhenDev(opt) {
      _setUpGlobal(global, opt);

      return _react.default.createElement(RNVConsole, null);
    }
  };
},12113,[14308,14305,14320,14323,14371,14377,14386,10297,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }

  module.exports = _interopRequireDefault;
},14305,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  function _getRequireWildcardCache() {
    if (typeof WeakMap !== "function") return null;
    var cache = new WeakMap();

    _getRequireWildcardCache = function _getRequireWildcardCache() {
      return cache;
    };

    return cache;
  }

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    }

    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
      return {
        "default": obj
      };
    }

    var cache = _getRequireWildcardCache();

    if (cache && cache.has(obj)) {
      return cache.get(obj);
    }

    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc);
        } else {
          newObj[key] = obj[key];
        }
      }
    }

    newObj["default"] = obj;

    if (cache) {
      cache.set(obj, newObj);
    }

    return newObj;
  }

  module.exports = _interopRequireWildcard;
},14308,[14311]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.iterator : "@@iterator") === "symbol") {
      module.exports = _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      module.exports = _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== (typeof Symbol === "function" ? Symbol.prototype : "@@prototype") ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  module.exports = _typeof;
},14311,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var defineProperty = _$$_REQUIRE(_dependencyMap[0]);

  function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};
      var ownKeys = Object.keys(Object(source));

      if (typeof Object.getOwnPropertySymbols === 'function') {
        ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }));
      }

      ownKeys.forEach(function (key) {
        defineProperty(target, key, source[key]);
      });
    }

    return target;
  }

  module.exports = _objectSpread;
},14314,[14317]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  module.exports = _defineProperty;
},14317,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  module.exports = _classCallCheck;
},14320,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  module.exports = _createClass;
},14323,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = function invariant(condition, format, a, b, c, d, e, f) {
    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var args = [a, b, c, d, e, f];
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return args[argIndex++];
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  };

  module.exports = invariant;
},14326,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var warning = _$$_REQUIRE(_dependencyMap[0]);

  var warnedKeys = {};

  function warnOnce(key, message) {
    if (warnedKeys[key]) {
      return;
    }

    warning(false, message);
    warnedKeys[key] = true;
  }

  module.exports = warnOnce;
},14329,[14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var emptyFunction = _$$_REQUIRE(_dependencyMap[0]);

  var warning = emptyFunction;
  module.exports = warning;
},14332,[14335]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);

  emptyFunction.thatReturnsThis = function () {
    return this;
  };

  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;
},14335,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AccessibilityInfo');

  exports.default = _default;
},14338,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.get = get;
  exports.getEnforcing = getEnforcing;

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[2]);

  var turboModuleProxy = global.__turboModuleProxy;

  function get(name) {
    if (!global.RN$Bridgeless) {
      var legacyModule = NativeModules[name];

      if (legacyModule != null) {
        return legacyModule;
      }
    }

    if (turboModuleProxy != null) {
      var module = turboModuleProxy(name);
      return module;
    }

    return null;
  }

  function getEnforcing(name) {
    var module = get(name);
    (0, _invariant.default)(module != null, "TurboModuleRegistry.getEnforcing(...): '" + name + "' could not be found. " + 'Verify that a module by this name is registered in the native binary.');
    return module;
  }
},14341,[14305,14326,10042]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _extends() {
    module.exports = _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  module.exports = _extends;
},14344,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArrayLimit = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _slicedToArray(arr, i) {
    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
  }

  module.exports = _slicedToArray;
},14347,[14350,14353,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  module.exports = _arrayWithHoles;
},14350,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArrayLimit(arr, i) {
    if (!((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
      return;
    }

    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  module.exports = _iterableToArrayLimit;
},14353,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  }

  module.exports = _nonIterableRest;
},14356,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithoutHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableSpread = _$$_REQUIRE(_dependencyMap[2]);

  function _toConsumableArray(arr) {
    return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
  }

  module.exports = _toConsumableArray;
},14359,[14362,14365,14368]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }
  }

  module.exports = _arrayWithoutHoles;
},14362,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _iterableToArray(iter) {
    if ((typeof Symbol === "function" ? Symbol.iterator : "@@iterator") in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  module.exports = _iterableToArray;
},14365,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  module.exports = _nonIterableSpread;
},14368,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _typeof = _$$_REQUIRE(_dependencyMap[0]);

  var assertThisInitialized = _$$_REQUIRE(_dependencyMap[1]);

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }

    return assertThisInitialized(self);
  }

  module.exports = _possibleConstructorReturn;
},14371,[14311,14374]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _assertThisInitialized(self) {
    if (self === undefined) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  module.exports = _assertThisInitialized;
},14374,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _getPrototypeOf(o) {
    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  module.exports = _getPrototypeOf;
},14377,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var superPropBase = _$$_REQUIRE(_dependencyMap[0]);

  function _get(target, property, receiver) {
    if (typeof Reflect !== "undefined" && Reflect.get) {
      module.exports = _get = Reflect.get;
    } else {
      module.exports = _get = function _get(target, property, receiver) {
        var base = superPropBase(target, property);
        if (!base) return;
        var desc = Object.getOwnPropertyDescriptor(base, property);

        if (desc.get) {
          return desc.get.call(receiver);
        }

        return desc.value;
      };
    }

    return _get(target, property, receiver || target);
  }

  module.exports = _get;
},14380,[14383]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _superPropBase(object, property) {
    while (!Object.prototype.hasOwnProperty.call(object, property)) {
      object = getPrototypeOf(object);
      if (object === null) break;
    }

    return object;
  }

  module.exports = _superPropBase;
},14383,[14377]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) setPrototypeOf(subClass, superClass);
  }

  module.exports = _inherits;
},14386,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _setPrototypeOf(o, p) {
    module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  module.exports = _setPrototypeOf;
},14389,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      return null;
    },
    getConstants: function getConstants() {
      return {};
    },
    getConstantsForViewManager: function getConstantsForViewManager(viewManagerName) {},
    getDefaultEventTypes: function getDefaultEventTypes() {
      return [];
    },
    playTouchSound: function playTouchSound() {},
    lazilyLoadView: function lazilyLoadView(name) {},
    createView: function createView(reactTag, viewName, rootTag, props) {},
    updateView: function updateView(reactTag, viewName, props) {},
    focus: function focus(reactTag) {},
    blur: function blur(reactTag) {},
    findSubviewIn: function findSubviewIn(reactTag, point, callback) {},
    dispatchViewManagerCommand: function dispatchViewManagerCommand(reactTag, commandID, commandArgs) {},
    measure: function measure(reactTag, callback) {},
    measureInWindow: function measureInWindow(reactTag, callback) {},
    viewIsDescendantOf: function viewIsDescendantOf(reactTag, ancestorReactTag, callback) {},
    measureLayout: function measureLayout(reactTag, ancestorReactTag, errorCallback, callback) {},
    measureLayoutRelativeToParent: function measureLayoutRelativeToParent(reactTag, errorCallback, callback) {},
    setJSResponder: function setJSResponder(reactTag, blockNativeResponder) {},
    clearJSResponder: function clearJSResponder() {},
    configureNextLayoutAnimation: function configureNextLayoutAnimation(config, callback, errorCallback) {},
    removeSubviewsFromContainerWithID: function removeSubviewsFromContainerWithID(containerID) {},
    replaceExistingNonRootView: function replaceExistingNonRootView(reactTag, newReactTag) {},
    setChildren: function setChildren(containerTag, reactTags) {},
    manageChildren: function manageChildren(containerTag, moveFromIndices, moveToIndices, addChildReactTags, addAtIndices, removeAtIndices) {},
    setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental(enabled) {},
    sendAccessibilityEvent: function sendAccessibilityEvent(reactTag, eventType) {},
    showPopupMenu: function showPopupMenu(reactTag, items, error, success) {},
    dismissPopupMenu: function dismissPopupMenu() {}
  };
},14392,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NativeUIManager = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var NativeModules = _$$_REQUIRE(_dependencyMap[3]);

  var Platform = _$$_REQUIRE(_dependencyMap[4]);

  var UIManagerProperties = _$$_REQUIRE(_dependencyMap[5]);

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[6]);

  var viewManagerConfigs = {};
  var triedLoadingConfig = new Set();
  var NativeUIManagerConstants = {};
  var isNativeUIManagerConstantsSet = false;

  function _getConstants() {
    if (!isNativeUIManagerConstantsSet) {
      NativeUIManagerConstants = _NativeUIManager.default.getConstants();
      isNativeUIManagerConstantsSet = true;
    }

    return NativeUIManagerConstants;
  }

  var UIManagerJS = (0, _objectSpread2.default)({}, _NativeUIManager.default, {
    getConstants: function getConstants() {
      return _getConstants();
    },
    getViewManagerConfig: function getViewManagerConfig(viewManagerName) {
      if (viewManagerConfigs[viewManagerName] === undefined && _NativeUIManager.default.getConstantsForViewManager) {
        try {
          viewManagerConfigs[viewManagerName] = _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        } catch (e) {
          viewManagerConfigs[viewManagerName] = null;
        }
      }

      var config = viewManagerConfigs[viewManagerName];

      if (config) {
        return config;
      }

      if (!global.nativeCallSyncHook) {
        return config;
      }

      if (_NativeUIManager.default.lazilyLoadView && !triedLoadingConfig.has(viewManagerName)) {
        var result = _NativeUIManager.default.lazilyLoadView(viewManagerName);

        triedLoadingConfig.add(viewManagerName);

        if (result.viewConfig) {
          _getConstants()[viewManagerName] = result.viewConfig;
          lazifyViewManagerConfig(viewManagerName);
        }
      }

      return viewManagerConfigs[viewManagerName];
    }
  });
  _NativeUIManager.default.getViewManagerConfig = UIManagerJS.getViewManagerConfig;

  function lazifyViewManagerConfig(viewName) {
    var viewConfig = _getConstants()[viewName];

    viewManagerConfigs[viewName] = viewConfig;

    if (viewConfig.Manager) {
      defineLazyObjectProperty(viewConfig, 'Constants', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var constants = {};
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value !== 'function') {
              constants[key] = value;
            }
          });
          return constants;
        }
      });
      defineLazyObjectProperty(viewConfig, 'Commands', {
        get: function get() {
          var viewManager = NativeModules[viewConfig.Manager];
          var commands = {};
          var index = 0;
          viewManager && Object.keys(viewManager).forEach(function (key) {
            var value = viewManager[key];

            if (typeof value === 'function') {
              commands[key] = index++;
            }
          });
          return commands;
        }
      });
    }
  }

  if (_getConstants().ViewManagerNames) {
    _NativeUIManager.default.getConstants().ViewManagerNames.forEach(function (viewManagerName) {
      defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
        get: function get() {
          return _NativeUIManager.default.getConstantsForViewManager(viewManagerName);
        }
      });
    });
  }

  if (!global.nativeCallSyncHook) {
    Object.keys(_getConstants()).forEach(function (viewManagerName) {
      if (!UIManagerProperties.includes(viewManagerName)) {
        if (!viewManagerConfigs[viewManagerName]) {
          viewManagerConfigs[viewManagerName] = _getConstants()[viewManagerName];
        }

        defineLazyObjectProperty(_NativeUIManager.default, viewManagerName, {
          get: function get() {
            return UIManagerJS.getViewManagerConfig(viewManagerName);
          }
        });
      }
    });
  }

  module.exports = UIManagerJS;
},14395,[14305,14314,14398,10042,10066,14404,10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('UIManager');

  exports.default = _default;
},14398,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('PlatformConstants');

  exports.default = _default;
},14401,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = ['clearJSResponder', 'configureNextLayoutAnimation', 'createView', 'dismissPopupMenu', 'dispatchViewManagerCommand', 'findSubviewIn', 'getConstantsForViewManager', 'getDefaultEventTypes', 'manageChildren', 'measure', 'measureInWindow', 'measureLayout', 'measureLayoutRelativeToParent', 'playTouchSound', 'removeRootView', 'removeSubviewsFromContainerWithID', 'replaceExistingNonRootView', 'sendAccessibilityEvent', 'setChildren', 'setJSResponder', 'setLayoutAnimationEnabledExperimental', 'showPopupMenu', 'updateView', 'viewIsDescendantOf', 'PopupMenu', 'LazyViewManagersEnabled', 'ViewManagerNames', 'StyleConstants', 'AccessibilityEventTypes', 'UIView', 'getViewManagerConfig', 'blur', 'focus', 'genericBubblingEventTypes', 'genericDirectEventTypes', 'lazilyLoadView'];
},14404,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var objectWithoutPropertiesLoose = _$$_REQUIRE(_dependencyMap[0]);

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  module.exports = _objectWithoutProperties;
},14407,[14410]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  module.exports = _objectWithoutPropertiesLoose;
},14410,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var NativeModule = TurboModuleRegistry.getEnforcing('DeviceInfo');
  var NativeDeviceInfo = NativeModule;
  var _default = NativeDeviceInfo;
  exports.default = _default;
},14413,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var ImageStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    resizeMode: ReactPropTypes.oneOf(['center', 'contain', 'cover', 'repeat', 'stretch']),
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderWidth: ReactPropTypes.number,
    borderRadius: ReactPropTypes.number,
    overflow: ReactPropTypes.oneOf(['visible', 'hidden']),
    tintColor: DeprecatedColorPropType,
    opacity: ReactPropTypes.number,
    overlayColor: ReactPropTypes.string,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number
  });

  module.exports = ImageStylePropTypes;
},14416,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var normalizeColor = _$$_REQUIRE(_dependencyMap[0]);

  var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
    var color = props[propName];

    if (color === undefined || color === null) {
      if (isRequired) {
        return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
      }

      return;
    }

    if (typeof color === 'number') {
      return;
    }

    if (normalizeColor(color) === null) {
      return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
    }
  };

  var ColorPropType = colorPropType.bind(null, false);
  ColorPropType.isRequired = colorPropType.bind(null, true);
  module.exports = ColorPropType;
},14419,[14422]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _native = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _utils = _$$_REQUIRE(_dependencyMap[2]);

  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  function shouldUseAutoDarkmode() {
    if (_native.default.MIOTService.currentDarkMode == "dark" && !_index.default.darkModeStore.setDarkMode) {
      return true;
    } else {
      return false;
    }
  }

  function changeColor(color, flag, isText) {
    if (!shouldUseAutoDarkmode() || flag) {
      return color;
    }

    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "0000000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "000000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "00000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "0000" + tmp;
      } else if (tmp.length == 5) {
        tmp = "000" + tmp;
      } else if (tmp.length == 6) {
        tmp = "00" + tmp;
      } else if (tmp.length == 7) {
        tmp = "0" + tmp;
      } else {
        tmp = '00000000';
      }
    }

    var alpha = tmp.substr(6, 2);
    var first = "0x" + tmp.substr(0, 6);
    var finalColor = getAntiColor(parseInt(first, 16), parseInt(alpha, 16), isText);
    var finalAlpha = getAntiAlpha(parseInt(first, 16), parseInt(alpha, 16));
    var final = parseInt(finalColor.toString(16) + alpha, 16) >>> 0;
    return final;
  }

  function getAntiAlpha(originColor, alpha, isText) {
    if (alpha <= 0x65 && alpha >= 0x4c && originColor === 0x000000) {
      return 0x99;
    }

    return alpha;
  }

  function getAntiColor(originColor, alpha, isText) {
    if (originColor === 0x32bac0) {
      return 0x25A9AF;
    } else if (originColor === 0x25A9AF) {
      return 0x158B90;
    } else if (originColor === 0xF43F31) {
      return 0xD92719;
    } else if (originColor === 0xD53C32) {
      return 0xB62920;
    }

    if (!isText) {
      if (originColor === 0xf6f7f8 || originColor === 0xe9e9ef || originColor === 0xEBEBEC || originColor === 0xefeff0) {
        return 0x000000;
      }

      if (originColor === 0xE3E6E7) {
        return 0x1a1a1a;
      }

      if (originColor === 0xb0b0b0) {
        return 0x1a1a1a;
      }
    } else {
      if (originColor === 0x23262a || originColor === 0x404346 || originColor === 0x454553) {
        return 0xffffff;
      }
    }

    var rgbColor = hexToRgb(originColor.toString(16));
    var hsvColor = rgbToHsv(rgbColor[0], rgbColor[1], rgbColor[2]);
    var h = hsvColor.h;
    var s = hsvColor.s;
    var v = hsvColor.v;
    var flag = false;

    if (isText) {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 0 && v < 20) {
          hsvColor.v = 90;
        } else if (v >= 20 && v < 30) {
          hsvColor.v = 80;
        } else if (v >= 30 && v < 40) {
          hsvColor.v = 70;
        } else if (v >= 40 && v < 50) {
          hsvColor.v = 60;
        } else if (v >= 50 && v < 60) {
          hsvColor.v = 50;
        } else if (v >= 60 && v < 90) {
          hsvColor.v = 40;
        } else if (v >= 90 && v <= 100) {
          hsvColor.v = 90;
        } else {
          flag = false;
        }
      } else {}
    } else {
      if (hsvColor.h === 0 && hsvColor.s === 0) {
        flag = true;

        if (v >= 90 && v < 97) {
          hsvColor.v = 15;
        } else if (v >= 97 && v < 100) {
          hsvColor.v = 0;
        } else if (v === 100) {
          hsvColor.v = 10;
        } else {
          flag = false;
        }
      }
    }

    if (!flag) {
      hsvColor.s += 8;
      hsvColor.v -= 10;
    }

    return hsvToHex(hsvColor.h, Math.min(Math.max(hsvColor.s, 0), 100), Math.min(Math.max(hsvColor.v, 0), 100));
  }

  function hexToRgb(color) {
    var sColorChange = [];
    var tmp = color.toString(16);

    if (tmp.length < 8) {
      if (tmp.length == 1) {
        tmp = "#00000" + tmp;
      } else if (tmp.length == 2) {
        tmp = "#0000" + tmp;
      } else if (tmp.length == 3) {
        tmp = "#000" + tmp;
      } else if (tmp.length == 4) {
        tmp = "#00" + tmp;
      } else if (tmp.length == 5) {
        tmp = "#0" + tmp;
      } else if (tmp.length == 6) {
        tmp = "#" + tmp;
      } else {
        tmp = '#000000';
      }
    }

    var rgbString = "" + tmp.slice(1).match(/.{2}/g).map(function (x) {
      return parseInt(x, 16);
    }).join();
    sColorChange = rgbString.split(",");
    return sColorChange;
  }

  function rgbToHsv(r, g, b) {
    r = r / 255;
    g = g / 255;
    b = b / 255;
    var h, s, v;
    var min = Math.min(r, g, b);
    var max = v = Math.max(r, g, b);
    var l = (min + max) / 2;
    var difference = max - min;

    if (max == min) {
      h = 0;
    } else {
      switch (max) {
        case r:
          h = (g - b) / difference + (g < b ? 6 : 0);
          break;

        case g:
          h = 2.0 + (b - r) / difference;
          break;

        case b:
          h = 4.0 + (r - g) / difference;
          break;
      }

      h = Math.round(h * 60);
    }

    if (max == 0) {
      s = 0;
    } else {
      s = 1 - min / max;
    }

    s = Math.round(s * 100);
    v = Math.round(v * 100);
    return {
      "h": h,
      "s": s,
      "v": v
    };
  }

  function hsvToHex(h, s, v) {
    s = s / 100;
    v = v / 100;
    var r = 0,
        g = 0,
        b = 0;
    var i = parseInt(h / 60 % 6);
    var f = h / 60 - i;
    var p = v * (1 - s);
    var q = v * (1 - f * s);
    var t = v * (1 - (1 - f) * s);

    switch (i) {
      case 0:
        r = v;
        g = t;
        b = p;
        break;

      case 1:
        r = q;
        g = v;
        b = p;
        break;

      case 2:
        r = p;
        g = v;
        b = t;
        break;

      case 3:
        r = p;
        g = q;
        b = v;
        break;

      case 4:
        r = t;
        g = p;
        b = v;
        break;

      case 5:
        r = v;
        g = p;
        b = q;
        break;

      default:
        break;
    }

    r = parseInt(r * 255.0);
    g = parseInt(g * 255.0);
    b = parseInt(b * 255.0);
    var color = (0, _utils.rgbToHex)(r, g, b);
    return color;
  }

  function normalizeColor(color) {
    var matchers = getMatchers();
    var match;

    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return changeColor(color, false, false);
      }

      return null;
    }

    var isText = false;

    if (color.indexOf('text') != -1) {
      isText = true;
      color = color.replace(new RegExp("text", "gm"), '');
    }

    var flag = false;

    if (color.indexOf('xm') != -1) {
      flag = true;
      color = color.replace(new RegExp("xm", "gm"), '');
    }

    if (match = matchers.hex6.exec(color)) {
      var tmp = parseInt(match[1] + "ff", 16) >>> 0;
      return changeColor(tmp, flag, isText);
    }

    if (names.hasOwnProperty(color)) {
      return changeColor(names[color], flag, isText);
    }

    if (match = matchers.rgb.exec(color)) {
      var _tmp = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;

      return changeColor(_tmp, flag, isText);
    }

    if (match = matchers.rgba.exec(color)) {
      var _tmp2 = (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;

      return changeColor(_tmp2, flag, isText);
    }

    if (match = matchers.hex3.exec(color)) {
      var _tmp3 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + "ff", 16) >>> 0;

      return changeColor(_tmp3, flag, isText);
    }

    if (match = matchers.hex8.exec(color)) {
      var _tmp4 = parseInt(match[1], 16) >>> 0;

      return changeColor(_tmp4, flag, isText);
    }

    if (match = matchers.hex4.exec(color)) {
      var _tmp5 = parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;

      return changeColor(_tmp5, flag, isText);
    }

    if (match = matchers.hsl.exec(color)) {
      var _tmp6 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;

      return changeColor(_tmp6, flag, isText);
    }

    if (match = matchers.hsla.exec(color)) {
      var _tmp7 = (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;

      return changeColor(_tmp7, flag, isText);
    }

    return null;
  }

  function hue2rgb(p, q, t) {
    if (t < 0) {
      t += 1;
    }

    if (t > 1) {
      t -= 1;
    }

    if (t < 0.16666666666666666) {
      return p + (q - p) * 6 * t;
    }

    if (t < 0.5) {
      return q;
    }

    if (t < 0.6666666666666666) {
      return p + (q - p) * (0.6666666666666666 - t) * 6;
    }

    return p;
  }

  function hslToRgb(h, s, l) {
    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
    var p = 2 * l - q;
    var r = hue2rgb(p, q, h + 0.3333333333333333);
    var g = hue2rgb(p, q, h);
    var b = hue2rgb(p, q, h - 0.3333333333333333);
    return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;
  }

  var NUMBER = '[-+]?\\d*\\.?\\d+';
  var PERCENTAGE = "[-+]?\\d*\\.?\\d+%";

  function call() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return "\\(\\s*(" + args.join(')\\s*,\\s*(') + ")\\s*\\)";
  }

  var cachedMatchers;

  function getMatchers() {
    if (cachedMatchers === undefined) {
      cachedMatchers = {
        rgb: new RegExp("rgb" + call(NUMBER, NUMBER, NUMBER)),
        rgba: new RegExp("rgba" + call(NUMBER, NUMBER, NUMBER, NUMBER)),
        hsl: new RegExp("hsl" + call(NUMBER, PERCENTAGE, PERCENTAGE)),
        hsla: new RegExp("hsla" + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),
        hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
        hex6: /^#([0-9a-fA-F]{6})$/,
        hex8: /^#([0-9a-fA-F]{8})$/
      };
    }

    return cachedMatchers;
  }

  function parse255(str) {
    var int = parseInt(str, 10);

    if (int < 0) {
      return 0;
    }

    if (int > 255) {
      return 255;
    }

    return int;
  }

  function parse360(str) {
    var int = parseFloat(str);
    return (int % 360 + 360) % 360 / 360;
  }

  function parse1(str) {
    var num = parseFloat(str);

    if (num < 0) {
      return 0;
    }

    if (num > 1) {
      return 255;
    }

    return Math.round(num * 255);
  }

  function parsePercentage(str) {
    var int = parseFloat(str);

    if (int < 0) {
      return 0;
    }

    if (int > 100) {
      return 1;
    }

    return int / 100;
  }

  var names = {
    transparent: 0x00000000,
    aliceblue: 0xf0f8ffff,
    antiquewhite: 0xfaebd7ff,
    aqua: 0x00ffffff,
    aquamarine: 0x7fffd4ff,
    azure: 0xf0ffffff,
    beige: 0xf5f5dcff,
    bisque: 0xffe4c4ff,
    black: 0x000000ff,
    blanchedalmond: 0xffebcdff,
    blue: 0x0000ffff,
    blueviolet: 0x8a2be2ff,
    brown: 0xa52a2aff,
    burlywood: 0xdeb887ff,
    burntsienna: 0xea7e5dff,
    cadetblue: 0x5f9ea0ff,
    chartreuse: 0x7fff00ff,
    chocolate: 0xd2691eff,
    coral: 0xff7f50ff,
    cornflowerblue: 0x6495edff,
    cornsilk: 0xfff8dcff,
    crimson: 0xdc143cff,
    cyan: 0x00ffffff,
    darkblue: 0x00008bff,
    darkcyan: 0x008b8bff,
    darkgoldenrod: 0xb8860bff,
    darkgray: 0xa9a9a9ff,
    darkgreen: 0x006400ff,
    darkgrey: 0xa9a9a9ff,
    darkkhaki: 0xbdb76bff,
    darkmagenta: 0x8b008bff,
    darkolivegreen: 0x556b2fff,
    darkorange: 0xff8c00ff,
    darkorchid: 0x9932ccff,
    darkred: 0x8b0000ff,
    darksalmon: 0xe9967aff,
    darkseagreen: 0x8fbc8fff,
    darkslateblue: 0x483d8bff,
    darkslategray: 0x2f4f4fff,
    darkslategrey: 0x2f4f4fff,
    darkturquoise: 0x00ced1ff,
    darkviolet: 0x9400d3ff,
    deeppink: 0xff1493ff,
    deepskyblue: 0x00bfffff,
    dimgray: 0x696969ff,
    dimgrey: 0x696969ff,
    dodgerblue: 0x1e90ffff,
    firebrick: 0xb22222ff,
    floralwhite: 0xfffaf0ff,
    forestgreen: 0x228b22ff,
    fuchsia: 0xff00ffff,
    gainsboro: 0xdcdcdcff,
    ghostwhite: 0xf8f8ffff,
    gold: 0xffd700ff,
    goldenrod: 0xdaa520ff,
    gray: 0x808080ff,
    green: 0x008000ff,
    greenyellow: 0xadff2fff,
    grey: 0x808080ff,
    honeydew: 0xf0fff0ff,
    hotpink: 0xff69b4ff,
    indianred: 0xcd5c5cff,
    indigo: 0x4b0082ff,
    ivory: 0xfffff0ff,
    khaki: 0xf0e68cff,
    lavender: 0xe6e6faff,
    lavenderblush: 0xfff0f5ff,
    lawngreen: 0x7cfc00ff,
    lemonchiffon: 0xfffacdff,
    lightblue: 0xadd8e6ff,
    lightcoral: 0xf08080ff,
    lightcyan: 0xe0ffffff,
    lightgoldenrodyellow: 0xfafad2ff,
    lightgray: 0xd3d3d3ff,
    lightgreen: 0x90ee90ff,
    lightgrey: 0xd3d3d3ff,
    lightpink: 0xffb6c1ff,
    lightsalmon: 0xffa07aff,
    lightseagreen: 0x20b2aaff,
    lightskyblue: 0x87cefaff,
    lightslategray: 0x778899ff,
    lightslategrey: 0x778899ff,
    lightsteelblue: 0xb0c4deff,
    lightyellow: 0xffffe0ff,
    lime: 0x00ff00ff,
    limegreen: 0x32cd32ff,
    linen: 0xfaf0e6ff,
    magenta: 0xff00ffff,
    maroon: 0x800000ff,
    mediumaquamarine: 0x66cdaaff,
    mediumblue: 0x0000cdff,
    mediumorchid: 0xba55d3ff,
    mediumpurple: 0x9370dbff,
    mediumseagreen: 0x3cb371ff,
    mediumslateblue: 0x7b68eeff,
    mediumspringgreen: 0x00fa9aff,
    mediumturquoise: 0x48d1ccff,
    mediumvioletred: 0xc71585ff,
    midnightblue: 0x191970ff,
    mintcream: 0xf5fffaff,
    mistyrose: 0xffe4e1ff,
    moccasin: 0xffe4b5ff,
    navajowhite: 0xffdeadff,
    navy: 0x000080ff,
    oldlace: 0xfdf5e6ff,
    olive: 0x808000ff,
    olivedrab: 0x6b8e23ff,
    orange: 0xffa500ff,
    orangered: 0xff4500ff,
    orchid: 0xda70d6ff,
    palegoldenrod: 0xeee8aaff,
    palegreen: 0x98fb98ff,
    paleturquoise: 0xafeeeeff,
    palevioletred: 0xdb7093ff,
    papayawhip: 0xffefd5ff,
    peachpuff: 0xffdab9ff,
    peru: 0xcd853fff,
    pink: 0xffc0cbff,
    plum: 0xdda0ddff,
    powderblue: 0xb0e0e6ff,
    purple: 0x800080ff,
    rebeccapurple: 0x663399ff,
    red: 0xff0000ff,
    rosybrown: 0xbc8f8fff,
    royalblue: 0x4169e1ff,
    saddlebrown: 0x8b4513ff,
    salmon: 0xfa8072ff,
    sandybrown: 0xf4a460ff,
    seagreen: 0x2e8b57ff,
    seashell: 0xfff5eeff,
    sienna: 0xa0522dff,
    silver: 0xc0c0c0ff,
    skyblue: 0x87ceebff,
    slateblue: 0x6a5acdff,
    slategray: 0x708090ff,
    slategrey: 0x708090ff,
    snow: 0xfffafaff,
    springgreen: 0x00ff7fff,
    steelblue: 0x4682b4ff,
    tan: 0xd2b48cff,
    teal: 0x008080ff,
    thistle: 0xd8bfd8ff,
    tomato: 0xff6347ff,
    turquoise: 0x40e0d0ff,
    violet: 0xee82eeff,
    wheat: 0xf5deb3ff,
    white: 0xffffffff,
    whitesmoke: 0xf5f5f5ff,
    yellow: 0xffff00ff,
    yellowgreen: 0x9acd32ff
  };
  module.exports = normalizeColor;
},14422,[14305,10005,10014,10998]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var LayoutPropTypes = {
    display: ReactPropTypes.oneOf(['none', 'flex']),
    width: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    height: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    start: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    left: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    right: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    bottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxWidth: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    minHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    maxHeight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    margin: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    marginEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    padding: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingVertical: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingHorizontal: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingTop: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingBottom: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingLeft: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingRight: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingStart: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    paddingEnd: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderStartWidth: ReactPropTypes.number,
    borderEndWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    position: ReactPropTypes.oneOf(['absolute', 'relative']),
    flexDirection: ReactPropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),
    flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),
    justifyContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),
    alignItems: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignSelf: ReactPropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'stretch', 'baseline']),
    alignContent: ReactPropTypes.oneOf(['flex-start', 'flex-end', 'center', 'stretch', 'space-between', 'space-around']),
    overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),
    flex: ReactPropTypes.number,
    flexGrow: ReactPropTypes.number,
    flexShrink: ReactPropTypes.number,
    flexBasis: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),
    aspectRatio: ReactPropTypes.number,
    zIndex: ReactPropTypes.number,
    direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl'])
  };
  module.exports = LayoutPropTypes;
},14425,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedShadowPropTypesIOS = {
    shadowColor: DeprecatedColorPropType,
    shadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    shadowOpacity: ReactPropTypes.number,
    shadowRadius: ReactPropTypes.number
  };
  module.exports = DeprecatedShadowPropTypesIOS;
},14428,[14419,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var deprecatedPropType = _$$_REQUIRE(_dependencyMap[1]);

  var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The transformMatrix style property is deprecated. Use `transform: [{ matrix: ... }]` instead.");
    }
  };

  var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
    if (props[propName]) {
      return new Error("The decomposedMatrix style property is deprecated. Use `transform: [...]` instead.");
    }
  };

  var DeprecatedTransformPropTypes = {
    transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
      perspective: ReactPropTypes.number
    }), ReactPropTypes.shape({
      rotate: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateY: ReactPropTypes.string
    }), ReactPropTypes.shape({
      rotateZ: ReactPropTypes.string
    }), ReactPropTypes.shape({
      scale: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      scaleY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateX: ReactPropTypes.number
    }), ReactPropTypes.shape({
      translateY: ReactPropTypes.number
    }), ReactPropTypes.shape({
      skewX: ReactPropTypes.string
    }), ReactPropTypes.shape({
      skewY: ReactPropTypes.string
    })])),
    transformMatrix: TransformMatrixPropType,
    decomposedMatrix: DecomposedMatrixPropType,
    scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
    translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
  };
  module.exports = DeprecatedTransformPropTypes;
},14431,[10318,10366]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _objectSpread({}, DeprecatedViewStylePropTypes, {
    color: DeprecatedColorPropType,
    fontFamily: ReactPropTypes.string,
    fontSize: ReactPropTypes.number,
    fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),
    fontWeight: ReactPropTypes.oneOf(['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']),
    fontVariant: ReactPropTypes.arrayOf(ReactPropTypes.oneOf(['small-caps', 'oldstyle-nums', 'lining-nums', 'tabular-nums', 'proportional-nums'])),
    textShadowOffset: ReactPropTypes.shape({
      width: ReactPropTypes.number,
      height: ReactPropTypes.number
    }),
    textShadowRadius: ReactPropTypes.number,
    textShadowColor: DeprecatedColorPropType,
    letterSpacing: ReactPropTypes.number,
    lineHeight: ReactPropTypes.number,
    textAlign: ReactPropTypes.oneOf(['auto', 'left', 'right', 'center', 'justify']),
    textAlignVertical: ReactPropTypes.oneOf(['auto', 'top', 'bottom', 'center']),
    includeFontPadding: ReactPropTypes.bool,
    textDecorationLine: ReactPropTypes.oneOf(['none', 'underline', 'line-through', 'underline line-through']),
    textDecorationStyle: ReactPropTypes.oneOf(['solid', 'double', 'dotted', 'dashed']),
    textDecorationColor: DeprecatedColorPropType,
    textTransform: ReactPropTypes.oneOf(['none', 'capitalize', 'uppercase', 'lowercase']),
    writingDirection: ReactPropTypes.oneOf(['auto', 'ltr', 'rtl'])
  });

  module.exports = DeprecatedTextStylePropTypes;
},14434,[14314,14419,14437,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedLayoutPropTypes = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedShadowPropTypesIOS = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTransformPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var DeprecatedViewStylePropTypes = _objectSpread({}, DeprecatedLayoutPropTypes, DeprecatedShadowPropTypesIOS, DeprecatedTransformPropTypes, {
    backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),
    backgroundColor: DeprecatedColorPropType,
    borderColor: DeprecatedColorPropType,
    borderTopColor: DeprecatedColorPropType,
    borderRightColor: DeprecatedColorPropType,
    borderBottomColor: DeprecatedColorPropType,
    borderLeftColor: DeprecatedColorPropType,
    borderStartColor: DeprecatedColorPropType,
    borderEndColor: DeprecatedColorPropType,
    borderRadius: ReactPropTypes.number,
    borderTopLeftRadius: ReactPropTypes.number,
    borderTopRightRadius: ReactPropTypes.number,
    borderTopStartRadius: ReactPropTypes.number,
    borderTopEndRadius: ReactPropTypes.number,
    borderBottomLeftRadius: ReactPropTypes.number,
    borderBottomRightRadius: ReactPropTypes.number,
    borderBottomStartRadius: ReactPropTypes.number,
    borderBottomEndRadius: ReactPropTypes.number,
    borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),
    borderWidth: ReactPropTypes.number,
    borderTopWidth: ReactPropTypes.number,
    borderRightWidth: ReactPropTypes.number,
    borderBottomWidth: ReactPropTypes.number,
    borderLeftWidth: ReactPropTypes.number,
    opacity: ReactPropTypes.number,
    elevation: ReactPropTypes.number
  });

  module.exports = DeprecatedViewStylePropTypes;
},14437,[14314,14419,14425,14428,14431,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.__INTERNAL_VIEW_CONFIG = undefined;

  var Platform = _$$_REQUIRE(_dependencyMap[0]);

  var ReactNative = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeViewViewConfigAndroid = _$$_REQUIRE(_dependencyMap[2]);

  var registerGeneratedViewConfig = _$$_REQUIRE(_dependencyMap[3]);

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[4]);

  var NativeViewComponent;
  var viewConfig;
  {
    NativeViewComponent = requireNativeComponent('RCTView');
  }
  var __INTERNAL_VIEW_CONFIG = viewConfig;
  exports.__INTERNAL_VIEW_CONFIG = __INTERNAL_VIEW_CONFIG;
  var _default = NativeViewComponent;
  exports.default = _default;
},14440,[10066,10114,14581,14584,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });
  var instanceCache = new Map(),
      instanceProps = new Map();

  function getInstanceFromTag(tag) {
    return instanceCache.get(tag) || null;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  var EMPTY_NATIVE_EVENT = {};

  function _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam) {
    var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT,
        inst = getInstanceFromTag(rootNodeID);
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, inst, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  ReactNativePrivateInterface.RCTEventEmitter.register({
    receiveEvent: function receiveEvent(rootNodeID, topLevelType, nativeEventParam) {
      _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);
    },
    receiveTouches: function receiveTouches(eventTopLevelType, touches, changedIndices) {
      if ("topTouchEnd" === eventTopLevelType || "topTouchCancel" === eventTopLevelType) {
        var JSCompiler_temp = [];

        for (var i = 0; i < changedIndices.length; i++) {
          var index = changedIndices[i];
          JSCompiler_temp.push(touches[index]);
          touches[index] = null;
        }

        for (i = changedIndices = 0; i < touches.length; i++) {
          index = touches[i], null !== index && (touches[changedIndices++] = index);
        }

        touches.length = changedIndices;
      } else for (JSCompiler_temp = [], i = 0; i < changedIndices.length; i++) {
        JSCompiler_temp.push(touches[changedIndices[i]]);
      }

      for (changedIndices = 0; changedIndices < JSCompiler_temp.length; changedIndices++) {
        i = JSCompiler_temp[changedIndices];
        i.changedTouches = JSCompiler_temp;
        i.touches = touches;
        index = null;
        var target = i.target;
        null === target || undefined === target || 1 > target || (index = target);

        _receiveRootNodeIDEvent(index, eventTopLevelType, i);
      }
    }
  });

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(stateNode) {
    return instanceProps.get(stateNode._nativeTag) || null;
  };

  getInstanceFromNode = getInstanceFromTag;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    var tag = inst.stateNode._nativeTag;
    undefined === tag && (tag = inst.stateNode.canonical._nativeTag);
    if (!tag) throw ReactError(Error("All native instances should have a tag."));
    return tag;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var ReactNativeFiberHostComponent = function () {
    function ReactNativeFiberHostComponent(tag, viewConfig) {
      if (!(this instanceof ReactNativeFiberHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this._children = [];
      this.viewConfig = viewConfig;
    }

    ReactNativeFiberHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactNativeFiberHostComponent.prototype.measure = function (callback) {
      ReactNativePrivateInterface.UIManager.measure(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureInWindow = function (callback) {
      ReactNativePrivateInterface.UIManager.measureInWindow(this._nativeTag, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactNativeFiberHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      var relativeNode = undefined;
      "number" === typeof relativeToNativeNode ? relativeNode = relativeToNativeNode : relativeToNativeNode._nativeTag ? relativeNode = relativeToNativeNode._nativeTag : relativeToNativeNode.canonical && relativeToNativeNode.canonical._nativeTag && (relativeNode = relativeToNativeNode.canonical._nativeTag);
      null != relativeNode && ReactNativePrivateInterface.UIManager.measureLayout(this._nativeTag, relativeNode, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactNativeFiberHostComponent.prototype.setNativeProps = function (nativeProps) {
      nativeProps = diffProperties(null, emptyObject, nativeProps, this.viewConfig.validAttributes);
      null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(this._nativeTag, this.viewConfig.uiViewClassName, nativeProps);
    };

    return ReactNativeFiberHostComponent;
  }();

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      UPDATE_SIGNAL = {},
      nextReactTag = 3;

  function allocateTag() {
    var tag = nextReactTag;
    1 === tag % 10 && (tag += 2);
    nextReactTag = tag + 2;
    return tag;
  }

  function recursivelyUncacheFiberNode(node) {
    if ("number" === typeof node) instanceCache.delete(node), instanceProps.delete(node);else {
      var tag = node._nativeTag;
      instanceCache.delete(tag);
      instanceProps.delete(tag);

      node._children.forEach(recursivelyUncacheFiberNode);
    }
  }

  function finalizeInitialChildren(parentInstance) {
    if (0 === parentInstance._children.length) return false;

    var nativeTags = parentInstance._children.map(function (child) {
      return "number" === typeof child ? child : child._nativeTag;
    });

    ReactNativePrivateInterface.UIManager.setChildren(parentInstance._nativeTag, nativeTags);
    return false;
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout,
      BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue, providerFiber);
    context._currentValue = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  appendAllChildren = function appendAllChildren(parent, workInProgress) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag || 6 === node.tag) parent._children.push(node.stateNode);else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function updateHostContainer() {};

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    current.memoizedProps !== newProps && (requiredContext(contextStackCursor$1.current), workInProgress.updateQueue = UPDATE_SIGNAL) && (workInProgress.effectTag |= 4);
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        unmountHostComponents(current$$1$jscomp$0, renderPriorityLevel);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function isHostParent(fiber) {
    return 5 === fiber.tag || 3 === fiber.tag || 4 === fiber.tag;
  }

  function commitPlacement(finishedWork) {
    a: {
      for (var parent = finishedWork.return; null !== parent;) {
        if (isHostParent(parent)) {
          var parentFiber = parent;
          break a;
        }

        parent = parent.return;
      }

      throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
    }

    parent = parentFiber.stateNode;

    switch (parentFiber.tag) {
      case 5:
        var isContainer = false;
        break;

      case 3:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      case 4:
        parent = parent.containerInfo;
        isContainer = true;
        break;

      default:
        throw ReactError(Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."));
    }

    parentFiber.effectTag & 16 && (parentFiber.effectTag &= -17);

    a: b: for (parentFiber = finishedWork;;) {
      for (; null === parentFiber.sibling;) {
        if (null === parentFiber.return || isHostParent(parentFiber.return)) {
          parentFiber = null;
          break a;
        }

        parentFiber = parentFiber.return;
      }

      parentFiber.sibling.return = parentFiber.return;

      for (parentFiber = parentFiber.sibling; 5 !== parentFiber.tag && 6 !== parentFiber.tag && 18 !== parentFiber.tag;) {
        if (parentFiber.effectTag & 2) continue b;
        if (null === parentFiber.child || 4 === parentFiber.tag) continue b;else parentFiber.child.return = parentFiber, parentFiber = parentFiber.child;
      }

      if (!(parentFiber.effectTag & 2)) {
        parentFiber = parentFiber.stateNode;
        break a;
      }
    }

    for (var node = finishedWork;;) {
      var isHost = 5 === node.tag || 6 === node.tag;

      if (isHost) {
        var stateNode = isHost ? node.stateNode : node.stateNode.instance;
        if (parentFiber) {
          if (isContainer) {
            if ("number" === typeof parent) throw ReactError(Error("Container does not support insertBefore operation"));
          } else {
            isHost = parent;
            var beforeChild = parentFiber,
                children = isHost._children,
                index = children.indexOf(stateNode);
            0 <= index ? (children.splice(index, 1), beforeChild = children.indexOf(beforeChild), children.splice(beforeChild, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [index], [beforeChild], [], [], [])) : (index = children.indexOf(beforeChild), children.splice(index, 0, stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], ["number" === typeof stateNode ? stateNode : stateNode._nativeTag], [index], []));
          }
        } else isContainer ? ReactNativePrivateInterface.UIManager.setChildren(parent, ["number" === typeof stateNode ? stateNode : stateNode._nativeTag]) : (isHost = parent, children = "number" === typeof stateNode ? stateNode : stateNode._nativeTag, index = isHost._children, beforeChild = index.indexOf(stateNode), 0 <= beforeChild ? (index.splice(beforeChild, 1), index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [beforeChild], [index.length - 1], [], [], [])) : (index.push(stateNode), ReactNativePrivateInterface.UIManager.manageChildren(isHost._nativeTag, [], [], [children], [index.length - 1], [])));
      } else if (4 !== node.tag && null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === finishedWork) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === finishedWork) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function unmountHostComponents(current$$1, renderPriorityLevel$jscomp$0) {
    for (var node = current$$1, currentParentIsValid = false, currentParent = undefined, currentParentIsContainer = undefined;;) {
      if (!currentParentIsValid) {
        currentParentIsValid = node.return;

        a: for (;;) {
          if (null === currentParentIsValid) throw ReactError(Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."));
          currentParent = currentParentIsValid.stateNode;

          switch (currentParentIsValid.tag) {
            case 5:
              currentParentIsContainer = false;
              break a;

            case 3:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;

            case 4:
              currentParent = currentParent.containerInfo;
              currentParentIsContainer = true;
              break a;
          }

          currentParentIsValid = currentParentIsValid.return;
        }

        currentParentIsValid = true;
      }

      if (5 === node.tag || 6 === node.tag) {
        a: for (var root = node, renderPriorityLevel = renderPriorityLevel$jscomp$0, node$jscomp$0 = root;;) {
          if (commitUnmount(node$jscomp$0, renderPriorityLevel), null !== node$jscomp$0.child && 4 !== node$jscomp$0.tag) node$jscomp$0.child.return = node$jscomp$0, node$jscomp$0 = node$jscomp$0.child;else {
            if (node$jscomp$0 === root) break;

            for (; null === node$jscomp$0.sibling;) {
              if (null === node$jscomp$0.return || node$jscomp$0.return === root) break a;
              node$jscomp$0 = node$jscomp$0.return;
            }

            node$jscomp$0.sibling.return = node$jscomp$0.return;
            node$jscomp$0 = node$jscomp$0.sibling;
          }
        }

        currentParentIsContainer ? (root = currentParent, recursivelyUncacheFiberNode(node.stateNode), ReactNativePrivateInterface.UIManager.manageChildren(root, [], [], [], [], [0])) : (root = currentParent, node$jscomp$0 = node.stateNode, recursivelyUncacheFiberNode(node$jscomp$0), renderPriorityLevel = root._children, node$jscomp$0 = renderPriorityLevel.indexOf(node$jscomp$0), renderPriorityLevel.splice(node$jscomp$0, 1), ReactNativePrivateInterface.UIManager.manageChildren(root._nativeTag, [], [], [], [], [node$jscomp$0]));
      } else if (4 === node.tag) {
        if (null !== node.child) {
          currentParent = node.stateNode.containerInfo;
          currentParentIsContainer = true;
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (commitUnmount(node, renderPriorityLevel$jscomp$0), null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === current$$1) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === current$$1) return;
        node = node.return;
        4 === node.tag && (currentParentIsValid = false);
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        break;

      case 1:
        break;

      case 5:
        var instance = finishedWork.stateNode;

        if (null != instance) {
          var newProps = finishedWork.memoizedProps;
          current$$1 = null !== current$$1 ? current$$1.memoizedProps : newProps;
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          null !== updatePayload && (finishedWork = instance.viewConfig, instanceProps.set(instance._nativeTag, newProps), newProps = diffProperties(null, current$$1, newProps, finishedWork.validAttributes), null != newProps && ReactNativePrivateInterface.UIManager.updateView(instance._nativeTag, finishedWork.uiViewClassName, newProps));
        }

        break;

      case 6:
        if (null === finishedWork.stateNode) throw ReactError(Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."));
        ReactNativePrivateInterface.UIManager.updateView(finishedWork.stateNode, "RCTRawText", {
          text: finishedWork.memoizedProps
        });
        break;

      case 3:
        break;

      case 12:
        break;

      case 13:
        instance = finishedWork;
        null === finishedWork.memoizedState ? newProps = false : (newProps = true, instance = finishedWork.child, globalMostRecentFallbackTime = now());
        if (null !== instance) a: for (current$$1 = instance;;) {
          if (5 === current$$1.tag) {
            if (updatePayload = current$$1.stateNode, newProps) {
              var viewConfig = updatePayload.viewConfig;
              var updatePayload$jscomp$0 = diffProperties(null, emptyObject, {
                style: {
                  display: "none"
                }
              }, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            } else {
              updatePayload = current$$1.stateNode;
              updatePayload$jscomp$0 = current$$1.memoizedProps;
              viewConfig = updatePayload.viewConfig;

              var prevProps = _extends({}, updatePayload$jscomp$0, {
                style: [updatePayload$jscomp$0.style, {
                  display: "none"
                }]
              });

              updatePayload$jscomp$0 = diffProperties(null, prevProps, updatePayload$jscomp$0, viewConfig.validAttributes);
              ReactNativePrivateInterface.UIManager.updateView(updatePayload._nativeTag, viewConfig.uiViewClassName, updatePayload$jscomp$0);
            }
          } else {
            if (6 === current$$1.tag) throw Error("Not yet implemented.");

            if (13 === current$$1.tag && null !== current$$1.memoizedState) {
              updatePayload = current$$1.child.sibling;
              updatePayload.return = current$$1;
              current$$1 = updatePayload;
              continue;
            } else if (null !== current$$1.child) {
              current$$1.child.return = current$$1;
              current$$1 = current$$1.child;
              continue;
            }
          }
          if (current$$1 === instance) break a;

          for (; null === current$$1.sibling;) {
            if (null === current$$1.return || current$$1.return === instance) break a;
            current$$1 = current$$1.return;
          }

          current$$1.sibling.return = current$$1.return;
          current$$1 = current$$1.sibling;
        }
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        break;

      case 17:
        break;

      case 20:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              newProps = current$$1.stateNode;
              newProps.pendingContext && (newProps.context = newProps.pendingContext, newProps.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                current = requiredContext(contextStackCursor$1.current);
                var type$jscomp$0 = type;
                var _instance6 = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0,
                    internalInstanceHandle = current$$1,
                    tag = allocateTag();
                type$jscomp$0 = getViewConfigForType(type$jscomp$0);
                var updatePayload = diffProperties(null, emptyObject, _instance6, type$jscomp$0.validAttributes);
                ReactNativePrivateInterface.UIManager.createView(tag, type$jscomp$0.uiViewClassName, rootContainerInstance, updatePayload);
                rootContainerInstance = new ReactNativeFiberHostComponent(tag, type$jscomp$0);
                instanceCache.set(tag, internalInstanceHandle);
                instanceProps.set(tag, _instance6);
                _instance6 = rootContainerInstance;
                appendAllChildren(_instance6, current$$1, false, false);
                finalizeInitialChildren(_instance6, type, newProps, renderExpirationTime$jscomp$0, current) && (current$$1.effectTag |= 4);
                current$$1.stateNode = _instance6;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                type = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current = current$$1;
                if (!renderExpirationTime$jscomp$0.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
                renderExpirationTime$jscomp$0 = allocateTag();
                ReactNativePrivateInterface.UIManager.createView(renderExpirationTime$jscomp$0, "RCTRawText", type, {
                  text: newProps
                });
                instanceCache.set(renderExpirationTime$jscomp$0, current$$1);
                current.stateNode = renderExpirationTime$jscomp$0;
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              newProps = null !== newProps;
              renderExpirationTime$jscomp$0 = false;
              null !== current && (type = current.memoizedState, renderExpirationTime$jscomp$0 = null !== type, newProps || null === type || (type = current.child.sibling, null !== type && (_instance6 = current$$1.firstEffect, null !== _instance6 ? (current$$1.firstEffect = type, type.nextEffect = _instance6) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (newProps && !renderExpirationTime$jscomp$0 && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              if (newProps || renderExpirationTime$jscomp$0) current$$1.effectTag |= 4;
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              _instance6 = newProps.rendering;
              if (null === _instance6) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    _instance6 = findFirstSuspended(current);

                    if (null !== _instance6) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      newProps = _instance6.updateQueue;
                      null !== newProps && (current$$1.updateQueue = newProps, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      newProps = renderExpirationTime$jscomp$0;

                      for (current = current$$1.child; null !== current;) {
                        renderExpirationTime$jscomp$0 = current, type = newProps, renderExpirationTime$jscomp$0.effectTag &= 2, renderExpirationTime$jscomp$0.nextEffect = null, renderExpirationTime$jscomp$0.firstEffect = null, renderExpirationTime$jscomp$0.lastEffect = null, _instance6 = renderExpirationTime$jscomp$0.alternate, null === _instance6 ? (renderExpirationTime$jscomp$0.childExpirationTime = 0, renderExpirationTime$jscomp$0.expirationTime = type, renderExpirationTime$jscomp$0.child = null, renderExpirationTime$jscomp$0.memoizedProps = null, renderExpirationTime$jscomp$0.memoizedState = null, renderExpirationTime$jscomp$0.updateQueue = null, renderExpirationTime$jscomp$0.dependencies = null) : (renderExpirationTime$jscomp$0.childExpirationTime = _instance6.childExpirationTime, renderExpirationTime$jscomp$0.expirationTime = _instance6.expirationTime, renderExpirationTime$jscomp$0.child = _instance6.child, renderExpirationTime$jscomp$0.memoizedProps = _instance6.memoizedProps, renderExpirationTime$jscomp$0.memoizedState = _instance6.memoizedState, renderExpirationTime$jscomp$0.updateQueue = _instance6.updateQueue, type = _instance6.dependencies, renderExpirationTime$jscomp$0.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), current = current.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(_instance6), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (_instance6.sibling = current$$1.child, current$$1.child = _instance6) : (current = newProps.last, null !== current ? current.sibling = _instance6 : current$$1.child = _instance6, newProps.last = _instance6);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                newProps = suspenseStackCursor.current;
                newProps = type ? newProps & SubtreeSuspenseContextMask | ForceSuspenseFallback : newProps & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, newProps, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        newProps = workInProgress;

        if (1 === renderExpirationTime || 1 !== newProps.childExpirationTime) {
          current = 0;

          for (renderExpirationTime$jscomp$0 = newProps.child; null !== renderExpirationTime$jscomp$0;) {
            type = renderExpirationTime$jscomp$0.expirationTime, _instance6 = renderExpirationTime$jscomp$0.childExpirationTime, type > current && (current = type), _instance6 > current && (current = _instance6), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
          }

          newProps.childExpirationTime = current;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                break;

              case 6:
                commitPlacement(nextEffect);
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect, unmountHostComponents(prevProps, current$$1), detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactNativeRenderer = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && ReactNativePrivateInterface.UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);
    },
    setNativeProps: function setNativeProps(handle, nativeProps) {
      null != handle._nativeTag && (nativeProps = diffProperties(null, emptyObject, nativeProps, handle.viewConfig.validAttributes), null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(handle._nativeTag, handle.viewConfig.uiViewClassName, nativeProps));
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    unmountComponentAtNodeAndRemoveContainer: function unmountComponentAtNodeAndRemoveContainer(containerTag) {
      ReactNativeRenderer.unmountComponentAtNode(containerTag);
      ReactNativePrivateInterface.UIManager.removeRootView(containerTag);
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    unstable_batchedUpdates: batchedUpdates,
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance),
      computeComponentStackForErrorReporting: function computeComponentStackForErrorReporting(reactTag) {
        return (reactTag = getInstanceFromTag(reactTag)) ? getStackByFiberInDevAndProd(reactTag) : "";
      }
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromTag,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactNativeRenderer$2 = {
    default: ReactNativeRenderer
  },
      ReactNativeRenderer$3 = ReactNativeRenderer$2 && ReactNativeRenderer || ReactNativeRenderer$2;
  module.exports = ReactNativeRenderer$3.default || ReactNativeRenderer$3;
},14443,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  _$$_REQUIRE(_dependencyMap[0]);
},14446,[10120]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.GLOBAL === undefined) {
    global.GLOBAL = global;
  }

  if (global.window === undefined) {
    global.window = global;
  }

  if (global.self === undefined) {
    global.self = global;
  }

  global.process = global.process || {};
  global.process.env = global.process.env || {};

  if (!global.process.env.NODE_ENV) {
    global.process.env.NODE_ENV = 'production';
  }
},14449,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (global.__RCTProfileIsProfiling) {
    var Systrace = _$$_REQUIRE(_dependencyMap[0]);

    Systrace.installReactHook();
    Systrace.setEnabled(true);
  }
},14452,[10054]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  ExceptionsManager.installConsoleErrorReporter();

  if (!global.__fbDisableExceptionsManager) {
    var handleError = function handleError(e, isFatal) {
      try {
        ExceptionsManager.handleException(e, isFatal);
      } catch (ee) {
        throw e;
      }
    };

    var ErrorUtils = _$$_REQUIRE(_dependencyMap[1]);

    ErrorUtils.setGlobalHandler(handleError);
  }
},14455,[10141,10051]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var getPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[1]);

  var isNativeFunction = _$$_REQUIRE(_dependencyMap[2]);

  var construct = _$$_REQUIRE(_dependencyMap[3]);

  function _wrapNativeSuper(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
      if (Class === null || !isNativeFunction(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return construct(Class, arguments, getPrototypeOf(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return setPrototypeOf(Wrapper, Class);
    };

    return _wrapNativeSuper(Class);
  }

  module.exports = _wrapNativeSuper;
},14458,[14377,14389,14461,14464]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _isNativeFunction(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  module.exports = _isNativeFunction;
},14461,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var setPrototypeOf = _$$_REQUIRE(_dependencyMap[0]);

  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      module.exports = _construct = Reflect.construct;
    } else {
      module.exports = _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  module.exports = _construct;
},14464,[14389]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeModule = TurboModuleRegistry.getEnforcing('ExceptionsManager');
  var ExceptionsManager = {
    reportFatalException: function reportFatalException(message, stack, exceptionId) {
      NativeModule.reportFatalException(message, stack, exceptionId);
    },
    reportSoftException: function reportSoftException(message, stack, exceptionId) {
      NativeModule.reportSoftException(message, stack, exceptionId);
    },
    updateExceptionMessage: function updateExceptionMessage(message, stack, exceptionId) {
      NativeModule.updateExceptionMessage(message, stack, exceptionId);
    },
    dismissRedbox: function dismissRedbox() {
      if (NativeModule.dismissRedbox) {
        NativeModule.dismissRedbox();
      }
    },
    reportException: function reportException(data) {
      if (NativeModule.reportException) {
        NativeModule.reportException(data);
        return;
      }

      if (data.isFatal) {
        ExceptionsManager.reportFatalException(data.message, data.stack, data.id);
      } else {
        ExceptionsManager.reportSoftException(data.message, data.stack, data.id);
      }
    }
  };
  var _default = ExceptionsManager;
  exports.default = _default;
},14467,[14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('Promise', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14470,[14473,10159]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[0]);

  function polyfillObjectProperty(object, name, getValue) {
    var descriptor = Object.getOwnPropertyDescriptor(object, name);

    var _ref = descriptor || {},
        enumerable = _ref.enumerable,
        writable = _ref.writable,
        configurable = _ref.configurable;

    if (descriptor && !configurable) {
      return;
    }

    defineLazyObjectProperty(object, name, {
      get: getValue,
      enumerable: enumerable !== false,
      writable: writable !== false
    });
  }

  function polyfillGlobal(name, getValue) {
    polyfillObjectProperty(global, name, getValue);
  }

  module.exports = {
    polyfillObjectProperty: polyfillObjectProperty,
    polyfillGlobal: polyfillGlobal
  };
},14473,[10084]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Promise = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = Promise;

  Promise.prototype['finally'] = function (f) {
    return this.then(function (value) {
      return Promise.resolve(f()).then(function () {
        return value;
      });
    }, function (err) {
      return Promise.resolve(f()).then(function () {
        throw err;
      });
    });
  };
},14476,[10168]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('regeneratorRuntime', function () {
    delete global.regeneratorRuntime;
    return _$$_REQUIRE(_dependencyMap[1]);
  });
},14479,[14473,14482]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14482,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var _require = _$$_REQUIRE(_dependencyMap[0]),
        polyfillGlobal = _require.polyfillGlobal;

    var defineLazyTimer = function defineLazyTimer(name) {
      polyfillGlobal(name, function () {
        return _$$_REQUIRE(_dependencyMap[1])[name];
      });
    };

    defineLazyTimer('setTimeout');
    defineLazyTimer('setInterval');
    defineLazyTimer('setImmediate');
    defineLazyTimer('clearTimeout');
    defineLazyTimer('clearInterval');
    defineLazyTimer('clearImmediate');
    defineLazyTimer('requestAnimationFrame');
    defineLazyTimer('cancelAnimationFrame');
    defineLazyTimer('requestIdleCallback');
    defineLazyTimer('cancelIdleCallback');
  }
},14485,[14473,10063]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('Timing');

  exports.default = _default;
},14488,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var performance = _$$_REQUIRE(_dependencyMap[0]);

  var performanceNow;

  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;
},14491,[14494]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ExecutionEnvironment = _$$_REQUIRE(_dependencyMap[0]);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};
},14494,[14497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
  var ExecutionEnvironment = {
    canUseDOM: canUseDOM,
    canUseWorkers: typeof Worker !== 'undefined',
    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
    canUseViewport: canUseDOM && !!window.screen,
    isInWorker: !canUseDOM
  };
  module.exports = ExecutionEnvironment;
},14497,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillGlobal = _require.polyfillGlobal;

  polyfillGlobal('XMLHttpRequest', function () {
    return _$$_REQUIRE(_dependencyMap[1]);
  });
  polyfillGlobal('FormData', function () {
    return _$$_REQUIRE(_dependencyMap[2]);
  });
  polyfillGlobal('fetch', function () {
    return _$$_REQUIRE(_dependencyMap[3]).fetch;
  });
  polyfillGlobal('Headers', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Headers;
  });
  polyfillGlobal('Request', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Request;
  });
  polyfillGlobal('Response', function () {
    return _$$_REQUIRE(_dependencyMap[3]).Response;
  });
  polyfillGlobal('WebSocket', function () {
    return _$$_REQUIRE(_dependencyMap[4]);
  });
  polyfillGlobal('Blob', function () {
    return _$$_REQUIRE(_dependencyMap[5]);
  });
  polyfillGlobal('File', function () {
    return _$$_REQUIRE(_dependencyMap[6]);
  });
  polyfillGlobal('FileReader', function () {
    return _$$_REQUIRE(_dependencyMap[7]);
  });
  polyfillGlobal('URL', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URL;
  });
  polyfillGlobal('URLSearchParams', function () {
    return _$$_REQUIRE(_dependencyMap[8]).URLSearchParams;
  });
  polyfillGlobal('AbortController', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortController;
  });
  polyfillGlobal('AbortSignal', function () {
    return _$$_REQUIRE(_dependencyMap[9]).AbortSignal;
  });
},14500,[14473,10177,10219,10222,10228,10210,10234,10237,10240,14521]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BlobModule');

  exports.default = _default;
},14503,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var privateData = new WeakMap();
  var wrappers = new WeakMap();

  function pd(event) {
    var retv = privateData.get(event);

    if (retv === null) {
      throw new TypeError("'this' is expected an Event object, but got " + JSON.stringify(event));
    }

    return retv;
  }

  function setCancelFlag(data) {
    if (data.passiveListener != null) {
      if (typeof console !== "undefined" && true) {}

      return;
    }

    if (!data.event.cancelable) {
      return;
    }

    data.canceled = true;

    if (typeof data.event.preventDefault === "function") {
      data.event.preventDefault();
    }
  }

  function Event(eventTarget, event) {
    privateData.set(this, {
      eventTarget: eventTarget,
      event: event,
      eventPhase: 2,
      currentTarget: eventTarget,
      canceled: false,
      stopped: false,
      immediateStopped: false,
      passiveListener: null,
      timeStamp: event.timeStamp || Date.now()
    });
    Object.defineProperty(this, "isTrusted", {
      value: false,
      enumerable: true
    });
    var keys = Object.keys(event);

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in this)) {
        Object.defineProperty(this, key, defineRedirectDescriptor(key));
      }
    }
  }

  Event.prototype = {
    get type() {
      return pd(this).event.type;
    },

    get target() {
      return pd(this).eventTarget;
    },

    get currentTarget() {
      return pd(this).currentTarget;
    },

    composedPath: function composedPath() {
      var currentTarget = pd(this).currentTarget;

      if (currentTarget == null) {
        return [];
      }

      return [currentTarget];
    },

    get NONE() {
      return 0;
    },

    get CAPTURING_PHASE() {
      return 1;
    },

    get AT_TARGET() {
      return 2;
    },

    get BUBBLING_PHASE() {
      return 3;
    },

    get eventPhase() {
      return pd(this).eventPhase;
    },

    stopPropagation: function stopPropagation() {
      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.stopPropagation === "function") {
        data.event.stopPropagation();
      }
    },
    stopImmediatePropagation: function stopImmediatePropagation() {
      var data = pd(this);
      data.stopped = true;
      data.immediateStopped = true;

      if (typeof data.event.stopImmediatePropagation === "function") {
        data.event.stopImmediatePropagation();
      }
    },

    get bubbles() {
      return Boolean(pd(this).event.bubbles);
    },

    get cancelable() {
      return Boolean(pd(this).event.cancelable);
    },

    preventDefault: function preventDefault() {
      setCancelFlag(pd(this));
    },

    get defaultPrevented() {
      return pd(this).canceled;
    },

    get composed() {
      return Boolean(pd(this).event.composed);
    },

    get timeStamp() {
      return pd(this).timeStamp;
    },

    get srcElement() {
      return pd(this).eventTarget;
    },

    get cancelBubble() {
      return pd(this).stopped;
    },

    set cancelBubble(value) {
      if (!value) {
        return;
      }

      var data = pd(this);
      data.stopped = true;

      if (typeof data.event.cancelBubble === "boolean") {
        data.event.cancelBubble = true;
      }
    },

    get returnValue() {
      return !pd(this).canceled;
    },

    set returnValue(value) {
      if (!value) {
        setCancelFlag(pd(this));
      }
    },

    initEvent: function initEvent() {}
  };
  Object.defineProperty(Event.prototype, "constructor", {
    value: Event,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.Event !== "undefined" && typeof window.Event.prototype === "object") {
    Object.setPrototypeOf(Event.prototype, window.Event.prototype);
    wrappers.set(window.Event.prototype, Event);
  }

  function defineRedirectDescriptor(key) {
    return {
      get: function get() {
        return pd(this).event[key];
      },
      set: function set(value) {
        pd(this).event[key] = value;
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineCallDescriptor(key) {
    return {
      value: function value() {
        var event = pd(this).event;
        return event[key].apply(event, arguments);
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineWrapper(BaseEvent, proto) {
    var keys = Object.keys(proto);

    if (keys.length === 0) {
      return BaseEvent;
    }

    function CustomEvent(eventTarget, event) {
      BaseEvent.call(this, eventTarget, event);
    }

    CustomEvent.prototype = Object.create(BaseEvent.prototype, {
      constructor: {
        value: CustomEvent,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];

      if (!(key in BaseEvent.prototype)) {
        var descriptor = Object.getOwnPropertyDescriptor(proto, key);
        var isFunc = typeof descriptor.value === "function";
        Object.defineProperty(CustomEvent.prototype, key, isFunc ? defineCallDescriptor(key) : defineRedirectDescriptor(key));
      }
    }

    return CustomEvent;
  }

  function getWrapper(proto) {
    if (proto == null || proto === Object.prototype) {
      return Event;
    }

    var wrapper = wrappers.get(proto);

    if (wrapper == null) {
      wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);
      wrappers.set(proto, wrapper);
    }

    return wrapper;
  }

  function wrapEvent(eventTarget, event) {
    var Wrapper = getWrapper(Object.getPrototypeOf(event));
    return new Wrapper(eventTarget, event);
  }

  function isStopped(event) {
    return pd(event).immediateStopped;
  }

  function setEventPhase(event, eventPhase) {
    pd(event).eventPhase = eventPhase;
  }

  function setCurrentTarget(event, currentTarget) {
    pd(event).currentTarget = currentTarget;
  }

  function setPassiveListener(event, passiveListener) {
    pd(event).passiveListener = passiveListener;
  }

  var listenersMap = new WeakMap();
  var CAPTURE = 1;
  var BUBBLE = 2;
  var ATTRIBUTE = 3;

  function isObject(x) {
    return x !== null && typeof x === "object";
  }

  function getListeners(eventTarget) {
    var listeners = listenersMap.get(eventTarget);

    if (listeners == null) {
      throw new TypeError("'this' is expected an EventTarget object, but got another value.");
    }

    return listeners;
  }

  function defineEventAttributeDescriptor(eventName) {
    return {
      get: function get() {
        var listeners = getListeners(this);
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            return node.listener;
          }

          node = node.next;
        }

        return null;
      },
      set: function set(listener) {
        if (typeof listener !== "function" && !isObject(listener)) {
          listener = null;
        }

        var listeners = getListeners(this);
        var prev = null;
        var node = listeners.get(eventName);

        while (node != null) {
          if (node.listenerType === ATTRIBUTE) {
            if (prev !== null) {
              prev.next = node.next;
            } else if (node.next !== null) {
              listeners.set(eventName, node.next);
            } else {
              listeners.delete(eventName);
            }
          } else {
            prev = node;
          }

          node = node.next;
        }

        if (listener !== null) {
          var newNode = {
            listener: listener,
            listenerType: ATTRIBUTE,
            passive: false,
            once: false,
            next: null
          };

          if (prev === null) {
            listeners.set(eventName, newNode);
          } else {
            prev.next = newNode;
          }
        }
      },
      configurable: true,
      enumerable: true
    };
  }

  function defineEventAttribute(eventTargetPrototype, eventName) {
    Object.defineProperty(eventTargetPrototype, "on" + eventName, defineEventAttributeDescriptor(eventName));
  }

  function defineCustomEventTarget(eventNames) {
    function CustomEventTarget() {
      EventTarget.call(this);
    }

    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {
      constructor: {
        value: CustomEventTarget,
        configurable: true,
        writable: true
      }
    });

    for (var i = 0; i < eventNames.length; ++i) {
      defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);
    }

    return CustomEventTarget;
  }

  function EventTarget() {
    if (this instanceof EventTarget) {
      listenersMap.set(this, new Map());
      return;
    }

    if (arguments.length === 1 && Array.isArray(arguments[0])) {
      return defineCustomEventTarget(arguments[0]);
    }

    if (arguments.length > 0) {
      var types = new Array(arguments.length);

      for (var i = 0; i < arguments.length; ++i) {
        types[i] = arguments[i];
      }

      return defineCustomEventTarget(types);
    }

    throw new TypeError("Cannot call a class as a function");
  }

  EventTarget.prototype = {
    addEventListener: function addEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      if (typeof listener !== "function" && !isObject(listener)) {
        throw new TypeError("'listener' should be a function or an object.");
      }

      var listeners = getListeners(this);
      var optionsIsObj = isObject(options);
      var capture = optionsIsObj ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var newNode = {
        listener: listener,
        listenerType: listenerType,
        passive: optionsIsObj && Boolean(options.passive),
        once: optionsIsObj && Boolean(options.once),
        next: null
      };
      var node = listeners.get(eventName);

      if (node === undefined) {
        listeners.set(eventName, newNode);
        return;
      }

      var prev = null;

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          return;
        }

        prev = node;
        node = node.next;
      }

      prev.next = newNode;
    },
    removeEventListener: function removeEventListener(eventName, listener, options) {
      if (listener == null) {
        return;
      }

      var listeners = getListeners(this);
      var capture = isObject(options) ? Boolean(options.capture) : Boolean(options);
      var listenerType = capture ? CAPTURE : BUBBLE;
      var prev = null;
      var node = listeners.get(eventName);

      while (node != null) {
        if (node.listener === listener && node.listenerType === listenerType) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }

          return;
        }

        prev = node;
        node = node.next;
      }
    },
    dispatchEvent: function dispatchEvent(event) {
      if (event == null || typeof event.type !== "string") {
        throw new TypeError('"event.type" should be a string.');
      }

      var listeners = getListeners(this);
      var eventName = event.type;
      var node = listeners.get(eventName);

      if (node == null) {
        return true;
      }

      var wrappedEvent = wrapEvent(this, event);
      var prev = null;

      while (node != null) {
        if (node.once) {
          if (prev !== null) {
            prev.next = node.next;
          } else if (node.next !== null) {
            listeners.set(eventName, node.next);
          } else {
            listeners.delete(eventName);
          }
        } else {
          prev = node;
        }

        setPassiveListener(wrappedEvent, node.passive ? node.listener : null);

        if (typeof node.listener === "function") {
          try {
            node.listener.call(this, wrappedEvent);
          } catch (err) {
            if (typeof console !== "undefined" && true) {}
          }
        } else if (node.listenerType !== ATTRIBUTE && typeof node.listener.handleEvent === "function") {
          node.listener.handleEvent(wrappedEvent);
        }

        if (isStopped(wrappedEvent)) {
          break;
        }

        node = node.next;
      }

      setPassiveListener(wrappedEvent, null);
      setEventPhase(wrappedEvent, 0);
      setCurrentTarget(wrappedEvent, null);
      return !wrappedEvent.defaultPrevented;
    }
  };
  Object.defineProperty(EventTarget.prototype, "constructor", {
    value: EventTarget,
    configurable: true,
    writable: true
  });

  if (typeof window !== "undefined" && typeof window.EventTarget !== "undefined") {
    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);
  }

  exports.defineEventAttribute = defineEventAttribute;
  exports.EventTarget = EventTarget;
  exports.default = EventTarget;
  module.exports = EventTarget;
  module.exports.EventTarget = module.exports["default"] = EventTarget;
  module.exports.defineEventAttribute = defineEventAttribute;
},14506,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Networking');

  exports.default = _default;
},14509,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  (function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global.WHATWGFetch = {});
  })(this, function (exports) {
    'use strict';

    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };

    function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    }

    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }

      if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }

      return name.toLowerCase();
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }

      return value;
    }

    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };

      if (support.iterable) {
        iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = function () {
          return iterator;
        };
      }

      return iterator;
    }

    function Headers(headers) {
      this.map = {};

      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }

    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ', ' + value : value;
    };

    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };

    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };

    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };

    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };

    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };

    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };

    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };

    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };

    if (support.iterable) {
      Headers.prototype[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"] = Headers.prototype.entries;
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }

      body.bodyUsed = true;
    }

    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };

        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }

    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsText(blob);
      return promise;
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }

      return chars.join('');
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }

    function Body() {
      this.bodyUsed = false;

      this._initBody = function (body) {
        this._bodyInit = body;

        if (!body) {
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer);
          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          this._bodyText = body = Object.prototype.toString.call(body);
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };

      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);

          if (rejected) {
            return rejected;
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };

        this.arrayBuffer = function () {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
          } else {
            return this.blob().then(readBlobAsArrayBuffer);
          }
        };
      }

      this.text = function () {
        var rejected = consumed(this);

        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };

      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }

      this.json = function () {
        return this.text().then(JSON.parse);
      };

      return this;
    }

    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }

    function Request(input, options) {
      options = options || {};
      var body = options.body;

      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }

        this.url = input.url;
        this.credentials = input.credentials;

        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }

        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;

        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }

      this.credentials = options.credentials || this.credentials || 'same-origin';

      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }

      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.signal = options.signal || this.signal;
      this.referrer = null;

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }

      this._initBody(body);
    }

    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };

    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers();
      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();

        if (key) {
          var value = parts.join(':').trim();
          headers.append(key, value);
        }
      });
      return headers;
    }

    Body.call(Request.prototype);

    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }

      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = 'statusText' in options ? options.statusText : 'OK';
      this.headers = new Headers(options.headers);
      this.url = options.url || '';

      this._initBody(bodyInit);
    }

    Body.call(Response.prototype);

    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };

    Response.error = function () {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };

    var redirectStatuses = [301, 302, 303, 307, 308];

    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }

      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };

    exports.DOMException = self.DOMException;

    try {
      new exports.DOMException();
    } catch (err) {
      exports.DOMException = function (message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
      };

      exports.DOMException.prototype = Object.create(Error.prototype);
      exports.DOMException.prototype.constructor = exports.DOMException;
    }

    function fetch(input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);

        if (request.signal && request.signal.aborted) {
          return reject(new exports.DOMException('Aborted', 'AbortError'));
        }

        var xhr = new XMLHttpRequest();

        function abortXhr() {
          xhr.abort();
        }

        xhr.onload = function () {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };

        xhr.onerror = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.ontimeout = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.onabort = function () {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        };

        xhr.open(request.method, request.url, true);

        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }

        request.headers.forEach(function (value, name) {
          xhr.setRequestHeader(name, value);
        });

        if (request.signal) {
          request.signal.addEventListener('abort', abortXhr);

          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
              request.signal.removeEventListener('abort', abortXhr);
            }
          };
        }

        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    }

    fetch.polyfill = true;

    if (!self.fetch) {
      self.fetch = fetch;
      self.Headers = Headers;
      self.Request = Request;
      self.Response = Response;
    }

    exports.Headers = Headers;
    exports.Request = Request;
    exports.Response = Response;
    exports.fetch = fetch;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
  });
},14512,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('WebSocketModule');

  exports.default = _default;
},14515,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('FileReaderModule');

  exports.default = _default;
},14518,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  Object.defineProperty(exports, '__esModule', {
    value: true
  });

  var eventTargetShim = _$$_REQUIRE(_dependencyMap[5]);

  var AbortSignal = function (_eventTargetShim$Even) {
    _inherits(AbortSignal, _eventTargetShim$Even);

    function AbortSignal() {
      var _this;

      _classCallCheck(this, AbortSignal);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AbortSignal).call(this));
      throw new TypeError("AbortSignal cannot be constructed directly");
      return _this;
    }

    _createClass(AbortSignal, [{
      key: "aborted",
      get: function get() {
        var aborted = abortedFlags.get(this);

        if (typeof aborted !== "boolean") {
          throw new TypeError("Expected 'this' to be an 'AbortSignal' object, but got " + (this === null ? "null" : typeof this));
        }

        return aborted;
      }
    }]);

    return AbortSignal;
  }(eventTargetShim.EventTarget);

  eventTargetShim.defineEventAttribute(AbortSignal.prototype, "abort");

  function createAbortSignal() {
    var signal = Object.create(AbortSignal.prototype);
    eventTargetShim.EventTarget.call(signal);
    abortedFlags.set(signal, false);
    return signal;
  }

  function abortSignal(signal) {
    if (abortedFlags.get(signal) !== false) {
      return;
    }

    abortedFlags.set(signal, true);
    signal.dispatchEvent({
      type: "abort"
    });
  }

  var abortedFlags = new WeakMap();
  Object.defineProperties(AbortSignal.prototype, {
    aborted: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortSignal.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortSignal"
    });
  }

  var AbortController = function () {
    function AbortController() {
      _classCallCheck(this, AbortController);

      signals.set(this, createAbortSignal());
    }

    _createClass(AbortController, [{
      key: "abort",
      value: function abort() {
        abortSignal(getSignal(this));
      }
    }, {
      key: "signal",
      get: function get() {
        return getSignal(this);
      }
    }]);

    return AbortController;
  }();

  var signals = new WeakMap();

  function getSignal(controller) {
    var signal = signals.get(controller);

    if (signal == null) {
      throw new TypeError("Expected 'this' to be an 'AbortController' object, but got " + (controller === null ? "null" : typeof controller));
    }

    return signal;
  }

  Object.defineProperties(AbortController.prototype, {
    signal: {
      enumerable: true
    },
    abort: {
      enumerable: true
    }
  });

  if (typeof Symbol === "function" && typeof (typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag") === "symbol") {
    Object.defineProperty(AbortController.prototype, typeof Symbol === "function" ? Symbol.toStringTag : "@@toStringTag", {
      configurable: true,
      value: "AbortController"
    });
  }

  exports.AbortController = AbortController;
  exports.AbortSignal = AbortSignal;
  exports.default = AbortController;
  module.exports = AbortController;
  module.exports.AbortController = module.exports["default"] = AbortController;
  module.exports.AbortSignal = AbortSignal;
},14521,[14320,14323,14371,14377,14386,14506]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.alert) {
    global.alert = function (text) {
      _$$_REQUIRE(_dependencyMap[0]).alert('Alert', '' + text);
    };
  }
},14524,[10243]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DialogManagerAndroid');

  exports.default = _default;
},14527,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeDialogManagerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function emptyCallback() {}

  module.exports = {
    alertWithArgs: function alertWithArgs(args, callback) {
      if (!_NativeDialogManagerAndroid.default) {
        return;
      }

      _NativeDialogManagerAndroid.default.showAlert(args, emptyCallback, callback || emptyCallback);
    }
  };
},14530,[14305,14527]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      polyfillObjectProperty = _require.polyfillObjectProperty;

  var navigator = global.navigator;

  if (navigator === undefined) {
    global.navigator = navigator = {};
  }

  polyfillObjectProperty(navigator, 'product', function () {
    return 'ReactNative';
  });
},14533,[14473]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  if (!global.RN$Bridgeless) {
    var BatchedBridge = _$$_REQUIRE(_dependencyMap[0]);

    BatchedBridge.registerLazyCallableModule('Systrace', function () {
      return _$$_REQUIRE(_dependencyMap[1]);
    });
    BatchedBridge.registerLazyCallableModule('JSTimers', function () {
      return _$$_REQUIRE(_dependencyMap[2]);
    });
    BatchedBridge.registerLazyCallableModule('HeapCapture', function () {
      return _$$_REQUIRE(_dependencyMap[3]);
    });
    BatchedBridge.registerLazyCallableModule('SamplingProfiler', function () {
      return _$$_REQUIRE(_dependencyMap[4]);
    });
    BatchedBridge.registerLazyCallableModule('RCTLog', function () {
      return _$$_REQUIRE(_dependencyMap[5]);
    });
    BatchedBridge.registerLazyCallableModule('RCTDeviceEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[6]);
    });
    BatchedBridge.registerLazyCallableModule('RCTNativeAppEventEmitter', function () {
      return _$$_REQUIRE(_dependencyMap[7]);
    });
    BatchedBridge.registerLazyCallableModule('GlobalPerformanceLogger', function () {
      return _$$_REQUIRE(_dependencyMap[8]);
    });
    BatchedBridge.registerLazyCallableModule('JSDevSupportModule', function () {
      return _$$_REQUIRE(_dependencyMap[9]);
    });
    {
      BatchedBridge.registerCallableModule('HMRClient', _$$_REQUIRE(_dependencyMap[10]));
    }
  }
},14536,[10045,10054,10063,14539,10261,10264,10087,10267,14548,10276,14557]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeHeapCapture = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var HeapCapture = {
    captureHeap: function captureHeap(path) {
      var error = null;

      try {
        global.nativeCaptureHeap(path);
      } catch (e) {
        error = e.toString();
      }

      if (_NativeHeapCapture.default) {
        _NativeHeapCapture.default.captureComplete(path, error);
      }
    }
  };
  module.exports = HeapCapture;
},14539,[14305,14542]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeapCapture');

  exports.default = _default;
},14542,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSCSamplingProfiler');

  exports.default = _default;
},14545,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var createPerformanceLogger = _$$_REQUIRE(_dependencyMap[0]);

  var GlobalPerformanceLogger = createPerformanceLogger();
  module.exports = GlobalPerformanceLogger;
},14548,[14551]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Systrace = _$$_REQUIRE(_dependencyMap[0]);

  var infoLog = _$$_REQUIRE(_dependencyMap[1]);

  var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2]);

  var _cookies = {};
  var PRINT_TO_CONSOLE = false;

  function createPerformanceLogger() {
    var result = {
      _timespans: {},
      _extras: {},
      _points: {},
      addTimespan: function addTimespan(key, lengthInMs, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          totalTime: lengthInMs
        };
      },
      startTimespan: function startTimespan(key, description) {
        if (this._timespans[key]) {
          return;
        }

        this._timespans[key] = {
          description: description,
          startTime: performanceNow()
        };
        _cookies[key] = Systrace.beginAsyncEvent(key);
      },
      stopTimespan: function stopTimespan(key) {
        var timespan = this._timespans[key];

        if (!timespan || !timespan.startTime) {
          return;
        }

        if (timespan.endTime) {
          return;
        }

        timespan.endTime = performanceNow();
        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);
        Systrace.endAsyncEvent(key, _cookies[key]);
        delete _cookies[key];
      },
      clear: function clear() {
        this._timespans = {};
        this._extras = {};
        this._points = {};
      },
      clearCompleted: function clearCompleted() {
        for (var _key in this._timespans) {
          if (this._timespans[_key].totalTime) {
            delete this._timespans[_key];
          }
        }

        this._extras = {};
        this._points = {};
      },
      clearExceptTimespans: function clearExceptTimespans(keys) {
        this._timespans = Object.keys(this._timespans).reduce(function (previous, key) {
          if (keys.indexOf(key) !== -1) {
            previous[key] = this._timespans[key];
          }

          return previous;
        }, {});
        this._extras = {};
        this._points = {};
      },
      currentTimestamp: function currentTimestamp() {
        return performanceNow();
      },
      getTimespans: function getTimespans() {
        return this._timespans;
      },
      hasTimespan: function hasTimespan(key) {
        return !!this._timespans[key];
      },
      logTimespans: function logTimespans() {},
      addTimespans: function addTimespans(newTimespans, labels) {
        for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {
          var label = labels[ii / 2];
          this.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);
        }
      },
      setExtra: function setExtra(key, value) {
        if (this._extras[key]) {
          return;
        }

        this._extras[key] = value;
      },
      getExtras: function getExtras() {
        return this._extras;
      },
      removeExtra: function removeExtra(key) {
        var value = this._extras[key];
        delete this._extras[key];
        return value;
      },
      logExtras: function logExtras() {},
      markPoint: function markPoint(key, timestamp) {
        var _timestamp;

        if (this._points[key]) {
          return;
        }

        this._points[key] = (_timestamp = timestamp) != null ? _timestamp : performanceNow();
      },
      getPoints: function getPoints() {
        return this._points;
      },
      logPoints: function logPoints() {},
      logEverything: function logEverything() {
        this.logTimespans();
        this.logExtras();
        this.logPoints();
      }
    };
    return result;
  }

  module.exports = createPerformanceLogger;
},14551,[10054,10273,14491]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('JSDevSupport');

  exports.default = _default;
},14554,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var HMRClientProdShim = {
    setup: function setup() {},
    enable: function enable() {},
    disable: function disable() {},
    registerBundle: function registerBundle() {},
    log: function log() {}
  };
  module.exports = HMRClientProdShim;
},14557,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function __fetchSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    SegmentFetcher.fetchSegment(segmentId, options, function (errorObject) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null);
    });
  }

  global.__fetchSegment = __fetchSegment;

  function __getSegment(segmentId, options, callback) {
    var SegmentFetcher = _$$_REQUIRE(_dependencyMap[0]).default;

    if (!SegmentFetcher.getSegment) {
      throw new Error('SegmentFetcher.getSegment must be defined');
    }

    SegmentFetcher.getSegment(segmentId, options, function (errorObject, path) {
      if (errorObject) {
        var error = new Error(errorObject.message);
        error.code = errorObject.code;
        callback(error);
      }

      callback(null, path);
    });
  }

  global.__getSegment = __getSegment;
},14560,[14563]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SegmentFetcher');

  exports.default = _default;
},14563,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = {
    get BatchedBridge() {
      return _$$_REQUIRE(_dependencyMap[0]);
    },

    get ExceptionsManager() {
      return _$$_REQUIRE(_dependencyMap[1]);
    },

    get Platform() {
      return _$$_REQUIRE(_dependencyMap[2]);
    },

    get RCTEventEmitter() {
      return _$$_REQUIRE(_dependencyMap[3]);
    },

    get ReactNativeViewConfigRegistry() {
      return _$$_REQUIRE(_dependencyMap[4]);
    },

    get TextInputState() {
      return _$$_REQUIRE(_dependencyMap[5]);
    },

    get UIManager() {
      return _$$_REQUIRE(_dependencyMap[6]);
    },

    get deepDiffer() {
      return _$$_REQUIRE(_dependencyMap[7]);
    },

    get deepFreezeAndThrowOnMutationInDev() {
      return _$$_REQUIRE(_dependencyMap[8]);
    },

    get flattenStyle() {
      return _$$_REQUIRE(_dependencyMap[9]);
    },

    get ReactFiberErrorDialog() {
      return _$$_REQUIRE(_dependencyMap[10]);
    }

  };
},14566,[10045,10141,10066,10282,14569,10285,10279,10288,10057,10291,14572]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var customBubblingEventTypes = {};
  var customDirectEventTypes = {};
  exports.customBubblingEventTypes = customBubblingEventTypes;
  exports.customDirectEventTypes = customDirectEventTypes;
  var viewConfigCallbacks = new Map();
  var viewConfigs = new Map();

  function processEventTypes(viewConfig) {
    var bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;

    if (bubblingEventTypes != null) {
      for (var _topLevelType in bubblingEventTypes) {
        if (customBubblingEventTypes[_topLevelType] == null) {
          customBubblingEventTypes[_topLevelType] = bubblingEventTypes[_topLevelType];
        }
      }
    }

    if (directEventTypes != null) {
      for (var _topLevelType2 in directEventTypes) {
        if (customDirectEventTypes[_topLevelType2] == null) {
          customDirectEventTypes[_topLevelType2] = directEventTypes[_topLevelType2];
        }
      }
    }
  }

  exports.register = function (name, callback) {
    invariant(!viewConfigCallbacks.has(name), 'Tried to register two views with the same name %s', name);
    viewConfigCallbacks.set(name, callback);
    return name;
  };

  exports.get = function (name) {
    var viewConfig;

    if (!viewConfigs.has(name)) {
      var callback = viewConfigCallbacks.get(name);

      if (typeof callback !== 'function') {
        invariant(false, 'View config not found for name %s.%s', name, typeof name[0] === 'string' && /[a-z]/.test(name[0]) ? ' Make sure to start component names with a capital letter.' : '');
      }

      viewConfigCallbacks.set(name, null);
      viewConfig = callback();
      processEventTypes(viewConfig);
      viewConfigs.set(name, viewConfig);
    } else {
      viewConfig = viewConfigs.get(name);
    }

    invariant(viewConfig, 'View config not found for name %s', name);
    return viewConfig;
  };
},14569,[14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _ExceptionsManager = _$$_REQUIRE(_dependencyMap[0]);

  function showErrorDialog(capturedError) {
    var componentStack = capturedError.componentStack,
        error = capturedError.error;
    var errorToHandle;

    if (error instanceof Error) {
      errorToHandle = error;
    } else if (typeof error === 'string') {
      errorToHandle = new _ExceptionsManager.SyntheticError(error);
    } else {
      errorToHandle = new _ExceptionsManager.SyntheticError('Unspecified error');
    }

    try {
      errorToHandle.componentStack = componentStack;
    } catch (e) {}

    (0, _ExceptionsManager.handleException)(errorToHandle, false);
    return false;
  }

  module.exports = {
    showErrorDialog: showErrorDialog
  };
},14572,[10141]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  {
    module.exports = _$$_REQUIRE(_dependencyMap[0]);
  }
},14575,[14578]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /** @license React v0.15.0
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var _d = undefined,
      e = undefined,
      g = undefined,
      m = undefined,
      n = undefined;
  exports.unstable_now = undefined;
  exports.unstable_forceFrameRate = undefined;

  if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var p = null,
        q = null,
        r = function r() {
      if (null !== p) try {
        var a = exports.unstable_now();
        p(true, a);
        p = null;
      } catch (b) {
        throw setTimeout(r, 0), b;
      }
    };

    exports.unstable_now = function () {
      return Date.now();
    };

    _d = function d(a) {
      null !== p ? setTimeout(_d, 0, a) : (p = a, setTimeout(r, 0));
    };

    e = function e(a, b) {
      q = setTimeout(a, b);
    };

    g = function g() {
      clearTimeout(q);
    };

    m = function m() {
      return false;
    };

    n = exports.unstable_forceFrameRate = function () {};
  } else {
    var t = window.performance,
        u = window.Date,
        v = window.setTimeout,
        w = window.clearTimeout,
        x = window.requestAnimationFrame,
        y = window.cancelAnimationFrame;
    "undefined" !== typeof console && ("function" !== typeof x && undefined, "function" !== typeof y && undefined);
    exports.unstable_now = "object" === typeof t && "function" === typeof t.now ? function () {
      return t.now();
    } : function () {
      return u.now();
    };
    var z = false,
        A = null,
        B = -1,
        C = -1,
        D = 33.33,
        E = -1,
        F = -1,
        G = 0,
        H = false;

    m = function m() {
      return exports.unstable_now() >= G;
    };

    n = function n() {};

    exports.unstable_forceFrameRate = function (a) {
      0 > a || 125 < a ? undefined : 0 < a ? (D = Math.floor(1E3 / a), H = true) : (D = 33.33, H = false);
    };

    var J = function J() {
      if (null !== A) {
        var a = exports.unstable_now(),
            b = 0 < G - a;

        try {
          A(b, a) || (A = null);
        } catch (c) {
          throw I.postMessage(null), c;
        }
      }
    },
        K = new MessageChannel(),
        I = K.port2;

    K.port1.onmessage = J;

    var L = function L(a) {
      if (null === A) F = E = -1, z = false;else {
        z = true;
        x(function (a) {
          w(B);
          L(a);
        });

        var b = function b() {
          G = exports.unstable_now() + D / 2;
          J();
          B = v(b, 3 * D);
        };

        B = v(b, 3 * D);

        if (-1 !== E && .1 < a - E) {
          var c = a - E;
          !H && -1 !== F && c < D && F < D && (D = c < F ? F : c, 8.33 > D && (D = 8.33));
          F = c;
        }

        E = a;
        G = a + D;
        I.postMessage(null);
      }
    };

    _d = function _d(a) {
      A = a;
      z || (z = true, x(function (a) {
        L(a);
      }));
    };

    e = function e(a, b) {
      C = v(function () {
        a(exports.unstable_now());
      }, b);
    };

    g = function g() {
      w(C);
      C = -1;
    };
  }

  var M = null,
      N = null,
      O = null,
      P = 3,
      Q = false,
      R = false,
      S = false;

  function T(a, b) {
    var c = a.next;
    if (c === a) M = null;else {
      a === M && (M = c);
      var f = a.previous;
      f.next = c;
      c.previous = f;
    }
    a.next = a.previous = null;
    c = a.callback;
    f = P;
    var l = O;
    P = a.priorityLevel;
    O = a;

    try {
      var h = a.expirationTime <= b;

      switch (P) {
        case 1:
          var k = c(h);
          break;

        case 2:
          k = c(h);
          break;

        case 3:
          k = c(h);
          break;

        case 4:
          k = c(h);
          break;

        case 5:
          k = c(h);
      }
    } catch (Z) {
      throw Z;
    } finally {
      P = f, O = l;
    }

    if ("function" === typeof k) if (b = a.expirationTime, a.callback = k, null === M) M = a.next = a.previous = a;else {
      k = null;
      h = M;

      do {
        if (b <= h.expirationTime) {
          k = h;
          break;
        }

        h = h.next;
      } while (h !== M);

      null === k ? k = M : k === M && (M = a);
      b = k.previous;
      b.next = k.previous = a;
      a.next = k;
      a.previous = b;
    }
  }

  function U(a) {
    if (null !== N && N.startTime <= a) {
      do {
        var b = N,
            c = b.next;
        if (b === c) N = null;else {
          N = c;
          var f = b.previous;
          f.next = c;
          c.previous = f;
        }
        b.next = b.previous = null;
        V(b, b.expirationTime);
      } while (null !== N && N.startTime <= a);
    }
  }

  function W(a) {
    S = false;
    U(a);
    R || (null !== M ? (R = true, _d(X)) : null !== N && e(W, N.startTime - a));
  }

  function X(a, b) {
    R = false;
    S && (S = false, g());
    U(b);
    Q = true;

    try {
      if (!a) for (; null !== M && M.expirationTime <= b;) {
        T(M, b), b = exports.unstable_now(), U(b);
      } else if (null !== M) {
        do {
          T(M, b), b = exports.unstable_now(), U(b);
        } while (null !== M && !m());
      }
      if (null !== M) return true;
      null !== N && e(W, N.startTime - b);
      return false;
    } finally {
      Q = false;
    }
  }

  function Y(a) {
    switch (a) {
      case 1:
        return -1;

      case 2:
        return 250;

      case 5:
        return 1073741823;

      case 4:
        return 1E4;

      default:
        return 5E3;
    }
  }

  function V(a, b) {
    if (null === M) M = a.next = a.previous = a;else {
      var c = null,
          f = M;

      do {
        if (b < f.expirationTime) {
          c = f;
          break;
        }

        f = f.next;
      } while (f !== M);

      null === c ? c = M : c === M && (M = a);
      b = c.previous;
      b.next = c.previous = a;
      a.next = c;
      a.previous = b;
    }
  }

  var aa = n;
  exports.unstable_ImmediatePriority = 1;
  exports.unstable_UserBlockingPriority = 2;
  exports.unstable_NormalPriority = 3;
  exports.unstable_IdlePriority = 5;
  exports.unstable_LowPriority = 4;

  exports.unstable_runWithPriority = function (a, b) {
    switch (a) {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;

      default:
        a = 3;
    }

    var c = P;
    P = a;

    try {
      return b();
    } finally {
      P = c;
    }
  };

  exports.unstable_next = function (a) {
    switch (P) {
      case 1:
      case 2:
      case 3:
        var b = 3;
        break;

      default:
        b = P;
    }

    var c = P;
    P = b;

    try {
      return a();
    } finally {
      P = c;
    }
  };

  exports.unstable_scheduleCallback = function (a, b, c) {
    var f = exports.unstable_now();

    if ("object" === typeof c && null !== c) {
      var l = c.delay;
      l = "number" === typeof l && 0 < l ? f + l : f;
      c = "number" === typeof c.timeout ? c.timeout : Y(a);
    } else c = Y(a), l = f;

    c = l + c;
    a = {
      callback: b,
      priorityLevel: a,
      startTime: l,
      expirationTime: c,
      next: null,
      previous: null
    };

    if (l > f) {
      c = l;
      if (null === N) N = a.next = a.previous = a;else {
        b = null;
        var h = N;

        do {
          if (c < h.startTime) {
            b = h;
            break;
          }

          h = h.next;
        } while (h !== N);

        null === b ? b = N : b === N && (N = a);
        c = b.previous;
        c.next = b.previous = a;
        a.next = b;
        a.previous = c;
      }
      null === M && N === a && (S ? g() : S = true, e(W, l - f));
    } else V(a, c), R || Q || (R = true, _d(X));

    return a;
  };

  exports.unstable_cancelCallback = function (a) {
    var b = a.next;

    if (null !== b) {
      if (a === b) a === M ? M = null : a === N && (N = null);else {
        a === M ? M = b : a === N && (N = b);
        var c = a.previous;
        c.next = b;
        b.previous = c;
      }
      a.next = a.previous = null;
    }
  };

  exports.unstable_wrapCallback = function (a) {
    var b = P;
    return function () {
      var c = P;
      P = b;

      try {
        return a.apply(this, arguments);
      } finally {
        P = c;
      }
    };
  };

  exports.unstable_getCurrentPriorityLevel = function () {
    return P;
  };

  exports.unstable_shouldYield = function () {
    var a = exports.unstable_now();
    U(a);
    return null !== O && null !== M && M.startTime <= a && M.expirationTime < O.expirationTime || m();
  };

  exports.unstable_requestPaint = aa;

  exports.unstable_continueExecution = function () {
    R || Q || (R = true, _d(X));
  };

  exports.unstable_pauseExecution = function () {};

  exports.unstable_getFirstCallbackNode = function () {
    return M;
  };
},14578,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ReactNativeViewViewConfigAndroid = {
    uiViewClassName: 'RCTView',
    bubblingEventTypes: {
      topSelect: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        }
      }
    },
    directEventTypes: {
      topClick: {
        registrationName: 'onClick'
      },
      topContentSizeChange: {
        registrationName: 'onContentSizeChange'
      },
      topLoadingError: {
        registrationName: 'onLoadingError'
      },
      topLoadingFinish: {
        registrationName: 'onLoadingFinish'
      },
      topLoadingStart: {
        registrationName: 'onLoadingStart'
      },
      topMessage: {
        registrationName: 'onMessage'
      },
      topMomentumScrollBegin: {
        registrationName: 'onMomentumScrollBegin'
      },
      topMomentumScrollEnd: {
        registrationName: 'onMomentumScrollEnd'
      },
      topScroll: {
        registrationName: 'onScroll'
      },
      topScrollBeginDrag: {
        registrationName: 'onScrollBeginDrag'
      },
      topScrollEndDrag: {
        registrationName: 'onScrollEndDrag'
      },
      topSelectionChange: {
        registrationName: 'onSelectionChange'
      }
    },
    validAttributes: {
      hasTVPreferredFocus: true,
      focusable: true,
      nativeBackgroundAndroid: true,
      nativeForegroundAndroid: true,
      nextFocusDown: true,
      nextFocusForward: true,
      nextFocusLeft: true,
      nextFocusRight: true,
      nextFocusUp: true
    }
  };
  module.exports = ReactNativeViewViewConfigAndroid;
},14581,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _verifyComponentAttributeEquivalence = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfigRegistry = _$$_REQUIRE(_dependencyMap[3]);

  var ReactNativeViewViewConfig = _$$_REQUIRE(_dependencyMap[4]);

  function registerGeneratedViewConfig(componentName, viewConfig) {
    var mergedViewConfig = {
      uiViewClassName: componentName,
      Commands: {},
      bubblingEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.bubblingEventTypes, viewConfig.bubblingEventTypes || {}),
      directEventTypes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.directEventTypes, viewConfig.directEventTypes || {}),
      validAttributes: (0, _objectSpread2.default)({}, ReactNativeViewViewConfig.validAttributes, viewConfig.validAttributes || {})
    };
    ReactNativeViewConfigRegistry.register(componentName, function () {
      (0, _verifyComponentAttributeEquivalence.default)(componentName, mergedViewConfig);
      return mergedViewConfig;
    });
  }

  module.exports = registerGeneratedViewConfig;
},14584,[14305,14314,14587,14569,14590]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.lefthandObjectDiff = lefthandObjectDiff;
  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;
  exports.stringifyViewConfig = stringifyViewConfig;
  exports.default = undefined;

  var _ReactNativeViewViewConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var getNativeComponentAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var IGNORED_KEYS = ['transform', 'hitSlop'];

  function verifyComponentAttributeEquivalence(componentName, config) {}

  function lefthandObjectDiff(leftObj, rightObj) {
    var differentKeys = {};

    function compare(leftItem, rightItem, key) {
      if (typeof leftItem !== typeof rightItem && leftItem != null) {
        differentKeys[key] = rightItem;
        return;
      }

      if (typeof leftItem === 'object') {
        var objDiff = lefthandObjectDiff(leftItem, rightItem);

        if (Object.keys(objDiff).length > 1) {
          differentKeys[key] = objDiff;
        }

        return;
      }

      if (leftItem !== rightItem) {
        differentKeys[key] = rightItem;
        return;
      }
    }

    for (var key in leftObj) {
      if (IGNORED_KEYS.includes(key)) {
        continue;
      }

      if (!rightObj) {
        differentKeys[key] = {};
      } else if (leftObj.hasOwnProperty(key)) {
        compare(leftObj[key], rightObj[key], key);
      }
    }

    return differentKeys;
  }

  function getConfigWithoutViewProps(viewConfig, propName) {
    if (!viewConfig[propName]) {
      return {};
    }

    return Object.keys(viewConfig[propName]).filter(function (prop) {
      return !_ReactNativeViewViewConfig.default[propName][prop];
    }).reduce(function (obj, prop) {
      obj[prop] = viewConfig[propName][prop];
      return obj;
    }, {});
  }

  function stringifyViewConfig(viewConfig) {
    return JSON.stringify(viewConfig, function (key, val) {
      if (typeof val === 'function') {
        return "\u0192 " + val.name;
      }

      return val;
    }, 2);
  }

  var _default = verifyComponentAttributeEquivalence;
  exports.default = _default;
},14587,[14305,14590,14593]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ReactNativeViewViewConfigAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ReactNativeViewConfig = {
    uiViewClassName: 'RCTView',
    baseModuleName: null,
    Manager: 'ViewManager',
    Commands: {},
    Constants: {},
    bubblingEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.bubblingEventTypes, {
      topBlur: {
        phasedRegistrationNames: {
          bubbled: 'onBlur',
          captured: 'onBlurCapture'
        }
      },
      topChange: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        }
      },
      topEndEditing: {
        phasedRegistrationNames: {
          bubbled: 'onEndEditing',
          captured: 'onEndEditingCapture'
        }
      },
      topFocus: {
        phasedRegistrationNames: {
          bubbled: 'onFocus',
          captured: 'onFocusCapture'
        }
      },
      topKeyPress: {
        phasedRegistrationNames: {
          bubbled: 'onKeyPress',
          captured: 'onKeyPressCapture'
        }
      },
      topPress: {
        phasedRegistrationNames: {
          bubbled: 'onPress',
          captured: 'onPressCapture'
        }
      },
      topSubmitEditing: {
        phasedRegistrationNames: {
          bubbled: 'onSubmitEditing',
          captured: 'onSubmitEditingCapture'
        }
      },
      topTouchCancel: {
        phasedRegistrationNames: {
          bubbled: 'onTouchCancel',
          captured: 'onTouchCancelCapture'
        }
      },
      topTouchEnd: {
        phasedRegistrationNames: {
          bubbled: 'onTouchEnd',
          captured: 'onTouchEndCapture'
        }
      },
      topTouchMove: {
        phasedRegistrationNames: {
          bubbled: 'onTouchMove',
          captured: 'onTouchMoveCapture'
        }
      },
      topTouchStart: {
        phasedRegistrationNames: {
          bubbled: 'onTouchStart',
          captured: 'onTouchStartCapture'
        }
      }
    }),
    directEventTypes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.directEventTypes, {
      topAccessibilityAction: {
        registrationName: 'onAccessibilityAction'
      },
      topAccessibilityEscape: {
        registrationName: 'onAccessibilityEscape'
      },
      topAccessibilityTap: {
        registrationName: 'onAccessibilityTap'
      },
      topLayout: {
        registrationName: 'onLayout'
      },
      topMagicTap: {
        registrationName: 'onMagicTap'
      },
      onGestureHandlerEvent: {
        registrationName: 'onGestureHandlerEvent'
      },
      onGestureHandlerStateChange: {
        registrationName: 'onGestureHandlerStateChange'
      }
    }),
    validAttributes: (0, _objectSpread2.default)({}, _ReactNativeViewViewConfigAndroid.default.validAttributes, {
      accessibilityActions: true,
      accessibilityElementsHidden: true,
      accessibilityHint: true,
      accessibilityIgnoresInvertColors: true,
      accessibilityLabel: true,
      accessibilityLiveRegion: true,
      accessibilityRole: true,
      accessibilityStates: true,
      accessibilityState: true,
      accessibilityViewIsModal: true,
      accessible: true,
      alignContent: true,
      alignItems: true,
      alignSelf: true,
      aspectRatio: true,
      backfaceVisibility: true,
      backgroundColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderBottomEndRadius: true,
      borderBottomLeftRadius: true,
      borderBottomRightRadius: true,
      borderBottomStartRadius: true,
      borderBottomWidth: true,
      borderColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderEndWidth: true,
      borderLeftColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderLeftWidth: true,
      borderRadius: true,
      borderRightColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderRightWidth: true,
      borderStartColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderStartWidth: true,
      borderStyle: true,
      borderTopColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      borderTopEndRadius: true,
      borderTopLeftRadius: true,
      borderTopRightRadius: true,
      borderTopStartRadius: true,
      borderTopWidth: true,
      borderWidth: true,
      bottom: true,
      clickable: true,
      collapsable: true,
      direction: true,
      display: true,
      elevation: true,
      end: true,
      flex: true,
      flexBasis: true,
      flexDirection: true,
      flexGrow: true,
      flexShrink: true,
      flexWrap: true,
      height: true,
      hitSlop: {
        diff: _$$_REQUIRE(_dependencyMap[4])
      },
      importantForAccessibility: true,
      justifyContent: true,
      left: true,
      margin: true,
      marginBottom: true,
      marginEnd: true,
      marginHorizontal: true,
      marginLeft: true,
      marginRight: true,
      marginStart: true,
      marginTop: true,
      marginVertical: true,
      maxHeight: true,
      maxWidth: true,
      minHeight: true,
      minWidth: true,
      nativeID: true,
      needsOffscreenAlphaCompositing: true,
      onAccessibilityAction: true,
      onAccessibilityEscape: true,
      onAccessibilityTap: true,
      onLayout: true,
      onMagicTap: true,
      opacity: true,
      overflow: true,
      padding: true,
      paddingBottom: true,
      paddingEnd: true,
      paddingHorizontal: true,
      paddingLeft: true,
      paddingRight: true,
      paddingStart: true,
      paddingTop: true,
      paddingVertical: true,
      pointerEvents: true,
      position: true,
      removeClippedSubviews: true,
      renderToHardwareTextureAndroid: true,
      right: true,
      rotation: true,
      scaleX: true,
      scaleY: true,
      shadowColor: {
        process: _$$_REQUIRE(_dependencyMap[3])
      },
      shadowOffset: {
        diff: _$$_REQUIRE(_dependencyMap[5])
      },
      shadowOpacity: true,
      shadowRadius: true,
      shouldRasterizeIOS: true,
      start: true,
      style: {
        alignContent: true,
        alignItems: true,
        alignSelf: true,
        aspectRatio: true,
        backfaceVisibility: true,
        backgroundColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderBottomEndRadius: true,
        borderBottomLeftRadius: true,
        borderBottomRightRadius: true,
        borderBottomStartRadius: true,
        borderBottomWidth: true,
        borderColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderEndWidth: true,
        borderLeftColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderLeftWidth: true,
        borderRadius: true,
        borderRightColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderRightWidth: true,
        borderStartColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderStartWidth: true,
        borderStyle: true,
        borderTopColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        borderTopEndRadius: true,
        borderTopLeftRadius: true,
        borderTopRightRadius: true,
        borderTopStartRadius: true,
        borderTopWidth: true,
        borderWidth: true,
        bottom: true,
        color: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        decomposedMatrix: true,
        direction: true,
        display: true,
        elevation: true,
        end: true,
        flex: true,
        flexBasis: true,
        flexDirection: true,
        flexGrow: true,
        flexShrink: true,
        flexWrap: true,
        fontFamily: true,
        fontSize: true,
        fontStyle: true,
        fontVariant: true,
        fontWeight: true,
        height: true,
        includeFontPadding: true,
        justifyContent: true,
        left: true,
        letterSpacing: true,
        lineHeight: true,
        margin: true,
        marginBottom: true,
        marginEnd: true,
        marginHorizontal: true,
        marginLeft: true,
        marginRight: true,
        marginStart: true,
        marginTop: true,
        marginVertical: true,
        maxHeight: true,
        maxWidth: true,
        minHeight: true,
        minWidth: true,
        opacity: true,
        overflow: true,
        overlayColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        padding: true,
        paddingBottom: true,
        paddingEnd: true,
        paddingHorizontal: true,
        paddingLeft: true,
        paddingRight: true,
        paddingStart: true,
        paddingTop: true,
        paddingVertical: true,
        position: true,
        resizeMode: true,
        right: true,
        rotation: true,
        scaleX: true,
        scaleY: true,
        shadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        shadowOffset: {
          diff: _$$_REQUIRE(_dependencyMap[5])
        },
        shadowOpacity: true,
        shadowRadius: true,
        start: true,
        textAlign: true,
        textAlignVertical: true,
        textDecorationColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textDecorationLine: true,
        textDecorationStyle: true,
        textShadowColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        textShadowOffset: true,
        textShadowRadius: true,
        textTransform: true,
        tintColor: {
          process: _$$_REQUIRE(_dependencyMap[3])
        },
        top: true,
        transform: {
          diff: _$$_REQUIRE(_dependencyMap[6])
        },
        transformMatrix: true,
        translateX: true,
        translateY: true,
        width: true,
        writingDirection: true,
        zIndex: true
      },
      testID: true,
      top: true,
      transform: {
        diff: _$$_REQUIRE(_dependencyMap[6])
      },
      translateX: true,
      translateY: true,
      width: true,
      zIndex: true
    })
  };
  module.exports = ReactNativeViewConfig;
},14590,[14305,14314,14581,10393,10408,10402,10411]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectSpread = _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativeStyleAttributes = _$$_REQUIRE(_dependencyMap[2]);

  var UIManager = _$$_REQUIRE(_dependencyMap[3]);

  var insetsDiffer = _$$_REQUIRE(_dependencyMap[4]);

  var invariant = _$$_REQUIRE(_dependencyMap[5]);

  var matricesDiffer = _$$_REQUIRE(_dependencyMap[6]);

  var pointsDiffer = _$$_REQUIRE(_dependencyMap[7]);

  var processColor = _$$_REQUIRE(_dependencyMap[8]);

  var processColorArray = _$$_REQUIRE(_dependencyMap[9]);

  var resolveAssetSource = _$$_REQUIRE(_dependencyMap[10]);

  var sizesDiffer = _$$_REQUIRE(_dependencyMap[11]);

  var warning = _$$_REQUIRE(_dependencyMap[12]);

  function getNativeComponentAttributes(uiViewClassName) {
    var viewConfig = UIManager.getViewManagerConfig(uiViewClassName);
    invariant(viewConfig != null && viewConfig.NativeProps != null, 'requireNativeComponent: "%s" was not found in the UIManager.', uiViewClassName);
    var baseModuleName = viewConfig.baseModuleName,
        bubblingEventTypes = viewConfig.bubblingEventTypes,
        directEventTypes = viewConfig.directEventTypes;
    var nativeProps = viewConfig.NativeProps;

    while (baseModuleName) {
      var baseModule = UIManager.getViewManagerConfig(baseModuleName);

      if (!baseModule) {
        warning(false, 'Base module "%s" does not exist', baseModuleName);
        baseModuleName = null;
      } else {
        bubblingEventTypes = _objectSpread({}, baseModule.bubblingEventTypes, bubblingEventTypes);
        directEventTypes = _objectSpread({}, baseModule.directEventTypes, directEventTypes);
        nativeProps = _objectSpread({}, baseModule.NativeProps, nativeProps);
        baseModuleName = baseModule.baseModuleName;
      }
    }

    var validAttributes = {};

    for (var key in nativeProps) {
      var typeName = nativeProps[key];
      var diff = getDifferForType(typeName);
      var process = getProcessorForType(typeName);
      validAttributes[key] = diff == null && process == null ? true : {
        diff: diff,
        process: process
      };
    }

    validAttributes.style = ReactNativeStyleAttributes;

    _extends(viewConfig, {
      uiViewClassName: uiViewClassName,
      validAttributes: validAttributes,
      bubblingEventTypes: bubblingEventTypes,
      directEventTypes: directEventTypes
    });

    if (!hasAttachedDefaultEventTypes) {
      attachDefaultEventTypes(viewConfig);
      hasAttachedDefaultEventTypes = true;
    }

    return viewConfig;
  }

  var hasAttachedDefaultEventTypes = false;

  function attachDefaultEventTypes(viewConfig) {
    var constants = UIManager.getConstants();

    if (constants.ViewManagerNames || constants.LazyViewManagersEnabled) {
      viewConfig = merge(viewConfig, UIManager.getDefaultEventTypes());
    } else {
      viewConfig.bubblingEventTypes = merge(viewConfig.bubblingEventTypes, constants.genericBubblingEventTypes);
      viewConfig.directEventTypes = merge(viewConfig.directEventTypes, constants.genericDirectEventTypes);
    }
  }

  function merge(destination, source) {
    if (!source) {
      return destination;
    }

    if (!destination) {
      return source;
    }

    for (var key in source) {
      if (!source.hasOwnProperty(key)) {
        continue;
      }

      var sourceValue = source[key];

      if (destination.hasOwnProperty(key)) {
        var destinationValue = destination[key];

        if (typeof sourceValue === 'object' && typeof destinationValue === 'object') {
          sourceValue = merge(destinationValue, sourceValue);
        }
      }

      destination[key] = sourceValue;
    }

    return destination;
  }

  function getDifferForType(typeName) {
    switch (typeName) {
      case 'CATransform3D':
        return matricesDiffer;

      case 'CGPoint':
        return pointsDiffer;

      case 'CGSize':
        return sizesDiffer;

      case 'UIEdgeInsets':
        return insetsDiffer;
    }

    return null;
  }

  function getProcessorForType(typeName) {
    switch (typeName) {
      case 'CGColor':
      case 'UIColor':
        return processColor;

      case 'CGColorArray':
      case 'UIColorArray':
        return processColorArray;

      case 'CGImage':
      case 'UIImage':
      case 'RCTImageSource':
        return resolveAssetSource;

      case 'Color':
        return processColor;

      case 'ColorArray':
        return processColorArray;
    }

    return null;
  }

  module.exports = getNativeComponentAttributes;
},14593,[14344,14314,10378,10279,10408,14326,10411,10414,10393,14596,10417,10402,14332]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var processColor = _$$_REQUIRE(_dependencyMap[0]);

  function processColorArray(colors) {
    return colors == null ? null : colors.map(processColor);
  }

  module.exports = processColorArray;
},14596,[10393]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var androidScaleSuffix = {
    '0.75': 'ldpi',
    '1': 'mdpi',
    '1.5': 'hdpi',
    '2': 'xhdpi',
    '3': 'xxhdpi',
    '4': 'xxxhdpi'
  };

  function getAndroidAssetSuffix(scale) {
    if (scale.toString() in androidScaleSuffix) {
      return androidScaleSuffix[scale.toString()];
    }

    throw new Error('no such scale ' + scale.toString());
  }

  var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

  function getAndroidResourceFolderName(asset, scale) {
    if (!drawableFileTypes.has(asset.type)) {
      return 'raw';
    }

    var suffix = getAndroidAssetSuffix(scale);

    if (!suffix) {
      throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
    }

    var androidFolder = 'drawable-' + suffix;
    return androidFolder;
  }

  function getAndroidResourceIdentifier(asset) {
    var folderPath = getBasePath(asset);
    return (folderPath + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
  }

  function getBasePath(asset) {
    var basePath = asset.httpServerLocation;

    if (basePath[0] === '/') {
      basePath = basePath.substr(1);
    }

    return basePath;
  }

  module.exports = {
    getAndroidAssetSuffix: getAndroidAssetSuffix,
    getAndroidResourceFolderName: getAndroidResourceFolderName,
    getAndroidResourceIdentifier: getAndroidResourceIdentifier,
    getBasePath: getBasePath
  };
},14599,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('SourceCode');

  exports.default = _default;
},14602,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidProgressBar');

  exports.default = _default;
},14605,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _requireNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  function codegenNativeComponent(componentName, options) {
    var componentNameInUse = options && options.paperComponentName ? options.paperComponentName : componentName;

    if (options != null && options.paperComponentNameDeprecated != null) {
      if (_reactNative.UIManager.getViewManagerConfig(componentName)) {
        componentNameInUse = componentName;
      } else if (options.paperComponentNameDeprecated != null && _reactNative.UIManager.getViewManagerConfig(options.paperComponentNameDeprecated)) {
        componentNameInUse = options.paperComponentNameDeprecated;
      } else {
        throw new Error("Failed to find native component for either " + componentName + " or " + (options.paperComponentNameDeprecated || '(unknown)'));
      }
    }

    return (0, _requireNativeComponent.default)(componentNameInUse);
  }

  var _default = codegenNativeComponent;
  exports.default = _default;
},14608,[14305,10372,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DeprecatedTextStylePropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedTextStylePropTypes);
  var DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];
  module.exports = {
    ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),
    numberOfLines: PropTypes.number,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onLayout: PropTypes.func,
    onPress: PropTypes.func,
    onLongPress: PropTypes.func,
    pressRetentionOffset: DeprecatedEdgeInsetsPropType,
    selectable: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    suppressHighlighting: PropTypes.bool,
    style: stylePropType,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    accessible: PropTypes.bool,
    adjustsFontSizeToFit: PropTypes.bool,
    minimumFontScale: PropTypes.number,
    disabled: PropTypes.bool,
    dataDetectorType: PropTypes.oneOf(DataDetectorTypes)
  };
},14611,[14419,14614,14617,10318,14434]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = PropTypes.shape({
    top: PropTypes.number,
    left: PropTypes.number,
    bottom: PropTypes.number,
    right: PropTypes.number
  });
  module.exports = DeprecatedEdgeInsetsPropType;
},14614,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deprecatedCreateStrictShapeTypeChecker = _$$_REQUIRE(_dependencyMap[0]);

  var flattenStyle = _$$_REQUIRE(_dependencyMap[1]);

  function DeprecatedStyleSheetPropType(shape) {
    var shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);
    return function (props, propName, componentName, location) {
      var newProps = props;

      if (props[propName]) {
        newProps = {};
        newProps[propName] = flattenStyle(props[propName]);
      }

      for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {
        rest[_key - 4] = arguments[_key];
      }

      return shapePropType.apply(undefined, [newProps, propName, componentName, location].concat(rest));
    };
  }

  module.exports = DeprecatedStyleSheetPropType;
},14617,[14620,10291]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var merge = _$$_REQUIRE(_dependencyMap[1]);

  function deprecatedCreateStrictShapeTypeChecker(shapeTypes) {
    function checkType(isRequired, props, propName, componentName, location) {
      if (!props[propName]) {
        if (isRequired) {
          invariant(false, "Required object `" + propName + "` was not specified in " + ("`" + componentName + "`."));
        }

        return;
      }

      var propValue = props[propName];
      var propType = typeof propValue;
      var locationName = location || '(unknown)';

      if (propType !== 'object') {
        invariant(false, "Invalid " + locationName + " `" + propName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
      }

      var allKeys = merge(props[propName], shapeTypes);

      for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
        rest[_key - 5] = arguments[_key];
      }

      for (var _key2 in allKeys) {
        var checker = shapeTypes[_key2];

        if (!checker) {
          invariant(false, "Invalid props." + propName + " key `" + _key2 + "` supplied to `" + componentName + "`." + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
        }

        var error = checker.apply(undefined, [propValue, _key2, componentName, location].concat(rest));

        if (error) {
          invariant(false, error.message + '\nBad object: ' + JSON.stringify(props[propName], null, '  '));
        }
      }
    }

    function chainedCheckType(props, propName, componentName, location) {
      for (var _len2 = arguments.length, rest = new Array(_len2 > 4 ? _len2 - 4 : 0), _key3 = 4; _key3 < _len2; _key3++) {
        rest[_key3 - 4] = arguments[_key3];
      }

      return checkType.apply(undefined, [false, props, propName, componentName, location].concat(rest));
    }

    chainedCheckType.isRequired = checkType.bind(null, true);
    return chainedCheckType;
  }

  module.exports = deprecatedCreateStrictShapeTypeChecker;
},14620,[14326,10339]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(false);
},14623,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeTVNavigationEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[3]);

  function TVEventHandler() {
    this.__nativeTVNavigationEventListener = null;
    this.__nativeTVNavigationEventEmitter = null;
  }

  TVEventHandler.prototype.enable = function (component, callback) {
    this.__nativeTVNavigationEventEmitter = new NativeEventEmitter(_NativeTVNavigationEventEmitter.default);
    this.__nativeTVNavigationEventListener = this.__nativeTVNavigationEventEmitter.addListener('onHWKeyEvent', function (data) {
      if (callback) {
        callback(component, data);
      }
    });
  };

  TVEventHandler.prototype.disable = function () {
    if (this.__nativeTVNavigationEventListener) {
      this.__nativeTVNavigationEventListener.remove();

      delete this.__nativeTVNavigationEventListener;
    }

    if (this.__nativeTVNavigationEventEmitter) {
      delete this.__nativeTVNavigationEventEmitter;
    }
  };

  module.exports = TVEventHandler;
},14626,[14305,14629,10066,10198]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TVNavigationEventEmitter');

  exports.default = _default;
},14629,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var invariant = _$$_REQUIRE(_dependencyMap[0]);

  var keyMirror = function keyMirror(obj) {
    var ret = {};
    var key;
    !(obj instanceof Object && !Array.isArray(obj)) ? invariant(false) : undefined;

    for (key in obj) {
      if (!obj.hasOwnProperty(key)) {
        continue;
      }

      ret[key] = key;
    }

    return ret;
  };

  module.exports = keyMirror;
},14632,[14635]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant(...): Second argument must be a string.');
    }
  };

  function invariant(condition, format) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    validateFormat(format);

    if (!condition) {
      var error;

      if (format === undefined) {
        error = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
      } else {
        var argIndex = 0;
        error = new Error(format.replace(/%s/g, function () {
          return String(args[argIndex++]);
        }));
        error.name = 'Invariant Violation';
      }

      error.framesToPop = 1;
      throw error;
    }
  }

  module.exports = invariant;
},14635,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function nullthrows(x, message) {
    if (x != null) {
      return x;
    }

    var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);
    error.framesToPop = 1;
    throw error;
  }

  module.exports = nullthrows;
  module.exports.default = nullthrows;
  Object.defineProperty(module.exports, '__esModule', {
    value: true
  });
},14638,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  module.exports = {
    DeprecatedAccessibilityRoles: ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'],
    DeprecatedAccessibilityStates: ['selected', 'disabled', 'checked', 'unchecked', 'busy', 'expanded', 'collapsed', 'hasPopup']
  };
},14641,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var _require = _$$_REQUIRE(_dependencyMap[1]),
      AnimatedEvent = _require.AnimatedEvent,
      attachNativeEvent = _require.attachNativeEvent;

  var AnimatedImplementation = _$$_REQUIRE(_dependencyMap[2]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[3]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[4]);

  var AnimatedProps = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[7]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[8]);

  var emptyAnimation = {
    start: function start() {},
    stop: function stop() {},
    reset: function reset() {},
    _startNativeLoop: function _startNativeLoop() {},
    _isUsingNativeDriver: function _isUsingNativeDriver() {
      return false;
    }
  };

  var spring = function spring(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var timing = function timing(value, config) {
    var anyValue = value;
    return _objectSpread({}, emptyAnimation, {
      start: function start(callback) {
        anyValue.setValue(config.toValue);
        callback && callback({
          finished: true
        });
      }
    });
  };

  var decay = function decay(value, config) {
    return emptyAnimation;
  };

  var sequence = function sequence(animations) {
    return emptyAnimation;
  };

  var parallel = function parallel(animations, config) {
    return emptyAnimation;
  };

  var delay = function delay(time) {
    return emptyAnimation;
  };

  var stagger = function stagger(time, animations) {
    return emptyAnimation;
  };

  var loop = function loop(animation) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$iterations = _ref.iterations,
        iterations = _ref$iterations === undefined ? -1 : _ref$iterations;

    return emptyAnimation;
  };

  var event = function event(argMapping, config) {
    return null;
  };

  module.exports = {
    Value: AnimatedValue,
    ValueXY: AnimatedValueXY,
    Interpolation: AnimatedInterpolation,
    Node: AnimatedNode,
    decay: decay,
    timing: timing,
    spring: spring,
    add: AnimatedImplementation.add,
    subtract: AnimatedImplementation.subtract,
    divide: AnimatedImplementation.divide,
    multiply: AnimatedImplementation.multiply,
    modulo: AnimatedImplementation.modulo,
    diffClamp: AnimatedImplementation.diffClamp,
    delay: delay,
    sequence: sequence,
    parallel: parallel,
    stagger: stagger,
    loop: loop,
    event: event,
    createAnimatedComponent: createAnimatedComponent,
    attachNativeEvent: attachNativeEvent,
    forkEvent: AnimatedImplementation.forkEvent,
    unforkEvent: AnimatedImplementation.unforkEvent,
    Event: AnimatedEvent,
    __PropsOnlyForTests: AnimatedProps
  };
},14644,[14314,10528,10525,10534,10537,10567,10531,10579,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('NativeAnimatedModule');

  exports.default = _default;
},14647,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _get = _$$_REQUIRE(_dependencyMap[4]);

  var _inherits = _$$_REQUIRE(_dependencyMap[5]);

  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[6]);

  var AnimatedNode = _$$_REQUIRE(_dependencyMap[7]);

  var AnimatedValue = _$$_REQUIRE(_dependencyMap[8]);

  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[9]);

  var AnimatedSubtraction = function (_AnimatedWithChildren) {
    _inherits(AnimatedSubtraction, _AnimatedWithChildren);

    function AnimatedSubtraction(a, b) {
      var _this;

      _classCallCheck(this, AnimatedSubtraction);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedSubtraction).call(this));
      _this._a = typeof a === 'number' ? new AnimatedValue(a) : a;
      _this._b = typeof b === 'number' ? new AnimatedValue(b) : b;
      return _this;
    }

    _createClass(AnimatedSubtraction, [{
      key: "__makeNative",
      value: function __makeNative() {
        this._a.__makeNative();

        this._b.__makeNative();

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__makeNative", this).call(this);
      }
    }, {
      key: "__getValue",
      value: function __getValue() {
        return this._a.__getValue() - this._b.__getValue();
      }
    }, {
      key: "interpolate",
      value: function interpolate(config) {
        return new AnimatedInterpolation(this, config);
      }
    }, {
      key: "__attach",
      value: function __attach() {
        this._a.__addChild(this);

        this._b.__addChild(this);
      }
    }, {
      key: "__detach",
      value: function __detach() {
        this._a.__removeChild(this);

        this._b.__removeChild(this);

        _get(_getPrototypeOf(AnimatedSubtraction.prototype), "__detach", this).call(this);
      }
    }, {
      key: "__getNativeConfig",
      value: function __getNativeConfig() {
        return {
          type: 'subtraction',
          input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
        };
      }
    }]);

    return AnimatedSubtraction;
  }(AnimatedWithChildren);

  module.exports = AnimatedSubtraction;
},14650,[14320,14323,14371,14377,14380,14386,10534,10537,10531,10543]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var FlatList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(FlatList, {
    scrollEventThrottle: 0.0001
  });
},14653,[10657,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('AndroidSwipeRefreshLayout');

  exports.default = _default;
},14656,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('PullToRefreshView', {
    paperComponentName: 'RCTRefreshControl'
  });

  exports.default = _default;
},14659,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('FrameRateLogger');

  exports.default = _default;
},14662,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('KeyboardObserver');

  exports.default = _default;
},14665,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var OUTER_PROPS = _extends(Object.create(null), {
    margin: true,
    marginHorizontal: true,
    marginVertical: true,
    marginBottom: true,
    marginTop: true,
    marginLeft: true,
    marginRight: true,
    flex: true,
    flexGrow: true,
    flexShrink: true,
    flexBasis: true,
    alignSelf: true,
    height: true,
    minHeight: true,
    maxHeight: true,
    width: true,
    minWidth: true,
    maxWidth: true,
    position: true,
    left: true,
    right: true,
    bottom: true,
    top: true
  });

  function splitLayoutProps(props) {
    var inner = {};
    var outer = {};

    if (props) {
      Object.keys(props).forEach(function (k) {
        var value = props[k];

        if (OUTER_PROPS[k]) {
          outer[k] = value;
        } else {
          inner[k] = value;
        }
      });
    }

    return {
      outer: outer,
      inner: inner
    };
  }

  module.exports = splitLayoutProps;
},14668,[14344]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Image = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Image);
},14671,[10606,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]);
},14674,[14677]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var runtime = function (exports) {
    "use strict";

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var undefined;
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function wrap(innerFn, outerFn, self, tryLocsList) {
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);
      generator._invoke = makeInvokeMethod(innerFn, self, context);
      return generator;
    }

    exports.wrap = wrap;

    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }

    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";
    var ContinueSentinel = {};

    function Generator() {}

    function GeneratorFunction() {}

    function GeneratorFunctionPrototype() {}

    var IteratorPrototype = {};

    IteratorPrototype[iteratorSymbol] = function () {
      return this;
    };

    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      IteratorPrototype = NativeIteratorPrototype;
    }

    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
    GeneratorFunctionPrototype.constructor = GeneratorFunction;
    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = "GeneratorFunction";

    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        prototype[method] = function (arg) {
          return this._invoke(method, arg);
        };
      });
    }

    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };

    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;

        if (!(toStringTagSymbol in genFun)) {
          genFun[toStringTagSymbol] = "GeneratorFunction";
        }
      }

      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };

    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);

        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;

          if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }

          return PromiseImpl.resolve(value).then(function (unwrapped) {
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            return invoke("throw", error, resolve, reject);
          });
        }
      }

      var previousPromise;

      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }

        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      this._invoke = enqueue;
    }

    defineIteratorMethods(AsyncIterator.prototype);

    AsyncIterator.prototype[asyncIteratorSymbol] = function () {
      return this;
    };

    exports.AsyncIterator = AsyncIterator;

    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === undefined) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };

    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }

        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          return doneResult();
        }

        context.method = method;
        context.arg = arg;

        while (true) {
          var delegate = context.delegate;

          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);

            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }

          if (context.method === "next") {
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }

            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }

          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);

          if (record.type === "normal") {
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;

            if (record.arg === ContinueSentinel) {
              continue;
            }

            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    function maybeInvokeDelegate(delegate, context) {
      var method = delegate.iterator[context.method];

      if (method === undefined) {
        context.delegate = null;

        if (context.method === "throw") {
          if (delegate.iterator["return"]) {
            context.method = "return";
            context.arg = undefined;
            maybeInvokeDelegate(delegate, context);

            if (context.method === "throw") {
              return ContinueSentinel;
            }
          }

          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a 'throw' method");
        }

        return ContinueSentinel;
      }

      var record = tryCatch(method, delegate.iterator, context.arg);

      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }

      var info = record.arg;

      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }

      if (info.done) {
        context[delegate.resultName] = info.value;
        context.next = delegate.nextLoc;

        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined;
        }
      } else {
        return info;
      }

      context.delegate = null;
      return ContinueSentinel;
    }

    defineIteratorMethods(Gp);
    Gp[toStringTagSymbol] = "Generator";

    Gp[iteratorSymbol] = function () {
      return this;
    };

    Gp.toString = function () {
      return "[object Generator]";
    };

    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };

      if (1 in locs) {
        entry.catchLoc = locs[1];
      }

      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }

      this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }

    function Context(tryLocsList) {
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }

    exports.keys = function (object) {
      var keys = [];

      for (var key in object) {
        keys.push(key);
      }

      keys.reverse();
      return function next() {
        while (keys.length) {
          var key = keys.pop();

          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        next.done = true;
        return next;
      };
    };

    function values(iterable) {
      if (iterable) {
        var iteratorMethod = iterable[iteratorSymbol];

        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }

        if (typeof iterable.next === "function") {
          return iterable;
        }

        if (!isNaN(iterable.length)) {
          var i = -1,
              next = function next() {
            while (++i < iterable.length) {
              if (hasOwn.call(iterable, i)) {
                next.value = iterable[i];
                next.done = false;
                return next;
              }
            }

            next.value = undefined;
            next.done = true;
            return next;
          };

          return next.next = next;
        }
      }

      return {
        next: doneResult
      };
    }

    exports.values = values;

    function doneResult() {
      return {
        value: undefined,
        done: true
      };
    }

    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        this.sent = this._sent = undefined;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined;
        this.tryEntries.forEach(resetTryEntry);

        if (!skipTempReset) {
          for (var name in this) {
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;

        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }

        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }

        var context = this;

        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;

          if (caught) {
            context.method = "next";
            context.arg = undefined;
          }

          return !!caught;
        }

        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;

          if (entry.tryLoc === "root") {
            return handle("end");
          }

          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");

            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }

        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          finallyEntry = null;
        }

        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;

        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }

        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }

        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }

        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];

          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;

            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }

            return thrown;
          }
        }

        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };

        if (this.method === "next") {
          this.arg = undefined;
        }

        return ContinueSentinel;
      }
    };
    return exports;
  }(typeof module === "object" ? module.exports : {});

  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
},14677,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var DeprecatedEdgeInsetsPropType = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedStyleSheetPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewStylePropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var PlatformViewPropTypes = _$$_REQUIRE(_dependencyMap[4]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[5]);

  var _require = _$$_REQUIRE(_dependencyMap[6]),
      DeprecatedAccessibilityRoles = _require.DeprecatedAccessibilityRoles,
      DeprecatedAccessibilityStates = _require.DeprecatedAccessibilityStates;

  var stylePropType = DeprecatedStyleSheetPropType(DeprecatedViewStylePropTypes);
  module.exports = _objectSpread({
    accessible: PropTypes.bool,
    accessibilityLabel: PropTypes.node,
    accessibilityHint: PropTypes.string,
    accessibilityActions: PropTypes.arrayOf(PropTypes.string),
    accessibilityIgnoresInvertColors: PropTypes.bool,
    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),
    accessibilityStates: PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityStates)),
    accessibilityState: PropTypes.object,
    accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),
    importantForAccessibility: PropTypes.oneOf(['auto', 'yes', 'no', 'no-hide-descendants']),
    accessibilityViewIsModal: PropTypes.bool,
    accessibilityElementsHidden: PropTypes.bool,
    onAccessibilityAction: PropTypes.func,
    onAccessibilityTap: PropTypes.func,
    onMagicTap: PropTypes.func,
    testID: PropTypes.string,
    nativeID: PropTypes.string,
    onResponderGrant: PropTypes.func,
    onResponderMove: PropTypes.func,
    onResponderReject: PropTypes.func,
    onResponderRelease: PropTypes.func,
    onResponderTerminate: PropTypes.func,
    onResponderTerminationRequest: PropTypes.func,
    onStartShouldSetResponder: PropTypes.func,
    onStartShouldSetResponderCapture: PropTypes.func,
    onMoveShouldSetResponder: PropTypes.func,
    onMoveShouldSetResponderCapture: PropTypes.func,
    hitSlop: DeprecatedEdgeInsetsPropType,
    onLayout: PropTypes.func,
    pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),
    style: stylePropType,
    removeClippedSubviews: PropTypes.bool,
    renderToHardwareTextureAndroid: PropTypes.bool,
    shouldRasterizeIOS: PropTypes.bool,
    collapsable: PropTypes.bool,
    needsOffscreenAlphaCompositing: PropTypes.bool
  }, PlatformViewPropTypes);
},14680,[14314,14614,14617,14437,10348,10318,14641]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var ImageViewNativeComponent = requireNativeComponent('RCTImageView');
  module.exports = ImageViewNativeComponent;
},14683,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  var TextInlineImage = requireNativeComponent('RCTTextInlineImage');
  module.exports = TextInlineImage;
},14686,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var ScrollView = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(ScrollView, {
    scrollEventThrottle: 0.0001
  });
},14689,[10609,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var SectionList = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(SectionList, {
    scrollEventThrottle: 0.0001
  });
},14692,[10744,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var Text = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(Text);
},14695,[10483,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var View = _$$_REQUIRE(_dependencyMap[0]);

  var createAnimatedComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = createAnimatedComponent(View);
},14698,[10447,10603]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = requireNativeComponent('AndroidCheckBox');
},14701,[10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  function setAndForwardRef(_ref) {
    var getForwardedRef = _ref.getForwardedRef,
        setLocalRef = _ref.setLocalRef;
    return function forwardRef(ref) {
      var forwardedRef = getForwardedRef();
      setLocalRef(ref);

      if (typeof forwardedRef === 'function') {
        forwardedRef(ref);
      } else if (typeof forwardedRef === 'object' && forwardedRef != null) {
        forwardedRef.current = ref;
      }
    };
  }

  module.exports = setAndForwardRef;
},14704,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.Commands = undefined;

  var _codegenNativeCommands = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: ['openDrawer', 'closeDrawer']
  });
  exports.Commands = Commands;

  var _default = (0, _codegenNativeComponent.default)('AndroidDrawerLayout');

  exports.default = _default;
},14707,[14308,14305,14710,14608,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _ReactNative = _$$_REQUIRE(_dependencyMap[0]);

  function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach(function (command) {
      commandObj[command] = function (ref) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        (0, _ReactNative.dispatchCommand)(ref, command, args);
      };
    });
    return commandObj;
  }

  var _default = codegenNativeCommands;
  exports.default = _default;
},14710,[10114]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('StatusBarManager');

  exports.default = _default;
},14713,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _RCTInputAccessoryViewNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[7]);

  var Platform = _$$_REQUIRE(_dependencyMap[8]);

  var React = _$$_REQUIRE(_dependencyMap[9]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[10]);

  var InputAccessoryView = function (_React$Component) {
    (0, _inherits2.default)(InputAccessoryView, _React$Component);

    function InputAccessoryView() {
      (0, _classCallCheck2.default)(this, InputAccessoryView);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputAccessoryView).apply(this, arguments));
    }

    (0, _createClass2.default)(InputAccessoryView, [{
      key: "render",
      value: function render() {
        {}

        if (React.Children.count(this.props.children) === 0) {
          return null;
        }

        return React.createElement(_RCTInputAccessoryViewNativeComponent.default, {
          style: [this.props.style, styles.container],
          nativeID: this.props.nativeID,
          backgroundColor: this.props.backgroundColor
        }, this.props.children);
      }
    }]);
    return InputAccessoryView;
  }(React.Component);

  var styles = StyleSheet.create({
    container: {
      position: 'absolute'
    }
  });
  module.exports = InputAccessoryView;
},14746,[14305,14320,14323,14371,14377,14386,14749,14419,10066,10297,10441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('RCTInputAccessoryView');

  exports.default = _default;
},14749,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ModalManager');

  exports.default = _default;
},14752,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('ModalHostView', {
    interfaceOnly: true,
    paperComponentName: 'RCTModalHostView'
  });

  exports.default = _default;
},14755,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = React.createContext(0);
},14758,[10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('I18nManager');

  exports.default = _default;
},14761,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDropdownPicker');
},14764,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  module.exports = (0, _reactNative.requireNativeComponent)('AndroidDialogPicker');
},14767,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1]);

  var Platform = _$$_REQUIRE(_dependencyMap[2]);

  var React = _$$_REQUIRE(_dependencyMap[3]);

  var View = _$$_REQUIRE(_dependencyMap[4]);

  var exported;
  {
    var SafeAreaView = function SafeAreaView(props, forwardedRef) {
      var emulateUnlessSupported = props.emulateUnlessSupported,
          localProps = _objectWithoutProperties(props, ["emulateUnlessSupported"]);

      return React.createElement(View, _extends({}, localProps, {
        ref: forwardedRef
      }));
    };

    var SafeAreaViewRef = React.forwardRef(SafeAreaView);
    SafeAreaViewRef.displayName = 'SafeAreaView';
    exported = SafeAreaViewRef;
  }
  module.exports = exported;
},14770,[14344,14407,10066,10297,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Slider', {
    interfaceOnly: true,
    paperComponentName: 'RCTSlider'
  });

  exports.default = _default;
},14773,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _codegenNativeComponent = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = (0, _codegenNativeComponent.default)('Switch', {
    paperComponentName: 'RCTSwitch'
  });

  exports.default = _default;
},14776,[14305,14608]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _require = _$$_REQUIRE(_dependencyMap[0]),
      NativeComponent = _require.NativeComponent;

  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = requireNativeComponent('AndroidSwitch');
},14779,[10114,10372]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _objectSpread = _$$_REQUIRE(_dependencyMap[0]);

  var PropTypes = _$$_REQUIRE(_dependencyMap[1]);

  var DeprecatedColorPropType = _$$_REQUIRE(_dependencyMap[2]);

  var DeprecatedViewPropTypes = _$$_REQUIRE(_dependencyMap[3]);

  var DocumentSelectionState = _$$_REQUIRE(_dependencyMap[4]);

  var Text = _$$_REQUIRE(_dependencyMap[5]);

  var DataDetectorTypes = ['phoneNumber', 'link', 'address', 'calendarEvent', 'none', 'all'];
  module.exports = _objectSpread({}, DeprecatedViewPropTypes, {
    autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),
    autoCompleteType: PropTypes.oneOf(['cc-csc', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-number', 'email', 'name', 'password', 'postal-code', 'street-address', 'tel', 'username', 'off']),
    autoCorrect: PropTypes.bool,
    spellCheck: PropTypes.bool,
    autoFocus: PropTypes.bool,
    allowFontScaling: PropTypes.bool,
    maxFontSizeMultiplier: PropTypes.number,
    editable: PropTypes.bool,
    keyboardType: PropTypes.oneOf(['default', 'email-address', 'numeric', 'phone-pad', 'number-pad', 'ascii-capable', 'numbers-and-punctuation', 'url', 'name-phone-pad', 'decimal-pad', 'twitter', 'web-search', 'visible-password']),
    keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),
    returnKeyType: PropTypes.oneOf(['done', 'go', 'next', 'search', 'send', 'none', 'previous', 'default', 'emergency-call', 'google', 'join', 'route', 'yahoo']),
    returnKeyLabel: PropTypes.string,
    maxLength: PropTypes.number,
    numberOfLines: PropTypes.number,
    disableFullscreenUI: PropTypes.bool,
    enablesReturnKeyAutomatically: PropTypes.bool,
    multiline: PropTypes.bool,
    textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),
    onBlur: PropTypes.func,
    onFocus: PropTypes.func,
    onChange: PropTypes.func,
    onChangeText: PropTypes.func,
    onContentSizeChange: PropTypes.func,
    onTextInput: PropTypes.func,
    onEndEditing: PropTypes.func,
    onSelectionChange: PropTypes.func,
    onSubmitEditing: PropTypes.func,
    onKeyPress: PropTypes.func,
    onLayout: PropTypes.func,
    onScroll: PropTypes.func,
    placeholder: PropTypes.string,
    placeholderTextColor: DeprecatedColorPropType,
    scrollEnabled: PropTypes.bool,
    secureTextEntry: PropTypes.bool,
    selectionColor: DeprecatedColorPropType,
    selectionState: PropTypes.instanceOf(DocumentSelectionState),
    selection: PropTypes.shape({
      start: PropTypes.number.isRequired,
      end: PropTypes.number
    }),
    value: PropTypes.string,
    defaultValue: PropTypes.string,
    clearButtonMode: PropTypes.oneOf(['never', 'while-editing', 'unless-editing', 'always']),
    clearTextOnFocus: PropTypes.bool,
    selectTextOnFocus: PropTypes.bool,
    blurOnSubmit: PropTypes.bool,
    style: Text.propTypes.style,
    underlineColorAndroid: DeprecatedColorPropType,
    inlineImageLeft: PropTypes.string,
    inlineImagePadding: PropTypes.number,
    rejectResponderTermination: PropTypes.bool,
    dataDetectorTypes: PropTypes.oneOfType([PropTypes.oneOf(DataDetectorTypes), PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes))]),
    caretHidden: PropTypes.bool,
    contextMenuHidden: PropTypes.bool,
    inputAccessoryViewID: PropTypes.string,
    textContentType: PropTypes.oneOf(['none', 'URL', 'addressCity', 'addressCityAndState', 'addressState', 'countryName', 'creditCardNumber', 'emailAddress', 'familyName', 'fullStreetAddress', 'givenName', 'jobTitle', 'location', 'middleName', 'name', 'namePrefix', 'nameSuffix', 'nickname', 'organizationName', 'postalCode', 'streetAddressLine1', 'streetAddressLine2', 'sublocality', 'telephoneNumber', 'username', 'password', 'newPassword', 'oneTimeCode']),
    showSoftInputOnFocus: PropTypes.bool
  });
},14782,[14314,10318,14419,14680,10789,10483]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var keyOf = function keyOf(oneKeyObj) {
    var key;

    for (key in oneKeyObj) {
      if (!oneKeyObj.hasOwnProperty(key)) {
        continue;
      }

      return key;
    }

    return null;
  };

  module.exports = keyOf;
},14785,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ActionSheetManager');

  exports.default = _default;
},14788,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('HeadlessJsTaskSupport');

  exports.default = _default;
},14791,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _wrapNativeSuper2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var HeadlessJsTaskError = function (_Error) {
    (0, _inherits2.default)(HeadlessJsTaskError, _Error);

    function HeadlessJsTaskError() {
      (0, _classCallCheck2.default)(this, HeadlessJsTaskError);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HeadlessJsTaskError).apply(this, arguments));
    }

    return HeadlessJsTaskError;
  }((0, _wrapNativeSuper2.default)(Error));

  exports.default = HeadlessJsTaskError;
},14794,[14305,14320,14371,14377,14386,14458]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('BugReporting');

  exports.default = _default;
},14797,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('RedBox');

  exports.default = _default;
},14800,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _GlobalPerformanceLogger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var PerformanceLoggerContext = React.createContext(_GlobalPerformanceLogger.default);
  module.exports = PerformanceLoggerContext;
},14803,[14305,14308,10297,14548]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var React = _$$_REQUIRE(_dependencyMap[0]);

  var StyleSheet = _$$_REQUIRE(_dependencyMap[1]);

  var Text = _$$_REQUIRE(_dependencyMap[2]);

  var View = _$$_REQUIRE(_dependencyMap[3]);

  function ReactFabricIndicator() {
    return React.createElement(View, {
      style: styles.container
    }, React.createElement(Text, {
      style: styles.text
    }, "FABRIC"));
  }

  var styles = StyleSheet.create({
    container: {
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: 'rgba(0,0,0, 0.25)',
      position: 'absolute',
      top: 0,
      right: 0,
      padding: 2
    },
    text: {
      fontSize: 6,
      color: '#ffffff'
    }
  });
  module.exports = ReactFabricIndicator;
},14806,[10297,10441,10483,10447]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('DeviceEventManager');

  exports.default = _default;
},14809,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[0]);

  var ReactFabric;
  {
    ReactFabric = _$$_REQUIRE(_dependencyMap[1]);
  }

  _ReactNativePrivateInterface.BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);

  module.exports = ReactFabric;
},14812,[14566,14815]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  var _extends = _$$_REQUIRE(_dependencyMap[0]);

  _$$_REQUIRE(_dependencyMap[1]);

  var ReactNativePrivateInterface = _$$_REQUIRE(_dependencyMap[2]),
      React = _$$_REQUIRE(_dependencyMap[3]),
      Scheduler = _$$_REQUIRE(_dependencyMap[4]);

  function ReactError(error) {
    error.name = "Invariant Violation";
    return error;
  }

  var eventPluginOrder = null,
      namesToPlugins = {};

  function recomputePluginOrdering() {
    if (eventPluginOrder) for (var pluginName in namesToPlugins) {
      var pluginModule = namesToPlugins[pluginName],
          pluginIndex = eventPluginOrder.indexOf(pluginName);
      if (!(-1 < pluginIndex)) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`."));

      if (!plugins[pluginIndex]) {
        if (!pluginModule.extractEvents) throw ReactError(Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not."));
        plugins[pluginIndex] = pluginModule;
        pluginIndex = pluginModule.eventTypes;

        for (var eventName in pluginIndex) {
          var JSCompiler_inline_result = undefined;
          var dispatchConfig = pluginIndex[eventName],
              pluginModule$jscomp$0 = pluginModule,
              eventName$jscomp$0 = eventName;
          if (eventNameDispatchConfigs.hasOwnProperty(eventName$jscomp$0)) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName$jscomp$0 + "`."));
          eventNameDispatchConfigs[eventName$jscomp$0] = dispatchConfig;
          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

          if (phasedRegistrationNames) {
            for (JSCompiler_inline_result in phasedRegistrationNames) {
              phasedRegistrationNames.hasOwnProperty(JSCompiler_inline_result) && publishRegistrationName(phasedRegistrationNames[JSCompiler_inline_result], pluginModule$jscomp$0, eventName$jscomp$0);
            }

            JSCompiler_inline_result = true;
          } else dispatchConfig.registrationName ? (publishRegistrationName(dispatchConfig.registrationName, pluginModule$jscomp$0, eventName$jscomp$0), JSCompiler_inline_result = true) : JSCompiler_inline_result = false;

          if (!JSCompiler_inline_result) throw ReactError(Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`."));
        }
      }
    }
  }

  function publishRegistrationName(registrationName, pluginModule) {
    if (registrationNameModules[registrationName]) throw ReactError(Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`."));
    registrationNameModules[registrationName] = pluginModule;
  }

  var plugins = [],
      eventNameDispatchConfigs = {},
      registrationNameModules = {};

  function invokeGuardedCallbackImpl(name, func, context, a, b, c, d, e, f) {
    var funcArgs = Array.prototype.slice.call(arguments, 3);

    try {
      func.apply(context, funcArgs);
    } catch (error) {
      this.onError(error);
    }
  }

  var hasError = false,
      caughtError = null,
      hasRethrowError = false,
      rethrowError = null,
      reporter = {
    onError: function onError(error) {
      hasError = true;
      caughtError = error;
    }
  };

  function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
    hasError = false;
    caughtError = null;
    invokeGuardedCallbackImpl.apply(reporter, arguments);
  }

  function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(this, arguments);

    if (hasError) {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
      } else throw ReactError(Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue."));

      hasRethrowError || (hasRethrowError = true, rethrowError = error);
    }
  }

  var getFiberCurrentPropsFromNode = null,
      getInstanceFromNode = null,
      getNodeFromInstance = null;

  function executeDispatch(event, listener, inst) {
    var type = event.type || "unknown-event";
    event.currentTarget = getNodeFromInstance(inst);
    invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
    event.currentTarget = null;
  }

  function executeDirectDispatch(event) {
    var dispatchListener = event._dispatchListeners,
        dispatchInstance = event._dispatchInstances;
    if (Array.isArray(dispatchListener)) throw ReactError(Error("executeDirectDispatch(...): Invalid `event`."));
    event.currentTarget = dispatchListener ? getNodeFromInstance(dispatchInstance) : null;
    dispatchListener = dispatchListener ? dispatchListener(event) : null;
    event.currentTarget = null;
    event._dispatchListeners = null;
    event._dispatchInstances = null;
    return dispatchListener;
  }

  function accumulateInto(current, next) {
    if (null == next) throw ReactError(Error("accumulateInto(...): Accumulated items must not be null or undefined."));
    if (null == current) return next;

    if (Array.isArray(current)) {
      if (Array.isArray(next)) return current.push.apply(current, next), current;
      current.push(next);
      return current;
    }

    return Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  function forEachAccumulated(arr, cb, scope) {
    Array.isArray(arr) ? arr.forEach(cb, scope) : arr && cb.call(scope, arr);
  }

  var eventQueue = null;

  function executeDispatchesAndReleaseTopLevel(e) {
    if (e) {
      var dispatchListeners = e._dispatchListeners,
          dispatchInstances = e._dispatchInstances;
      if (Array.isArray(dispatchListeners)) for (var i = 0; i < dispatchListeners.length && !e.isPropagationStopped(); i++) {
        executeDispatch(e, dispatchListeners[i], dispatchInstances[i]);
      } else dispatchListeners && executeDispatch(e, dispatchListeners, dispatchInstances);
      e._dispatchListeners = null;
      e._dispatchInstances = null;
      e.isPersistent() || e.constructor.release(e);
    }
  }

  var injection = {
    injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
      if (eventPluginOrder) throw ReactError(Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React."));
      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    },
    injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false,
          pluginName;

      for (pluginName in injectedNamesToPlugins) {
        if (injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          var pluginModule = injectedNamesToPlugins[pluginName];

          if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
            if (namesToPlugins[pluginName]) throw ReactError(Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`."));
            namesToPlugins[pluginName] = pluginModule;
            isOrderingDirty = true;
          }
        }
      }

      isOrderingDirty && recomputePluginOrdering();
    }
  };

  function getListener(inst, registrationName) {
    var listener = inst.stateNode;
    if (!listener) return null;
    var props = getFiberCurrentPropsFromNode(listener);
    if (!props) return null;
    listener = props[registrationName];

    a: switch (registrationName) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
        (props = !props.disabled) || (inst = inst.type, props = !("button" === inst || "input" === inst || "select" === inst || "textarea" === inst));
        inst = !props;
        break a;

      default:
        inst = false;
    }

    if (inst) return null;
    if (listener && "function" !== typeof listener) throw ReactError(Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type."));
    return listener;
  }

  function getParent(inst) {
    do {
      inst = inst.return;
    } while (inst && 5 !== inst.tag);

    return inst ? inst : null;
  }

  function traverseTwoPhase(inst, fn, arg) {
    for (var path = []; inst;) {
      path.push(inst), inst = getParent(inst);
    }

    for (inst = path.length; 0 < inst--;) {
      fn(path[inst], "captured", arg);
    }

    for (inst = 0; inst < path.length; inst++) {
      fn(path[inst], "bubbled", arg);
    }
  }

  function accumulateDirectionalDispatches(inst, phase, event) {
    if (phase = getListener(inst, event.dispatchConfig.phasedRegistrationNames[phase])) event._dispatchListeners = accumulateInto(event._dispatchListeners, phase), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }

  function accumulateTwoPhaseDispatchesSingle(event) {
    event && event.dispatchConfig.phasedRegistrationNames && traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }

  function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
    if (event && event.dispatchConfig.phasedRegistrationNames) {
      var targetInst = event._targetInst;
      targetInst = targetInst ? getParent(targetInst) : null;
      traverseTwoPhase(targetInst, accumulateDirectionalDispatches, event);
    }
  }

  function accumulateDirectDispatchesSingle(event) {
    if (event && event.dispatchConfig.registrationName) {
      var inst = event._targetInst;

      if (inst && event && event.dispatchConfig.registrationName) {
        var listener = getListener(inst, event.dispatchConfig.registrationName);
        listener && (event._dispatchListeners = accumulateInto(event._dispatchListeners, listener), event._dispatchInstances = accumulateInto(event._dispatchInstances, inst));
      }
    }
  }

  function functionThatReturnsTrue() {
    return true;
  }

  function functionThatReturnsFalse() {
    return false;
  }

  function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
    this.dispatchConfig = dispatchConfig;
    this._targetInst = targetInst;
    this.nativeEvent = nativeEvent;
    dispatchConfig = this.constructor.Interface;

    for (var propName in dispatchConfig) {
      dispatchConfig.hasOwnProperty(propName) && ((targetInst = dispatchConfig[propName]) ? this[propName] = targetInst(nativeEvent) : "target" === propName ? this.target = nativeEventTarget : this[propName] = nativeEvent[propName]);
    }

    this.isDefaultPrevented = (null != nativeEvent.defaultPrevented ? nativeEvent.defaultPrevented : false === nativeEvent.returnValue) ? functionThatReturnsTrue : functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    return this;
  }

  _extends(SyntheticEvent.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = true;
      var event = this.nativeEvent;
      event && (event.preventDefault ? event.preventDefault() : "unknown" !== typeof event.returnValue && (event.returnValue = false), this.isDefaultPrevented = functionThatReturnsTrue);
    },
    stopPropagation: function stopPropagation() {
      var event = this.nativeEvent;
      event && (event.stopPropagation ? event.stopPropagation() : "unknown" !== typeof event.cancelBubble && (event.cancelBubble = true), this.isPropagationStopped = functionThatReturnsTrue);
    },
    persist: function persist() {
      this.isPersistent = functionThatReturnsTrue;
    },
    isPersistent: functionThatReturnsFalse,
    destructor: function destructor() {
      var Interface = this.constructor.Interface,
          propName;

      for (propName in Interface) {
        this[propName] = null;
      }

      this.nativeEvent = this._targetInst = this.dispatchConfig = null;
      this.isPropagationStopped = this.isDefaultPrevented = functionThatReturnsFalse;
      this._dispatchInstances = this._dispatchListeners = null;
    }
  });

  SyntheticEvent.Interface = {
    type: null,
    target: null,
    currentTarget: function currentTarget() {
      return null;
    },
    eventPhase: null,
    bubbles: null,
    cancelable: null,
    timeStamp: function timeStamp(event) {
      return event.timeStamp || Date.now();
    },
    defaultPrevented: null,
    isTrusted: null
  };

  SyntheticEvent.extend = function (Interface) {
    function E() {}

    function Class() {
      return Super.apply(this, arguments);
    }

    var Super = this;
    E.prototype = Super.prototype;
    var prototype = new E();

    _extends(prototype, Class.prototype);

    Class.prototype = prototype;
    Class.prototype.constructor = Class;
    Class.Interface = _extends({}, Super.Interface, Interface);
    Class.extend = Super.extend;
    addEventPoolingTo(Class);
    return Class;
  };

  addEventPoolingTo(SyntheticEvent);

  function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
    if (this.eventPool.length) {
      var instance = this.eventPool.pop();
      this.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
      return instance;
    }

    return new this(dispatchConfig, targetInst, nativeEvent, nativeInst);
  }

  function releasePooledEvent(event) {
    if (!(event instanceof this)) throw ReactError(Error("Trying to release an event instance into a pool of a different type."));
    event.destructor();
    10 > this.eventPool.length && this.eventPool.push(event);
  }

  function addEventPoolingTo(EventConstructor) {
    EventConstructor.eventPool = [];
    EventConstructor.getPooled = getPooledEvent;
    EventConstructor.release = releasePooledEvent;
  }

  var ResponderSyntheticEvent = SyntheticEvent.extend({
    touchHistory: function touchHistory() {
      return null;
    }
  });

  function isStartish(topLevelType) {
    return "topTouchStart" === topLevelType;
  }

  function isMoveish(topLevelType) {
    return "topTouchMove" === topLevelType;
  }

  var startDependencies = ["topTouchStart"],
      moveDependencies = ["topTouchMove"],
      endDependencies = ["topTouchCancel", "topTouchEnd"],
      touchBank = [],
      touchHistory = {
    touchBank: touchBank,
    numberActiveTouches: 0,
    indexOfSingleActiveTouch: -1,
    mostRecentTimeStamp: 0
  };

  function timestampForTouch(touch) {
    return touch.timeStamp || touch.timestamp;
  }

  function getTouchIdentifier(_ref) {
    _ref = _ref.identifier;
    if (null == _ref) throw ReactError(Error("Touch object is missing identifier."));
    return _ref;
  }

  function recordTouchStart(touch) {
    var identifier = getTouchIdentifier(touch),
        touchRecord = touchBank[identifier];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.startPageX = touch.pageX, touchRecord.startPageY = touch.pageY, touchRecord.startTimeStamp = timestampForTouch(touch), touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchRecord.previousPageX = touch.pageX, touchRecord.previousPageY = touch.pageY, touchRecord.previousTimeStamp = timestampForTouch(touch)) : (touchRecord = {
      touchActive: true,
      startPageX: touch.pageX,
      startPageY: touch.pageY,
      startTimeStamp: timestampForTouch(touch),
      currentPageX: touch.pageX,
      currentPageY: touch.pageY,
      currentTimeStamp: timestampForTouch(touch),
      previousPageX: touch.pageX,
      previousPageY: touch.pageY,
      previousTimeStamp: timestampForTouch(touch)
    }, touchBank[identifier] = touchRecord);
    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);
  }

  function recordTouchMove(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = true, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  function recordTouchEnd(touch) {
    var touchRecord = touchBank[getTouchIdentifier(touch)];
    touchRecord ? (touchRecord.touchActive = false, touchRecord.previousPageX = touchRecord.currentPageX, touchRecord.previousPageY = touchRecord.currentPageY, touchRecord.previousTimeStamp = touchRecord.currentTimeStamp, touchRecord.currentPageX = touch.pageX, touchRecord.currentPageY = touch.pageY, touchRecord.currentTimeStamp = timestampForTouch(touch), touchHistory.mostRecentTimeStamp = timestampForTouch(touch)) : undefined;
  }

  var ResponderTouchHistoryStore = {
    recordTouchTrack: function recordTouchTrack(topLevelType, nativeEvent) {
      if (isMoveish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchMove);else if (isStartish(topLevelType)) nativeEvent.changedTouches.forEach(recordTouchStart), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches && (touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier);else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (nativeEvent.changedTouches.forEach(recordTouchEnd), touchHistory.numberActiveTouches = nativeEvent.touches.length, 1 === touchHistory.numberActiveTouches) for (topLevelType = 0; topLevelType < touchBank.length; topLevelType++) {
        if (nativeEvent = touchBank[topLevelType], null != nativeEvent && nativeEvent.touchActive) {
          touchHistory.indexOfSingleActiveTouch = topLevelType;
          break;
        }
      }
    },
    touchHistory: touchHistory
  };

  function accumulate(current, next) {
    if (null == next) throw ReactError(Error("accumulate(...): Accumulated items must not be null or undefined."));
    return null == current ? next : Array.isArray(current) ? current.concat(next) : Array.isArray(next) ? [current].concat(next) : [current, next];
  }

  var responderInst = null,
      trackedTouchCount = 0;

  function changeResponder(nextResponderInst, blockHostResponder) {
    var oldResponderInst = responderInst;
    responderInst = nextResponderInst;
    if (null !== ResponderEventPlugin.GlobalResponderHandler) ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderInst, nextResponderInst, blockHostResponder);
  }

  var eventTypes = {
    startShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onStartShouldSetResponder",
        captured: "onStartShouldSetResponderCapture"
      },
      dependencies: startDependencies
    },
    scrollShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onScrollShouldSetResponder",
        captured: "onScrollShouldSetResponderCapture"
      },
      dependencies: ["topScroll"]
    },
    selectionChangeShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onSelectionChangeShouldSetResponder",
        captured: "onSelectionChangeShouldSetResponderCapture"
      },
      dependencies: ["topSelectionChange"]
    },
    moveShouldSetResponder: {
      phasedRegistrationNames: {
        bubbled: "onMoveShouldSetResponder",
        captured: "onMoveShouldSetResponderCapture"
      },
      dependencies: moveDependencies
    },
    responderStart: {
      registrationName: "onResponderStart",
      dependencies: startDependencies
    },
    responderMove: {
      registrationName: "onResponderMove",
      dependencies: moveDependencies
    },
    responderEnd: {
      registrationName: "onResponderEnd",
      dependencies: endDependencies
    },
    responderRelease: {
      registrationName: "onResponderRelease",
      dependencies: endDependencies
    },
    responderTerminationRequest: {
      registrationName: "onResponderTerminationRequest",
      dependencies: []
    },
    responderGrant: {
      registrationName: "onResponderGrant",
      dependencies: []
    },
    responderReject: {
      registrationName: "onResponderReject",
      dependencies: []
    },
    responderTerminate: {
      registrationName: "onResponderTerminate",
      dependencies: []
    }
  },
      ResponderEventPlugin = {
    _getResponder: function _getResponder() {
      return responderInst;
    },
    eventTypes: eventTypes,
    extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      if (isStartish(topLevelType)) trackedTouchCount += 1;else if ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType) if (0 <= trackedTouchCount) --trackedTouchCount;else return undefined, null;
      ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);

      if (targetInst && ("topScroll" === topLevelType && !nativeEvent.responderIgnoreScroll || 0 < trackedTouchCount && "topSelectionChange" === topLevelType || isStartish(topLevelType) || isMoveish(topLevelType))) {
        var JSCompiler_temp = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : "topSelectionChange" === topLevelType ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;
        if (responderInst) b: {
          var JSCompiler_temp$jscomp$0 = responderInst;

          for (var depthA = 0, tempA = JSCompiler_temp$jscomp$0; tempA; tempA = getParent(tempA)) {
            depthA++;
          }

          tempA = 0;

          for (var tempB = targetInst; tempB; tempB = getParent(tempB)) {
            tempA++;
          }

          for (; 0 < depthA - tempA;) {
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0), depthA--;
          }

          for (; 0 < tempA - depthA;) {
            targetInst = getParent(targetInst), tempA--;
          }

          for (; depthA--;) {
            if (JSCompiler_temp$jscomp$0 === targetInst || JSCompiler_temp$jscomp$0 === targetInst.alternate) break b;
            JSCompiler_temp$jscomp$0 = getParent(JSCompiler_temp$jscomp$0);
            targetInst = getParent(targetInst);
          }

          JSCompiler_temp$jscomp$0 = null;
        } else JSCompiler_temp$jscomp$0 = targetInst;
        targetInst = JSCompiler_temp$jscomp$0 === responderInst;
        JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp, JSCompiler_temp$jscomp$0, nativeEvent, nativeEventTarget);
        JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory;
        targetInst ? forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingleSkipTarget) : forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateTwoPhaseDispatchesSingle);

        b: {
          JSCompiler_temp = JSCompiler_temp$jscomp$0._dispatchListeners;
          targetInst = JSCompiler_temp$jscomp$0._dispatchInstances;
          if (Array.isArray(JSCompiler_temp)) for (depthA = 0; depthA < JSCompiler_temp.length && !JSCompiler_temp$jscomp$0.isPropagationStopped(); depthA++) {
            if (JSCompiler_temp[depthA](JSCompiler_temp$jscomp$0, targetInst[depthA])) {
              JSCompiler_temp = targetInst[depthA];
              break b;
            }
          } else if (JSCompiler_temp && JSCompiler_temp(JSCompiler_temp$jscomp$0, targetInst)) {
            JSCompiler_temp = targetInst;
            break b;
          }
          JSCompiler_temp = null;
        }

        JSCompiler_temp$jscomp$0._dispatchInstances = null;
        JSCompiler_temp$jscomp$0._dispatchListeners = null;
        JSCompiler_temp$jscomp$0.isPersistent() || JSCompiler_temp$jscomp$0.constructor.release(JSCompiler_temp$jscomp$0);
        JSCompiler_temp && JSCompiler_temp !== responderInst ? (JSCompiler_temp$jscomp$0 = undefined, targetInst = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, JSCompiler_temp, nativeEvent, nativeEventTarget), targetInst.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(targetInst, accumulateDirectDispatchesSingle), depthA = true === executeDirectDispatch(targetInst), responderInst ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), tempB = !tempA._dispatchListeners || executeDirectDispatch(tempA), tempA.isPersistent() || tempA.constructor.release(tempA), tempB ? (tempA = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminate, responderInst, nativeEvent, nativeEventTarget), tempA.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(tempA, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, [targetInst, tempA]), changeResponder(JSCompiler_temp, depthA)) : (JSCompiler_temp = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, JSCompiler_temp, nativeEvent, nativeEventTarget), JSCompiler_temp.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp, accumulateDirectDispatchesSingle), JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, JSCompiler_temp))) : (JSCompiler_temp$jscomp$0 = accumulate(JSCompiler_temp$jscomp$0, targetInst), changeResponder(JSCompiler_temp, depthA)), JSCompiler_temp = JSCompiler_temp$jscomp$0) : JSCompiler_temp = null;
      } else JSCompiler_temp = null;

      JSCompiler_temp$jscomp$0 = responderInst && isStartish(topLevelType);
      targetInst = responderInst && isMoveish(topLevelType);
      depthA = responderInst && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType);
      if (JSCompiler_temp$jscomp$0 = JSCompiler_temp$jscomp$0 ? eventTypes.responderStart : targetInst ? eventTypes.responderMove : depthA ? eventTypes.responderEnd : null) JSCompiler_temp$jscomp$0 = ResponderSyntheticEvent.getPooled(JSCompiler_temp$jscomp$0, responderInst, nativeEvent, nativeEventTarget), JSCompiler_temp$jscomp$0.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(JSCompiler_temp$jscomp$0, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, JSCompiler_temp$jscomp$0);
      JSCompiler_temp$jscomp$0 = responderInst && "topTouchCancel" === topLevelType;
      if (topLevelType = responderInst && !JSCompiler_temp$jscomp$0 && ("topTouchEnd" === topLevelType || "topTouchCancel" === topLevelType)) a: {
        if ((topLevelType = nativeEvent.touches) && 0 !== topLevelType.length) for (targetInst = 0; targetInst < topLevelType.length; targetInst++) {
          if (depthA = topLevelType[targetInst].target, null !== depthA && undefined !== depthA && 0 !== depthA) {
            tempA = getInstanceFromNode(depthA);

            b: {
              for (depthA = responderInst; tempA;) {
                if (depthA === tempA || depthA === tempA.alternate) {
                  depthA = true;
                  break b;
                }

                tempA = getParent(tempA);
              }

              depthA = false;
            }

            if (depthA) {
              topLevelType = false;
              break a;
            }
          }
        }
        topLevelType = true;
      }
      if (topLevelType = JSCompiler_temp$jscomp$0 ? eventTypes.responderTerminate : topLevelType ? eventTypes.responderRelease : null) nativeEvent = ResponderSyntheticEvent.getPooled(topLevelType, responderInst, nativeEvent, nativeEventTarget), nativeEvent.touchHistory = ResponderTouchHistoryStore.touchHistory, forEachAccumulated(nativeEvent, accumulateDirectDispatchesSingle), JSCompiler_temp = accumulate(JSCompiler_temp, nativeEvent), changeResponder(null);
      return JSCompiler_temp;
    },
    GlobalResponderHandler: null,
    injection: {
      injectGlobalResponderHandler: function injectGlobalResponderHandler(GlobalResponderHandler) {
        ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;
      }
    }
  },
      customBubblingEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customBubblingEventTypes,
      customDirectEventTypes = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.customDirectEventTypes;
  injection.injectEventPluginOrder(["ResponderEventPlugin", "ReactNativeBridgeEventPlugin"]);
  injection.injectEventPluginsByName({
    ResponderEventPlugin: ResponderEventPlugin,
    ReactNativeBridgeEventPlugin: {
      eventTypes: {},
      extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
        if (null == targetInst) return null;
        var bubbleDispatchConfig = customBubblingEventTypes[topLevelType],
            directDispatchConfig = customDirectEventTypes[topLevelType];
        if (!bubbleDispatchConfig && !directDispatchConfig) throw ReactError(Error('Unsupported top level event type "' + topLevelType + '" dispatched'));
        topLevelType = SyntheticEvent.getPooled(bubbleDispatchConfig || directDispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        if (bubbleDispatchConfig) forEachAccumulated(topLevelType, accumulateTwoPhaseDispatchesSingle);else if (directDispatchConfig) forEachAccumulated(topLevelType, accumulateDirectDispatchesSingle);else return null;
        return topLevelType;
      }
    }
  });

  function getInstanceFromInstance(instanceHandle) {
    return instanceHandle;
  }

  getFiberCurrentPropsFromNode = function getFiberCurrentPropsFromNode(inst) {
    return inst.canonical.currentProps;
  };

  getInstanceFromNode = getInstanceFromInstance;

  getNodeFromInstance = function getNodeFromInstance(inst) {
    inst = inst.stateNode.canonical._nativeTag;
    if (!inst) throw ReactError(Error("All native instances should have a tag."));
    return inst;
  };

  ResponderEventPlugin.injection.injectGlobalResponderHandler({
    onChange: function onChange(from, to, blockNativeResponder) {
      null !== to ? ReactNativePrivateInterface.UIManager.setJSResponder(to.stateNode.canonical._nativeTag, blockNativeResponder) : ReactNativePrivateInterface.UIManager.clearJSResponder();
    }
  });
  var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
  ReactSharedInternals.hasOwnProperty("ReactCurrentDispatcher") || (ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  });
  ReactSharedInternals.hasOwnProperty("ReactCurrentBatchConfig") || (ReactSharedInternals.ReactCurrentBatchConfig = {
    suspense: null
  });
  var hasSymbol = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.for : "@@for"),
      REACT_ELEMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.element") : 60103,
      REACT_PORTAL_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.portal") : 60106,
      REACT_FRAGMENT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fragment") : 60107,
      REACT_STRICT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.strict_mode") : 60108,
      REACT_PROFILER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.profiler") : 60114,
      REACT_PROVIDER_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.provider") : 60109,
      REACT_CONTEXT_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.context") : 60110,
      REACT_CONCURRENT_MODE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.concurrent_mode") : 60111,
      REACT_FORWARD_REF_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.forward_ref") : 60112,
      REACT_SUSPENSE_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense") : 60113,
      REACT_SUSPENSE_LIST_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.suspense_list") : 60120,
      REACT_MEMO_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.memo") : 60115,
      REACT_LAZY_TYPE = hasSymbol ? (typeof Symbol === "function" ? Symbol.for : "@@for")("react.lazy") : 60116;
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.fundamental");
  hasSymbol && (typeof Symbol === "function" ? Symbol.for : "@@for")("react.responder");
  var MAYBE_ITERATOR_SYMBOL = "function" === typeof Symbol && (typeof Symbol === "function" ? Symbol.iterator : "@@iterator");

  function getIteratorFn(maybeIterable) {
    if (null === maybeIterable || "object" !== typeof maybeIterable) return null;
    maybeIterable = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable["@@iterator"];
    return "function" === typeof maybeIterable ? maybeIterable : null;
  }

  function getComponentName(type) {
    if (null == type) return null;
    if ("function" === typeof type) return type.displayName || type.name || null;
    if ("string" === typeof type) return type;

    switch (type) {
      case REACT_FRAGMENT_TYPE:
        return "Fragment";

      case REACT_PORTAL_TYPE:
        return "Portal";

      case REACT_PROFILER_TYPE:
        return "Profiler";

      case REACT_STRICT_MODE_TYPE:
        return "StrictMode";

      case REACT_SUSPENSE_TYPE:
        return "Suspense";

      case REACT_SUSPENSE_LIST_TYPE:
        return "SuspenseList";
    }

    if ("object" === typeof type) switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return "Context.Consumer";

      case REACT_PROVIDER_TYPE:
        return "Context.Provider";

      case REACT_FORWARD_REF_TYPE:
        var innerType = type.render;
        innerType = innerType.displayName || innerType.name || "";
        return type.displayName || ("" !== innerType ? "ForwardRef(" + innerType + ")" : "ForwardRef");

      case REACT_MEMO_TYPE:
        return getComponentName(type.type);

      case REACT_LAZY_TYPE:
        if (type = 1 === type._status ? type._result : null) return getComponentName(type);
    }
    return null;
  }

  function isFiberMountedImpl(fiber) {
    var node = fiber;
    if (fiber.alternate) for (; node.return;) {
      node = node.return;
    } else {
      if (0 !== (node.effectTag & 2)) return 1;

      for (; node.return;) {
        if (node = node.return, 0 !== (node.effectTag & 2)) return 1;
      }
    }
    return 3 === node.tag ? 2 : 3;
  }

  function assertIsMounted(fiber) {
    if (2 !== isFiberMountedImpl(fiber)) throw ReactError(Error("Unable to find node on an unmounted component."));
  }

  function findCurrentFiberUsingSlowPath(fiber) {
    var alternate = fiber.alternate;

    if (!alternate) {
      alternate = isFiberMountedImpl(fiber);
      if (3 === alternate) throw ReactError(Error("Unable to find node on an unmounted component."));
      return 1 === alternate ? null : fiber;
    }

    for (var a = fiber, b = alternate;;) {
      var parentA = a.return;
      if (null === parentA) break;
      var parentB = parentA.alternate;

      if (null === parentB) {
        b = parentA.return;

        if (null !== b) {
          a = b;
          continue;
        }

        break;
      }

      if (parentA.child === parentB.child) {
        for (parentB = parentA.child; parentB;) {
          if (parentB === a) return assertIsMounted(parentA), fiber;
          if (parentB === b) return assertIsMounted(parentA), alternate;
          parentB = parentB.sibling;
        }

        throw ReactError(Error("Unable to find node on an unmounted component."));
      }

      if (a.return !== b.return) a = parentA, b = parentB;else {
        for (var didFindChild = false, _child = parentA.child; _child;) {
          if (_child === a) {
            didFindChild = true;
            a = parentA;
            b = parentB;
            break;
          }

          if (_child === b) {
            didFindChild = true;
            b = parentA;
            a = parentB;
            break;
          }

          _child = _child.sibling;
        }

        if (!didFindChild) {
          for (_child = parentB.child; _child;) {
            if (_child === a) {
              didFindChild = true;
              a = parentB;
              b = parentA;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentB;
              a = parentA;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) throw ReactError(Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."));
        }
      }
      if (a.alternate !== b) throw ReactError(Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."));
    }

    if (3 !== a.tag) throw ReactError(Error("Unable to find node on an unmounted component."));
    return a.stateNode.current === a ? fiber : alternate;
  }

  function findCurrentHostFiber(parent) {
    parent = findCurrentFiberUsingSlowPath(parent);
    if (!parent) return null;

    for (var node = parent;;) {
      if (5 === node.tag || 6 === node.tag) return node;
      if (node.child) node.child.return = node, node = node.child;else {
        if (node === parent) break;

        for (; !node.sibling;) {
          if (!node.return || node.return === parent) return null;
          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    return null;
  }

  function mountSafeCallback_NOT_REALLY_SAFE(context, callback) {
    return function () {
      if (callback && ("boolean" !== typeof context.__isMounted || context.__isMounted)) return callback.apply(context, arguments);
    };
  }

  var emptyObject = {},
      removedKeys = null,
      removedKeyCount = 0;

  function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) for (var i = node.length; i-- && 0 < removedKeyCount;) {
      restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
    } else if (node && 0 < removedKeyCount) for (i in removedKeys) {
      if (removedKeys[i]) {
        var nextProp = node[i];

        if (undefined !== nextProp) {
          var attributeConfig = validAttributes[i];

          if (attributeConfig) {
            "function" === typeof nextProp && (nextProp = true);
            "undefined" === typeof nextProp && (nextProp = null);
            if ("object" !== typeof attributeConfig) updatePayload[i] = nextProp;else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) nextProp = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[i] = nextProp;
            removedKeys[i] = false;
            removedKeyCount--;
          }
        }
      }
    }
  }

  function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) return updatePayload;
    if (!prevProp || !nextProp) return nextProp ? addNestedProperty(updatePayload, nextProp, validAttributes) : prevProp ? clearNestedProperty(updatePayload, prevProp, validAttributes) : updatePayload;
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) return diffProperties(updatePayload, prevProp, nextProp, validAttributes);

    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
      var minLength = prevProp.length < nextProp.length ? prevProp.length : nextProp.length,
          i;

      for (i = 0; i < minLength; i++) {
        updatePayload = diffNestedProperty(updatePayload, prevProp[i], nextProp[i], validAttributes);
      }

      for (; i < prevProp.length; i++) {
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
      }

      for (; i < nextProp.length; i++) {
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
      }

      return updatePayload;
    }

    return Array.isArray(prevProp) ? diffProperties(updatePayload, ReactNativePrivateInterface.flattenStyle(prevProp), nextProp, validAttributes) : diffProperties(updatePayload, prevProp, ReactNativePrivateInterface.flattenStyle(nextProp), validAttributes);
  }

  function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) return updatePayload;
    if (!Array.isArray(nextProp)) return diffProperties(updatePayload, emptyObject, nextProp, validAttributes);

    for (var i = 0; i < nextProp.length; i++) {
      updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }

    return updatePayload;
  }

  function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) return updatePayload;
    if (!Array.isArray(prevProp)) return diffProperties(updatePayload, prevProp, emptyObject, validAttributes);

    for (var i = 0; i < prevProp.length; i++) {
      updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }

    return updatePayload;
  }

  function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig, propKey;

    for (propKey in nextProps) {
      if (attributeConfig = validAttributes[propKey]) {
        var prevProp = prevProps[propKey];
        var nextProp = nextProps[propKey];
        "function" === typeof nextProp && (nextProp = true, "function" === typeof prevProp && (prevProp = true));
        "undefined" === typeof nextProp && (nextProp = null, "undefined" === typeof prevProp && (prevProp = null));
        removedKeys && (removedKeys[propKey] = false);
        if (updatePayload && undefined !== updatePayload[propKey]) {
          if ("object" !== typeof attributeConfig) updatePayload[propKey] = nextProp;else {
            if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, updatePayload[propKey] = attributeConfig;
          }
        } else if (prevProp !== nextProp) if ("object" !== typeof attributeConfig) ("object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp)) && ((updatePayload || (updatePayload = {}))[propKey] = nextProp);else if ("function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process) {
          if (undefined === prevProp || ("function" === typeof attributeConfig.diff ? attributeConfig.diff(prevProp, nextProp) : "object" !== typeof nextProp || null === nextProp || ReactNativePrivateInterface.deepDiffer(prevProp, nextProp))) attributeConfig = "function" === typeof attributeConfig.process ? attributeConfig.process(nextProp) : nextProp, (updatePayload || (updatePayload = {}))[propKey] = attributeConfig;
        } else removedKeys = null, removedKeyCount = 0, updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig), 0 < removedKeyCount && updatePayload && (restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig), removedKeys = null);
      }
    }

    for (var _propKey in prevProps) {
      undefined === nextProps[_propKey] && (!(attributeConfig = validAttributes[_propKey]) || updatePayload && undefined !== updatePayload[_propKey] || (prevProp = prevProps[_propKey], undefined !== prevProp && ("object" !== typeof attributeConfig || "function" === typeof attributeConfig.diff || "function" === typeof attributeConfig.process ? ((updatePayload || (updatePayload = {}))[_propKey] = null, removedKeys || (removedKeys = {}), removedKeys[_propKey] || (removedKeys[_propKey] = true, removedKeyCount++)) : updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig))));
    }

    return updatePayload;
  }

  var restoreTarget = null,
      restoreQueue = null;

  function restoreStateOfTarget(target) {
    if (getInstanceFromNode(target)) throw ReactError(Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue."));
  }

  function batchedUpdatesImpl(fn, bookkeeping) {
    return fn(bookkeeping);
  }

  function flushDiscreteUpdatesImpl() {}

  var isInsideEventHandler = false;

  function batchedUpdates(fn, bookkeeping) {
    if (isInsideEventHandler) return fn(bookkeeping);
    isInsideEventHandler = true;

    try {
      return batchedUpdatesImpl(fn, bookkeeping);
    } finally {
      if (isInsideEventHandler = false, null !== restoreTarget || null !== restoreQueue) if (flushDiscreteUpdatesImpl(), restoreTarget && (bookkeeping = restoreTarget, fn = restoreQueue, restoreQueue = restoreTarget = null, restoreStateOfTarget(bookkeeping), fn)) for (bookkeeping = 0; bookkeeping < fn.length; bookkeeping++) {
        restoreStateOfTarget(fn[bookkeeping]);
      }
    }
  }

  function _inherits(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  (function (_React$Component) {
    function ReactNativeComponent() {
      if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

      var call = _React$Component.apply(this, arguments);

      if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
    }

    _inherits(ReactNativeComponent, _React$Component);

    ReactNativeComponent.prototype.blur = function () {};

    ReactNativeComponent.prototype.focus = function () {};

    ReactNativeComponent.prototype.measure = function () {};

    ReactNativeComponent.prototype.measureInWindow = function () {};

    ReactNativeComponent.prototype.measureLayout = function () {};

    ReactNativeComponent.prototype.setNativeProps = function () {};

    return ReactNativeComponent;
  })(React.Component);

  new Map();
  new Map();
  new Set();
  new Map();

  function dispatchEvent(target, topLevelType, nativeEvent) {
    batchedUpdates(function () {
      var events = nativeEvent.target;

      for (var events$jscomp$0 = null, i = 0; i < plugins.length; i++) {
        var possiblePlugin = plugins[i];
        possiblePlugin && (possiblePlugin = possiblePlugin.extractEvents(topLevelType, target, nativeEvent, events)) && (events$jscomp$0 = accumulateInto(events$jscomp$0, possiblePlugin));
      }

      events = events$jscomp$0;
      null !== events && (eventQueue = accumulateInto(eventQueue, events));
      events = eventQueue;
      eventQueue = null;

      if (events) {
        forEachAccumulated(events, executeDispatchesAndReleaseTopLevel);
        if (eventQueue) throw ReactError(Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."));
        if (hasRethrowError) throw events = rethrowError, hasRethrowError = false, rethrowError = null, events;
      }
    });
  }

  function shim$1() {
    throw ReactError(Error("The current renderer does not support hydration. This error is likely caused by a bug in React. Please file an issue."));
  }

  var _nativeFabricUIManage$1 = nativeFabricUIManager,
      createNode = _nativeFabricUIManage$1.createNode,
      cloneNode = _nativeFabricUIManage$1.cloneNode,
      cloneNodeWithNewChildren = _nativeFabricUIManage$1.cloneNodeWithNewChildren,
      cloneNodeWithNewChildrenAndProps = _nativeFabricUIManage$1.cloneNodeWithNewChildrenAndProps,
      cloneNodeWithNewProps = _nativeFabricUIManage$1.cloneNodeWithNewProps,
      createChildNodeSet = _nativeFabricUIManage$1.createChildSet,
      appendChildNode = _nativeFabricUIManage$1.appendChild,
      appendChildNodeToSet = _nativeFabricUIManage$1.appendChildToSet,
      completeRoot = _nativeFabricUIManage$1.completeRoot,
      registerEventHandler = _nativeFabricUIManage$1.registerEventHandler,
      fabricMeasure = _nativeFabricUIManage$1.measure,
      fabricMeasureInWindow = _nativeFabricUIManage$1.measureInWindow,
      fabricMeasureLayout = _nativeFabricUIManage$1.measureLayout,
      getViewConfigForType = ReactNativePrivateInterface.ReactNativeViewConfigRegistry.get,
      nextReactTag = 2;
  registerEventHandler && registerEventHandler(dispatchEvent);

  var ReactFabricHostComponent = function () {
    function ReactFabricHostComponent(tag, viewConfig, props, internalInstanceHandle) {
      if (!(this instanceof ReactFabricHostComponent)) throw new TypeError("Cannot call a class as a function");
      this._nativeTag = tag;
      this.viewConfig = viewConfig;
      this.currentProps = props;
      this._internalInstanceHandle = internalInstanceHandle;
    }

    ReactFabricHostComponent.prototype.blur = function () {
      ReactNativePrivateInterface.TextInputState.blurTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.focus = function () {
      ReactNativePrivateInterface.TextInputState.focusTextInput(this._nativeTag);
    };

    ReactFabricHostComponent.prototype.measure = function (callback) {
      fabricMeasure(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureInWindow = function (callback) {
      fabricMeasureInWindow(this._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback));
    };

    ReactFabricHostComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
      "number" !== typeof relativeToNativeNode && relativeToNativeNode instanceof ReactFabricHostComponent && fabricMeasureLayout(this._internalInstanceHandle.stateNode.node, relativeToNativeNode._internalInstanceHandle.stateNode.node, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess));
    };

    ReactFabricHostComponent.prototype.setNativeProps = function () {};

    return ReactFabricHostComponent;
  }();

  function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
    if (!hostContext.isInAParentText) throw ReactError(Error("Text strings must be rendered within a <Text> component."));
    hostContext = nextReactTag;
    nextReactTag += 2;
    return {
      node: createNode(hostContext, "RCTRawText", rootContainerInstance, {
        text: text
      }, internalInstanceHandle)
    };
  }

  var scheduleTimeout = setTimeout,
      cancelTimeout = clearTimeout;

  function cloneHiddenInstance(instance) {
    var node = instance.node;
    var updatePayload = diffProperties(null, emptyObject, {
      style: {
        display: "none"
      }
    }, instance.canonical.viewConfig.validAttributes);
    return {
      node: cloneNodeWithNewProps(node, updatePayload),
      canonical: instance.canonical
    };
  }

  var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

  function getStackByFiberInDevAndProd(workInProgress) {
    var info = "";

    do {
      a: switch (workInProgress.tag) {
        case 3:
        case 4:
        case 6:
        case 7:
        case 10:
        case 9:
          var JSCompiler_inline_result = "";
          break a;

        default:
          var owner = workInProgress._debugOwner,
              source = workInProgress._debugSource,
              name = getComponentName(workInProgress.type);
          JSCompiler_inline_result = null;
          owner && (JSCompiler_inline_result = getComponentName(owner.type));
          owner = name;
          name = "";
          source ? name = " (at " + source.fileName.replace(BEFORE_SLASH_RE, "") + ":" + source.lineNumber + ")" : JSCompiler_inline_result && (name = " (created by " + JSCompiler_inline_result + ")");
          JSCompiler_inline_result = "\n    in " + (owner || "Unknown") + name;
      }

      info += JSCompiler_inline_result;
      workInProgress = workInProgress.return;
    } while (workInProgress);

    return info;
  }

  new Set();
  var valueStack = [],
      index = -1;

  function pop(cursor) {
    0 > index || (cursor.current = valueStack[index], valueStack[index] = null, index--);
  }

  function push(cursor, value) {
    index++;
    valueStack[index] = cursor.current;
    cursor.current = value;
  }

  var emptyContextObject = {},
      contextStackCursor = {
    current: emptyContextObject
  },
      didPerformWorkStackCursor = {
    current: false
  },
      previousContext = emptyContextObject;

  function getMaskedContext(workInProgress, unmaskedContext) {
    var contextTypes = workInProgress.type.contextTypes;
    if (!contextTypes) return emptyContextObject;
    var instance = workInProgress.stateNode;
    if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) return instance.__reactInternalMemoizedMaskedChildContext;
    var context = {},
        key;

    for (key in contextTypes) {
      context[key] = unmaskedContext[key];
    }

    instance && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return context;
  }

  function isContextProvider(type) {
    type = type.childContextTypes;
    return null !== type && undefined !== type;
  }

  function popContext(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function popTopLevelContextObject(fiber) {
    pop(didPerformWorkStackCursor, fiber);
    pop(contextStackCursor, fiber);
  }

  function pushTopLevelContextObject(fiber, context, didChange) {
    if (contextStackCursor.current !== emptyContextObject) throw ReactError(Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue."));
    push(contextStackCursor, context, fiber);
    push(didPerformWorkStackCursor, didChange, fiber);
  }

  function processChildContext(fiber, type, parentContext) {
    var instance = fiber.stateNode;
    fiber = type.childContextTypes;
    if ("function" !== typeof instance.getChildContext) return parentContext;
    instance = instance.getChildContext();

    for (var contextKey in instance) {
      if (!(contextKey in fiber)) throw ReactError(Error((getComponentName(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.'));
    }

    return _extends({}, parentContext, instance);
  }

  function pushContextProvider(workInProgress) {
    var instance = workInProgress.stateNode;
    instance = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
    previousContext = contextStackCursor.current;
    push(contextStackCursor, instance, workInProgress);
    push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
    return true;
  }

  function invalidateContextProvider(workInProgress, type, didChange) {
    var instance = workInProgress.stateNode;
    if (!instance) throw ReactError(Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue."));
    didChange ? (type = processChildContext(workInProgress, type, previousContext), instance.__reactInternalMemoizedMergedChildContext = type, pop(didPerformWorkStackCursor, workInProgress), pop(contextStackCursor, workInProgress), push(contextStackCursor, type, workInProgress)) : pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }

  var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
      Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
      Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
      Scheduler_shouldYield = Scheduler.unstable_shouldYield,
      Scheduler_requestPaint = Scheduler.unstable_requestPaint,
      Scheduler_now = Scheduler.unstable_now,
      Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
      Scheduler_LowPriority = Scheduler.unstable_LowPriority,
      Scheduler_IdlePriority = Scheduler.unstable_IdlePriority,
      fakeCallbackNode = {},
      requestPaint = undefined !== Scheduler_requestPaint ? Scheduler_requestPaint : function () {},
      syncQueue = null,
      immediateQueueCallbackNode = null,
      isFlushingSyncQueue = false,
      initialTimeMs = Scheduler_now(),
      now = 1e4 > initialTimeMs ? Scheduler_now : function () {
    return Scheduler_now() - initialTimeMs;
  };

  function getCurrentPriorityLevel() {
    switch (Scheduler_getCurrentPriorityLevel()) {
      case Scheduler_ImmediatePriority:
        return 99;

      case Scheduler_UserBlockingPriority:
        return 98;

      case Scheduler_NormalPriority:
        return 97;

      case Scheduler_LowPriority:
        return 96;

      case Scheduler_IdlePriority:
        return 95;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function reactPriorityToSchedulerPriority(reactPriorityLevel) {
    switch (reactPriorityLevel) {
      case 99:
        return Scheduler_ImmediatePriority;

      case 98:
        return Scheduler_UserBlockingPriority;

      case 97:
        return Scheduler_NormalPriority;

      case 96:
        return Scheduler_LowPriority;

      case 95:
        return Scheduler_IdlePriority;

      default:
        throw ReactError(Error("Unknown priority level."));
    }
  }

  function runWithPriority$1(reactPriorityLevel, fn) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_runWithPriority(reactPriorityLevel, fn);
  }

  function scheduleCallback(reactPriorityLevel, callback, options) {
    reactPriorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
    return Scheduler_scheduleCallback(reactPriorityLevel, callback, options);
  }

  function scheduleSyncCallback(callback) {
    null === syncQueue ? (syncQueue = [callback], immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl)) : syncQueue.push(callback);
    return fakeCallbackNode;
  }

  function flushSyncCallbackQueue() {
    null !== immediateQueueCallbackNode && Scheduler_cancelCallback(immediateQueueCallbackNode);
    flushSyncCallbackQueueImpl();
  }

  function flushSyncCallbackQueueImpl() {
    if (!isFlushingSyncQueue && null !== syncQueue) {
      isFlushingSyncQueue = true;
      var i = 0;

      try {
        var queue = syncQueue;
        runWithPriority$1(99, function () {
          for (; i < queue.length; i++) {
            var callback = queue[i];

            do {
              callback = callback(true);
            } while (null !== callback);
          }
        });
        syncQueue = null;
      } catch (error) {
        throw null !== syncQueue && (syncQueue = syncQueue.slice(i + 1)), Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue), error;
      } finally {
        isFlushingSyncQueue = false;
      }
    }
  }

  function inferPriorityFromExpirationTime(currentTime, expirationTime) {
    if (1073741823 === expirationTime) return 99;
    if (1 === expirationTime) return 95;
    currentTime = 10 * (1073741821 - expirationTime) - 10 * (1073741821 - currentTime);
    return 0 >= currentTime ? 99 : 250 >= currentTime ? 98 : 5250 >= currentTime ? 97 : 95;
  }

  function is(x, y) {
    return x === y && (0 !== x || 1 / x === 1 / y) || x !== x && y !== y;
  }

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;
    if ("object" !== typeof objA || null === objA || "object" !== typeof objB || null === objB) return false;
    var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) return false;

    for (keysB = 0; keysB < keysA.length; keysB++) {
      if (!hasOwnProperty.call(objB, keysA[keysB]) || !is(objA[keysA[keysB]], objB[keysA[keysB]])) return false;
    }

    return true;
  }

  function resolveDefaultProps(Component, baseProps) {
    if (Component && Component.defaultProps) {
      baseProps = _extends({}, baseProps);
      Component = Component.defaultProps;

      for (var propName in Component) {
        undefined === baseProps[propName] && (baseProps[propName] = Component[propName]);
      }
    }

    return baseProps;
  }

  function readLazyComponentType(lazyComponent) {
    var result = lazyComponent._result;

    switch (lazyComponent._status) {
      case 1:
        return result;

      case 2:
        throw result;

      case 0:
        throw result;

      default:
        lazyComponent._status = 0;
        result = lazyComponent._ctor;
        result = result();
        result.then(function (moduleObject) {
          0 === lazyComponent._status && (moduleObject = moduleObject.default, lazyComponent._status = 1, lazyComponent._result = moduleObject);
        }, function (error) {
          0 === lazyComponent._status && (lazyComponent._status = 2, lazyComponent._result = error);
        });

        switch (lazyComponent._status) {
          case 1:
            return lazyComponent._result;

          case 2:
            throw lazyComponent._result;
        }

        lazyComponent._result = result;
        throw result;
    }
  }

  var valueCursor = {
    current: null
  },
      currentlyRenderingFiber = null,
      lastContextDependency = null,
      lastContextWithAllBitsObserved = null;

  function resetContextDependencies() {
    lastContextWithAllBitsObserved = lastContextDependency = currentlyRenderingFiber = null;
  }

  function pushProvider(providerFiber, nextValue) {
    var context = providerFiber.type._context;
    push(valueCursor, context._currentValue2, providerFiber);
    context._currentValue2 = nextValue;
  }

  function popProvider(providerFiber) {
    var currentValue = valueCursor.current;
    pop(valueCursor, providerFiber);
    providerFiber.type._context._currentValue2 = currentValue;
  }

  function scheduleWorkOnParentPath(parent, renderExpirationTime) {
    for (; null !== parent;) {
      var alternate = parent.alternate;
      if (parent.childExpirationTime < renderExpirationTime) parent.childExpirationTime = renderExpirationTime, null !== alternate && alternate.childExpirationTime < renderExpirationTime && (alternate.childExpirationTime = renderExpirationTime);else if (null !== alternate && alternate.childExpirationTime < renderExpirationTime) alternate.childExpirationTime = renderExpirationTime;else break;
      parent = parent.return;
    }
  }

  function prepareToReadContext(workInProgress, renderExpirationTime) {
    currentlyRenderingFiber = workInProgress;
    lastContextWithAllBitsObserved = lastContextDependency = null;
    workInProgress = workInProgress.dependencies;
    null !== workInProgress && null !== workInProgress.firstContext && (workInProgress.expirationTime >= renderExpirationTime && (didReceiveUpdate = true), workInProgress.firstContext = null);
  }

  function readContext(context, observedBits) {
    if (lastContextWithAllBitsObserved !== context && false !== observedBits && 0 !== observedBits) {
      if ("number" !== typeof observedBits || 1073741823 === observedBits) lastContextWithAllBitsObserved = context, observedBits = 1073741823;
      observedBits = {
        context: context,
        observedBits: observedBits,
        next: null
      };

      if (null === lastContextDependency) {
        if (null === currentlyRenderingFiber) throw ReactError(Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."));
        lastContextDependency = observedBits;
        currentlyRenderingFiber.dependencies = {
          expirationTime: 0,
          firstContext: observedBits,
          responders: null
        };
      } else lastContextDependency = lastContextDependency.next = observedBits;
    }

    return context._currentValue2;
  }

  var hasForceUpdate = false;

  function createUpdateQueue(baseState) {
    return {
      baseState: baseState,
      firstUpdate: null,
      lastUpdate: null,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function cloneUpdateQueue(currentQueue) {
    return {
      baseState: currentQueue.baseState,
      firstUpdate: currentQueue.firstUpdate,
      lastUpdate: currentQueue.lastUpdate,
      firstCapturedUpdate: null,
      lastCapturedUpdate: null,
      firstEffect: null,
      lastEffect: null,
      firstCapturedEffect: null,
      lastCapturedEffect: null
    };
  }

  function createUpdate(expirationTime, suspenseConfig) {
    return {
      expirationTime: expirationTime,
      suspenseConfig: suspenseConfig,
      tag: 0,
      payload: null,
      callback: null,
      next: null,
      nextEffect: null
    };
  }

  function appendUpdateToQueue(queue, update) {
    null === queue.lastUpdate ? queue.firstUpdate = queue.lastUpdate = update : (queue.lastUpdate.next = update, queue.lastUpdate = update);
  }

  function enqueueUpdate(fiber, update) {
    var alternate = fiber.alternate;

    if (null === alternate) {
      var queue1 = fiber.updateQueue;
      var queue2 = null;
      null === queue1 && (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));
    } else queue1 = fiber.updateQueue, queue2 = alternate.updateQueue, null === queue1 ? null === queue2 ? (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState), queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState)) : queue1 = fiber.updateQueue = cloneUpdateQueue(queue2) : null === queue2 && (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));

    null === queue2 || queue1 === queue2 ? appendUpdateToQueue(queue1, update) : null === queue1.lastUpdate || null === queue2.lastUpdate ? (appendUpdateToQueue(queue1, update), appendUpdateToQueue(queue2, update)) : (appendUpdateToQueue(queue1, update), queue2.lastUpdate = update);
  }

  function enqueueCapturedUpdate(workInProgress, update) {
    var workInProgressQueue = workInProgress.updateQueue;
    workInProgressQueue = null === workInProgressQueue ? workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState) : ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
    null === workInProgressQueue.lastCapturedUpdate ? workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update : (workInProgressQueue.lastCapturedUpdate.next = update, workInProgressQueue.lastCapturedUpdate = update);
  }

  function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
    var current = workInProgress.alternate;
    null !== current && queue === current.updateQueue && (queue = workInProgress.updateQueue = cloneUpdateQueue(queue));
    return queue;
  }

  function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
    switch (update.tag) {
      case 1:
        return workInProgress = update.payload, "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;

      case 3:
        workInProgress.effectTag = workInProgress.effectTag & -2049 | 64;

      case 0:
        workInProgress = update.payload;
        nextProps = "function" === typeof workInProgress ? workInProgress.call(instance, prevState, nextProps) : workInProgress;
        if (null === nextProps || undefined === nextProps) break;
        return _extends({}, prevState, nextProps);

      case 2:
        hasForceUpdate = true;
    }

    return prevState;
  }

  function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
    hasForceUpdate = false;
    queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

    for (var newBaseState = queue.baseState, newFirstUpdate = null, newExpirationTime = 0, update = queue.firstUpdate, resultState = newBaseState; null !== update;) {
      var updateExpirationTime = update.expirationTime;
      updateExpirationTime < renderExpirationTime ? (null === newFirstUpdate && (newFirstUpdate = update, newBaseState = resultState), newExpirationTime < updateExpirationTime && (newExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig), resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastEffect ? queue.firstEffect = queue.lastEffect = update : (queue.lastEffect.nextEffect = update, queue.lastEffect = update)));
      update = update.next;
    }

    updateExpirationTime = null;

    for (update = queue.firstCapturedUpdate; null !== update;) {
      var _updateExpirationTime = update.expirationTime;
      _updateExpirationTime < renderExpirationTime ? (null === updateExpirationTime && (updateExpirationTime = update, null === newFirstUpdate && (newBaseState = resultState)), newExpirationTime < _updateExpirationTime && (newExpirationTime = _updateExpirationTime)) : (resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance), null !== update.callback && (workInProgress.effectTag |= 32, update.nextEffect = null, null === queue.lastCapturedEffect ? queue.firstCapturedEffect = queue.lastCapturedEffect = update : (queue.lastCapturedEffect.nextEffect = update, queue.lastCapturedEffect = update)));
      update = update.next;
    }

    null === newFirstUpdate && (queue.lastUpdate = null);
    null === updateExpirationTime ? queue.lastCapturedUpdate = null : workInProgress.effectTag |= 32;
    null === newFirstUpdate && null === updateExpirationTime && (newBaseState = resultState);
    queue.baseState = newBaseState;
    queue.firstUpdate = newFirstUpdate;
    queue.firstCapturedUpdate = updateExpirationTime;
    workInProgress.expirationTime = newExpirationTime;
    workInProgress.memoizedState = resultState;
  }

  function commitUpdateQueue(finishedWork, finishedQueue, instance) {
    null !== finishedQueue.firstCapturedUpdate && (null !== finishedQueue.lastUpdate && (finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate, finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate), finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null);
    commitUpdateEffects(finishedQueue.firstEffect, instance);
    finishedQueue.firstEffect = finishedQueue.lastEffect = null;
    commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
    finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
  }

  function commitUpdateEffects(effect, instance) {
    for (; null !== effect;) {
      var _callback3 = effect.callback;

      if (null !== _callback3) {
        effect.callback = null;
        var context = instance;
        if ("function" !== typeof _callback3) throw ReactError(Error("Invalid argument passed as callback. Expected a function. Instead received: " + _callback3));

        _callback3.call(context);
      }

      effect = effect.nextEffect;
    }
  }

  var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig,
      emptyRefsObject = new React.Component().refs;

  function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
    ctor = workInProgress.memoizedState;
    getDerivedStateFromProps = getDerivedStateFromProps(nextProps, ctor);
    getDerivedStateFromProps = null === getDerivedStateFromProps || undefined === getDerivedStateFromProps ? ctor : _extends({}, ctor, getDerivedStateFromProps);
    workInProgress.memoizedState = getDerivedStateFromProps;
    nextProps = workInProgress.updateQueue;
    null !== nextProps && 0 === workInProgress.expirationTime && (nextProps.baseState = getDerivedStateFromProps);
  }

  var classComponentUpdater = {
    isMounted: function isMounted(component) {
      return (component = component._reactInternalFiber) ? 2 === isFiberMountedImpl(component) : false;
    },
    enqueueSetState: function enqueueSetState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueReplaceState: function enqueueReplaceState(inst, payload, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 1;
      suspenseConfig.payload = payload;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    },
    enqueueForceUpdate: function enqueueForceUpdate(inst, callback) {
      inst = inst._reactInternalFiber;
      var currentTime = requestCurrentTime(),
          suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, inst, suspenseConfig);
      suspenseConfig = createUpdate(currentTime, suspenseConfig);
      suspenseConfig.tag = 2;
      undefined !== callback && null !== callback && (suspenseConfig.callback = callback);
      enqueueUpdate(inst, suspenseConfig);
      scheduleUpdateOnFiber(inst, currentTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
    workInProgress = workInProgress.stateNode;
    return "function" === typeof workInProgress.shouldComponentUpdate ? workInProgress.shouldComponentUpdate(newProps, newState, nextContext) : ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : true;
  }

  function constructClassInstance(workInProgress, ctor, props) {
    var isLegacyContextConsumer = false,
        unmaskedContext = emptyContextObject;
    var context = ctor.contextType;
    "object" === typeof context && null !== context ? context = readContext(context) : (unmaskedContext = isContextProvider(ctor) ? previousContext : contextStackCursor.current, isLegacyContextConsumer = ctor.contextTypes, context = (isLegacyContextConsumer = null !== isLegacyContextConsumer && undefined !== isLegacyContextConsumer) ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject);
    ctor = new ctor(props, context);
    workInProgress.memoizedState = null !== ctor.state && undefined !== ctor.state ? ctor.state : null;
    ctor.updater = classComponentUpdater;
    workInProgress.stateNode = ctor;
    ctor._reactInternalFiber = workInProgress;
    isLegacyContextConsumer && (workInProgress = workInProgress.stateNode, workInProgress.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, workInProgress.__reactInternalMemoizedMaskedChildContext = context);
    return ctor;
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
    workInProgress = instance.state;
    "function" === typeof instance.componentWillReceiveProps && instance.componentWillReceiveProps(newProps, nextContext);
    "function" === typeof instance.UNSAFE_componentWillReceiveProps && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
    instance.state !== workInProgress && classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }

  function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    instance.props = newProps;
    instance.state = workInProgress.memoizedState;
    instance.refs = emptyRefsObject;
    var contextType = ctor.contextType;
    "object" === typeof contextType && null !== contextType ? instance.context = readContext(contextType) : (contextType = isContextProvider(ctor) ? previousContext : contextStackCursor.current, instance.context = getMaskedContext(workInProgress, contextType));
    contextType = workInProgress.updateQueue;
    null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState);
    contextType = ctor.getDerivedStateFromProps;
    "function" === typeof contextType && (applyDerivedStateFromProps(workInProgress, ctor, contextType, newProps), instance.state = workInProgress.memoizedState);
    "function" === typeof ctor.getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || (ctor = instance.state, "function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount(), ctor !== instance.state && classComponentUpdater.enqueueReplaceState(instance, instance.state, null), contextType = workInProgress.updateQueue, null !== contextType && (processUpdateQueue(workInProgress, contextType, newProps, instance, renderExpirationTime), instance.state = workInProgress.memoizedState));
    "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4);
  }

  var isArray = Array.isArray;

  function coerceRef(returnFiber, current$$1, element) {
    returnFiber = element.ref;

    if (null !== returnFiber && "function" !== typeof returnFiber && "object" !== typeof returnFiber) {
      if (element._owner) {
        element = element._owner;
        var inst = undefined;

        if (element) {
          if (1 !== element.tag) throw ReactError(Error("Function components cannot have refs. Did you mean to use React.forwardRef()?"));
          inst = element.stateNode;
        }

        if (!inst) throw ReactError(Error("Missing owner for string ref " + returnFiber + ". This error is likely caused by a bug in React. Please file an issue."));
        var stringRef = "" + returnFiber;
        if (null !== current$$1 && null !== current$$1.ref && "function" === typeof current$$1.ref && current$$1.ref._stringRef === stringRef) return current$$1.ref;

        current$$1 = function current$$1(value) {
          var refs = inst.refs;
          refs === emptyRefsObject && (refs = inst.refs = {});
          null === value ? delete refs[stringRef] : refs[stringRef] = value;
        };

        current$$1._stringRef = stringRef;
        return current$$1;
      }

      if ("string" !== typeof returnFiber) throw ReactError(Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null."));
      if (!element._owner) throw ReactError(Error("Element ref was specified as a string (" + returnFiber + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information."));
    }

    return returnFiber;
  }

  function throwOnInvalidObjectType(returnFiber, newChild) {
    if ("textarea" !== returnFiber.type) throw ReactError(Error("Objects are not valid as a React child (found: " + ("[object Object]" === Object.prototype.toString.call(newChild) ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : newChild) + ")."));
  }

  function ChildReconciler(shouldTrackSideEffects) {
    function deleteChild(returnFiber, childToDelete) {
      if (shouldTrackSideEffects) {
        var last = returnFiber.lastEffect;
        null !== last ? (last.nextEffect = childToDelete, returnFiber.lastEffect = childToDelete) : returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        childToDelete.nextEffect = null;
        childToDelete.effectTag = 8;
      }
    }

    function deleteRemainingChildren(returnFiber, currentFirstChild) {
      if (!shouldTrackSideEffects) return null;

      for (; null !== currentFirstChild;) {
        deleteChild(returnFiber, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return null;
    }

    function mapRemainingChildren(returnFiber, currentFirstChild) {
      for (returnFiber = new Map(); null !== currentFirstChild;) {
        null !== currentFirstChild.key ? returnFiber.set(currentFirstChild.key, currentFirstChild) : returnFiber.set(currentFirstChild.index, currentFirstChild), currentFirstChild = currentFirstChild.sibling;
      }

      return returnFiber;
    }

    function useFiber(fiber, pendingProps, expirationTime) {
      fiber = createWorkInProgress(fiber, pendingProps, expirationTime);
      fiber.index = 0;
      fiber.sibling = null;
      return fiber;
    }

    function placeChild(newFiber, lastPlacedIndex, newIndex) {
      newFiber.index = newIndex;
      if (!shouldTrackSideEffects) return lastPlacedIndex;
      newIndex = newFiber.alternate;
      if (null !== newIndex) return newIndex = newIndex.index, newIndex < lastPlacedIndex ? (newFiber.effectTag = 2, lastPlacedIndex) : newIndex;
      newFiber.effectTag = 2;
      return lastPlacedIndex;
    }

    function placeSingleChild(newFiber) {
      shouldTrackSideEffects && null === newFiber.alternate && (newFiber.effectTag = 2);
      return newFiber;
    }

    function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
      if (null === current$$1 || 6 !== current$$1.tag) return current$$1 = createFiberFromText(textContent, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, textContent, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateElement(returnFiber, current$$1, element, expirationTime) {
      if (null !== current$$1 && current$$1.elementType === element.type) return expirationTime = useFiber(current$$1, element.props, expirationTime), expirationTime.ref = coerceRef(returnFiber, current$$1, element), expirationTime.return = returnFiber, expirationTime;
      expirationTime = createFiberFromTypeAndProps(element.type, element.key, element.props, null, returnFiber.mode, expirationTime);
      expirationTime.ref = coerceRef(returnFiber, current$$1, element);
      expirationTime.return = returnFiber;
      return expirationTime;
    }

    function updatePortal(returnFiber, current$$1, portal, expirationTime) {
      if (null === current$$1 || 4 !== current$$1.tag || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) return current$$1 = createFiberFromPortal(portal, returnFiber.mode, expirationTime), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, portal.children || [], expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
      if (null === current$$1 || 7 !== current$$1.tag) return current$$1 = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key), current$$1.return = returnFiber, current$$1;
      current$$1 = useFiber(current$$1, fragment, expirationTime);
      current$$1.return = returnFiber;
      return current$$1;
    }

    function createChild(returnFiber, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = createFiberFromText("" + newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, null, newChild), expirationTime.return = returnFiber, expirationTime;

          case REACT_PORTAL_TYPE:
            return newChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime), newChild.return = returnFiber, newChild;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return newChild = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null), newChild.return = returnFiber, newChild;
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
      var key = null !== oldFiber ? oldFiber.key : null;
      if ("string" === typeof newChild || "number" === typeof newChild) return null !== key ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return newChild.key === key ? newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key) : updateElement(returnFiber, oldFiber, newChild, expirationTime) : null;

          case REACT_PORTAL_TYPE:
            return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, expirationTime) : null;
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return null !== key ? null : updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
      if ("string" === typeof newChild || "number" === typeof newChild) return existingChildren = existingChildren.get(newIdx) || null, updateTextNode(returnFiber, existingChildren, "" + newChild, expirationTime);

      if ("object" === typeof newChild && null !== newChild) {
        switch (newChild.$$typeof) {
          case REACT_ELEMENT_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, newChild.type === REACT_FRAGMENT_TYPE ? updateFragment(returnFiber, existingChildren, newChild.props.children, expirationTime, newChild.key) : updateElement(returnFiber, existingChildren, newChild, expirationTime);

          case REACT_PORTAL_TYPE:
            return existingChildren = existingChildren.get(null === newChild.key ? newIdx : newChild.key) || null, updatePortal(returnFiber, existingChildren, newChild, expirationTime);
        }

        if (isArray(newChild) || getIteratorFn(newChild)) return existingChildren = existingChildren.get(newIdx) || null, updateFragment(returnFiber, existingChildren, newChild, expirationTime, null);
        throwOnInvalidObjectType(returnFiber, newChild);
      }

      return null;
    }

    function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
      for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null; null !== oldFiber && newIdx < newChildren.length; newIdx++) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (newIdx === newChildren.length) return deleteRemainingChildren(returnFiber, oldFiber), resultingFirstChild;

      if (null === oldFiber) {
        for (; newIdx < newChildren.length; newIdx++) {
          oldFiber = createChild(returnFiber, newChildren[newIdx], expirationTime), null !== oldFiber && (currentFirstChild = placeChild(oldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = oldFiber : previousNewFiber.sibling = oldFiber, previousNewFiber = oldFiber);
        }

        return resultingFirstChild;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
        nextOldFiber = updateFromMap(oldFiber, returnFiber, newIdx, newChildren[newIdx], expirationTime), null !== nextOldFiber && (shouldTrackSideEffects && null !== nextOldFiber.alternate && oldFiber.delete(null === nextOldFiber.key ? newIdx : nextOldFiber.key), currentFirstChild = placeChild(nextOldFiber, currentFirstChild, newIdx), null === previousNewFiber ? resultingFirstChild = nextOldFiber : previousNewFiber.sibling = nextOldFiber, previousNewFiber = nextOldFiber);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return resultingFirstChild;
    }

    function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
      var iteratorFn = getIteratorFn(newChildrenIterable);
      if ("function" !== typeof iteratorFn) throw ReactError(Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."));
      newChildrenIterable = iteratorFn.call(newChildrenIterable);
      if (null == newChildrenIterable) throw ReactError(Error("An iterable object provided no iterator."));

      for (var previousNewFiber = iteratorFn = null, oldFiber = currentFirstChild, newIdx = currentFirstChild = 0, nextOldFiber = null, step = newChildrenIterable.next(); null !== oldFiber && !step.done; newIdx++, step = newChildrenIterable.next()) {
        oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
        var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

        if (null === newFiber) {
          null === oldFiber && (oldFiber = nextOldFiber);
          break;
        }

        shouldTrackSideEffects && oldFiber && null === newFiber.alternate && deleteChild(returnFiber, oldFiber);
        currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
        null === previousNewFiber ? iteratorFn = newFiber : previousNewFiber.sibling = newFiber;
        previousNewFiber = newFiber;
        oldFiber = nextOldFiber;
      }

      if (step.done) return deleteRemainingChildren(returnFiber, oldFiber), iteratorFn;

      if (null === oldFiber) {
        for (; !step.done; newIdx++, step = newChildrenIterable.next()) {
          step = createChild(returnFiber, step.value, expirationTime), null !== step && (currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
        }

        return iteratorFn;
      }

      for (oldFiber = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildrenIterable.next()) {
        step = updateFromMap(oldFiber, returnFiber, newIdx, step.value, expirationTime), null !== step && (shouldTrackSideEffects && null !== step.alternate && oldFiber.delete(null === step.key ? newIdx : step.key), currentFirstChild = placeChild(step, currentFirstChild, newIdx), null === previousNewFiber ? iteratorFn = step : previousNewFiber.sibling = step, previousNewFiber = step);
      }

      shouldTrackSideEffects && oldFiber.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
      return iteratorFn;
    }

    return function (returnFiber, currentFirstChild, newChild, expirationTime) {
      var isUnkeyedTopLevelFragment = "object" === typeof newChild && null !== newChild && newChild.type === REACT_FRAGMENT_TYPE && null === newChild.key;
      isUnkeyedTopLevelFragment && (newChild = newChild.props.children);
      var isObject = "object" === typeof newChild && null !== newChild;
      if (isObject) switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          a: {
            isObject = newChild.key;

            for (isUnkeyedTopLevelFragment = currentFirstChild; null !== isUnkeyedTopLevelFragment;) {
              if (isUnkeyedTopLevelFragment.key === isObject) {
                if (7 === isUnkeyedTopLevelFragment.tag ? newChild.type === REACT_FRAGMENT_TYPE : isUnkeyedTopLevelFragment.elementType === newChild.type) {
                  deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment.sibling);
                  currentFirstChild = useFiber(isUnkeyedTopLevelFragment, newChild.type === REACT_FRAGMENT_TYPE ? newChild.props.children : newChild.props, expirationTime);
                  currentFirstChild.ref = coerceRef(returnFiber, isUnkeyedTopLevelFragment, newChild);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, isUnkeyedTopLevelFragment);
                break;
              } else deleteChild(returnFiber, isUnkeyedTopLevelFragment);

              isUnkeyedTopLevelFragment = isUnkeyedTopLevelFragment.sibling;
            }

            newChild.type === REACT_FRAGMENT_TYPE ? (currentFirstChild = createFiberFromFragment(newChild.props.children, returnFiber.mode, expirationTime, newChild.key), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (expirationTime = createFiberFromTypeAndProps(newChild.type, newChild.key, newChild.props, null, returnFiber.mode, expirationTime), expirationTime.ref = coerceRef(returnFiber, currentFirstChild, newChild), expirationTime.return = returnFiber, returnFiber = expirationTime);
          }

          return placeSingleChild(returnFiber);

        case REACT_PORTAL_TYPE:
          a: {
            for (isUnkeyedTopLevelFragment = newChild.key; null !== currentFirstChild;) {
              if (currentFirstChild.key === isUnkeyedTopLevelFragment) {
                if (4 === currentFirstChild.tag && currentFirstChild.stateNode.containerInfo === newChild.containerInfo && currentFirstChild.stateNode.implementation === newChild.implementation) {
                  deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                  currentFirstChild = useFiber(currentFirstChild, newChild.children || [], expirationTime);
                  currentFirstChild.return = returnFiber;
                  returnFiber = currentFirstChild;
                  break a;
                }

                deleteRemainingChildren(returnFiber, currentFirstChild);
                break;
              } else deleteChild(returnFiber, currentFirstChild);

              currentFirstChild = currentFirstChild.sibling;
            }

            currentFirstChild = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            currentFirstChild.return = returnFiber;
            returnFiber = currentFirstChild;
          }

          return placeSingleChild(returnFiber);
      }
      if ("string" === typeof newChild || "number" === typeof newChild) return newChild = "" + newChild, null !== currentFirstChild && 6 === currentFirstChild.tag ? (deleteRemainingChildren(returnFiber, currentFirstChild.sibling), currentFirstChild = useFiber(currentFirstChild, newChild, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild) : (deleteRemainingChildren(returnFiber, currentFirstChild), currentFirstChild = createFiberFromText(newChild, returnFiber.mode, expirationTime), currentFirstChild.return = returnFiber, returnFiber = currentFirstChild), placeSingleChild(returnFiber);
      if (isArray(newChild)) return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
      if (getIteratorFn(newChild)) return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
      isObject && throwOnInvalidObjectType(returnFiber, newChild);
      if ("undefined" === typeof newChild && !isUnkeyedTopLevelFragment) switch (returnFiber.tag) {
        case 1:
        case 0:
          throw returnFiber = returnFiber.type, ReactError(Error((returnFiber.displayName || returnFiber.name || "Component") + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null."));
      }
      return deleteRemainingChildren(returnFiber, currentFirstChild);
    };
  }

  var reconcileChildFibers = ChildReconciler(true),
      mountChildFibers = ChildReconciler(false),
      NO_CONTEXT = {},
      contextStackCursor$1 = {
    current: NO_CONTEXT
  },
      contextFiberStackCursor = {
    current: NO_CONTEXT
  },
      rootInstanceStackCursor = {
    current: NO_CONTEXT
  };

  function requiredContext(c) {
    if (c === NO_CONTEXT) throw ReactError(Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."));
    return c;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    push(rootInstanceStackCursor, nextRootInstance, fiber);
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor$1, NO_CONTEXT, fiber);
    pop(contextStackCursor$1, fiber);
    push(contextStackCursor$1, {
      isInAParentText: false
    }, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor$1, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function pushHostContext(fiber) {
    requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor$1.current);
    var nextContext = fiber.type;
    nextContext = "AndroidTextInput" === nextContext || "RCTMultilineTextInputView" === nextContext || "RCTSinglelineTextInputView" === nextContext || "RCTText" === nextContext || "RCTVirtualText" === nextContext;
    nextContext = context.isInAParentText !== nextContext ? {
      isInAParentText: nextContext
    } : context;
    context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
  }

  function popHostContext(fiber) {
    contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
  }

  var SubtreeSuspenseContextMask = 1,
      InvisibleParentSuspenseContext = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = {
    current: 0
  };

  function findFirstSuspended(row) {
    for (var node = row; null !== node;) {
      if (13 === node.tag) {
        if (null !== node.memoizedState) return node;
      } else if (19 === node.tag && undefined !== node.memoizedProps.revealOrder) {
        if (0 !== (node.effectTag & 64)) return node;
      } else if (null !== node.child) {
        node.child.return = node;
        node = node.child;
        continue;
      }

      if (node === row) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === row) return null;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }

    return null;
  }

  function createResponderListener(responder, props) {
    return {
      responder: responder,
      props: props
    };
  }

  var NoEffect$1 = 0,
      UnmountSnapshot = 2,
      UnmountMutation = 4,
      MountMutation = 8,
      UnmountLayout = 16,
      MountLayout = 32,
      MountPassive = 64,
      UnmountPassive = 128,
      ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
      renderExpirationTime$1 = 0,
      currentlyRenderingFiber$1 = null,
      currentHook = null,
      nextCurrentHook = null,
      firstWorkInProgressHook = null,
      workInProgressHook = null,
      nextWorkInProgressHook = null,
      remainingExpirationTime = 0,
      componentUpdateQueue = null,
      sideEffectTag = 0,
      didScheduleRenderPhaseUpdate = false,
      renderPhaseUpdates = null,
      numberOfReRenders = 0;

  function throwInvalidHookError() {
    throw ReactError(Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem."));
  }

  function areHookInputsEqual(nextDeps, prevDeps) {
    if (null === prevDeps) return false;

    for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
      if (!is(nextDeps[i], prevDeps[i])) return false;
    }

    return true;
  }

  function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
    renderExpirationTime$1 = nextRenderExpirationTime;
    currentlyRenderingFiber$1 = workInProgress;
    nextCurrentHook = null !== current ? current.memoizedState : null;
    ReactCurrentDispatcher$1.current = null === nextCurrentHook ? HooksDispatcherOnMount : HooksDispatcherOnUpdate;
    workInProgress = Component(props, refOrContext);

    if (didScheduleRenderPhaseUpdate) {
      do {
        didScheduleRenderPhaseUpdate = false, numberOfReRenders += 1, nextCurrentHook = null !== current ? current.memoizedState : null, nextWorkInProgressHook = firstWorkInProgressHook, componentUpdateQueue = workInProgressHook = currentHook = null, ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdate, workInProgress = Component(props, refOrContext);
      } while (didScheduleRenderPhaseUpdate);

      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    current = currentlyRenderingFiber$1;
    current.memoizedState = firstWorkInProgressHook;
    current.expirationTime = remainingExpirationTime;
    current.updateQueue = componentUpdateQueue;
    current.effectTag |= sideEffectTag;
    current = null !== currentHook && null !== currentHook.next;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    if (current) throw ReactError(Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement."));
    return workInProgress;
  }

  function resetHooks() {
    ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
    renderExpirationTime$1 = 0;
    nextWorkInProgressHook = workInProgressHook = firstWorkInProgressHook = nextCurrentHook = currentHook = currentlyRenderingFiber$1 = null;
    remainingExpirationTime = 0;
    componentUpdateQueue = null;
    sideEffectTag = 0;
    didScheduleRenderPhaseUpdate = false;
    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  function mountWorkInProgressHook() {
    var hook = {
      memoizedState: null,
      baseState: null,
      queue: null,
      baseUpdate: null,
      next: null
    };
    null === workInProgressHook ? firstWorkInProgressHook = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook;
    return workInProgressHook;
  }

  function updateWorkInProgressHook() {
    if (null !== nextWorkInProgressHook) workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook, nextCurrentHook = null !== currentHook ? currentHook.next : null;else {
      if (null === nextCurrentHook) throw ReactError(Error("Rendered more hooks than during the previous render."));
      currentHook = nextCurrentHook;
      var newHook = {
        memoizedState: currentHook.memoizedState,
        baseState: currentHook.baseState,
        queue: currentHook.queue,
        baseUpdate: currentHook.baseUpdate,
        next: null
      };
      workInProgressHook = null === workInProgressHook ? firstWorkInProgressHook = newHook : workInProgressHook.next = newHook;
      nextCurrentHook = currentHook.next;
    }
    return workInProgressHook;
  }

  function basicStateReducer(state, action) {
    return "function" === typeof action ? action(state) : action;
  }

  function updateReducer(reducer) {
    var hook = updateWorkInProgressHook(),
        queue = hook.queue;
    if (null === queue) throw ReactError(Error("Should have a queue. This is likely a bug in React. Please file an issue."));
    queue.lastRenderedReducer = reducer;

    if (0 < numberOfReRenders) {
      var _dispatch = queue.dispatch;

      if (null !== renderPhaseUpdates) {
        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (undefined !== firstRenderPhaseUpdate) {
          renderPhaseUpdates.delete(queue);
          var newState = hook.memoizedState;

          do {
            newState = reducer(newState, firstRenderPhaseUpdate.action), firstRenderPhaseUpdate = firstRenderPhaseUpdate.next;
          } while (null !== firstRenderPhaseUpdate);

          is(newState, hook.memoizedState) || (didReceiveUpdate = true);
          hook.memoizedState = newState;
          hook.baseUpdate === queue.last && (hook.baseState = newState);
          queue.lastRenderedState = newState;
          return [newState, _dispatch];
        }
      }

      return [hook.memoizedState, _dispatch];
    }

    _dispatch = queue.last;
    var baseUpdate = hook.baseUpdate;
    newState = hook.baseState;
    null !== baseUpdate ? (null !== _dispatch && (_dispatch.next = null), _dispatch = baseUpdate.next) : _dispatch = null !== _dispatch ? _dispatch.next : null;

    if (null !== _dispatch) {
      var newBaseUpdate = firstRenderPhaseUpdate = null,
          _update = _dispatch,
          didSkip = false;

      do {
        var updateExpirationTime = _update.expirationTime;
        updateExpirationTime < renderExpirationTime$1 ? (didSkip || (didSkip = true, newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState), updateExpirationTime > remainingExpirationTime && (remainingExpirationTime = updateExpirationTime)) : (markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig), newState = _update.eagerReducer === reducer ? _update.eagerState : reducer(newState, _update.action));
        baseUpdate = _update;
        _update = _update.next;
      } while (null !== _update && _update !== _dispatch);

      didSkip || (newBaseUpdate = baseUpdate, firstRenderPhaseUpdate = newState);
      is(newState, hook.memoizedState) || (didReceiveUpdate = true);
      hook.memoizedState = newState;
      hook.baseUpdate = newBaseUpdate;
      hook.baseState = firstRenderPhaseUpdate;
      queue.lastRenderedState = newState;
    }

    return [hook.memoizedState, queue.dispatch];
  }

  function pushEffect(tag, create, destroy, deps) {
    tag = {
      tag: tag,
      create: create,
      destroy: destroy,
      deps: deps,
      next: null
    };
    null === componentUpdateQueue ? (componentUpdateQueue = {
      lastEffect: null
    }, componentUpdateQueue.lastEffect = tag.next = tag) : (create = componentUpdateQueue.lastEffect, null === create ? componentUpdateQueue.lastEffect = tag.next = tag : (destroy = create.next, create.next = tag, tag.next = destroy, componentUpdateQueue.lastEffect = tag));
    return tag;
  }

  function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = mountWorkInProgressHook();
    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, undefined, undefined === deps ? null : deps);
  }

  function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
    var hook = updateWorkInProgressHook();
    deps = undefined === deps ? null : deps;
    var destroy = undefined;

    if (null !== currentHook) {
      var prevEffect = currentHook.memoizedState;
      destroy = prevEffect.destroy;

      if (null !== deps && areHookInputsEqual(deps, prevEffect.deps)) {
        pushEffect(NoEffect$1, create, destroy, deps);
        return;
      }
    }

    sideEffectTag |= fiberEffectTag;
    hook.memoizedState = pushEffect(hookEffectTag, create, destroy, deps);
  }

  function imperativeHandleEffect(create, ref) {
    if ("function" === typeof ref) return create = create(), ref(create), function () {
      ref(null);
    };
    if (null !== ref && undefined !== ref) return create = create(), ref.current = create, function () {
      ref.current = null;
    };
  }

  function mountDebugValue() {}

  function dispatchAction(fiber, queue, action) {
    if (!(25 > numberOfReRenders)) throw ReactError(Error("Too many re-renders. React limits the number of renders to prevent an infinite loop."));
    var alternate = fiber.alternate;
    if (fiber === currentlyRenderingFiber$1 || null !== alternate && alternate === currentlyRenderingFiber$1) {
      if (didScheduleRenderPhaseUpdate = true, fiber = {
        expirationTime: renderExpirationTime$1,
        suspenseConfig: null,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }, null === renderPhaseUpdates && (renderPhaseUpdates = new Map()), action = renderPhaseUpdates.get(queue), undefined === action) renderPhaseUpdates.set(queue, fiber);else {
        for (queue = action; null !== queue.next;) {
          queue = queue.next;
        }

        queue.next = fiber;
      }
    } else {
      var currentTime = requestCurrentTime(),
          _suspenseConfig = ReactCurrentBatchConfig.suspense;
      currentTime = computeExpirationForFiber(currentTime, fiber, _suspenseConfig);
      _suspenseConfig = {
        expirationTime: currentTime,
        suspenseConfig: _suspenseConfig,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      };
      var _last = queue.last;
      if (null === _last) _suspenseConfig.next = _suspenseConfig;else {
        var first = _last.next;
        null !== first && (_suspenseConfig.next = first);
        _last.next = _suspenseConfig;
      }
      queue.last = _suspenseConfig;
      if (0 === fiber.expirationTime && (null === alternate || 0 === alternate.expirationTime) && (alternate = queue.lastRenderedReducer, null !== alternate)) try {
        var currentState = queue.lastRenderedState,
            _eagerState = alternate(currentState, action);

        _suspenseConfig.eagerReducer = alternate;
        _suspenseConfig.eagerState = _eagerState;
        if (is(_eagerState, currentState)) return;
      } catch (error) {} finally {}
      scheduleUpdateOnFiber(fiber, currentTime);
    }
  }

  var ContextOnlyDispatcher = {
    readContext: readContext,
    useCallback: throwInvalidHookError,
    useContext: throwInvalidHookError,
    useEffect: throwInvalidHookError,
    useImperativeHandle: throwInvalidHookError,
    useLayoutEffect: throwInvalidHookError,
    useMemo: throwInvalidHookError,
    useReducer: throwInvalidHookError,
    useRef: throwInvalidHookError,
    useState: throwInvalidHookError,
    useDebugValue: throwInvalidHookError,
    useResponder: throwInvalidHookError
  },
      HooksDispatcherOnMount = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [callback, undefined === deps ? null : deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return mountEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return mountEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return mountEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: function useReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      initialArg = undefined !== init ? init(initialArg) : initialArg;
      hook.memoizedState = hook.baseState = initialArg;
      reducer = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialArg
      };
      reducer = reducer.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, reducer);
      return [hook.memoizedState, reducer];
    },
    useRef: function useRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = {
        current: initialValue
      };
      return hook.memoizedState = initialValue;
    },
    useState: function useState(initialState) {
      var hook = mountWorkInProgressHook();
      "function" === typeof initialState && (initialState = initialState());
      hook.memoizedState = hook.baseState = initialState;
      initialState = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      initialState = initialState.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, initialState);
      return [hook.memoizedState, initialState];
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      HooksDispatcherOnUpdate = {
    readContext: readContext,
    useCallback: function useCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    },
    useContext: readContext,
    useEffect: function useEffect(create, deps) {
      return updateEffectImpl(516, 192, create, deps);
    },
    useImperativeHandle: function useImperativeHandle(ref, create, deps) {
      deps = null !== deps && undefined !== deps ? deps.concat([ref]) : null;
      return updateEffectImpl(4, 36, imperativeHandleEffect.bind(null, create, ref), deps);
    },
    useLayoutEffect: function useLayoutEffect(create, deps) {
      return updateEffectImpl(4, 36, create, deps);
    },
    useMemo: function useMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = undefined === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== prevState && null !== deps && areHookInputsEqual(deps, prevState[1])) return prevState[0];
      nextCreate = nextCreate();
      hook.memoizedState = [nextCreate, deps];
      return nextCreate;
    },
    useReducer: updateReducer,
    useRef: function useRef() {
      return updateWorkInProgressHook().memoizedState;
    },
    useState: function useState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    },
    useDebugValue: mountDebugValue,
    useResponder: createResponderListener
  },
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = false;

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case 5:
        return nextInstance = shim$1(nextInstance, fiber.type, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 6:
        return nextInstance = shim$1(nextInstance, fiber.pendingProps), null !== nextInstance ? (fiber.stateNode = nextInstance, true) : false;

      case 13:
        return false;

      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber$jscomp$0) {
    if (isHydrating) {
      var nextInstance = nextHydratableInstance;

      if (nextInstance) {
        var firstAttemptedInstance = nextInstance;

        if (!tryHydrate(fiber$jscomp$0, nextInstance)) {
          nextInstance = shim$1(firstAttemptedInstance);

          if (!nextInstance || !tryHydrate(fiber$jscomp$0, nextInstance)) {
            fiber$jscomp$0.effectTag |= 2;
            isHydrating = false;
            hydrationParentFiber = fiber$jscomp$0;
            return;
          }

          var returnFiber = hydrationParentFiber,
              fiber = createFiber(5, null, null, 0);
          fiber.elementType = "DELETED";
          fiber.type = "DELETED";
          fiber.stateNode = firstAttemptedInstance;
          fiber.return = returnFiber;
          fiber.effectTag = 8;
          null !== returnFiber.lastEffect ? (returnFiber.lastEffect.nextEffect = fiber, returnFiber.lastEffect = fiber) : returnFiber.firstEffect = returnFiber.lastEffect = fiber;
        }

        hydrationParentFiber = fiber$jscomp$0;
        nextHydratableInstance = shim$1(nextInstance);
      } else fiber$jscomp$0.effectTag |= 2, isHydrating = false, hydrationParentFiber = fiber$jscomp$0;
    }
  }

  var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner,
      didReceiveUpdate = false;

  function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
    workInProgress.child = null === current$$1 ? mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime) : reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }

  function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    Component = Component.render;
    var ref = workInProgress.ref;
    prepareToReadContext(workInProgress, renderExpirationTime);
    nextProps = renderWithHooks(current$$1, workInProgress, Component, nextProps, ref, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, nextProps, renderExpirationTime);
    return workInProgress.child;
  }

  function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    if (null === current$$1) {
      var type = Component.type;
      if ("function" === typeof type && !shouldConstruct(type) && undefined === type.defaultProps && null === Component.compare && undefined === Component.defaultProps) return workInProgress.tag = 15, workInProgress.type = type, updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
      current$$1 = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
      current$$1.ref = workInProgress.ref;
      current$$1.return = workInProgress;
      return workInProgress.child = current$$1;
    }

    type = current$$1.child;
    if (updateExpirationTime < renderExpirationTime && (updateExpirationTime = type.memoizedProps, Component = Component.compare, Component = null !== Component ? Component : shallowEqual, Component(updateExpirationTime, nextProps) && current$$1.ref === workInProgress.ref)) return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    current$$1 = createWorkInProgress(type, nextProps, renderExpirationTime);
    current$$1.ref = workInProgress.ref;
    current$$1.return = workInProgress;
    return workInProgress.child = current$$1;
  }

  function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
    return null !== current$$1 && shallowEqual(current$$1.memoizedProps, nextProps) && current$$1.ref === workInProgress.ref && (didReceiveUpdate = false, updateExpirationTime < renderExpirationTime) ? bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }

  function markRef(current$$1, workInProgress) {
    var ref = workInProgress.ref;
    if (null === current$$1 && null !== ref || null !== current$$1 && current$$1.ref !== ref) workInProgress.effectTag |= 128;
  }

  function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    var context = isContextProvider(Component) ? previousContext : contextStackCursor.current;
    context = getMaskedContext(workInProgress, context);
    prepareToReadContext(workInProgress, renderExpirationTime);
    Component = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (null !== current$$1 && !didReceiveUpdate) return workInProgress.updateQueue = current$$1.updateQueue, workInProgress.effectTag &= -517, current$$1.expirationTime <= renderExpirationTime && (current$$1.expirationTime = 0), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    workInProgress.effectTag |= 1;
    reconcileChildren(current$$1, workInProgress, Component, renderExpirationTime);
    return workInProgress.child;
  }

  function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
    if (isContextProvider(Component)) {
      var hasContext = true;
      pushContextProvider(workInProgress);
    } else hasContext = false;

    prepareToReadContext(workInProgress, renderExpirationTime);
    if (null === workInProgress.stateNode) null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime), mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime), nextProps = true;else if (null === current$$1) {
      var instance = workInProgress.stateNode,
          oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context,
          contextType = Component.contextType;
      "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType));
      var getDerivedStateFromProps = Component.getDerivedStateFromProps,
          hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate;
      hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType);
      hasForceUpdate = false;
      var oldState = workInProgress.memoizedState;
      oldContext = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;
      null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldContext = workInProgress.memoizedState);
      oldProps !== nextProps || oldState !== oldContext || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldContext = workInProgress.memoizedState), (oldProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldState, oldContext, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillMount && "function" !== typeof instance.componentWillMount || ("function" === typeof instance.componentWillMount && instance.componentWillMount(), "function" === typeof instance.UNSAFE_componentWillMount && instance.UNSAFE_componentWillMount()), "function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4)) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldContext), instance.props = nextProps, instance.state = oldContext, instance.context = contextType, nextProps = oldProps) : ("function" === typeof instance.componentDidMount && (workInProgress.effectTag |= 4), nextProps = false);
    } else instance = workInProgress.stateNode, oldProps = workInProgress.memoizedProps, instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps), oldContext = instance.context, contextType = Component.contextType, "object" === typeof contextType && null !== contextType ? contextType = readContext(contextType) : (contextType = isContextProvider(Component) ? previousContext : contextStackCursor.current, contextType = getMaskedContext(workInProgress, contextType)), getDerivedStateFromProps = Component.getDerivedStateFromProps, (hasNewLifecycles = "function" === typeof getDerivedStateFromProps || "function" === typeof instance.getSnapshotBeforeUpdate) || "function" !== typeof instance.UNSAFE_componentWillReceiveProps && "function" !== typeof instance.componentWillReceiveProps || (oldProps !== nextProps || oldContext !== contextType) && callComponentWillReceiveProps(workInProgress, instance, nextProps, contextType), hasForceUpdate = false, oldContext = workInProgress.memoizedState, oldState = instance.state = oldContext, updateQueue = workInProgress.updateQueue, null !== updateQueue && (processUpdateQueue(workInProgress, updateQueue, nextProps, instance, renderExpirationTime), oldState = workInProgress.memoizedState), oldProps !== nextProps || oldContext !== oldState || didPerformWorkStackCursor.current || hasForceUpdate ? ("function" === typeof getDerivedStateFromProps && (applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, nextProps), oldState = workInProgress.memoizedState), (getDerivedStateFromProps = hasForceUpdate || checkShouldComponentUpdate(workInProgress, Component, oldProps, nextProps, oldContext, oldState, contextType)) ? (hasNewLifecycles || "function" !== typeof instance.UNSAFE_componentWillUpdate && "function" !== typeof instance.componentWillUpdate || ("function" === typeof instance.componentWillUpdate && instance.componentWillUpdate(nextProps, oldState, contextType), "function" === typeof instance.UNSAFE_componentWillUpdate && instance.UNSAFE_componentWillUpdate(nextProps, oldState, contextType)), "function" === typeof instance.componentDidUpdate && (workInProgress.effectTag |= 4), "function" === typeof instance.getSnapshotBeforeUpdate && (workInProgress.effectTag |= 256)) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), workInProgress.memoizedProps = nextProps, workInProgress.memoizedState = oldState), instance.props = nextProps, instance.state = oldState, instance.context = contextType, nextProps = getDerivedStateFromProps) : ("function" !== typeof instance.componentDidUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 4), "function" !== typeof instance.getSnapshotBeforeUpdate || oldProps === current$$1.memoizedProps && oldContext === current$$1.memoizedState || (workInProgress.effectTag |= 256), nextProps = false);
    return finishClassComponent(current$$1, workInProgress, Component, nextProps, hasContext, renderExpirationTime);
  }

  function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
    markRef(current$$1, workInProgress);
    var didCaptureError = 0 !== (workInProgress.effectTag & 64);
    if (!shouldUpdate && !didCaptureError) return hasContext && invalidateContextProvider(workInProgress, Component, false), bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    shouldUpdate = workInProgress.stateNode;
    ReactCurrentOwner$3.current = workInProgress;
    var nextChildren = didCaptureError && "function" !== typeof Component.getDerivedStateFromError ? null : shouldUpdate.render();
    workInProgress.effectTag |= 1;
    null !== current$$1 && didCaptureError ? (workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime), workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime)) : reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    workInProgress.memoizedState = shouldUpdate.state;
    hasContext && invalidateContextProvider(workInProgress, Component, true);
    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    root.pendingContext ? pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context) : root.context && pushTopLevelContextObject(workInProgress, root.context, false);
    pushHostContainer(workInProgress, root.containerInfo);
  }

  var SUSPENDED_MARKER = {};

  function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
    var mode = workInProgress.mode,
        nextProps = workInProgress.pendingProps,
        suspenseContext = suspenseStackCursor.current,
        nextState = null,
        nextDidTimeout = false,
        JSCompiler_temp;
    (JSCompiler_temp = 0 !== (workInProgress.effectTag & 64)) || (JSCompiler_temp = 0 !== (suspenseContext & ForceSuspenseFallback) && (null === current$$1 || null !== current$$1.memoizedState));
    JSCompiler_temp ? (nextState = SUSPENDED_MARKER, nextDidTimeout = true, workInProgress.effectTag &= -65) : null !== current$$1 && null === current$$1.memoizedState || undefined === nextProps.fallback || true === nextProps.unstable_avoidThisFallback || (suspenseContext |= InvisibleParentSuspenseContext);
    suspenseContext &= SubtreeSuspenseContextMask;
    push(suspenseStackCursor, suspenseContext, workInProgress);
    if (null === current$$1) {
      if (nextDidTimeout) {
        nextProps = nextProps.fallback;
        current$$1 = createFiberFromFragment(null, mode, 0, null);
        current$$1.return = workInProgress;
        if (0 === (workInProgress.mode & 2)) for (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, current$$1.child = nextDidTimeout; null !== nextDidTimeout;) {
          nextDidTimeout.return = current$$1, nextDidTimeout = nextDidTimeout.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextProps, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        current$$1.sibling = renderExpirationTime;
        mode = current$$1;
      } else mode = renderExpirationTime = mountChildFibers(workInProgress, null, nextProps.children, renderExpirationTime);
    } else {
      if (null !== current$$1.memoizedState) {
        if (suspenseContext = current$$1.child, mode = suspenseContext.sibling, nextDidTimeout) {
          nextProps = nextProps.fallback;
          renderExpirationTime = createWorkInProgress(suspenseContext, suspenseContext.pendingProps, 0);
          renderExpirationTime.return = workInProgress;
          if (0 === (workInProgress.mode & 2) && (nextDidTimeout = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextDidTimeout !== suspenseContext.child)) for (renderExpirationTime.child = nextDidTimeout; null !== nextDidTimeout;) {
            nextDidTimeout.return = renderExpirationTime, nextDidTimeout = nextDidTimeout.sibling;
          }
          nextProps = createWorkInProgress(mode, nextProps, mode.expirationTime);
          nextProps.return = workInProgress;
          renderExpirationTime.sibling = nextProps;
          mode = renderExpirationTime;
          renderExpirationTime.childExpirationTime = 0;
          renderExpirationTime = nextProps;
        } else mode = renderExpirationTime = reconcileChildFibers(workInProgress, suspenseContext.child, nextProps.children, renderExpirationTime);
      } else if (suspenseContext = current$$1.child, nextDidTimeout) {
        nextDidTimeout = nextProps.fallback;
        nextProps = createFiberFromFragment(null, mode, 0, null);
        nextProps.return = workInProgress;
        nextProps.child = suspenseContext;
        null !== suspenseContext && (suspenseContext.return = nextProps);
        if (0 === (workInProgress.mode & 2)) for (suspenseContext = null !== workInProgress.memoizedState ? workInProgress.child.child : workInProgress.child, nextProps.child = suspenseContext; null !== suspenseContext;) {
          suspenseContext.return = nextProps, suspenseContext = suspenseContext.sibling;
        }
        renderExpirationTime = createFiberFromFragment(nextDidTimeout, mode, renderExpirationTime, null);
        renderExpirationTime.return = workInProgress;
        nextProps.sibling = renderExpirationTime;
        renderExpirationTime.effectTag |= 2;
        mode = nextProps;
        nextProps.childExpirationTime = 0;
      } else renderExpirationTime = mode = reconcileChildFibers(workInProgress, suspenseContext, nextProps.children, renderExpirationTime);
      workInProgress.stateNode = current$$1.stateNode;
    }
    workInProgress.memoizedState = nextState;
    workInProgress.child = mode;
    return renderExpirationTime;
  }

  function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode) {
    var renderState = workInProgress.memoizedState;
    null === renderState ? workInProgress.memoizedState = {
      isBackwards: isBackwards,
      rendering: null,
      last: lastContentRow,
      tail: tail,
      tailExpiration: 0,
      tailMode: tailMode
    } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailExpiration = 0, renderState.tailMode = tailMode);
  }

  function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
    var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail;
    reconcileChildren(current$$1, workInProgress, nextProps.children, renderExpirationTime);
    nextProps = suspenseStackCursor.current;
    if (0 !== (nextProps & ForceSuspenseFallback)) nextProps = nextProps & SubtreeSuspenseContextMask | ForceSuspenseFallback, workInProgress.effectTag |= 64;else {
      if (null !== current$$1 && 0 !== (current$$1.effectTag & 64)) a: for (current$$1 = workInProgress.child; null !== current$$1;) {
        if (13 === current$$1.tag) {
          if (null !== current$$1.memoizedState) {
            current$$1.expirationTime < renderExpirationTime && (current$$1.expirationTime = renderExpirationTime);
            var alternate = current$$1.alternate;
            null !== alternate && alternate.expirationTime < renderExpirationTime && (alternate.expirationTime = renderExpirationTime);
            scheduleWorkOnParentPath(current$$1.return, renderExpirationTime);
          }
        } else if (null !== current$$1.child) {
          current$$1.child.return = current$$1;
          current$$1 = current$$1.child;
          continue;
        }

        if (current$$1 === workInProgress) break a;

        for (; null === current$$1.sibling;) {
          if (null === current$$1.return || current$$1.return === workInProgress) break a;
          current$$1 = current$$1.return;
        }

        current$$1.sibling.return = current$$1.return;
        current$$1 = current$$1.sibling;
      }
      nextProps &= SubtreeSuspenseContextMask;
    }
    push(suspenseStackCursor, nextProps, workInProgress);
    if (0 === (workInProgress.mode & 2)) workInProgress.memoizedState = null;else switch (revealOrder) {
      case "forwards":
        renderExpirationTime = workInProgress.child;

        for (revealOrder = null; null !== renderExpirationTime;) {
          nextProps = renderExpirationTime.alternate, null !== nextProps && null === findFirstSuspended(nextProps) && (revealOrder = renderExpirationTime), renderExpirationTime = renderExpirationTime.sibling;
        }

        renderExpirationTime = revealOrder;
        null === renderExpirationTime ? (revealOrder = workInProgress.child, workInProgress.child = null) : (revealOrder = renderExpirationTime.sibling, renderExpirationTime.sibling = null);
        initSuspenseListRenderState(workInProgress, false, revealOrder, renderExpirationTime, tailMode);
        break;

      case "backwards":
        renderExpirationTime = null;
        revealOrder = workInProgress.child;

        for (workInProgress.child = null; null !== revealOrder;) {
          nextProps = revealOrder.alternate;

          if (null !== nextProps && null === findFirstSuspended(nextProps)) {
            workInProgress.child = revealOrder;
            break;
          }

          nextProps = revealOrder.sibling;
          revealOrder.sibling = renderExpirationTime;
          renderExpirationTime = revealOrder;
          revealOrder = nextProps;
        }

        initSuspenseListRenderState(workInProgress, true, renderExpirationTime, null, tailMode);
        break;

      case "together":
        initSuspenseListRenderState(workInProgress, false, null, null, undefined);
        break;

      default:
        workInProgress.memoizedState = null;
    }
    return workInProgress.child;
  }

  function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
    null !== current$$1 && (workInProgress.dependencies = current$$1.dependencies);
    if (workInProgress.childExpirationTime < renderExpirationTime) return null;
    if (null !== current$$1 && workInProgress.child !== current$$1.child) throw ReactError(Error("Resuming work not yet implemented."));

    if (null !== workInProgress.child) {
      current$$1 = workInProgress.child;
      renderExpirationTime = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime);
      workInProgress.child = renderExpirationTime;

      for (renderExpirationTime.return = workInProgress; null !== current$$1.sibling;) {
        current$$1 = current$$1.sibling, renderExpirationTime = renderExpirationTime.sibling = createWorkInProgress(current$$1, current$$1.pendingProps, current$$1.expirationTime), renderExpirationTime.return = workInProgress;
      }

      renderExpirationTime.sibling = null;
    }

    return workInProgress.child;
  }

  var _appendAllChildren = undefined,
      updateHostContainer = undefined,
      updateHostComponent$1 = undefined,
      updateHostText$1 = undefined;

  _appendAllChildren = function appendAllChildren(parent, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNode(parent.node, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNode(parent.node, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, _appendAllChildren(parent, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  function appendAllChildrenToContainer(containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    for (var node = workInProgress.child; null !== node;) {
      if (5 === node.tag) {
        var instance = node.stateNode;
        needsVisibilityToggle && isHidden && (instance = cloneHiddenInstance(instance, node.type, node.memoizedProps, node));
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (6 === node.tag) {
        instance = node.stateNode;
        if (needsVisibilityToggle && isHidden) throw Error("Not yet implemented.");
        appendChildNodeToSet(containerChildSet, instance.node);
      } else if (4 !== node.tag) {
        if (13 === node.tag && 0 !== (node.effectTag & 4) && (instance = null !== node.memoizedState)) {
          var primaryChildParent = node.child;

          if (null !== primaryChildParent && (null !== primaryChildParent.child && (primaryChildParent.child.return = primaryChildParent, appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, instance)), instance = primaryChildParent.sibling, null !== instance)) {
            instance.return = node;
            node = instance;
            continue;
          }
        }

        if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
      }

      if (node === workInProgress) break;

      for (; null === node.sibling;) {
        if (null === node.return || node.return === workInProgress) return;
        node = node.return;
      }

      node.sibling.return = node.return;
      node = node.sibling;
    }
  }

  updateHostContainer = function updateHostContainer(workInProgress) {
    var portalOrRoot = workInProgress.stateNode;

    if (null !== workInProgress.firstEffect) {
      var container = portalOrRoot.containerInfo,
          newChildSet = createChildNodeSet(container);
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      workInProgress.effectTag |= 4;
      completeRoot(container, newChildSet);
    }
  };

  updateHostComponent$1 = function updateHostComponent$1(current, workInProgress, type, newProps) {
    type = current.stateNode;
    var oldProps = current.memoizedProps;
    if ((current = null === workInProgress.firstEffect) && oldProps === newProps) workInProgress.stateNode = type;else {
      var recyclableInstance = workInProgress.stateNode;
      requiredContext(contextStackCursor$1.current);
      var updatePayload = null;
      oldProps !== newProps && (oldProps = diffProperties(null, oldProps, newProps, recyclableInstance.canonical.viewConfig.validAttributes), recyclableInstance.canonical.currentProps = newProps, updatePayload = oldProps);
      current && null === updatePayload ? workInProgress.stateNode = type : (newProps = updatePayload, recyclableInstance = type.node, type = {
        node: current ? null !== newProps ? cloneNodeWithNewProps(recyclableInstance, newProps) : cloneNode(recyclableInstance) : null !== newProps ? cloneNodeWithNewChildrenAndProps(recyclableInstance, newProps) : cloneNodeWithNewChildren(recyclableInstance),
        canonical: type.canonical
      }, workInProgress.stateNode = type, current ? workInProgress.effectTag |= 4 : _appendAllChildren(type, workInProgress, false, false));
    }
  };

  updateHostText$1 = function updateHostText$1(current, workInProgress, oldText, newText) {
    oldText !== newText && (current = requiredContext(rootInstanceStackCursor.current), oldText = requiredContext(contextStackCursor$1.current), workInProgress.stateNode = createTextInstance(newText, current, oldText, workInProgress), workInProgress.effectTag |= 4);
  };

  function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
    switch (renderState.tailMode) {
      case "hidden":
        hasRenderedATailFallback = renderState.tail;

        for (var lastTailNode = null; null !== hasRenderedATailFallback;) {
          null !== hasRenderedATailFallback.alternate && (lastTailNode = hasRenderedATailFallback), hasRenderedATailFallback = hasRenderedATailFallback.sibling;
        }

        null === lastTailNode ? renderState.tail = null : lastTailNode.sibling = null;
        break;

      case "collapsed":
        lastTailNode = renderState.tail;

        for (var _lastTailNode = null; null !== lastTailNode;) {
          null !== lastTailNode.alternate && (_lastTailNode = lastTailNode), lastTailNode = lastTailNode.sibling;
        }

        null === _lastTailNode ? hasRenderedATailFallback || null === renderState.tail ? renderState.tail = null : renderState.tail.sibling = null : _lastTailNode.sibling = null;
    }
  }

  function unwindWork(workInProgress) {
    switch (workInProgress.tag) {
      case 1:
        isContextProvider(workInProgress.type) && popContext(workInProgress);
        var effectTag = workInProgress.effectTag;
        return effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 3:
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        effectTag = workInProgress.effectTag;
        if (0 !== (effectTag & 64)) throw ReactError(Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue."));
        workInProgress.effectTag = effectTag & -2049 | 64;
        return workInProgress;

      case 5:
        return popHostContext(workInProgress), null;

      case 13:
        return pop(suspenseStackCursor, workInProgress), effectTag = workInProgress.effectTag, effectTag & 2048 ? (workInProgress.effectTag = effectTag & -2049 | 64, workInProgress) : null;

      case 18:
        return null;

      case 19:
        return pop(suspenseStackCursor, workInProgress), null;

      case 4:
        return popHostContainer(workInProgress), null;

      case 10:
        return popProvider(workInProgress), null;

      default:
        return null;
    }
  }

  function createCapturedValue(value, source) {
    return {
      value: value,
      source: source,
      stack: getStackByFiberInDevAndProd(source)
    };
  }

  if ("function" !== typeof ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog) throw ReactError(Error("Expected ReactFiberErrorDialog.showErrorDialog to be a function."));

  function logCapturedError(capturedError) {
    false !== ReactNativePrivateInterface.ReactFiberErrorDialog.showErrorDialog(capturedError) && undefined;
  }

  var PossiblyWeakSet$1 = "function" === typeof WeakSet ? WeakSet : Set;

  function logError(boundary, errorInfo) {
    var source = errorInfo.source,
        stack = errorInfo.stack;
    null === stack && null !== source && (stack = getStackByFiberInDevAndProd(source));
    errorInfo = {
      componentName: null !== source ? getComponentName(source.type) : null,
      componentStack: null !== stack ? stack : "",
      error: errorInfo.value,
      errorBoundary: null,
      errorBoundaryName: null,
      errorBoundaryFound: false,
      willRetry: false
    };
    null !== boundary && 1 === boundary.tag && (errorInfo.errorBoundary = boundary.stateNode, errorInfo.errorBoundaryName = getComponentName(boundary.type), errorInfo.errorBoundaryFound = true, errorInfo.willRetry = true);

    try {
      logCapturedError(errorInfo);
    } catch (e) {
      setTimeout(function () {
        throw e;
      });
    }
  }

  function safelyCallComponentWillUnmount(current$$1, instance) {
    try {
      instance.props = current$$1.memoizedProps, instance.state = current$$1.memoizedState, instance.componentWillUnmount();
    } catch (unmountError) {
      captureCommitPhaseError(current$$1, unmountError);
    }
  }

  function safelyDetachRef(current$$1) {
    var ref = current$$1.ref;
    if (null !== ref) if ("function" === typeof ref) try {
      ref(null);
    } catch (refError) {
      captureCommitPhaseError(current$$1, refError);
    } else ref.current = null;
  }

  function commitHookEffectList(unmountTag, mountTag, finishedWork) {
    finishedWork = finishedWork.updateQueue;
    finishedWork = null !== finishedWork ? finishedWork.lastEffect : null;

    if (null !== finishedWork) {
      var effect = finishedWork = finishedWork.next;

      do {
        if ((effect.tag & unmountTag) !== NoEffect$1) {
          var destroy = effect.destroy;
          effect.destroy = undefined;
          undefined !== destroy && destroy();
        }

        (effect.tag & mountTag) !== NoEffect$1 && (destroy = effect.create, effect.destroy = destroy());
        effect = effect.next;
      } while (effect !== finishedWork);
    }
  }

  function commitUnmount(current$$1$jscomp$0, renderPriorityLevel) {
    "function" === typeof onCommitFiberUnmount && onCommitFiberUnmount(current$$1$jscomp$0);

    switch (current$$1$jscomp$0.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        var updateQueue = current$$1$jscomp$0.updateQueue;

        if (null !== updateQueue && (updateQueue = updateQueue.lastEffect, null !== updateQueue)) {
          var firstEffect = updateQueue.next;
          runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, function () {
            var effect = firstEffect;

            do {
              var destroy = effect.destroy;

              if (undefined !== destroy) {
                var current$$1 = current$$1$jscomp$0;

                try {
                  destroy();
                } catch (error) {
                  captureCommitPhaseError(current$$1, error);
                }
              }

              effect = effect.next;
            } while (effect !== firstEffect);
          });
        }

        break;

      case 1:
        safelyDetachRef(current$$1$jscomp$0);
        renderPriorityLevel = current$$1$jscomp$0.stateNode;
        "function" === typeof renderPriorityLevel.componentWillUnmount && safelyCallComponentWillUnmount(current$$1$jscomp$0, renderPriorityLevel);
        break;

      case 5:
        safelyDetachRef(current$$1$jscomp$0);
        break;

      case 4:
        createChildNodeSet(current$$1$jscomp$0.stateNode.containerInfo);
    }
  }

  function detachFiber(current$$1) {
    var alternate = current$$1.alternate;
    current$$1.return = null;
    current$$1.child = null;
    current$$1.memoizedState = null;
    current$$1.updateQueue = null;
    current$$1.dependencies = null;
    current$$1.alternate = null;
    current$$1.firstEffect = null;
    current$$1.lastEffect = null;
    current$$1.pendingProps = null;
    current$$1.memoizedProps = null;
    null !== alternate && detachFiber(alternate);
  }

  function commitWork(current$$1, finishedWork) {
    switch (finishedWork.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;

      case 12:
        return;

      case 13:
        null !== finishedWork.memoizedState && (globalMostRecentFallbackTime = now());
        attachSuspenseRetryListeners(finishedWork);
        return;

      case 19:
        attachSuspenseRetryListeners(finishedWork);
        return;
    }

    switch (finishedWork.tag) {
      case 1:
      case 5:
      case 6:
      case 20:
        break;

      case 3:
      case 4:
        break;

      default:
        throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
    }
  }

  function attachSuspenseRetryListeners(finishedWork) {
    var thenables = finishedWork.updateQueue;

    if (null !== thenables) {
      finishedWork.updateQueue = null;
      var retryCache = finishedWork.stateNode;
      null === retryCache && (retryCache = finishedWork.stateNode = new PossiblyWeakSet$1());
      thenables.forEach(function (thenable) {
        var retry = resolveRetryThenable.bind(null, finishedWork, thenable);
        retryCache.has(thenable) || (retryCache.add(thenable), thenable.then(retry, retry));
      });
    }
  }

  var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map;

  function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    expirationTime.payload = {
      element: null
    };
    var error = errorInfo.value;

    expirationTime.callback = function () {
      hasUncaughtError || (hasUncaughtError = true, firstUncaughtError = error);
      logError(fiber, errorInfo);
    };

    return expirationTime;
  }

  function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
    expirationTime = createUpdate(expirationTime, null);
    expirationTime.tag = 3;
    var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

    if ("function" === typeof getDerivedStateFromError) {
      var error = errorInfo.value;

      expirationTime.payload = function () {
        logError(fiber, errorInfo);
        return getDerivedStateFromError(error);
      };
    }

    var inst = fiber.stateNode;
    null !== inst && "function" === typeof inst.componentDidCatch && (expirationTime.callback = function () {
      "function" !== typeof getDerivedStateFromError && (null === legacyErrorBoundariesThatAlreadyFailed ? legacyErrorBoundariesThatAlreadyFailed = new Set([this]) : legacyErrorBoundariesThatAlreadyFailed.add(this), logError(fiber, errorInfo));
      var stack = errorInfo.stack;
      this.componentDidCatch(errorInfo.value, {
        componentStack: null !== stack ? stack : ""
      });
    });
    return expirationTime;
  }

  var ceil = Math.ceil,
      ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher,
      ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
      NoContext = 0,
      LegacyUnbatchedContext = 8,
      RenderContext = 16,
      CommitContext = 32,
      RootIncomplete = 0,
      RootErrored = 1,
      RootSuspended = 2,
      RootSuspendedWithDelay = 3,
      RootCompleted = 4,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      renderExpirationTime = 0,
      workInProgressRootExitStatus = RootIncomplete,
      workInProgressRootLatestProcessedExpirationTime = 1073741823,
      workInProgressRootLatestSuspenseTimeout = 1073741823,
      workInProgressRootCanSuspendUsingConfig = null,
      workInProgressRootHasPendingPing = false,
      globalMostRecentFallbackTime = 0,
      FALLBACK_THROTTLE_MS = 500,
      nextEffect = null,
      hasUncaughtError = false,
      firstUncaughtError = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      rootDoesHavePassiveEffects = false,
      rootWithPendingPassiveEffects = null,
      pendingPassiveEffectsRenderPriority = 90,
      pendingPassiveEffectsExpirationTime = 0,
      rootsWithPendingDiscreteUpdates = null,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      currentEventTime = 0;

  function requestCurrentTime() {
    return (executionContext & 48) !== NoContext ? 1073741821 - (now() / 10 | 0) : 0 !== currentEventTime ? currentEventTime : currentEventTime = 1073741821 - (now() / 10 | 0);
  }

  function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
    fiber = fiber.mode;
    if (0 === (fiber & 2)) return 1073741823;
    var priorityLevel = getCurrentPriorityLevel();
    if (0 === (fiber & 4)) return 99 === priorityLevel ? 1073741823 : 1073741822;
    if ((executionContext & RenderContext) !== NoContext) return renderExpirationTime;
    if (null !== suspenseConfig) currentTime = 1073741821 - 25 * (((1073741821 - currentTime + (suspenseConfig.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);else switch (priorityLevel) {
      case 99:
        currentTime = 1073741823;
        break;

      case 98:
        currentTime = 1073741821 - 10 * (((1073741821 - currentTime + 15) / 10 | 0) + 1);
        break;

      case 97:
      case 96:
        currentTime = 1073741821 - 25 * (((1073741821 - currentTime + 500) / 25 | 0) + 1);
        break;

      case 95:
        currentTime = 1;
        break;

      default:
        throw ReactError(Error("Expected a valid priority level"));
    }
    null !== workInProgressRoot && currentTime === renderExpirationTime && --currentTime;
    return currentTime;
  }

  function scheduleUpdateOnFiber(fiber, expirationTime) {
    if (50 < nestedUpdateCount) throw nestedUpdateCount = 0, rootWithNestedUpdates = null, ReactError(Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."));
    fiber = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

    if (null !== fiber) {
      fiber.pingTime = 0;
      var priorityLevel = getCurrentPriorityLevel();
      if (1073741823 === expirationTime) {
        if ((executionContext & LegacyUnbatchedContext) !== NoContext && (executionContext & 48) === NoContext) for (var callback = renderRoot(fiber, 1073741823, true); null !== callback;) {
          callback = callback(true);
        } else scheduleCallbackForRoot(fiber, 99, 1073741823), executionContext === NoContext && flushSyncCallbackQueue();
      } else scheduleCallbackForRoot(fiber, priorityLevel, expirationTime);
      (executionContext & 4) === NoContext || 98 !== priorityLevel && 99 !== priorityLevel || (null === rootsWithPendingDiscreteUpdates ? rootsWithPendingDiscreteUpdates = new Map([[fiber, expirationTime]]) : (priorityLevel = rootsWithPendingDiscreteUpdates.get(fiber), (undefined === priorityLevel || priorityLevel > expirationTime) && rootsWithPendingDiscreteUpdates.set(fiber, expirationTime)));
    }
  }

  function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
    fiber.expirationTime < expirationTime && (fiber.expirationTime = expirationTime);
    var alternate = fiber.alternate;
    null !== alternate && alternate.expirationTime < expirationTime && (alternate.expirationTime = expirationTime);
    var node = fiber.return,
        root = null;
    if (null === node && 3 === fiber.tag) root = fiber.stateNode;else for (; null !== node;) {
      alternate = node.alternate;
      node.childExpirationTime < expirationTime && (node.childExpirationTime = expirationTime);
      null !== alternate && alternate.childExpirationTime < expirationTime && (alternate.childExpirationTime = expirationTime);

      if (null === node.return && 3 === node.tag) {
        root = node.stateNode;
        break;
      }

      node = node.return;
    }
    null !== root && (expirationTime > root.firstPendingTime && (root.firstPendingTime = expirationTime), fiber = root.lastPendingTime, 0 === fiber || expirationTime < fiber) && (root.lastPendingTime = expirationTime);
    return root;
  }

  function scheduleCallbackForRoot(root, priorityLevel, expirationTime) {
    if (root.callbackExpirationTime < expirationTime) {
      var existingCallbackNode = root.callbackNode;
      null !== existingCallbackNode && existingCallbackNode !== fakeCallbackNode && Scheduler_cancelCallback(existingCallbackNode);
      root.callbackExpirationTime = expirationTime;
      1073741823 === expirationTime ? root.callbackNode = scheduleSyncCallback(runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime))) : (existingCallbackNode = null, 1 !== expirationTime && (existingCallbackNode = {
        timeout: 10 * (1073741821 - expirationTime) - now()
      }), root.callbackNode = scheduleCallback(priorityLevel, runRootCallback.bind(null, root, renderRoot.bind(null, root, expirationTime)), existingCallbackNode));
    }
  }

  function runRootCallback(root, callback, isSync) {
    var prevCallbackNode = root.callbackNode,
        continuation = null;

    try {
      return continuation = callback(isSync), null !== continuation ? runRootCallback.bind(null, root, continuation) : null;
    } finally {
      null === continuation && prevCallbackNode === root.callbackNode && (root.callbackNode = null, root.callbackExpirationTime = 0);
    }
  }

  function resolveLocksOnRoot(root, expirationTime) {
    var firstBatch = root.firstBatch;
    return null !== firstBatch && firstBatch._defer && firstBatch._expirationTime >= expirationTime ? (scheduleCallback(97, function () {
      firstBatch._onComplete();

      return null;
    }), true) : false;
  }

  function flushPendingDiscreteUpdates() {
    if (null !== rootsWithPendingDiscreteUpdates) {
      var roots = rootsWithPendingDiscreteUpdates;
      rootsWithPendingDiscreteUpdates = null;
      roots.forEach(function (expirationTime, root) {
        scheduleSyncCallback(renderRoot.bind(null, root, expirationTime));
      });
      flushSyncCallbackQueue();
    }
  }

  function prepareFreshStack(root, expirationTime) {
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    var timeoutHandle = root.timeoutHandle;
    -1 !== timeoutHandle && (root.timeoutHandle = -1, cancelTimeout(timeoutHandle));
    if (null !== workInProgress) for (timeoutHandle = workInProgress.return; null !== timeoutHandle;) {
      var interruptedWork = timeoutHandle;

      switch (interruptedWork.tag) {
        case 1:
          var childContextTypes = interruptedWork.type.childContextTypes;
          null !== childContextTypes && undefined !== childContextTypes && popContext(interruptedWork);
          break;

        case 3:
          popHostContainer(interruptedWork);
          popTopLevelContextObject(interruptedWork);
          break;

        case 5:
          popHostContext(interruptedWork);
          break;

        case 4:
          popHostContainer(interruptedWork);
          break;

        case 13:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;

        case 10:
          popProvider(interruptedWork);
      }

      timeoutHandle = timeoutHandle.return;
    }
    workInProgressRoot = root;
    workInProgress = createWorkInProgress(root.current, null, expirationTime);
    renderExpirationTime = expirationTime;
    workInProgressRootExitStatus = RootIncomplete;
    workInProgressRootLatestSuspenseTimeout = workInProgressRootLatestProcessedExpirationTime = 1073741823;
    workInProgressRootCanSuspendUsingConfig = null;
    workInProgressRootHasPendingPing = false;
  }

  function renderRoot(root$jscomp$0, expirationTime, isSync) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    if (root$jscomp$0.firstPendingTime < expirationTime) return null;
    if (isSync && root$jscomp$0.finishedExpirationTime === expirationTime) return commitRoot.bind(null, root$jscomp$0);
    flushPassiveEffects();
    if (root$jscomp$0 !== workInProgressRoot || expirationTime !== renderExpirationTime) prepareFreshStack(root$jscomp$0, expirationTime);else if (workInProgressRootExitStatus === RootSuspendedWithDelay) if (workInProgressRootHasPendingPing) prepareFreshStack(root$jscomp$0, expirationTime);else {
      var lastPendingTime = root$jscomp$0.lastPendingTime;
      if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
    }

    if (null !== workInProgress) {
      lastPendingTime = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = ReactCurrentDispatcher.current;
      null === prevDispatcher && (prevDispatcher = ContextOnlyDispatcher);
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (isSync) {
        if (1073741823 !== expirationTime) {
          var currentTime = requestCurrentTime();
          if (currentTime < expirationTime) return executionContext = lastPendingTime, resetContextDependencies(), ReactCurrentDispatcher.current = prevDispatcher, renderRoot.bind(null, root$jscomp$0, currentTime);
        }
      } else currentEventTime = 0;

      do {
        try {
          if (isSync) for (; null !== workInProgress;) {
            workInProgress = performUnitOfWork(workInProgress);
          } else for (; null !== workInProgress && !Scheduler_shouldYield();) {
            workInProgress = performUnitOfWork(workInProgress);
          }
          break;
        } catch (thrownValue) {
          resetContextDependencies();
          resetHooks();
          currentTime = workInProgress;
          if (null === currentTime || null === currentTime.return) throw prepareFreshStack(root$jscomp$0, expirationTime), executionContext = lastPendingTime, thrownValue;

          a: {
            var root = root$jscomp$0,
                returnFiber = currentTime.return,
                sourceFiber = currentTime,
                value = thrownValue,
                renderExpirationTime$jscomp$0 = renderExpirationTime;
            sourceFiber.effectTag |= 1024;
            sourceFiber.firstEffect = sourceFiber.lastEffect = null;

            if (null !== value && "object" === typeof value && "function" === typeof value.then) {
              var thenable = value,
                  hasInvisibleParentBoundary = 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext);
              value = returnFiber;

              do {
                var JSCompiler_temp;
                if (JSCompiler_temp = 13 === value.tag) null !== value.memoizedState ? JSCompiler_temp = false : (JSCompiler_temp = value.memoizedProps, JSCompiler_temp = undefined === JSCompiler_temp.fallback ? false : true !== JSCompiler_temp.unstable_avoidThisFallback ? true : hasInvisibleParentBoundary ? false : true);

                if (JSCompiler_temp) {
                  returnFiber = value.updateQueue;
                  null === returnFiber ? (returnFiber = new Set(), returnFiber.add(thenable), value.updateQueue = returnFiber) : returnFiber.add(thenable);

                  if (0 === (value.mode & 2)) {
                    value.effectTag |= 64;
                    sourceFiber.effectTag &= -1957;
                    1 === sourceFiber.tag && (null === sourceFiber.alternate ? sourceFiber.tag = 17 : (renderExpirationTime$jscomp$0 = createUpdate(1073741823, null), renderExpirationTime$jscomp$0.tag = 2, enqueueUpdate(sourceFiber, renderExpirationTime$jscomp$0)));
                    sourceFiber.expirationTime = 1073741823;
                    break a;
                  }

                  sourceFiber = root;
                  root = renderExpirationTime$jscomp$0;
                  hasInvisibleParentBoundary = sourceFiber.pingCache;
                  null === hasInvisibleParentBoundary ? (hasInvisibleParentBoundary = sourceFiber.pingCache = new PossiblyWeakMap(), returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)) : (returnFiber = hasInvisibleParentBoundary.get(thenable), undefined === returnFiber && (returnFiber = new Set(), hasInvisibleParentBoundary.set(thenable, returnFiber)));
                  returnFiber.has(root) || (returnFiber.add(root), sourceFiber = pingSuspendedRoot.bind(null, sourceFiber, thenable, root), thenable.then(sourceFiber, sourceFiber));
                  value.effectTag |= 2048;
                  value.expirationTime = renderExpirationTime$jscomp$0;
                  break a;
                }

                value = value.return;
              } while (null !== value);

              value = Error((getComponentName(sourceFiber.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + getStackByFiberInDevAndProd(sourceFiber));
            }

            workInProgressRootExitStatus !== RootCompleted && (workInProgressRootExitStatus = RootErrored);
            value = createCapturedValue(value, sourceFiber);
            sourceFiber = returnFiber;

            do {
              switch (sourceFiber.tag) {
                case 3:
                  sourceFiber.effectTag |= 2048;
                  sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                  renderExpirationTime$jscomp$0 = createRootErrorUpdate(sourceFiber, value, renderExpirationTime$jscomp$0);
                  enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                  break a;

                case 1:
                  if (thenable = value, root = sourceFiber.type, returnFiber = sourceFiber.stateNode, 0 === (sourceFiber.effectTag & 64) && ("function" === typeof root.getDerivedStateFromError || null !== returnFiber && "function" === typeof returnFiber.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(returnFiber)))) {
                    sourceFiber.effectTag |= 2048;
                    sourceFiber.expirationTime = renderExpirationTime$jscomp$0;
                    renderExpirationTime$jscomp$0 = createClassErrorUpdate(sourceFiber, thenable, renderExpirationTime$jscomp$0);
                    enqueueCapturedUpdate(sourceFiber, renderExpirationTime$jscomp$0);
                    break a;
                  }

              }

              sourceFiber = sourceFiber.return;
            } while (null !== sourceFiber);
          }

          workInProgress = completeUnitOfWork(currentTime);
        }
      } while (1);

      executionContext = lastPendingTime;
      resetContextDependencies();
      ReactCurrentDispatcher.current = prevDispatcher;
      if (null !== workInProgress) return renderRoot.bind(null, root$jscomp$0, expirationTime);
    }

    root$jscomp$0.finishedWork = root$jscomp$0.current.alternate;
    root$jscomp$0.finishedExpirationTime = expirationTime;
    if (resolveLocksOnRoot(root$jscomp$0, expirationTime)) return null;
    workInProgressRoot = null;

    switch (workInProgressRootExitStatus) {
      case RootIncomplete:
        throw ReactError(Error("Should have a work-in-progress."));

      case RootErrored:
        return lastPendingTime = root$jscomp$0.lastPendingTime, lastPendingTime < expirationTime ? renderRoot.bind(null, root$jscomp$0, lastPendingTime) : isSync ? commitRoot.bind(null, root$jscomp$0) : (prepareFreshStack(root$jscomp$0, expirationTime), scheduleSyncCallback(renderRoot.bind(null, root$jscomp$0, expirationTime)), null);

      case RootSuspended:
        if (1073741823 === workInProgressRootLatestProcessedExpirationTime && !isSync && (isSync = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(), 10 < isSync)) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          lastPendingTime = root$jscomp$0.lastPendingTime;
          if (lastPendingTime < expirationTime) return renderRoot.bind(null, root$jscomp$0, lastPendingTime);
          root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync);
          return null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootSuspendedWithDelay:
        if (!isSync) {
          if (workInProgressRootHasPendingPing) return prepareFreshStack(root$jscomp$0, expirationTime), renderRoot.bind(null, root$jscomp$0, expirationTime);
          isSync = root$jscomp$0.lastPendingTime;
          if (isSync < expirationTime) return renderRoot.bind(null, root$jscomp$0, isSync);
          1073741823 !== workInProgressRootLatestSuspenseTimeout ? isSync = 10 * (1073741821 - workInProgressRootLatestSuspenseTimeout) - now() : 1073741823 === workInProgressRootLatestProcessedExpirationTime ? isSync = 0 : (isSync = 10 * (1073741821 - workInProgressRootLatestProcessedExpirationTime) - 5e3, lastPendingTime = now(), expirationTime = 10 * (1073741821 - expirationTime) - lastPendingTime, isSync = lastPendingTime - isSync, 0 > isSync && (isSync = 0), isSync = (120 > isSync ? 120 : 480 > isSync ? 480 : 1080 > isSync ? 1080 : 1920 > isSync ? 1920 : 3e3 > isSync ? 3e3 : 4320 > isSync ? 4320 : 1960 * ceil(isSync / 1960)) - isSync, expirationTime < isSync && (isSync = expirationTime));
          if (10 < isSync) return root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), isSync), null;
        }

        return commitRoot.bind(null, root$jscomp$0);

      case RootCompleted:
        return !isSync && 1073741823 !== workInProgressRootLatestProcessedExpirationTime && null !== workInProgressRootCanSuspendUsingConfig && (lastPendingTime = workInProgressRootLatestProcessedExpirationTime, prevDispatcher = workInProgressRootCanSuspendUsingConfig, expirationTime = prevDispatcher.busyMinDurationMs | 0, 0 >= expirationTime ? expirationTime = 0 : (isSync = prevDispatcher.busyDelayMs | 0, lastPendingTime = now() - (10 * (1073741821 - lastPendingTime) - (prevDispatcher.timeoutMs | 0 || 5e3)), expirationTime = lastPendingTime <= isSync ? 0 : isSync + expirationTime - lastPendingTime), 10 < expirationTime) ? (root$jscomp$0.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root$jscomp$0), expirationTime), null) : commitRoot.bind(null, root$jscomp$0);

      default:
        throw ReactError(Error("Unknown root exit status."));
    }
  }

  function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
    expirationTime < workInProgressRootLatestProcessedExpirationTime && 1 < expirationTime && (workInProgressRootLatestProcessedExpirationTime = expirationTime);
    null !== suspenseConfig && expirationTime < workInProgressRootLatestSuspenseTimeout && 1 < expirationTime && (workInProgressRootLatestSuspenseTimeout = expirationTime, workInProgressRootCanSuspendUsingConfig = suspenseConfig);
  }

  function performUnitOfWork(unitOfWork) {
    var next = beginWork$$1(unitOfWork.alternate, unitOfWork, renderExpirationTime);
    unitOfWork.memoizedProps = unitOfWork.pendingProps;
    null === next && (next = completeUnitOfWork(unitOfWork));
    ReactCurrentOwner$2.current = null;
    return next;
  }

  function completeUnitOfWork(unitOfWork) {
    workInProgress = unitOfWork;

    do {
      var current$$1 = workInProgress.alternate;
      unitOfWork = workInProgress.return;

      if (0 === (workInProgress.effectTag & 1024)) {
        a: {
          var current = current$$1;
          current$$1 = workInProgress;
          var renderExpirationTime$jscomp$0 = renderExpirationTime,
              newProps = current$$1.pendingProps;

          switch (current$$1.tag) {
            case 2:
              break;

            case 16:
              break;

            case 15:
            case 0:
              break;

            case 1:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 3:
              popHostContainer(current$$1);
              popTopLevelContextObject(current$$1);
              renderExpirationTime$jscomp$0 = current$$1.stateNode;
              renderExpirationTime$jscomp$0.pendingContext && (renderExpirationTime$jscomp$0.context = renderExpirationTime$jscomp$0.pendingContext, renderExpirationTime$jscomp$0.pendingContext = null);
              if (null === current || null === current.child) current$$1.effectTag &= -3;
              updateHostContainer(current$$1);
              break;

            case 5:
              popHostContext(current$$1);
              renderExpirationTime$jscomp$0 = requiredContext(rootInstanceStackCursor.current);
              var type = current$$1.type;
              if (null !== current && null != current$$1.stateNode) updateHostComponent$1(current, current$$1, type, newProps, renderExpirationTime$jscomp$0), current.ref !== current$$1.ref && (current$$1.effectTag |= 128);else if (newProps) {
                requiredContext(contextStackCursor$1.current);
                current = newProps;
                var rootContainerInstance = renderExpirationTime$jscomp$0;
                renderExpirationTime$jscomp$0 = current$$1;
                newProps = nextReactTag;
                nextReactTag += 2;
                type = getViewConfigForType(type);
                var updatePayload = diffProperties(null, emptyObject, current, type.validAttributes);
                rootContainerInstance = createNode(newProps, type.uiViewClassName, rootContainerInstance, updatePayload, renderExpirationTime$jscomp$0);
                current = new ReactFabricHostComponent(newProps, type, current, renderExpirationTime$jscomp$0);
                current = {
                  node: rootContainerInstance,
                  canonical: current
                };

                _appendAllChildren(current, current$$1, false, false);

                current$$1.stateNode = current;
                null !== current$$1.ref && (current$$1.effectTag |= 128);
              } else if (null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
              break;

            case 6:
              if (current && null != current$$1.stateNode) updateHostText$1(current, current$$1, current.memoizedProps, newProps);else {
                if ("string" !== typeof newProps && null === current$$1.stateNode) throw ReactError(Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."));
                current = requiredContext(rootInstanceStackCursor.current);
                renderExpirationTime$jscomp$0 = requiredContext(contextStackCursor$1.current);
                current$$1.stateNode = createTextInstance(newProps, current, renderExpirationTime$jscomp$0, current$$1);
              }
              break;

            case 11:
              break;

            case 13:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;

              if (0 !== (current$$1.effectTag & 64)) {
                current$$1.expirationTime = renderExpirationTime$jscomp$0;
                break a;
              }

              renderExpirationTime$jscomp$0 = null !== newProps;
              newProps = false;
              null !== current && (type = current.memoizedState, newProps = null !== type, renderExpirationTime$jscomp$0 || null === type || (type = current.child.sibling, null !== type && (rootContainerInstance = current$$1.firstEffect, null !== rootContainerInstance ? (current$$1.firstEffect = type, type.nextEffect = rootContainerInstance) : (current$$1.firstEffect = current$$1.lastEffect = type, type.nextEffect = null), type.effectTag = 8)));
              if (renderExpirationTime$jscomp$0 && !newProps && 0 !== (current$$1.mode & 2)) if (null === current && true !== current$$1.memoizedProps.unstable_avoidThisFallback || 0 !== (suspenseStackCursor.current & InvisibleParentSuspenseContext)) workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootSuspended);else if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) workInProgressRootExitStatus = RootSuspendedWithDelay;
              renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 4);
              break;

            case 7:
              break;

            case 8:
              break;

            case 12:
              break;

            case 4:
              popHostContainer(current$$1);
              updateHostContainer(current$$1);
              break;

            case 10:
              popProvider(current$$1);
              break;

            case 9:
              break;

            case 14:
              break;

            case 17:
              isContextProvider(current$$1.type) && popContext(current$$1);
              break;

            case 18:
              break;

            case 19:
              pop(suspenseStackCursor, current$$1);
              newProps = current$$1.memoizedState;
              if (null === newProps) break;
              type = 0 !== (current$$1.effectTag & 64);
              rootContainerInstance = newProps.rendering;
              if (null === rootContainerInstance) {
                if (type) cutOffTailIfNeeded(newProps, false);else {
                  if (workInProgressRootExitStatus !== RootIncomplete || null !== current && 0 !== (current.effectTag & 64)) for (current = current$$1.child; null !== current;) {
                    rootContainerInstance = findFirstSuspended(current);

                    if (null !== rootContainerInstance) {
                      current$$1.effectTag |= 64;
                      cutOffTailIfNeeded(newProps, false);
                      current = rootContainerInstance.updateQueue;
                      null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                      current$$1.firstEffect = current$$1.lastEffect = null;
                      current = renderExpirationTime$jscomp$0;

                      for (renderExpirationTime$jscomp$0 = current$$1.child; null !== renderExpirationTime$jscomp$0;) {
                        newProps = renderExpirationTime$jscomp$0, type = current, newProps.effectTag &= 2, newProps.nextEffect = null, newProps.firstEffect = null, newProps.lastEffect = null, rootContainerInstance = newProps.alternate, null === rootContainerInstance ? (newProps.childExpirationTime = 0, newProps.expirationTime = type, newProps.child = null, newProps.memoizedProps = null, newProps.memoizedState = null, newProps.updateQueue = null, newProps.dependencies = null) : (newProps.childExpirationTime = rootContainerInstance.childExpirationTime, newProps.expirationTime = rootContainerInstance.expirationTime, newProps.child = rootContainerInstance.child, newProps.memoizedProps = rootContainerInstance.memoizedProps, newProps.memoizedState = rootContainerInstance.memoizedState, newProps.updateQueue = rootContainerInstance.updateQueue, type = rootContainerInstance.dependencies, newProps.dependencies = null === type ? null : {
                          expirationTime: type.expirationTime,
                          firstContext: type.firstContext,
                          responders: type.responders
                        }), renderExpirationTime$jscomp$0 = renderExpirationTime$jscomp$0.sibling;
                      }

                      push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask | ForceSuspenseFallback, current$$1);
                      current$$1 = current$$1.child;
                      break a;
                    }

                    current = current.sibling;
                  }
                }
              } else {
                if (!type) if (current = findFirstSuspended(rootContainerInstance), null !== current) {
                  if (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, true), null === newProps.tail && "hidden" === newProps.tailMode) {
                    current = current.updateQueue;
                    null !== current && (current$$1.updateQueue = current, current$$1.effectTag |= 4);
                    current$$1 = current$$1.lastEffect = newProps.lastEffect;
                    null !== current$$1 && (current$$1.nextEffect = null);
                    break;
                  }
                } else now() > newProps.tailExpiration && 1 < renderExpirationTime$jscomp$0 && (current$$1.effectTag |= 64, type = true, cutOffTailIfNeeded(newProps, false), current$$1.expirationTime = current$$1.childExpirationTime = renderExpirationTime$jscomp$0 - 1);
                newProps.isBackwards ? (rootContainerInstance.sibling = current$$1.child, current$$1.child = rootContainerInstance) : (current = newProps.last, null !== current ? current.sibling = rootContainerInstance : current$$1.child = rootContainerInstance, newProps.last = rootContainerInstance);
              }

              if (null !== newProps.tail) {
                0 === newProps.tailExpiration && (newProps.tailExpiration = now() + 500);
                current = newProps.tail;
                newProps.rendering = current;
                newProps.tail = current.sibling;
                newProps.lastEffect = current$$1.lastEffect;
                current.sibling = null;
                renderExpirationTime$jscomp$0 = suspenseStackCursor.current;
                renderExpirationTime$jscomp$0 = type ? renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask | ForceSuspenseFallback : renderExpirationTime$jscomp$0 & SubtreeSuspenseContextMask;
                push(suspenseStackCursor, renderExpirationTime$jscomp$0, current$$1);
                current$$1 = current;
                break a;
              }

              break;

            case 20:
              break;

            default:
              throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
          }

          current$$1 = null;
        }

        current = workInProgress;

        if (1 === renderExpirationTime || 1 !== current.childExpirationTime) {
          renderExpirationTime$jscomp$0 = 0;

          for (newProps = current.child; null !== newProps;) {
            type = newProps.expirationTime, rootContainerInstance = newProps.childExpirationTime, type > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = type), rootContainerInstance > renderExpirationTime$jscomp$0 && (renderExpirationTime$jscomp$0 = rootContainerInstance), newProps = newProps.sibling;
          }

          current.childExpirationTime = renderExpirationTime$jscomp$0;
        }

        if (null !== current$$1) return current$$1;
        null !== unitOfWork && 0 === (unitOfWork.effectTag & 1024) && (null === unitOfWork.firstEffect && (unitOfWork.firstEffect = workInProgress.firstEffect), null !== workInProgress.lastEffect && (null !== unitOfWork.lastEffect && (unitOfWork.lastEffect.nextEffect = workInProgress.firstEffect), unitOfWork.lastEffect = workInProgress.lastEffect), 1 < workInProgress.effectTag && (null !== unitOfWork.lastEffect ? unitOfWork.lastEffect.nextEffect = workInProgress : unitOfWork.firstEffect = workInProgress, unitOfWork.lastEffect = workInProgress));
      } else {
        current$$1 = unwindWork(workInProgress, renderExpirationTime);
        if (null !== current$$1) return current$$1.effectTag &= 1023, current$$1;
        null !== unitOfWork && (unitOfWork.firstEffect = unitOfWork.lastEffect = null, unitOfWork.effectTag |= 1024);
      }

      current$$1 = workInProgress.sibling;
      if (null !== current$$1) return current$$1;
      workInProgress = unitOfWork;
    } while (null !== workInProgress);

    workInProgressRootExitStatus === RootIncomplete && (workInProgressRootExitStatus = RootCompleted);
    return null;
  }

  function commitRoot(root) {
    var renderPriorityLevel = getCurrentPriorityLevel();
    runWithPriority$1(99, commitRootImpl.bind(null, root, renderPriorityLevel));
    null !== rootWithPendingPassiveEffects && scheduleCallback(97, function () {
      flushPassiveEffects();
      return null;
    });
    return null;
  }

  function commitRootImpl(root, renderPriorityLevel) {
    flushPassiveEffects();
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Should not already be working."));
    var finishedWork = root.finishedWork,
        expirationTime = root.finishedExpirationTime;
    if (null === finishedWork) return null;
    root.finishedWork = null;
    root.finishedExpirationTime = 0;
    if (finishedWork === root.current) throw ReactError(Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."));
    root.callbackNode = null;
    root.callbackExpirationTime = 0;
    var updateExpirationTimeBeforeCommit = finishedWork.expirationTime,
        childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
    updateExpirationTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
    root.firstPendingTime = updateExpirationTimeBeforeCommit;
    updateExpirationTimeBeforeCommit < root.lastPendingTime && (root.lastPendingTime = updateExpirationTimeBeforeCommit);
    root === workInProgressRoot && (workInProgress = workInProgressRoot = null, renderExpirationTime = 0);
    1 < finishedWork.effectTag ? null !== finishedWork.lastEffect ? (finishedWork.lastEffect.nextEffect = finishedWork, updateExpirationTimeBeforeCommit = finishedWork.firstEffect) : updateExpirationTimeBeforeCommit = finishedWork : updateExpirationTimeBeforeCommit = finishedWork.firstEffect;

    if (null !== updateExpirationTimeBeforeCommit) {
      childExpirationTimeBeforeCommit = executionContext;
      executionContext |= CommitContext;
      ReactCurrentOwner$2.current = null;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (; null !== nextEffect;) {
            if (0 !== (nextEffect.effectTag & 256)) {
              var current$$1 = nextEffect.alternate,
                  finishedWork$jscomp$0 = nextEffect;

              switch (finishedWork$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork$jscomp$0);
                  break;

                case 1:
                  if (finishedWork$jscomp$0.effectTag & 256 && null !== current$$1) {
                    var prevProps = current$$1.memoizedProps,
                        prevState = current$$1.memoizedState,
                        instance = finishedWork$jscomp$0.stateNode,
                        snapshot = instance.getSnapshotBeforeUpdate(finishedWork$jscomp$0.elementType === finishedWork$jscomp$0.type ? prevProps : resolveDefaultProps(finishedWork$jscomp$0.type, prevProps), prevState);
                    instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                  }

                  break;

                case 3:
                case 5:
                case 6:
                case 4:
                case 17:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (current$$1 = renderPriorityLevel; null !== nextEffect;) {
            var effectTag = nextEffect.effectTag;

            if (effectTag & 128) {
              var current$$1$jscomp$0 = nextEffect.alternate;

              if (null !== current$$1$jscomp$0) {
                var currentRef = current$$1$jscomp$0.ref;
                null !== currentRef && ("function" === typeof currentRef ? currentRef(null) : currentRef.current = null);
              }
            }

            switch (effectTag & 14) {
              case 2:
                nextEffect.effectTag &= -3;
                break;

              case 6:
                nextEffect.effectTag &= -3;
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 4:
                commitWork(nextEffect.alternate, nextEffect);
                break;

              case 8:
                prevProps = nextEffect;

                a: for (prevState = prevProps, instance = current$$1, snapshot = prevState;;) {
                  if (commitUnmount(snapshot, instance), null !== snapshot.child) snapshot.child.return = snapshot, snapshot = snapshot.child;else {
                    if (snapshot === prevState) break;

                    for (; null === snapshot.sibling;) {
                      if (null === snapshot.return || snapshot.return === prevState) break a;
                      snapshot = snapshot.return;
                    }

                    snapshot.sibling.return = snapshot.return;
                    snapshot = snapshot.sibling;
                  }
                }

                detachFiber(prevProps);
            }

            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      root.current = finishedWork;
      nextEffect = updateExpirationTimeBeforeCommit;

      do {
        try {
          for (effectTag = expirationTime; null !== nextEffect;) {
            var effectTag$jscomp$0 = nextEffect.effectTag;

            if (effectTag$jscomp$0 & 36) {
              var current$$1$jscomp$1 = nextEffect.alternate;
              current$$1$jscomp$0 = nextEffect;
              currentRef = effectTag;

              switch (current$$1$jscomp$0.tag) {
                case 0:
                case 11:
                case 15:
                  commitHookEffectList(UnmountLayout, MountLayout, current$$1$jscomp$0);
                  break;

                case 1:
                  var instance$jscomp$0 = current$$1$jscomp$0.stateNode;
                  if (current$$1$jscomp$0.effectTag & 4) if (null === current$$1$jscomp$1) instance$jscomp$0.componentDidMount();else {
                    var prevProps$jscomp$0 = current$$1$jscomp$0.elementType === current$$1$jscomp$0.type ? current$$1$jscomp$1.memoizedProps : resolveDefaultProps(current$$1$jscomp$0.type, current$$1$jscomp$1.memoizedProps);
                    instance$jscomp$0.componentDidUpdate(prevProps$jscomp$0, current$$1$jscomp$1.memoizedState, instance$jscomp$0.__reactInternalSnapshotBeforeUpdate);
                  }
                  var updateQueue = current$$1$jscomp$0.updateQueue;
                  null !== updateQueue && commitUpdateQueue(current$$1$jscomp$0, updateQueue, instance$jscomp$0, currentRef);
                  break;

                case 3:
                  var _updateQueue = current$$1$jscomp$0.updateQueue;

                  if (null !== _updateQueue) {
                    current$$1 = null;
                    if (null !== current$$1$jscomp$0.child) switch (current$$1$jscomp$0.child.tag) {
                      case 5:
                        current$$1 = current$$1$jscomp$0.child.stateNode.canonical;
                        break;

                      case 1:
                        current$$1 = current$$1$jscomp$0.child.stateNode;
                    }
                    commitUpdateQueue(current$$1$jscomp$0, _updateQueue, current$$1, currentRef);
                  }

                  break;

                case 5:
                  if (null === current$$1$jscomp$1 && current$$1$jscomp$0.effectTag & 4) throw ReactError(Error("The current renderer does not support mutation. This error is likely caused by a bug in React. Please file an issue."));
                  break;

                case 6:
                  break;

                case 4:
                  break;

                case 12:
                  break;

                case 13:
                case 19:
                case 17:
                case 20:
                  break;

                default:
                  throw ReactError(Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."));
              }
            }

            if (effectTag$jscomp$0 & 128) {
              var ref = nextEffect.ref;

              if (null !== ref) {
                var instance$jscomp$1 = nextEffect.stateNode;

                switch (nextEffect.tag) {
                  case 5:
                    var instanceToUse = instance$jscomp$1.canonical;
                    break;

                  default:
                    instanceToUse = instance$jscomp$1;
                }

                "function" === typeof ref ? ref(instanceToUse) : ref.current = instanceToUse;
              }
            }

            effectTag$jscomp$0 & 512 && (rootDoesHavePassiveEffects = true);
            nextEffect = nextEffect.nextEffect;
          }
        } catch (error) {
          if (null === nextEffect) throw ReactError(Error("Should be working on an effect."));
          captureCommitPhaseError(nextEffect, error);
          nextEffect = nextEffect.nextEffect;
        }
      } while (null !== nextEffect);

      nextEffect = null;
      requestPaint();
      executionContext = childExpirationTimeBeforeCommit;
    } else root.current = finishedWork;

    if (rootDoesHavePassiveEffects) rootDoesHavePassiveEffects = false, rootWithPendingPassiveEffects = root, pendingPassiveEffectsExpirationTime = expirationTime, pendingPassiveEffectsRenderPriority = renderPriorityLevel;else for (nextEffect = updateExpirationTimeBeforeCommit; null !== nextEffect;) {
      renderPriorityLevel = nextEffect.nextEffect, nextEffect.nextEffect = null, nextEffect = renderPriorityLevel;
    }
    renderPriorityLevel = root.firstPendingTime;
    0 !== renderPriorityLevel ? (effectTag$jscomp$0 = requestCurrentTime(), effectTag$jscomp$0 = inferPriorityFromExpirationTime(effectTag$jscomp$0, renderPriorityLevel), scheduleCallbackForRoot(root, effectTag$jscomp$0, renderPriorityLevel)) : legacyErrorBoundariesThatAlreadyFailed = null;
    "function" === typeof onCommitFiberRoot && onCommitFiberRoot(finishedWork.stateNode, expirationTime);
    1073741823 === renderPriorityLevel ? root === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root) : nestedUpdateCount = 0;
    if (hasUncaughtError) throw hasUncaughtError = false, root = firstUncaughtError, firstUncaughtError = null, root;
    if ((executionContext & LegacyUnbatchedContext) !== NoContext) return null;
    flushSyncCallbackQueue();
    return null;
  }

  function flushPassiveEffects() {
    if (null === rootWithPendingPassiveEffects) return false;
    var root = rootWithPendingPassiveEffects,
        expirationTime = pendingPassiveEffectsExpirationTime,
        renderPriorityLevel = pendingPassiveEffectsRenderPriority;
    rootWithPendingPassiveEffects = null;
    pendingPassiveEffectsExpirationTime = 0;
    pendingPassiveEffectsRenderPriority = 90;
    return runWithPriority$1(97 < renderPriorityLevel ? 97 : renderPriorityLevel, flushPassiveEffectsImpl.bind(null, root, expirationTime));
  }

  function flushPassiveEffectsImpl(root) {
    if ((executionContext & 48) !== NoContext) throw ReactError(Error("Cannot flush passive effects while already rendering."));
    var prevExecutionContext = executionContext;
    executionContext |= CommitContext;

    for (root = root.current.firstEffect; null !== root;) {
      try {
        var finishedWork = root;
        if (0 !== (finishedWork.effectTag & 512)) switch (finishedWork.tag) {
          case 0:
          case 11:
          case 15:
            commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork), commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
        }
      } catch (error) {
        if (null === root) throw ReactError(Error("Should be working on an effect."));
        captureCommitPhaseError(root, error);
      }

      finishedWork = root.nextEffect;
      root.nextEffect = null;
      root = finishedWork;
    }

    executionContext = prevExecutionContext;
    flushSyncCallbackQueue();
    return true;
  }

  function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
    sourceFiber = createCapturedValue(error, sourceFiber);
    sourceFiber = createRootErrorUpdate(rootFiber, sourceFiber, 1073741823);
    enqueueUpdate(rootFiber, sourceFiber);
    rootFiber = markUpdateTimeFromFiberToRoot(rootFiber, 1073741823);
    null !== rootFiber && scheduleCallbackForRoot(rootFiber, 99, 1073741823);
  }

  function captureCommitPhaseError(sourceFiber, error) {
    if (3 === sourceFiber.tag) captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);else for (var fiber = sourceFiber.return; null !== fiber;) {
      if (3 === fiber.tag) {
        captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
        break;
      } else if (1 === fiber.tag) {
        var instance = fiber.stateNode;

        if ("function" === typeof fiber.type.getDerivedStateFromError || "function" === typeof instance.componentDidCatch && (null === legacyErrorBoundariesThatAlreadyFailed || !legacyErrorBoundariesThatAlreadyFailed.has(instance))) {
          sourceFiber = createCapturedValue(error, sourceFiber);
          sourceFiber = createClassErrorUpdate(fiber, sourceFiber, 1073741823);
          enqueueUpdate(fiber, sourceFiber);
          fiber = markUpdateTimeFromFiberToRoot(fiber, 1073741823);
          null !== fiber && scheduleCallbackForRoot(fiber, 99, 1073741823);
          break;
        }
      }

      fiber = fiber.return;
    }
  }

  function pingSuspendedRoot(root, thenable, suspendedTime) {
    var pingCache = root.pingCache;
    null !== pingCache && pingCache.delete(thenable);
    workInProgressRoot === root && renderExpirationTime === suspendedTime ? workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && 1073741823 === workInProgressRootLatestProcessedExpirationTime && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root, renderExpirationTime) : workInProgressRootHasPendingPing = true : root.lastPendingTime < suspendedTime || (thenable = root.pingTime, 0 !== thenable && thenable < suspendedTime || (root.pingTime = suspendedTime, root.finishedExpirationTime === suspendedTime && (root.finishedExpirationTime = 0, root.finishedWork = null), thenable = requestCurrentTime(), thenable = inferPriorityFromExpirationTime(thenable, suspendedTime), scheduleCallbackForRoot(root, thenable, suspendedTime)));
  }

  function resolveRetryThenable(boundaryFiber, thenable) {
    var retryCache = boundaryFiber.stateNode;
    null !== retryCache && retryCache.delete(thenable);
    retryCache = requestCurrentTime();
    thenable = computeExpirationForFiber(retryCache, boundaryFiber, null);
    retryCache = inferPriorityFromExpirationTime(retryCache, thenable);
    boundaryFiber = markUpdateTimeFromFiberToRoot(boundaryFiber, thenable);
    null !== boundaryFiber && scheduleCallbackForRoot(boundaryFiber, retryCache, thenable);
  }

  var beginWork$$1 = undefined;

  beginWork$$1 = function beginWork$$1(current$$1, workInProgress, renderExpirationTime) {
    var updateExpirationTime = workInProgress.expirationTime;
    if (null !== current$$1) {
      if (current$$1.memoizedProps !== workInProgress.pendingProps || didPerformWorkStackCursor.current) didReceiveUpdate = true;else {
        if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false;

          switch (workInProgress.tag) {
            case 3:
              pushHostRootContext(workInProgress);
              break;

            case 5:
              pushHostContext(workInProgress);
              break;

            case 1:
              isContextProvider(workInProgress.type) && pushContextProvider(workInProgress);
              break;

            case 4:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case 10:
              pushProvider(workInProgress, workInProgress.memoizedProps.value);
              break;

            case 13:
              if (null !== workInProgress.memoizedState) {
                updateExpirationTime = workInProgress.child.childExpirationTime;
                if (0 !== updateExpirationTime && updateExpirationTime >= renderExpirationTime) return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                return null !== workInProgress ? workInProgress.sibling : null;
              }

              push(suspenseStackCursor, suspenseStackCursor.current & SubtreeSuspenseContextMask, workInProgress);
              break;

            case 19:
              updateExpirationTime = workInProgress.childExpirationTime >= renderExpirationTime;

              if (0 !== (current$$1.effectTag & 64)) {
                if (updateExpirationTime) return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                workInProgress.effectTag |= 64;
              }

              var renderState = workInProgress.memoizedState;
              null !== renderState && (renderState.rendering = null, renderState.tail = null);
              push(suspenseStackCursor, suspenseStackCursor.current, workInProgress);
              if (!updateExpirationTime) return null;
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      }
    } else didReceiveUpdate = false;
    workInProgress.expirationTime = 0;

    switch (workInProgress.tag) {
      case 2:
        updateExpirationTime = workInProgress.type;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = getMaskedContext(workInProgress, contextStackCursor.current);
        prepareToReadContext(workInProgress, renderExpirationTime);
        renderState = renderWithHooks(null, workInProgress, updateExpirationTime, current$$1, renderState, renderExpirationTime);
        workInProgress.effectTag |= 1;

        if ("object" === typeof renderState && null !== renderState && "function" === typeof renderState.render && undefined === renderState.$$typeof) {
          workInProgress.tag = 1;
          resetHooks();

          if (isContextProvider(updateExpirationTime)) {
            var hasContext = true;
            pushContextProvider(workInProgress);
          } else hasContext = false;

          workInProgress.memoizedState = null !== renderState.state && undefined !== renderState.state ? renderState.state : null;
          var getDerivedStateFromProps = updateExpirationTime.getDerivedStateFromProps;
          "function" === typeof getDerivedStateFromProps && applyDerivedStateFromProps(workInProgress, updateExpirationTime, getDerivedStateFromProps, current$$1);
          renderState.updater = classComponentUpdater;
          workInProgress.stateNode = renderState;
          renderState._reactInternalFiber = workInProgress;
          mountClassInstance(workInProgress, updateExpirationTime, current$$1, renderExpirationTime);
          workInProgress = finishClassComponent(null, workInProgress, updateExpirationTime, true, hasContext, renderExpirationTime);
        } else workInProgress.tag = 0, reconcileChildren(null, workInProgress, renderState, renderExpirationTime), workInProgress = workInProgress.child;

        return workInProgress;

      case 16:
        renderState = workInProgress.elementType;
        null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2);
        current$$1 = workInProgress.pendingProps;
        renderState = readLazyComponentType(renderState);
        workInProgress.type = renderState;
        hasContext = workInProgress.tag = resolveLazyComponentTag(renderState);
        current$$1 = resolveDefaultProps(renderState, current$$1);

        switch (hasContext) {
          case 0:
            workInProgress = updateFunctionComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 1:
            workInProgress = updateClassComponent(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 11:
            workInProgress = updateForwardRef(null, workInProgress, renderState, current$$1, renderExpirationTime);
            break;

          case 14:
            workInProgress = updateMemoComponent(null, workInProgress, renderState, resolveDefaultProps(renderState.type, current$$1), updateExpirationTime, renderExpirationTime);
            break;

          default:
            throw ReactError(Error("Element type is invalid. Received a promise that resolves to: " + renderState + ". Lazy element type must resolve to a class or function."));
        }

        return workInProgress;

      case 0:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateFunctionComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 1:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateClassComponent(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 3:
        pushHostRootContext(workInProgress);
        updateExpirationTime = workInProgress.updateQueue;
        if (null === updateExpirationTime) throw ReactError(Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue."));
        renderState = workInProgress.memoizedState;
        renderState = null !== renderState ? renderState.element : null;
        processUpdateQueue(workInProgress, updateExpirationTime, workInProgress.pendingProps, null, renderExpirationTime);
        updateExpirationTime = workInProgress.memoizedState.element;
        updateExpirationTime === renderState ? workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) : (reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress = workInProgress.child);
        return workInProgress;

      case 5:
        return pushHostContext(workInProgress), null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), updateExpirationTime = workInProgress.pendingProps.children, markRef(current$$1, workInProgress), reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 6:
        return null === current$$1 && tryToClaimNextHydratableInstance(workInProgress), null;

      case 13:
        return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

      case 4:
        return pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo), updateExpirationTime = workInProgress.pendingProps, null === current$$1 ? workInProgress.child = reconcileChildFibers(workInProgress, null, updateExpirationTime, renderExpirationTime) : reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 11:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), updateForwardRef(current$$1, workInProgress, updateExpirationTime, renderState, renderExpirationTime);

      case 7:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps, renderExpirationTime), workInProgress.child;

      case 8:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 12:
        return reconcileChildren(current$$1, workInProgress, workInProgress.pendingProps.children, renderExpirationTime), workInProgress.child;

      case 10:
        a: {
          updateExpirationTime = workInProgress.type._context;
          renderState = workInProgress.pendingProps;
          getDerivedStateFromProps = workInProgress.memoizedProps;
          hasContext = renderState.value;
          pushProvider(workInProgress, hasContext);

          if (null !== getDerivedStateFromProps) {
            var oldValue = getDerivedStateFromProps.value;
            hasContext = is(oldValue, hasContext) ? 0 : ("function" === typeof updateExpirationTime._calculateChangedBits ? updateExpirationTime._calculateChangedBits(oldValue, hasContext) : 1073741823) | 0;

            if (0 === hasContext) {
              if (getDerivedStateFromProps.children === renderState.children && !didPerformWorkStackCursor.current) {
                workInProgress = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                break a;
              }
            } else for (oldValue = workInProgress.child, null !== oldValue && (oldValue.return = workInProgress); null !== oldValue;) {
              var list = oldValue.dependencies;

              if (null !== list) {
                getDerivedStateFromProps = oldValue.child;

                for (var dependency = list.firstContext; null !== dependency;) {
                  if (dependency.context === updateExpirationTime && 0 !== (dependency.observedBits & hasContext)) {
                    1 === oldValue.tag && (dependency = createUpdate(renderExpirationTime, null), dependency.tag = 2, enqueueUpdate(oldValue, dependency));
                    oldValue.expirationTime < renderExpirationTime && (oldValue.expirationTime = renderExpirationTime);
                    dependency = oldValue.alternate;
                    null !== dependency && dependency.expirationTime < renderExpirationTime && (dependency.expirationTime = renderExpirationTime);
                    scheduleWorkOnParentPath(oldValue.return, renderExpirationTime);
                    list.expirationTime < renderExpirationTime && (list.expirationTime = renderExpirationTime);
                    break;
                  }

                  dependency = dependency.next;
                }
              } else getDerivedStateFromProps = 10 === oldValue.tag ? oldValue.type === workInProgress.type ? null : oldValue.child : oldValue.child;

              if (null !== getDerivedStateFromProps) getDerivedStateFromProps.return = oldValue;else for (getDerivedStateFromProps = oldValue; null !== getDerivedStateFromProps;) {
                if (getDerivedStateFromProps === workInProgress) {
                  getDerivedStateFromProps = null;
                  break;
                }

                oldValue = getDerivedStateFromProps.sibling;

                if (null !== oldValue) {
                  oldValue.return = getDerivedStateFromProps.return;
                  getDerivedStateFromProps = oldValue;
                  break;
                }

                getDerivedStateFromProps = getDerivedStateFromProps.return;
              }
              oldValue = getDerivedStateFromProps;
            }
          }

          reconcileChildren(current$$1, workInProgress, renderState.children, renderExpirationTime);
          workInProgress = workInProgress.child;
        }

        return workInProgress;

      case 9:
        return renderState = workInProgress.type, hasContext = workInProgress.pendingProps, updateExpirationTime = hasContext.children, prepareToReadContext(workInProgress, renderExpirationTime), renderState = readContext(renderState, hasContext.unstable_observedBits), updateExpirationTime = updateExpirationTime(renderState), workInProgress.effectTag |= 1, reconcileChildren(current$$1, workInProgress, updateExpirationTime, renderExpirationTime), workInProgress.child;

      case 14:
        return renderState = workInProgress.type, hasContext = resolveDefaultProps(renderState, workInProgress.pendingProps), hasContext = resolveDefaultProps(renderState.type, hasContext), updateMemoComponent(current$$1, workInProgress, renderState, hasContext, updateExpirationTime, renderExpirationTime);

      case 15:
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);

      case 17:
        return updateExpirationTime = workInProgress.type, renderState = workInProgress.pendingProps, renderState = workInProgress.elementType === updateExpirationTime ? renderState : resolveDefaultProps(updateExpirationTime, renderState), null !== current$$1 && (current$$1.alternate = null, workInProgress.alternate = null, workInProgress.effectTag |= 2), workInProgress.tag = 1, isContextProvider(updateExpirationTime) ? (current$$1 = true, pushContextProvider(workInProgress)) : current$$1 = false, prepareToReadContext(workInProgress, renderExpirationTime), constructClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), mountClassInstance(workInProgress, updateExpirationTime, renderState, renderExpirationTime), finishClassComponent(null, workInProgress, updateExpirationTime, true, current$$1, renderExpirationTime);

      case 19:
        return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
    }

    throw ReactError(Error("Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue."));
  };

  var onCommitFiberRoot = null,
      onCommitFiberUnmount = null;

  function injectInternals(internals) {
    if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return false;
    var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (hook.isDisabled || !hook.supportsFiber) return true;

    try {
      var rendererID = hook.inject(internals);

      onCommitFiberRoot = function onCommitFiberRoot(root) {
        try {
          hook.onCommitFiberRoot(rendererID, root, undefined, 64 === (root.current.effectTag & 64));
        } catch (err) {}
      };

      onCommitFiberUnmount = function onCommitFiberUnmount(fiber) {
        try {
          hook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {}
      };
    } catch (err) {}

    return true;
  }

  function FiberNode(tag, pendingProps, key, mode) {
    this.tag = tag;
    this.key = key;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = pendingProps;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = mode;
    this.effectTag = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childExpirationTime = this.expirationTime = 0;
    this.alternate = null;
  }

  function createFiber(tag, pendingProps, key, mode) {
    return new FiberNode(tag, pendingProps, key, mode);
  }

  function shouldConstruct(Component) {
    Component = Component.prototype;
    return !(!Component || !Component.isReactComponent);
  }

  function resolveLazyComponentTag(Component) {
    if ("function" === typeof Component) return shouldConstruct(Component) ? 1 : 0;

    if (undefined !== Component && null !== Component) {
      Component = Component.$$typeof;
      if (Component === REACT_FORWARD_REF_TYPE) return 11;
      if (Component === REACT_MEMO_TYPE) return 14;
    }

    return 2;
  }

  function createWorkInProgress(current, pendingProps) {
    var workInProgress = current.alternate;
    null === workInProgress ? (workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode), workInProgress.elementType = current.elementType, workInProgress.type = current.type, workInProgress.stateNode = current.stateNode, workInProgress.alternate = current, current.alternate = workInProgress) : (workInProgress.pendingProps = pendingProps, workInProgress.effectTag = 0, workInProgress.nextEffect = null, workInProgress.firstEffect = null, workInProgress.lastEffect = null);
    workInProgress.childExpirationTime = current.childExpirationTime;
    workInProgress.expirationTime = current.expirationTime;
    workInProgress.child = current.child;
    workInProgress.memoizedProps = current.memoizedProps;
    workInProgress.memoizedState = current.memoizedState;
    workInProgress.updateQueue = current.updateQueue;
    pendingProps = current.dependencies;
    workInProgress.dependencies = null === pendingProps ? null : {
      expirationTime: pendingProps.expirationTime,
      firstContext: pendingProps.firstContext,
      responders: pendingProps.responders
    };
    workInProgress.sibling = current.sibling;
    workInProgress.index = current.index;
    workInProgress.ref = current.ref;
    return workInProgress;
  }

  function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime) {
    var fiberTag = 2;
    owner = type;
    if ("function" === typeof type) shouldConstruct(type) && (fiberTag = 1);else if ("string" === typeof type) fiberTag = 5;else a: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

      case REACT_CONCURRENT_MODE_TYPE:
        fiberTag = 8;
        mode |= 7;
        break;

      case REACT_STRICT_MODE_TYPE:
        fiberTag = 8;
        mode |= 1;
        break;

      case REACT_PROFILER_TYPE:
        return type = createFiber(12, pendingProps, key, mode | 8), type.elementType = REACT_PROFILER_TYPE, type.type = REACT_PROFILER_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_TYPE:
        return type = createFiber(13, pendingProps, key, mode), type.type = REACT_SUSPENSE_TYPE, type.elementType = REACT_SUSPENSE_TYPE, type.expirationTime = expirationTime, type;

      case REACT_SUSPENSE_LIST_TYPE:
        return type = createFiber(19, pendingProps, key, mode), type.elementType = REACT_SUSPENSE_LIST_TYPE, type.expirationTime = expirationTime, type;

      default:
        if ("object" === typeof type && null !== type) switch (type.$$typeof) {
          case REACT_PROVIDER_TYPE:
            fiberTag = 10;
            break a;

          case REACT_CONTEXT_TYPE:
            fiberTag = 9;
            break a;

          case REACT_FORWARD_REF_TYPE:
            fiberTag = 11;
            break a;

          case REACT_MEMO_TYPE:
            fiberTag = 14;
            break a;

          case REACT_LAZY_TYPE:
            fiberTag = 16;
            owner = null;
            break a;
        }
        throw ReactError(Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (null == type ? type : typeof type) + "."));
    }
    key = createFiber(fiberTag, pendingProps, key, mode);
    key.elementType = type;
    key.type = owner;
    key.expirationTime = expirationTime;
    return key;
  }

  function createFiberFromFragment(elements, mode, expirationTime, key) {
    elements = createFiber(7, elements, key, mode);
    elements.expirationTime = expirationTime;
    return elements;
  }

  function createFiberFromText(content, mode, expirationTime) {
    content = createFiber(6, content, null, mode);
    content.expirationTime = expirationTime;
    return content;
  }

  function createFiberFromPortal(portal, mode, expirationTime) {
    mode = createFiber(4, null !== portal.children ? portal.children : [], portal.key, mode);
    mode.expirationTime = expirationTime;
    mode.stateNode = {
      containerInfo: portal.containerInfo,
      pendingChildren: null,
      implementation: portal.implementation
    };
    return mode;
  }

  function FiberRootNode(containerInfo, tag, hydrate) {
    this.tag = tag;
    this.current = null;
    this.containerInfo = containerInfo;
    this.pingCache = this.pendingChildren = null;
    this.finishedExpirationTime = 0;
    this.finishedWork = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = hydrate;
    this.callbackNode = this.firstBatch = null;
    this.pingTime = this.lastPendingTime = this.firstPendingTime = this.callbackExpirationTime = 0;
  }

  function findHostInstance(component) {
    var fiber = component._reactInternalFiber;

    if (undefined === fiber) {
      if ("function" === typeof component.render) throw ReactError(Error("Unable to find node on an unmounted component."));
      throw ReactError(Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component)));
    }

    component = findCurrentHostFiber(fiber);
    return null === component ? null : component.stateNode;
  }

  function updateContainer(element, container, parentComponent, callback) {
    var current$$1 = container.current,
        currentTime = requestCurrentTime(),
        suspenseConfig = ReactCurrentBatchConfig.suspense;
    current$$1 = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
    currentTime = container.current;

    a: if (parentComponent) {
      parentComponent = parentComponent._reactInternalFiber;

      b: {
        if (2 !== isFiberMountedImpl(parentComponent) || 1 !== parentComponent.tag) throw ReactError(Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue."));
        var parentContext = parentComponent;

        do {
          switch (parentContext.tag) {
            case 3:
              parentContext = parentContext.stateNode.context;
              break b;

            case 1:
              if (isContextProvider(parentContext.type)) {
                parentContext = parentContext.stateNode.__reactInternalMemoizedMergedChildContext;
                break b;
              }

          }

          parentContext = parentContext.return;
        } while (null !== parentContext);

        throw ReactError(Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue."));
      }

      if (1 === parentComponent.tag) {
        var Component = parentComponent.type;

        if (isContextProvider(Component)) {
          parentComponent = processChildContext(parentComponent, Component, parentContext);
          break a;
        }
      }

      parentComponent = parentContext;
    } else parentComponent = emptyContextObject;

    null === container.context ? container.context = parentComponent : container.pendingContext = parentComponent;
    container = callback;
    suspenseConfig = createUpdate(current$$1, suspenseConfig);
    suspenseConfig.payload = {
      element: element
    };
    container = undefined === container ? null : container;
    null !== container && (suspenseConfig.callback = container);
    enqueueUpdate(currentTime, suspenseConfig);
    scheduleUpdateOnFiber(currentTime, current$$1);
    return current$$1;
  }

  function _createPortal(children, containerInfo, implementation) {
    var key = 3 < arguments.length && undefined !== arguments[3] ? arguments[3] : null;
    return {
      $$typeof: REACT_PORTAL_TYPE,
      key: null == key ? null : "" + key,
      children: children,
      containerInfo: containerInfo,
      implementation: implementation
    };
  }

  function _inherits$1(subClass, superClass) {
    if ("function" !== typeof superClass && null !== superClass) throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    superClass && (Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass);
  }

  var getInspectorDataForViewTag = undefined;

  getInspectorDataForViewTag = function getInspectorDataForViewTag() {
    throw ReactError(Error("getInspectorDataForViewTag() is not available in production"));
  };

  var fabricDispatchCommand = nativeFabricUIManager.dispatchCommand;

  function findNodeHandle(componentOrHandle) {
    if (null == componentOrHandle) return null;
    if ("number" === typeof componentOrHandle) return componentOrHandle;
    if (componentOrHandle._nativeTag) return componentOrHandle._nativeTag;
    if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) return componentOrHandle.canonical._nativeTag;
    componentOrHandle = findHostInstance(componentOrHandle);
    return null == componentOrHandle ? componentOrHandle : componentOrHandle.canonical ? componentOrHandle.canonical._nativeTag : componentOrHandle._nativeTag;
  }

  batchedUpdatesImpl = function batchedUpdatesImpl(fn, a) {
    var prevExecutionContext = executionContext;
    executionContext |= 1;

    try {
      return fn(a);
    } finally {
      executionContext = prevExecutionContext, executionContext === NoContext && flushSyncCallbackQueue();
    }
  };

  flushDiscreteUpdatesImpl = function flushDiscreteUpdatesImpl() {
    (executionContext & 49) === NoContext && (flushPendingDiscreteUpdates(), flushPassiveEffects());
  };

  var roots = new Map(),
      ReactFabric = {
    NativeComponent: function (findNodeHandle, findHostInstance) {
      return function (_React$Component) {
        function ReactNativeComponent() {
          if (!(this instanceof ReactNativeComponent)) throw new TypeError("Cannot call a class as a function");

          var call = _React$Component.apply(this, arguments);

          if (!this) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return !call || "object" !== typeof call && "function" !== typeof call ? this : call;
        }

        _inherits$1(ReactNativeComponent, _React$Component);

        ReactNativeComponent.prototype.blur = function () {
          ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.focus = function () {
          ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
        };

        ReactNativeComponent.prototype.measure = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureInWindow = function (callback) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
        };

        ReactNativeComponent.prototype.measureLayout = function (relativeToNativeNode, onSuccess, onFail) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
        };

        ReactNativeComponent.prototype.setNativeProps = function (nativeProps) {
          var maybeInstance = undefined;

          try {
            maybeInstance = findHostInstance(this);
          } catch (error) {}

          if (null != maybeInstance && !maybeInstance.canonical) {
            var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
            maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
            nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
            null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
          }
        };

        return ReactNativeComponent;
      }(React.Component);
    }(findNodeHandle, findHostInstance),
    findNodeHandle: findNodeHandle,
    setNativeProps: function setNativeProps() {},
    dispatchCommand: function dispatchCommand(handle, command, args) {
      null != handle._nativeTag && null != handle._internalInstanceHandle && fabricDispatchCommand(handle._internalInstanceHandle.stateNode.node, command, args);
    },
    render: function render(element, containerTag, callback) {
      var root = roots.get(containerTag);

      if (!root) {
        root = new FiberRootNode(containerTag, 0, false);
        var uninitializedFiber = createFiber(3, null, null, 0);
        root.current = uninitializedFiber;
        uninitializedFiber.stateNode = root;
        roots.set(containerTag, root);
      }

      updateContainer(element, root, null, callback);

      a: if (element = root.current, element.child) switch (element.child.tag) {
        case 5:
          element = element.child.stateNode.canonical;
          break a;

        default:
          element = element.child.stateNode;
      } else element = null;

      return element;
    },
    unmountComponentAtNode: function unmountComponentAtNode(containerTag) {
      var root = roots.get(containerTag);
      root && updateContainer(null, root, null, function () {
        roots.delete(containerTag);
      });
    },
    createPortal: function createPortal(children, containerTag) {
      return _createPortal(children, containerTag, null, 2 < arguments.length && undefined !== arguments[2] ? arguments[2] : null);
    },
    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
      NativeMethodsMixin: function (findNodeHandle, findHostInstance) {
        return {
          measure: function measure(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measure(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measure(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureInWindow: function measureInWindow(callback) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null != maybeInstance && (maybeInstance.canonical ? nativeFabricUIManager.measureInWindow(maybeInstance.node, mountSafeCallback_NOT_REALLY_SAFE(this, callback)) : ReactNativePrivateInterface.UIManager.measureInWindow(findNodeHandle(this), mountSafeCallback_NOT_REALLY_SAFE(this, callback)));
          },
          measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            null == maybeInstance || maybeInstance.canonical || (maybeInstance = undefined, "number" === typeof relativeToNativeNode ? maybeInstance = relativeToNativeNode : relativeToNativeNode._nativeTag && (maybeInstance = relativeToNativeNode._nativeTag), null != maybeInstance && ReactNativePrivateInterface.UIManager.measureLayout(findNodeHandle(this), maybeInstance, mountSafeCallback_NOT_REALLY_SAFE(this, onFail), mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess)));
          },
          setNativeProps: function setNativeProps(nativeProps) {
            var maybeInstance = undefined;

            try {
              maybeInstance = findHostInstance(this);
            } catch (error) {}

            if (null != maybeInstance && !maybeInstance.canonical) {
              var nativeTag = maybeInstance._nativeTag || maybeInstance.canonical._nativeTag;
              maybeInstance = maybeInstance.viewConfig || maybeInstance.canonical.viewConfig;
              nativeProps = diffProperties(null, emptyObject, nativeProps, maybeInstance.validAttributes);
              null != nativeProps && ReactNativePrivateInterface.UIManager.updateView(nativeTag, maybeInstance.uiViewClassName, nativeProps);
            }
          },
          focus: function focus() {
            ReactNativePrivateInterface.TextInputState.focusTextInput(findNodeHandle(this));
          },
          blur: function blur() {
            ReactNativePrivateInterface.TextInputState.blurTextInput(findNodeHandle(this));
          }
        };
      }(findNodeHandle, findHostInstance)
    }
  };

  (function (devToolsConfig) {
    var _findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
    return injectInternals(_extends({}, devToolsConfig, {
      overrideHookState: null,
      overrideProps: null,
      setSuspenseHandler: null,
      scheduleUpdate: null,
      currentDispatcherRef: ReactSharedInternals.ReactCurrentDispatcher,
      findHostInstanceByFiber: function findHostInstanceByFiber(fiber) {
        fiber = findCurrentHostFiber(fiber);
        return null === fiber ? null : fiber.stateNode;
      },
      findFiberByHostInstance: function findFiberByHostInstance(instance) {
        return _findFiberByHostInstance ? _findFiberByHostInstance(instance) : null;
      },
      findHostInstancesForRefresh: null,
      scheduleRefresh: null,
      scheduleRoot: null,
      setRefreshHandler: null,
      getCurrentFiber: null
    }));
  })({
    findFiberByHostInstance: getInstanceFromInstance,
    getInspectorDataForViewTag: getInspectorDataForViewTag,
    bundleType: 0,
    version: "16.8.6",
    rendererPackageName: "react-native-renderer"
  });

  var ReactFabric$2 = {
    default: ReactFabric
  },
      ReactFabric$3 = ReactFabric$2 && ReactFabric || ReactFabric$2;
  module.exports = ReactFabric$3.default || ReactFabric$3;
},14815,[14344,14446,14566,10297,14575]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('AppState');

  exports.default = _default;
},14818,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('AsyncSQLiteDBStorage') || TurboModuleRegistry.get('AsyncLocalStorage');

  exports.default = _default;
},14821,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Clipboard');

  exports.default = _default;
},14824,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('DatePickerAndroid');

  exports.default = _default;
},14827,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _NativeImagePickerIOS = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var ImagePickerIOS = {
    canRecordVideos: function canRecordVideos(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canRecordVideos(callback);
    },
    canUseCamera: function canUseCamera(callback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      return _NativeImagePickerIOS.default.canUseCamera(callback);
    },
    openCameraDialog: function openCameraDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        videoMode: true,
        unmirrorFrontFacingCamera: false
      };

      if (config.videoMode != null) {
        newConfig.videoMode = config.videoMode;
      }

      if (config.unmirrorFrontFacingCamera != null) {
        newConfig.unmirrorFrontFacingCamera = config.unmirrorFrontFacingCamera;
      }

      return _NativeImagePickerIOS.default.openCameraDialog(newConfig, successCallback, cancelCallback);
    },
    openSelectDialog: function openSelectDialog(config, successCallback, cancelCallback) {
      (0, _invariant.default)(_NativeImagePickerIOS.default, 'ImagePickerIOS is not available');
      var newConfig = {
        showImages: true,
        showVideos: false
      };

      if (config.showImages != null) {
        newConfig.showImages = config.showImages;
      }

      if (config.showVideos != null) {
        newConfig.showVideos = config.showVideos;
      }

      return _NativeImagePickerIOS.default.openSelectDialog(newConfig, successCallback, cancelCallback);
    }
  };
  module.exports = ImagePickerIOS;
},14830,[14305,14833,14326]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ImagePickerIOS');

  exports.default = _default;
},14833,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _Platform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _default = _Platform.default.OS === 'android' ? TurboModuleRegistry.getEnforcing('IntentAndroid') : TurboModuleRegistry.getEnforcing('LinkingManager');

  exports.default = _default;
},14836,[14305,14308,14341,10066]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var TouchHistoryMath = {
    centroidDimension: function centroidDimension(touchHistory, touchesChangedAfter, isXAxis, ofCurrent) {
      var touchBank = touchHistory.touchBank;
      var total = 0;
      var count = 0;
      var oneTouchData = touchHistory.numberActiveTouches === 1 ? touchHistory.touchBank[touchHistory.indexOfSingleActiveTouch] : null;

      if (oneTouchData !== null) {
        if (oneTouchData.touchActive && oneTouchData.currentTimeStamp > touchesChangedAfter) {
          total += ofCurrent && isXAxis ? oneTouchData.currentPageX : ofCurrent && !isXAxis ? oneTouchData.currentPageY : !ofCurrent && isXAxis ? oneTouchData.previousPageX : oneTouchData.previousPageY;
          count = 1;
        }
      } else {
        for (var i = 0; i < touchBank.length; i++) {
          var touchTrack = touchBank[i];

          if (touchTrack !== null && touchTrack !== undefined && touchTrack.touchActive && touchTrack.currentTimeStamp >= touchesChangedAfter) {
            var toAdd = undefined;

            if (ofCurrent && isXAxis) {
              toAdd = touchTrack.currentPageX;
            } else if (ofCurrent && !isXAxis) {
              toAdd = touchTrack.currentPageY;
            } else if (!ofCurrent && isXAxis) {
              toAdd = touchTrack.previousPageX;
            } else {
              toAdd = touchTrack.previousPageY;
            }

            total += toAdd;
            count++;
          }
        }
      }

      return count > 0 ? total / count : TouchHistoryMath.noCentroid;
    },
    currentCentroidXOfTouchesChangedAfter: function currentCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, true);
    },
    currentCentroidYOfTouchesChangedAfter: function currentCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, true);
    },
    previousCentroidXOfTouchesChangedAfter: function previousCentroidXOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, true, false);
    },
    previousCentroidYOfTouchesChangedAfter: function previousCentroidYOfTouchesChangedAfter(touchHistory, touchesChangedAfter) {
      return TouchHistoryMath.centroidDimension(touchHistory, touchesChangedAfter, false, false);
    },
    currentCentroidX: function currentCentroidX(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, true, true);
    },
    currentCentroidY: function currentCentroidY(touchHistory) {
      return TouchHistoryMath.centroidDimension(touchHistory, 0, false, true);
    },
    noCentroid: -1
  };
  module.exports = TouchHistoryMath;
},14839,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PermissionsAndroid');

  exports.default = _default;
},14842,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('PushNotificationManager');

  exports.default = _default;
},14845,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('ShareModule');

  exports.default = _default;
},14848,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _NativeTimePickerAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var TimePickerAndroid = function () {
    function TimePickerAndroid() {
      (0, _classCallCheck2.default)(this, TimePickerAndroid);
    }

    (0, _createClass2.default)(TimePickerAndroid, null, [{
      key: "open",
      value: function open(options) {
        return _regenerator.default.async(function open$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!_NativeTimePickerAndroid.default) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", _NativeTimePickerAndroid.default.open(options));

              case 4:
                return _context.abrupt("return", Promise.reject({
                  message: 'TimePickerAndroid is not supported on this platform.'
                }));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        });
      }
    }]);
    return TimePickerAndroid;
  }();

  TimePickerAndroid.timeSetAction = 'timeSetAction';
  TimePickerAndroid.dismissedAction = 'dismissedAction';
  module.exports = TimePickerAndroid;
},14851,[14305,14674,14320,14323,14854]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.get('TimePickerAndroid');

  exports.default = _default;
},14854,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('ToastAndroid');

  exports.default = _default;
},14857,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = useWindowDimensions;

  var _Dimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  function useWindowDimensions() {
    var dims = _Dimensions.default.get('window');

    var forceUpdate = React.useState(false)[1].bind(null, function (v) {
      return !v;
    });
    var initialDims = React.useState(dims)[0];
    React.useEffect(function () {
      _Dimensions.default.addEventListener('change', forceUpdate);

      var latestDims = _Dimensions.default.get('window');

      if (latestDims !== initialDims) {
        forceUpdate();
      }

      return function () {
        _Dimensions.default.removeEventListener('change', forceUpdate);
      };
    }, [forceUpdate, initialDims]);
    return dims;
  }
},14860,[14308,14305,10429,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var deepFreezeAndThrowOnMutationInDev = _$$_REQUIRE(_dependencyMap[0]);

  var UTFSequence = deepFreezeAndThrowOnMutationInDev({
    BOM: "\uFEFF",
    BULLET: "\u2022",
    BULLET_SP: "\xA0\u2022\xA0",
    MIDDOT: "\xB7",
    MIDDOT_SP: "\xA0\xB7\xA0",
    MIDDOT_KATAKANA: "\u30FB",
    MDASH: "\u2014",
    MDASH_SP: "\xA0\u2014\xA0",
    NDASH: "\u2013",
    NDASH_SP: "\xA0\u2013\xA0",
    NBSP: "\xA0",
    PIZZA: "\uD83C\uDF55",
    TRIANGLE_LEFT: "\u25C0",
    TRIANGLE_RIGHT: "\u25B6"
  });
  module.exports = UTFSequence;
},14863,[10057]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var TurboModuleRegistry = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1]));

  var _default = TurboModuleRegistry.getEnforcing('Vibration');

  exports.default = _default;
},14866,[14308,14341]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0]);

  var _createClass = _$$_REQUIRE(_dependencyMap[1]);

  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2]);

  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3]);

  var _inherits = _$$_REQUIRE(_dependencyMap[4]);

  var React = _$$_REQUIRE(_dependencyMap[5]);

  var YellowBox;
  {
    YellowBox = function (_React$Component2) {
      _inherits(YellowBox, _React$Component2);

      function YellowBox() {
        _classCallCheck(this, YellowBox);

        return _possibleConstructorReturn(this, _getPrototypeOf(YellowBox).apply(this, arguments));
      }

      _createClass(YellowBox, [{
        key: "render",
        value: function render() {
          return null;
        }
      }], [{
        key: "ignoreWarnings",
        value: function ignoreWarnings(patterns) {}
      }, {
        key: "install",
        value: function install() {}
      }, {
        key: "uninstall",
        value: function uninstall() {}
      }]);

      return YellowBox;
    }(React.Component);
  }
  module.exports = YellowBox;
},14869,[14320,14323,14371,14377,14386,10297]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  var PropTypes = _$$_REQUIRE(_dependencyMap[0]);

  var PointPropType = PropTypes.shape({
    x: PropTypes.number,
    y: PropTypes.number
  });
  module.exports = PointPropType;
},14872,[10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (isNode) {
    var Public = function Public(clone) {
      return merge(clone === true, false, arguments);
    },
        publicName = 'merge';

    Public.recursive = function (clone) {
      return merge(clone === true, true, arguments);
    };

    Public.clone = function (input) {
      var output = input,
          type = typeOf(input),
          index,
          size;

      if (type === 'array') {
        output = [];
        size = input.length;

        for (index = 0; index < size; ++index) {
          output[index] = Public.clone(input[index]);
        }
      } else if (type === 'object') {
        output = {};

        for (index in input) {
          output[index] = Public.clone(input[index]);
        }
      }

      return output;
    };

    function merge_recursive(base, extend) {
      if (typeOf(base) !== 'object') return extend;

      for (var key in extend) {
        if (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {
          base[key] = merge_recursive(base[key], extend[key]);
        } else {
          base[key] = extend[key];
        }
      }

      return base;
    }

    function merge(clone, recursive, argv) {
      var result = argv[0],
          size = argv.length;
      if (clone || typeOf(result) !== 'object') result = {};

      for (var index = 0; index < size; ++index) {
        var item = argv[index],
            type = typeOf(item);
        if (type !== 'object') continue;

        for (var key in item) {
          if (key === '__proto__') continue;
          var sitem = clone ? Public.clone(item[key]) : item[key];

          if (recursive) {
            result[key] = merge_recursive(result[key], sitem);
          } else {
            result[key] = sitem;
          }
        }
      }

      return result;
    }

    function typeOf(input) {
      return {}.toString.call(input).slice(8, -1).toLowerCase();
    }

    if (isNode) {
      module.exports = Public;
    } else {
      window[publicName] = Public;
    }
  })(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);
},14914,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = extractColor;
  exports.integerColor = exports.colorNames = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var colorNames = {
    aliceblue: [240, 248, 255],
    antiquewhite: [250, 235, 215],
    aqua: [0, 255, 255],
    aquamarine: [127, 255, 212],
    azure: [240, 255, 255],
    beige: [245, 245, 220],
    bisque: [255, 228, 196],
    black: [0, 0, 0],
    blanchedalmond: [255, 235, 205],
    blue: [0, 0, 255],
    blueviolet: [138, 43, 226],
    brown: [165, 42, 42],
    burlywood: [222, 184, 135],
    cadetblue: [95, 158, 160],
    chartreuse: [127, 255, 0],
    chocolate: [210, 105, 30],
    coral: [255, 127, 80],
    cornflowerblue: [100, 149, 237],
    cornsilk: [255, 248, 220],
    crimson: [220, 20, 60],
    cyan: [0, 255, 255],
    darkblue: [0, 0, 139],
    darkcyan: [0, 139, 139],
    darkgoldenrod: [184, 134, 11],
    darkgray: [169, 169, 169],
    darkgreen: [0, 100, 0],
    darkgrey: [169, 169, 169],
    darkkhaki: [189, 183, 107],
    darkmagenta: [139, 0, 139],
    darkolivegreen: [85, 107, 47],
    darkorange: [255, 140, 0],
    darkorchid: [153, 50, 204],
    darkred: [139, 0, 0],
    darksalmon: [233, 150, 122],
    darkseagreen: [143, 188, 143],
    darkslateblue: [72, 61, 139],
    darkslategray: [47, 79, 79],
    darkslategrey: [47, 79, 79],
    darkturquoise: [0, 206, 209],
    darkviolet: [148, 0, 211],
    deeppink: [255, 20, 147],
    deepskyblue: [0, 191, 255],
    dimgray: [105, 105, 105],
    dimgrey: [105, 105, 105],
    dodgerblue: [30, 144, 255],
    firebrick: [178, 34, 34],
    floralwhite: [255, 250, 240],
    forestgreen: [34, 139, 34],
    fuchsia: [255, 0, 255],
    gainsboro: [220, 220, 220],
    ghostwhite: [248, 248, 255],
    gold: [255, 215, 0],
    goldenrod: [218, 165, 32],
    gray: [128, 128, 128],
    green: [0, 128, 0],
    greenyellow: [173, 255, 47],
    grey: [128, 128, 128],
    honeydew: [240, 255, 240],
    hotpink: [255, 105, 180],
    indianred: [205, 92, 92],
    indigo: [75, 0, 130],
    ivory: [255, 255, 240],
    khaki: [240, 230, 140],
    lavender: [230, 230, 250],
    lavenderblush: [255, 240, 245],
    lawngreen: [124, 252, 0],
    lemonchiffon: [255, 250, 205],
    lightblue: [173, 216, 230],
    lightcoral: [240, 128, 128],
    lightcyan: [224, 255, 255],
    lightgoldenrodyellow: [250, 250, 210],
    lightgray: [211, 211, 211],
    lightgreen: [144, 238, 144],
    lightgrey: [211, 211, 211],
    lightpink: [255, 182, 193],
    lightsalmon: [255, 160, 122],
    lightseagreen: [32, 178, 170],
    lightskyblue: [135, 206, 250],
    lightslategray: [119, 136, 153],
    lightslategrey: [119, 136, 153],
    lightsteelblue: [176, 196, 222],
    lightyellow: [255, 255, 224],
    lime: [0, 255, 0],
    limegreen: [50, 205, 50],
    linen: [250, 240, 230],
    magenta: [255, 0, 255],
    maroon: [128, 0, 0],
    mediumaquamarine: [102, 205, 170],
    mediumblue: [0, 0, 205],
    mediumorchid: [186, 85, 211],
    mediumpurple: [147, 112, 219],
    mediumseagreen: [60, 179, 113],
    mediumslateblue: [123, 104, 238],
    mediumspringgreen: [0, 250, 154],
    mediumturquoise: [72, 209, 204],
    mediumvioletred: [199, 21, 133],
    midnightblue: [25, 25, 112],
    mintcream: [245, 255, 250],
    mistyrose: [255, 228, 225],
    moccasin: [255, 228, 181],
    navajowhite: [255, 222, 173],
    navy: [0, 0, 128],
    oldlace: [253, 245, 230],
    olive: [128, 128, 0],
    olivedrab: [107, 142, 35],
    orange: [255, 165, 0],
    orangered: [255, 69, 0],
    orchid: [218, 112, 214],
    palegoldenrod: [238, 232, 170],
    palegreen: [152, 251, 152],
    paleturquoise: [175, 238, 238],
    palevioletred: [219, 112, 147],
    papayawhip: [255, 239, 213],
    peachpuff: [255, 218, 185],
    peru: [205, 133, 63],
    pink: [255, 192, 203],
    plum: [221, 160, 221],
    powderblue: [176, 224, 230],
    purple: [128, 0, 128],
    rebeccapurple: [102, 51, 153],
    red: [255, 0, 0],
    rosybrown: [188, 143, 143],
    royalblue: [65, 105, 225],
    saddlebrown: [139, 69, 19],
    salmon: [250, 128, 114],
    sandybrown: [244, 164, 96],
    seagreen: [46, 139, 87],
    seashell: [255, 245, 238],
    sienna: [160, 82, 45],
    silver: [192, 192, 192],
    skyblue: [135, 206, 235],
    slateblue: [106, 90, 205],
    slategray: [112, 128, 144],
    slategrey: [112, 128, 144],
    snow: [255, 250, 250],
    springgreen: [0, 255, 127],
    steelblue: [70, 130, 180],
    tan: [210, 180, 140],
    teal: [0, 128, 128],
    thistle: [216, 191, 216],
    tomato: [255, 99, 71],
    turquoise: [64, 224, 208],
    violet: [238, 130, 238],
    wheat: [245, 222, 179],
    white: [255, 255, 255],
    whitesmoke: [245, 245, 245],
    yellow: [255, 255, 0],
    yellowgreen: [154, 205, 50]
  };
  exports.colorNames = colorNames;

  for (var name in colorNames) {
    if (colorNames.hasOwnProperty(name)) {
      var color = colorNames[name];
      var r = color[0];
      var g = color[1];
      var b = color[2];
      colorNames[name] = (0xff000000 | r << 16 | g << 8 | b) >>> 0;
    }
  }

  Object.freeze(colorNames);

  function hslToRgb(hsl) {
    var h = hsl[0] / 360;
    var s = hsl[1] / 100;
    var l = hsl[2] / 100;
    var t1;
    var t2;
    var t3;
    var rgb;
    var val;

    if (s === 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5) {
      t2 = l * (1 + s);
    } else {
      t2 = l + s - l * s;
    }

    t1 = 2 * l - t2;
    rgb = [0, 0, 0];

    for (var i = 0; i < 3; i++) {
      t3 = h + 0.3333333333333333 * -(i - 1);

      if (t3 < 0) {
        t3++;
      }

      if (t3 > 1) {
        t3--;
      }

      if (6 * t3 < 1) {
        val = t1 + (t2 - t1) * 6 * t3;
      } else if (2 * t3 < 1) {
        val = t2;
      } else if (3 * t3 < 2) {
        val = t1 + (t2 - t1) * (0.6666666666666666 - t3) * 6;
      } else {
        val = t1;
      }

      rgb[i] = val;
    }

    return rgb;
  }

  function hwbToRgb(hwb) {
    var h = hwb[0] / 360;
    var wh = hwb[1] / 100;
    var bl = hwb[2] / 100;
    var ratio = wh + bl;
    var i;
    var v;
    var f;
    var n;

    if (ratio > 1) {
      wh /= ratio;
      bl /= ratio;
    }

    i = Math.floor(6 * h);
    v = 1 - bl;
    f = 6 * h - i;

    if ((i & 0x01) !== 0) {
      f = 1 - f;
    }

    n = wh + f * (v - wh);
    var r;
    var g;
    var b;

    switch (i) {
      default:
      case 6:
      case 0:
        r = v;
        g = n;
        b = wh;
        break;

      case 1:
        r = n;
        g = v;
        b = wh;
        break;

      case 2:
        r = wh;
        g = v;
        b = n;
        break;

      case 3:
        r = wh;
        g = n;
        b = v;
        break;

      case 4:
        r = n;
        g = wh;
        b = v;
        break;

      case 5:
        r = v;
        g = wh;
        b = n;
        break;
    }

    return [r, g, b];
  }

  function clamp(num, min, max) {
    return Math.min(Math.max(min, num), max);
  }

  var abbr = /^#([a-f0-9]{3,4})$/i;
  var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
  var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var per = /^rgba?\(\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;
  var keyword = /(\D+)/;

  function rgbFromString(string) {
    var rgb = [0, 0, 0, 1];
    var match;
    var i;
    var hexAlpha;

    if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];

      for (i = 0; i < 3; i++) {
        var i2 = i * 2;
        rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(abbr)) {
      match = match[1];
      hexAlpha = match[3];

      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i] + match[i], 16) / 255;
      }

      if (hexAlpha) {
        rgb[3] = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;
      }
    } else if (match = string.match(rgba)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseInt(match[i + 1], 0) / 255;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(per)) {
      for (i = 0; i < 3; i++) {
        rgb[i] = parseFloat(match[i + 1]) / 100;
      }

      if (match[4]) {
        rgb[3] = parseFloat(match[4]);
      }
    } else if (match = string.match(keyword)) {
      if (match[1] === 'transparent') {
        return [0, 0, 0, 0];
      }

      rgb = colorNames[match[1]];

      if (!(typeof rgb === 'number')) {
        return null;
      }

      return integerColor(rgb);
    } else {
      return null;
    }

    for (i = 0; i < 4; i++) {
      rgb[i] = clamp(rgb[i], 0, 1);
    }

    return rgb;
  }

  var hslRegEx = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHslString(string) {
    var match = string.match(hslRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) + 360) % 360;
    var s = clamp(parseFloat(match[2]), 0, 100);
    var l = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hslToRgb([h, s, l, a]);
  }

  var hwbRegEx = /^hwb\(\s*([+-]?\d*[.]?\d+)(?:deg)?\s*,\s*([+-]?[\d.]+)%\s*,\s*([+-]?[\d.]+)%\s*(?:,\s*([+-]?[\d.]+)\s*)?\)$/;

  function rgbFromHwbString(string) {
    var match = string.match(hwbRegEx);

    if (!match) {
      return null;
    }

    var alpha = parseFloat(match[4]);
    var h = (parseFloat(match[1]) % 360 + 360) % 360;
    var w = clamp(parseFloat(match[2]), 0, 100);
    var b = clamp(parseFloat(match[3]), 0, 100);
    var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
    return hwbToRgb([h, w, b, a]);
  }

  function colorFromString(string) {
    var prefix = string.substring(0, 3).toLowerCase();

    switch (prefix) {
      case 'hsl':
        return rgbFromHslString(string);

      case 'hwb':
        return rgbFromHwbString(string);

      default:
        return rgbFromString(string);
    }
  }

  var identity = function identity(x) {
    return x;
  };

  var toSignedInt32 = function toSignedInt32(x) {
    return x | 0x0;
  };

  var integerColor = _reactNative.Platform.OS === 'android' ? toSignedInt32 : identity;
  exports.integerColor = integerColor;

  function extractColor(color) {
    if (typeof color === 'number') {
      if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {
        return integerColor(color);
      }

      return null;
    }

    var parsedColor = typeof color === 'string' ? colorFromString(color) : color;

    if (!Array.isArray(parsedColor)) {
      return parsedColor;
    }

    var r = parsedColor[0];
    var g = parsedColor[1];
    var b = parsedColor[2];
    var a = parsedColor[3];
    var int32Color = ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) | Math.round(r * 255) << 16 | Math.round(g * 255) << 8 | Math.round(b * 255)) >>> 0;
    return integerColor(int32Color);
  }
},14917,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  "use strict";

  function peg$subclass(child, parent) {
    function ctor() {
      this.constructor = child;
    }

    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
  }

  function peg$SyntaxError(message, expected, found, location) {
    this.message = message;
    this.expected = expected;
    this.found = found;
    this.location = location;
    this.name = "SyntaxError";

    if (typeof Error.captureStackTrace === "function") {
      Error.captureStackTrace(this, peg$SyntaxError);
    }
  }

  peg$subclass(peg$SyntaxError, Error);

  peg$SyntaxError.buildMessage = function (expected, found) {
    var DESCRIBE_EXPECTATION_FNS = {
      literal: function literal(expectation) {
        return "\"" + literalEscape(expectation.text) + "\"";
      },
      "class": function _class(expectation) {
        var escapedParts = "",
            i;

        for (i = 0; i < expectation.parts.length; i++) {
          escapedParts += expectation.parts[i] instanceof Array ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1]) : classEscape(expectation.parts[i]);
        }

        return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
      },
      any: function any(expectation) {
        return "any character";
      },
      end: function end(expectation) {
        return "end of input";
      },
      other: function other(expectation) {
        return expectation.description;
      }
    };

    function hex(ch) {
      return ch.charCodeAt(0).toString(16).toUpperCase();
    }

    function literalEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/"/g, '\\"').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function classEscape(s) {
      return s.replace(/\\/g, '\\\\').replace(/\]/g, '\\]').replace(/\^/g, '\\^').replace(/-/g, '\\-').replace(/\0/g, '\\0').replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/[\x00-\x0F]/g, function (ch) {
        return '\\x0' + hex(ch);
      }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return '\\x' + hex(ch);
      });
    }

    function describeExpectation(expectation) {
      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
    }

    function describeExpected(expected) {
      var descriptions = new Array(expected.length),
          i,
          j;

      for (i = 0; i < expected.length; i++) {
        descriptions[i] = describeExpectation(expected[i]);
      }

      descriptions.sort();

      if (descriptions.length > 0) {
        for (i = 1, j = 1; i < descriptions.length; i++) {
          if (descriptions[i - 1] !== descriptions[i]) {
            descriptions[j] = descriptions[i];
            j++;
          }
        }

        descriptions.length = j;
      }

      switch (descriptions.length) {
        case 1:
          return descriptions[0];

        case 2:
          return descriptions[0] + " or " + descriptions[1];

        default:
          return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
      }
    }

    function describeFound(found) {
      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
    }

    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
  };

  function peg$parse(input, options) {
    options = options !== undefined ? options : {};

    var peg$FAILED = {},
        peg$startRuleFunctions = {
      transformList: peg$parsetransformList
    },
        peg$startRuleFunction = peg$parsetransformList,
        peg$c0 = function peg$c0(ts) {
      return ts;
    },
        peg$c1 = function peg$c1(t, ts) {
      return multiply_matrices(t, ts);
    },
        peg$c2 = "matrix",
        peg$c3 = peg$literalExpectation("matrix", false),
        peg$c4 = "(",
        peg$c5 = peg$literalExpectation("(", false),
        peg$c6 = ")",
        peg$c7 = peg$literalExpectation(")", false),
        peg$c8 = function peg$c8(a, b, c, d, e, f) {
      return [a, c, e, b, d, f];
    },
        peg$c9 = "translate",
        peg$c10 = peg$literalExpectation("translate", false),
        peg$c11 = function peg$c11(tx, ty) {
      return [1, 0, tx, 0, 1, ty || 0];
    },
        peg$c12 = "scale",
        peg$c13 = peg$literalExpectation("scale", false),
        peg$c14 = function peg$c14(sx, sy) {
      return [sx, 0, 0, 0, sy === null ? sx : sy, 0];
    },
        peg$c15 = "rotate",
        peg$c16 = peg$literalExpectation("rotate", false),
        peg$c17 = function peg$c17(angle, c) {
      var cos = Math.cos(deg2rad * angle);
      var sin = Math.sin(deg2rad * angle);

      if (c !== null) {
        var x = c[0];
        var y = c[1];
        return [cos, -sin, cos * -x + -sin * -y + x, sin, cos, sin * -x + cos * -y + y];
      }

      return [cos, -sin, 0, sin, cos, 0];
    },
        peg$c18 = "skewX",
        peg$c19 = peg$literalExpectation("skewX", false),
        peg$c20 = function peg$c20(angle) {
      return [1, Math.tan(deg2rad * angle), 0, 0, 1, 0];
    },
        peg$c21 = "skewY",
        peg$c22 = peg$literalExpectation("skewY", false),
        peg$c23 = function peg$c23(angle) {
      return [1, 0, 0, Math.tan(deg2rad * angle), 1, 0];
    },
        peg$c24 = function peg$c24(f) {
      return parseFloat(f.join(""));
    },
        peg$c25 = function peg$c25(i) {
      return parseInt(i.join(""));
    },
        peg$c26 = function peg$c26(n) {
      return n;
    },
        peg$c27 = function peg$c27(n1, n2) {
      return [n1, n2];
    },
        peg$c28 = ",",
        peg$c29 = peg$literalExpectation(",", false),
        peg$c30 = function peg$c30(ds) {
      return ds.join("");
    },
        peg$c31 = function peg$c31(f) {
      return f.join("");
    },
        peg$c32 = function peg$c32(d) {
      return d.join("");
    },
        peg$c33 = peg$otherExpectation("fractionalConstant"),
        peg$c34 = ".",
        peg$c35 = peg$literalExpectation(".", false),
        peg$c36 = function peg$c36(d1, d2) {
      return [d1 ? d1.join("") : null, ".", d2.join("")].join("");
    },
        peg$c37 = /^[eE]/,
        peg$c38 = peg$classExpectation(["e", "E"], false, false),
        peg$c39 = function peg$c39(e) {
      return [e[0], e[1], e[2].join("")].join("");
    },
        peg$c40 = /^[+\-]/,
        peg$c41 = peg$classExpectation(["+", "-"], false, false),
        peg$c42 = /^[0-9]/,
        peg$c43 = peg$classExpectation([["0", "9"]], false, false),
        peg$c44 = /^[ \t\r\n]/,
        peg$c45 = peg$classExpectation([" ", "\t", "\r", "\n"], false, false),
        peg$currPos = 0,
        peg$savedPos = 0,
        peg$posDetailsCache = [{
      line: 1,
      column: 1
    }],
        peg$maxFailPos = 0,
        peg$maxFailExpected = [],
        peg$silentFails = 0,
        peg$result;

    if ("startRule" in options) {
      if (!(options.startRule in peg$startRuleFunctions)) {
        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
      }

      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
    }

    function peg$literalExpectation(text, ignoreCase) {
      return {
        type: "literal",
        text: text,
        ignoreCase: ignoreCase
      };
    }

    function peg$classExpectation(parts, inverted, ignoreCase) {
      return {
        type: "class",
        parts: parts,
        inverted: inverted,
        ignoreCase: ignoreCase
      };
    }

    function peg$endExpectation() {
      return {
        type: "end"
      };
    }

    function peg$otherExpectation(description) {
      return {
        type: "other",
        description: description
      };
    }

    function peg$computePosDetails(pos) {
      var details = peg$posDetailsCache[pos],
          p;

      if (details) {
        return details;
      } else {
        p = pos - 1;

        while (!peg$posDetailsCache[p]) {
          p--;
        }

        details = peg$posDetailsCache[p];
        details = {
          line: details.line,
          column: details.column
        };

        while (p < pos) {
          if (input.charCodeAt(p) === 10) {
            details.line++;
            details.column = 1;
          } else {
            details.column++;
          }

          p++;
        }

        peg$posDetailsCache[pos] = details;
        return details;
      }
    }

    function peg$computeLocation(startPos, endPos) {
      var startPosDetails = peg$computePosDetails(startPos),
          endPosDetails = peg$computePosDetails(endPos);
      return {
        start: {
          offset: startPos,
          line: startPosDetails.line,
          column: startPosDetails.column
        },
        end: {
          offset: endPos,
          line: endPosDetails.line,
          column: endPosDetails.column
        }
      };
    }

    function peg$fail(expected) {
      if (peg$currPos < peg$maxFailPos) {
        return;
      }

      if (peg$currPos > peg$maxFailPos) {
        peg$maxFailPos = peg$currPos;
        peg$maxFailExpected = [];
      }

      peg$maxFailExpected.push(expected);
    }

    function peg$buildSimpleError(message, location) {
      return new peg$SyntaxError(message, null, null, location);
    }

    function peg$buildStructuredError(expected, found, location) {
      return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
    }

    function peg$parsetransformList() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$parsewsp();
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsetransforms();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c0(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetransforms() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$parsetransform();

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsecommaWsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsecommaWsp();
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsetransforms();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c1(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$parsetransform();
      }

      return s0;
    }

    function peg$parsetransform() {
      var s0;
      s0 = peg$parsematrix();

      if (s0 === peg$FAILED) {
        s0 = peg$parsetranslate();

        if (s0 === peg$FAILED) {
          s0 = peg$parsescale();

          if (s0 === peg$FAILED) {
            s0 = peg$parserotate();

            if (s0 === peg$FAILED) {
              s0 = peg$parseskewX();

              if (s0 === peg$FAILED) {
                s0 = peg$parseskewY();
              }
            }
          }
        }
      }

      return s0;
    }

    function peg$parsematrix() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, s17;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c2) {
        s1 = peg$c2;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c3);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWsp();

                if (s6 !== peg$FAILED) {
                  s7 = peg$parsenumber();

                  if (s7 !== peg$FAILED) {
                    s8 = peg$parsecommaWsp();

                    if (s8 !== peg$FAILED) {
                      s9 = peg$parsenumber();

                      if (s9 !== peg$FAILED) {
                        s10 = peg$parsecommaWsp();

                        if (s10 !== peg$FAILED) {
                          s11 = peg$parsenumber();

                          if (s11 !== peg$FAILED) {
                            s12 = peg$parsecommaWsp();

                            if (s12 !== peg$FAILED) {
                              s13 = peg$parsenumber();

                              if (s13 !== peg$FAILED) {
                                s14 = peg$parsecommaWsp();

                                if (s14 !== peg$FAILED) {
                                  s15 = peg$parsenumber();

                                  if (s15 !== peg$FAILED) {
                                    s16 = [];
                                    s17 = peg$parsewsp();

                                    while (s17 !== peg$FAILED) {
                                      s16.push(s17);
                                      s17 = peg$parsewsp();
                                    }

                                    if (s16 !== peg$FAILED) {
                                      if (input.charCodeAt(peg$currPos) === 41) {
                                        s17 = peg$c6;
                                        peg$currPos++;
                                      } else {
                                        s17 = peg$FAILED;

                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$c7);
                                        }
                                      }

                                      if (s17 !== peg$FAILED) {
                                        peg$savedPos = s0;
                                        s1 = peg$c8(s5, s7, s9, s11, s13, s15);
                                        s0 = s1;
                                      } else {
                                        peg$currPos = s0;
                                        s0 = peg$FAILED;
                                      }
                                    } else {
                                      peg$currPos = s0;
                                      s0 = peg$FAILED;
                                    }
                                  } else {
                                    peg$currPos = s0;
                                    s0 = peg$FAILED;
                                  }
                                } else {
                                  peg$currPos = s0;
                                  s0 = peg$FAILED;
                                }
                              } else {
                                peg$currPos = s0;
                                s0 = peg$FAILED;
                              }
                            } else {
                              peg$currPos = s0;
                              s0 = peg$FAILED;
                            }
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$FAILED;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsetranslate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 9) === peg$c9) {
        s1 = peg$c9;
        peg$currPos += 9;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c10);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c11(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsescale() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c12) {
        s1 = peg$c12;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c13);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspNumber();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c14(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parserotate() {
      var s0, s1, s2, s3, s4, s5, s6, s7, s8;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 6) === peg$c15) {
        s1 = peg$c15;
        peg$currPos += 6;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c16);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = peg$parsecommaWspTwoNumbers();

                if (s6 === peg$FAILED) {
                  s6 = null;
                }

                if (s6 !== peg$FAILED) {
                  s7 = [];
                  s8 = peg$parsewsp();

                  while (s8 !== peg$FAILED) {
                    s7.push(s8);
                    s8 = peg$parsewsp();
                  }

                  if (s7 !== peg$FAILED) {
                    if (input.charCodeAt(peg$currPos) === 41) {
                      s8 = peg$c6;
                      peg$currPos++;
                    } else {
                      s8 = peg$FAILED;

                      if (peg$silentFails === 0) {
                        peg$fail(peg$c7);
                      }
                    }

                    if (s8 !== peg$FAILED) {
                      peg$savedPos = s0;
                      s1 = peg$c17(s5, s6);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$FAILED;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewX() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c18) {
        s1 = peg$c18;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c19);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c20(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parseskewY() {
      var s0, s1, s2, s3, s4, s5, s6, s7;
      s0 = peg$currPos;

      if (input.substr(peg$currPos, 5) === peg$c21) {
        s1 = peg$c21;
        peg$currPos += 5;
      } else {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c22);
        }
      }

      if (s1 !== peg$FAILED) {
        s2 = [];
        s3 = peg$parsewsp();

        while (s3 !== peg$FAILED) {
          s2.push(s3);
          s3 = peg$parsewsp();
        }

        if (s2 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 40) {
            s3 = peg$c4;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c5);
            }
          }

          if (s3 !== peg$FAILED) {
            s4 = [];
            s5 = peg$parsewsp();

            while (s5 !== peg$FAILED) {
              s4.push(s5);
              s5 = peg$parsewsp();
            }

            if (s4 !== peg$FAILED) {
              s5 = peg$parsenumber();

              if (s5 !== peg$FAILED) {
                s6 = [];
                s7 = peg$parsewsp();

                while (s7 !== peg$FAILED) {
                  s6.push(s7);
                  s7 = peg$parsewsp();
                }

                if (s6 !== peg$FAILED) {
                  if (input.charCodeAt(peg$currPos) === 41) {
                    s7 = peg$c6;
                    peg$currPos++;
                  } else {
                    s7 = peg$FAILED;

                    if (peg$silentFails === 0) {
                      peg$fail(peg$c7);
                    }
                  }

                  if (s7 !== peg$FAILED) {
                    peg$savedPos = s0;
                    s1 = peg$c23(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$FAILED;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$FAILED;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsenumber() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsesign();

      if (s2 === peg$FAILED) {
        s2 = null;
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsefloatingPointConstant();

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c24(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsesign();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parseintegerConstant();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c25(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsecommaWspNumber() {
      var s0, s1, s2;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c26(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWspTwoNumbers() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$parsecommaWsp();

      if (s1 !== peg$FAILED) {
        s2 = peg$parsenumber();

        if (s2 !== peg$FAILED) {
          s3 = peg$parsecommaWsp();

          if (s3 !== peg$FAILED) {
            s4 = peg$parsenumber();

            if (s4 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c27(s2, s4);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsecommaWsp() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = [];
      s2 = peg$parsewsp();

      if (s2 !== peg$FAILED) {
        while (s2 !== peg$FAILED) {
          s1.push(s2);
          s2 = peg$parsewsp();
        }
      } else {
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        s2 = peg$parsecomma();

        if (s2 === peg$FAILED) {
          s2 = null;
        }

        if (s2 !== peg$FAILED) {
          s3 = [];
          s4 = peg$parsewsp();

          while (s4 !== peg$FAILED) {
            s3.push(s4);
            s4 = peg$parsewsp();
          }

          if (s3 !== peg$FAILED) {
            s1 = [s1, s2, s3];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsecomma();

        if (s1 !== peg$FAILED) {
          s2 = [];
          s3 = peg$parsewsp();

          while (s3 !== peg$FAILED) {
            s2.push(s3);
            s3 = peg$parsewsp();
          }

          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      return s0;
    }

    function peg$parsecomma() {
      var s0;

      if (input.charCodeAt(peg$currPos) === 44) {
        s0 = peg$c28;
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c29);
        }
      }

      return s0;
    }

    function peg$parseintegerConstant() {
      var s0, s1;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c30(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsefloatingPointConstant() {
      var s0, s1, s2, s3;
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$parsefractionalConstant();

      if (s2 !== peg$FAILED) {
        s3 = peg$parseexponent();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s2 = [s2, s3];
          s1 = s2;
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c31(s1);
      }

      s0 = s1;

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$parsedigitSequence();

        if (s2 !== peg$FAILED) {
          s3 = peg$parseexponent();

          if (s3 !== peg$FAILED) {
            s2 = [s2, s3];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }

        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c32(s1);
        }

        s0 = s1;
      }

      return s0;
    }

    function peg$parsefractionalConstant() {
      var s0, s1, s2, s3;
      peg$silentFails++;
      s0 = peg$currPos;
      s1 = peg$parsedigitSequence();

      if (s1 === peg$FAILED) {
        s1 = null;
      }

      if (s1 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 46) {
          s2 = peg$c34;
          peg$currPos++;
        } else {
          s2 = peg$FAILED;

          if (peg$silentFails === 0) {
            peg$fail(peg$c35);
          }
        }

        if (s2 !== peg$FAILED) {
          s3 = peg$parsedigitSequence();

          if (s3 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c36(s1, s3);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }

      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parsedigitSequence();

        if (s1 !== peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 46) {
            s2 = peg$c34;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;

            if (peg$silentFails === 0) {
              peg$fail(peg$c35);
            }
          }

          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c32(s1);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      }

      peg$silentFails--;

      if (s0 === peg$FAILED) {
        s1 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c33);
        }
      }

      return s0;
    }

    function peg$parseexponent() {
      var s0, s1, s2, s3, s4;
      s0 = peg$currPos;
      s1 = peg$currPos;

      if (peg$c37.test(input.charAt(peg$currPos))) {
        s2 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s2 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c38);
        }
      }

      if (s2 !== peg$FAILED) {
        s3 = peg$parsesign();

        if (s3 === peg$FAILED) {
          s3 = null;
        }

        if (s3 !== peg$FAILED) {
          s4 = peg$parsedigitSequence();

          if (s4 !== peg$FAILED) {
            s2 = [s2, s3, s4];
            s1 = s2;
          } else {
            peg$currPos = s1;
            s1 = peg$FAILED;
          }
        } else {
          peg$currPos = s1;
          s1 = peg$FAILED;
        }
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }

      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c39(s1);
      }

      s0 = s1;
      return s0;
    }

    function peg$parsesign() {
      var s0;

      if (peg$c40.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c41);
        }
      }

      return s0;
    }

    function peg$parsedigitSequence() {
      var s0, s1;
      s0 = [];
      s1 = peg$parsedigit();

      if (s1 !== peg$FAILED) {
        while (s1 !== peg$FAILED) {
          s0.push(s1);
          s1 = peg$parsedigit();
        }
      } else {
        s0 = peg$FAILED;
      }

      return s0;
    }

    function peg$parsedigit() {
      var s0;

      if (peg$c42.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c43);
        }
      }

      return s0;
    }

    function peg$parsewsp() {
      var s0;

      if (peg$c44.test(input.charAt(peg$currPos))) {
        s0 = input.charAt(peg$currPos);
        peg$currPos++;
      } else {
        s0 = peg$FAILED;

        if (peg$silentFails === 0) {
          peg$fail(peg$c45);
        }
      }

      return s0;
    }

    var deg2rad = Math.PI / 180;

    function multiply_matrices(l, r) {
      var al = l[0];
      var cl = l[1];
      var el = l[2];
      var bl = l[3];
      var dl = l[4];
      var fl = l[5];
      var ar = r[0];
      var cr = r[1];
      var er = r[2];
      var br = r[3];
      var dr = r[4];
      var fr = r[5];
      var a = al * ar + cl * br;
      var c = al * cr + cl * dr;
      var e = al * er + cl * fr + el;
      var b = bl * ar + dl * br;
      var d = bl * cr + dl * dr;
      var f = bl * er + dl * fr + fl;
      return [a, c, e, b, d, f];
    }

    peg$result = peg$startRuleFunction();

    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
      return peg$result;
    } else {
      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
        peg$fail(peg$endExpectation());
      }

      throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));
    }
  }

  module.exports = {
    SyntaxError: peg$SyntaxError,
    parse: peg$parse
  };
},14920,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pickNotNil = pickNotNil;
  exports.idPattern = undefined;

  function pickNotNil(object) {
    var result = {};

    for (var key in object) {
      if (object.hasOwnProperty(key)) {
        var value = object[key];

        if (value !== undefined && value !== null) {
          result[key] = value;
        }
      }
    }

    return result;
  }

  var idPattern = /#([^)]+)\)?$/;
  exports.idPattern = idPattern;
},14923,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    objectBoundingBox: 0,
    userSpaceOnUse: 1
  };
  exports.default = _default;
},14926,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _extractViewBox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var Pattern = function (_Shape) {
    (0, _inherits2.default)(Pattern, _Shape);

    function Pattern() {
      (0, _classCallCheck2.default)(this, Pattern);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pattern).apply(this, arguments));
    }

    (0, _createClass2.default)(Pattern, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var patternTransform = props.patternTransform,
            transform = props.transform,
            id = props.id,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            patternUnits = props.patternUnits,
            patternContentUnits = props.patternContentUnits,
            children = props.children,
            viewBox = props.viewBox,
            preserveAspectRatio = props.preserveAspectRatio;
        var matrix = (0, _extractTransform.default)(patternTransform || transform || props);
        return _react.default.createElement(RNSVGPattern, (0, _extends2.default)({
          ref: this.refMethod,
          name: id,
          x: x,
          y: y,
          width: width,
          height: height,
          matrix: matrix,
          patternTransform: matrix,
          patternUnits: _units.default[patternUnits] || 0,
          patternContentUnits: patternContentUnits ? _units.default[patternContentUnits] : 1
        }, (0, _extractViewBox.default)({
          viewBox: viewBox,
          preserveAspectRatio: preserveAspectRatio
        })), children);
      }
    }]);
    return Pattern;
  }(_Shape2.default);

  exports.default = Pattern;
  Pattern.displayName = 'Pattern';
  Pattern.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGPattern = (0, _reactNative.requireNativeComponent)('RNSVGPattern');
},14929,[14305,14344,14320,14323,14371,14377,14386,10297,10033,11554,11644,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _extractProps = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12]));

  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Shape2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Mask = function (_Shape) {
    (0, _inherits2.default)(Mask, _Shape);

    function Mask() {
      (0, _classCallCheck2.default)(this, Mask);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Mask).apply(this, arguments));
    }

    (0, _createClass2.default)(Mask, [{
      key: "render",
      value: function render() {
        var props = this.props;
        var maskTransform = props.maskTransform,
            transform = props.transform,
            x = props.x,
            y = props.y,
            width = props.width,
            height = props.height,
            maskUnits = props.maskUnits,
            maskContentUnits = props.maskContentUnits,
            children = props.children;
        return _react.default.createElement(RNSVGMask, (0, _extends2.default)({
          ref: this.refMethod
        }, (0, _extractProps.default)((0, _objectSpread2.default)({}, (0, _extractProps.propsAndStyles)(props), {
          x: null,
          y: null
        }), this), {
          x: x,
          y: y,
          width: width,
          height: height,
          maskTransform: (0, _extractTransform.default)(maskTransform || transform || props),
          maskUnits: maskUnits !== undefined ? _units.default[maskUnits] : 0,
          maskContentUnits: maskContentUnits !== undefined ? _units.default[maskContentUnits] : 1
        }), children);
      }
    }]);
    return Mask;
  }(_Shape2.default);

  exports.default = Mask;
  Mask.displayName = 'Mask';
  Mask.defaultProps = {
    x: '0%',
    y: '0%',
    width: '100%',
    height: '100%'
  };
  var RNSVGMask = (0, _reactNative.requireNativeComponent)('RNSVGMask');
},14932,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10297,10033,11554,11509,14926,11497]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object.keys(descriptor).forEach(function (key) {
      desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
      desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
      return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== undefined) {
      desc.value = desc.initializer ? desc.initializer.call(context) : undefined;
      desc.initializer = undefined;
    }

    if (desc.initializer === undefined) {
      Object.defineProperty(target, property, desc);
      desc = null;
    }

    return desc;
  }

  module.exports = _applyDecoratedDescriptor;
},22393,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var arrayWithHoles = _$$_REQUIRE(_dependencyMap[0]);

  var iterableToArray = _$$_REQUIRE(_dependencyMap[1]);

  var nonIterableRest = _$$_REQUIRE(_dependencyMap[2]);

  function _toArray(arr) {
    return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();
  }

  module.exports = _toArray;
},22396,[14350,14365,14356]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  'use strict';

  var base64 = _$$_REQUIRE(_dependencyMap[0]);

  var ieee754 = _$$_REQUIRE(_dependencyMap[1]);

  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  var K_MAX_LENGTH = 0x7fffffff;
  exports.kMaxLength = K_MAX_LENGTH;
  Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();

  if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && true) {}

  function typedArraySupport() {
    try {
      var arr = new Uint8Array(1);
      arr.__proto__ = {
        __proto__: Uint8Array.prototype,
        foo: function foo() {
          return 42;
        }
      };
      return arr.foo() === 42;
    } catch (e) {
      return false;
    }
  }

  Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.buffer;
    }
  });
  Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function get() {
      if (!Buffer.isBuffer(this)) return undefined;
      return this.byteOffset;
    }
  });

  function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
      throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }

    var buf = new Uint8Array(length);
    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function Buffer(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new TypeError('The "string" argument must be of type string. Received type number');
      }

      return allocUnsafe(arg);
    }

    return from(arg, encodingOrOffset, length);
  }

  if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.species : "@@species") != null && Buffer[typeof Symbol === "function" ? Symbol.species : "@@species"] === Buffer) {
    Object.defineProperty(Buffer, typeof Symbol === "function" ? Symbol.species : "@@species", {
      value: null,
      configurable: true,
      enumerable: false,
      writable: false
    });
  }

  Buffer.poolSize = 8192;

  function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
      return fromString(value, encodingOrOffset);
    }

    if (ArrayBuffer.isView(value)) {
      return fromArrayLike(value);
    }

    if (value == null) {
      throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    }

    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
      return fromArrayBuffer(value, encodingOrOffset, length);
    }

    if (typeof value === 'number') {
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    }

    var valueOf = value.valueOf && value.valueOf();

    if (valueOf != null && valueOf !== value) {
      return Buffer.from(valueOf, encodingOrOffset, length);
    }

    var b = fromObject(value);
    if (b) return b;

    if (typeof Symbol !== 'undefined' && (typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive") != null && typeof value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"] === 'function') {
      return Buffer.from(value[typeof Symbol === "function" ? Symbol.toPrimitive : "@@toPrimitive"]('string'), encodingOrOffset, length);
    }

    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
  }

  Buffer.from = function (value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
  };

  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;

  function assertSize(size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
      throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
  }

  function alloc(size, fill, encoding) {
    assertSize(size);

    if (size <= 0) {
      return createBuffer(size);
    }

    if (fill !== undefined) {
      return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }

    return createBuffer(size);
  }

  Buffer.alloc = function (size, fill, encoding) {
    return alloc(size, fill, encoding);
  };

  function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
  }

  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(size);
  };

  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(size);
  };

  function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding);
    }

    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);

    if (actual !== length) {
      buf = buf.slice(0, actual);
    }

    return buf;
  }

  function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);

    for (var i = 0; i < length; i += 1) {
      buf[i] = array[i] & 255;
    }

    return buf;
  }

  function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('"offset" is outside of buffer bounds');
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('"length" is outside of buffer bounds');
    }

    var buf;

    if (byteOffset === undefined && length === undefined) {
      buf = new Uint8Array(array);
    } else if (length === undefined) {
      buf = new Uint8Array(array, byteOffset);
    } else {
      buf = new Uint8Array(array, byteOffset, length);
    }

    buf.__proto__ = Buffer.prototype;
    return buf;
  }

  function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
      var len = checked(obj.length) | 0;
      var buf = createBuffer(len);

      if (buf.length === 0) {
        return buf;
      }

      obj.copy(buf, 0, 0, len);
      return buf;
    }

    if (obj.length !== undefined) {
      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
        return createBuffer(0);
      }

      return fromArrayLike(obj);
    }

    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
      return fromArrayLike(obj.data);
    }
  }

  function checked(length) {
    if (length >= K_MAX_LENGTH) {
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + ' bytes');
    }

    return length | 0;
  }

  function SlowBuffer(length) {
    if (+length != length) {
      length = 0;
    }

    return Buffer.alloc(+length);
  }

  Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype;
  };

  Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);

    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }

    if (a === b) return 0;
    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;

      default:
        return false;
    }
  };

  Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers');
    }

    if (list.length === 0) {
      return Buffer.alloc(0);
    }

    var i;

    if (length === undefined) {
      length = 0;

      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;

    for (i = 0; i < list.length; ++i) {
      var buf = list[i];

      if (isInstance(buf, Uint8Array)) {
        buf = Buffer.from(buf);
      }

      if (!Buffer.isBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }

      buf.copy(buffer, pos);
      pos += buf.length;
    }

    return buffer;
  };

  function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
      return string.length;
    }

    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
      return string.byteLength;
    }

    if (typeof string !== 'string') {
      throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    }

    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len;

        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;

        case 'hex':
          return len >>> 1;

        case 'base64':
          return base64ToBytes(string).length;

        default:
          if (loweredCase) {
            return mustMatch ? -1 : utf8ToBytes(string).length;
          }

          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.byteLength = byteLength;

  function slowToString(encoding, start, end) {
    var loweredCase = false;

    if (start === undefined || start < 0) {
      start = 0;
    }

    if (start > this.length) {
      return '';
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return '';
    }

    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return '';
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);

        case 'ascii':
          return asciiSlice(this, start, end);

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end);

        case 'base64':
          return base64Slice(this, start, end);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  Buffer.prototype._isBuffer = true;

  function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16() {
    var len = this.length;

    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits');
    }

    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }

    return this;
  };

  Buffer.prototype.swap32 = function swap32() {
    var len = this.length;

    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits');
    }

    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }

    return this;
  };

  Buffer.prototype.swap64 = function swap64() {
    var len = this.length;

    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits');
    }

    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }

    return this;
  };

  Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };

  Buffer.prototype.toLocaleString = Buffer.prototype.toString;

  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
  };

  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
  };

  Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
      target = Buffer.from(target, target.offset, target.byteLength);
    }

    if (!Buffer.isBuffer(target)) {
      throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    }

    if (start === undefined) {
      start = 0;
    }

    if (end === undefined) {
      end = target ? target.length : 0;
    }

    if (thisStart === undefined) {
      thisStart = 0;
    }

    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index');
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0;
    }

    if (thisStart >= thisEnd) {
      return -1;
    }

    if (start >= end) {
      return 1;
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
      }
    }

    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
  };

  function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    if (buffer.length === 0) return -1;

    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -2147483648) {
      byteOffset = -2147483648;
    }

    byteOffset = +byteOffset;

    if (numberIsNaN(byteOffset)) {
      byteOffset = dir ? 0 : buffer.length - 1;
    }

    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;

    if (byteOffset >= buffer.length) {
      if (dir) return -1;else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;else return -1;
    }

    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    if (Buffer.isBuffer(val)) {
      if (val.length === 0) {
        return -1;
      }

      return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
      val = val & 0xFF;

      if (typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
      }

      return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
    }

    throw new TypeError('val must be string, number or Buffer');
  }

  function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();

      if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1;
        }

        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read(buf, i) {
      if (indexSize === 1) {
        return buf[i];
      } else {
        return buf.readUInt16BE(i * indexSize);
      }
    }

    var i;

    if (dir) {
      var foundIndex = -1;

      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;

      for (i = byteOffset; i >= 0; i--) {
        var found = true;

        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break;
          }
        }

        if (found) return i;
      }
    }

    return -1;
  }

  Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
  };

  Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
  };

  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;

    if (!length) {
      length = remaining;
    } else {
      length = Number(length);

      if (length > remaining) {
        length = remaining;
      }
    }

    var strLen = string.length;

    if (length > strLen / 2) {
      length = strLen / 2;
    }

    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (numberIsNaN(parsed)) return i;
      buf[offset + i] = parsed;
    }

    return i;
  }

  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }

  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }

  function latin1Write(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }

  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }

  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }

  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset >>> 0;

      if (isFinite(length)) {
        length = length >>> 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds');
    }

    if (!encoding) encoding = 'utf8';
    var loweredCase = false;

    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);

        case 'ascii':
          return asciiWrite(this, string, offset, length);

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length);

        case 'base64':
          return base64Write(this, string, offset, length);

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };

  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }

  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;

    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }

            break;

          case 2:
            secondByte = buf[i + 1];

            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;

              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;

              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }

            break;

          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];

            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;

              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }

        }
      }

      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res);
  }

  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;

    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }

    var res = '';
    var i = 0;

    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }

    return res;
  }

  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }

    return ret;
  }

  function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }

    return ret;
  }

  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';

    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }

    return out;
  }

  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';

    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }

    return res;
  }

  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
    return newBuf;
  };

  function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
  }

  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val;
  };

  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;

    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val;
  };

  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
  };

  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;

    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];

    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }

    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
  };

  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
  };

  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
  };

  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
  };

  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
  };

  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };

  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };

  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;

    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = value / mul & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;

    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;

    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }

      this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }

    return offset + byteLength;
  };

  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -128);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -2147483648);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
  };

  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
  }

  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }

    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };

  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;

    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157e+308);
    }

    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };

  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;

    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }

    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    if (end > this.length) end = this.length;

    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;

    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
      this.copyWithin(targetStart, start, end);
    } else if (this === target && start < targetStart && targetStart < end) {
      for (var i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }

    return len;
  };

  Buffer.prototype.fill = function fill(val, start, end, encoding) {
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }

      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string');
      }

      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
      }

      if (val.length === 1) {
        var code = val.charCodeAt(0);

        if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
          val = code;
        }
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index');
    }

    if (end <= start) {
      return this;
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;

    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
      var len = bytes.length;

      if (len === 0) {
        throw new TypeError('The value "' + val + '" is invalid for argument "value"');
      }

      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this;
  };

  var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;

  function base64clean(str) {
    str = str.split('=')[0];
    str = str.trim().replace(INVALID_BASE64_RE, '');
    if (str.length < 2) return '';

    while (str.length % 4 !== 0) {
      str = str + '=';
    }

    return str;
  }

  function toHex(n) {
    if (n < 16) return '0' + n.toString(16);
    return n.toString(16);
  }

  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }

          leadSurrogate = codePoint;
          continue;
        }

        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }

        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }

    return bytes;
  }

  function asciiToBytes(str) {
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }

    return byteArray;
  }

  function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];

    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray;
  }

  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }

  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if (i + offset >= dst.length || i >= src.length) break;
      dst[i + offset] = src[i];
    }

    return i;
  }

  function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
  }

  function numberIsNaN(obj) {
    return obj !== obj;
  }
},22399,[10207,22402]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  exports.read = function (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;

    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;

    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }

    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };

  exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);

      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }

      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }

      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = e << mLen | m;
    eLen += mLen;

    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  };
},22402,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  'use strict';

  Object.defineProperty(exports, '__esModule', {
    value: true
  });
  var UNKNOWN_FUNCTION = '<unknown>';

  function parse(stackString) {
    var lines = stackString.split('\n');
    return lines.reduce(function (stack, line) {
      var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);

      if (parseResult) {
        stack.push(parseResult);
      }

      return stack;
    }, []);
  }

  var chromeRe = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/|[a-z]:\\|\\\\).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
  var chromeEvalRe = /\((\S*)(?::(\d+))(?::(\d+))\)/;

  function parseChrome(line) {
    var parts = chromeRe.exec(line);

    if (!parts) {
      return null;
    }

    var isNative = parts[2] && parts[2].indexOf('native') === 0;
    var isEval = parts[2] && parts[2].indexOf('eval') === 0;
    var submatch = chromeEvalRe.exec(parts[2]);

    if (isEval && submatch != null) {
      parts[2] = submatch[1];
      parts[3] = submatch[2];
      parts[4] = submatch[3];
    }

    return {
      file: !isNative ? parts[2] : null,
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: isNative ? [parts[2]] : [],
      lineNumber: parts[3] ? +parts[3] : null,
      column: parts[4] ? +parts[4] : null
    };
  }

  var winjsRe = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseWinjs(line) {
    var parts = winjsRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  var geckoRe = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\[native).*?|[^@]*bundle)(?::(\d+))?(?::(\d+))?\s*$/i;
  var geckoEvalRe = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;

  function parseGecko(line) {
    var parts = geckoRe.exec(line);

    if (!parts) {
      return null;
    }

    var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;
    var submatch = geckoEvalRe.exec(parts[3]);

    if (isEval && submatch != null) {
      parts[3] = submatch[1];
      parts[4] = submatch[2];
      parts[5] = null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: parts[2] ? parts[2].split(',') : [],
      lineNumber: parts[4] ? +parts[4] : null,
      column: parts[5] ? +parts[5] : null
    };
  }

  var javaScriptCoreRe = /^\s*(?:([^@]*)(?:\((.*?)\))?@)?(\S.*?):(\d+)(?::(\d+))?\s*$/i;

  function parseJSC(line) {
    var parts = javaScriptCoreRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[3],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[4],
      column: parts[5] ? +parts[5] : null
    };
  }

  var nodeRe = /^\s*at (?:((?:\[object object\])?[^\\/]+(?: \[as \S+\])?) )?\(?(.*?):(\d+)(?::(\d+))?\)?\s*$/i;

  function parseNode(line) {
    var parts = nodeRe.exec(line);

    if (!parts) {
      return null;
    }

    return {
      file: parts[2],
      methodName: parts[1] || UNKNOWN_FUNCTION,
      arguments: [],
      lineNumber: +parts[3],
      column: parts[4] ? +parts[4] : null
    };
  }

  exports.parse = parse;
},22405,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _radio.Radio;
    }
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _switch.Switch;
    }
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _checkbox.Checkbox;
    }
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _imageButton.ImageButton;
    }
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _titleBar.TitleBar;
    }
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _navigationBar.NavigationBar;
    }
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _card.Card;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _card.MHCard;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _card.ModeCard;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _card.IndependentCard;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _gear.NormalGear;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _gear.SlideGear;
    }
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _gear.DragGear;
    }
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _separator.Separator;
    }
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.StringSpinner;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _spinner.NumberSpinner;
    }
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _mhDatePicker.MHDatePicker;
    }
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.AbstractDialog;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _dialog.ActionSheet;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ChoiceDialog;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.InputDialog;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.LoadingDialog;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.MessageDialog;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.PinCodeDialog;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ProgressDialog;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _dialog.ShareDialog;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItem;
    }
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _listItem.ChoiceItem;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSlider;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _listItem.ListItemWithSwitch;
    }
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _fadeSlide.FadeSlide;
    }
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _blankPage.BlankPage;
    }
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _touchableView.TouchableView;
    }
  });
  Object.defineProperty(exports, "Locale", {
    enumerable: true,
    get: function get() {
      return _locale.Locale;
    }
  });
  Object.defineProperty(exports, "ConfigProvider", {
    enumerable: true,
    get: function get() {
      return _configProvider.ConfigProvider;
    }
  });

  var _radio = _$$_REQUIRE(_dependencyMap[0]);

  var _switch = _$$_REQUIRE(_dependencyMap[1]);

  var _checkbox = _$$_REQUIRE(_dependencyMap[2]);

  var _imageButton = _$$_REQUIRE(_dependencyMap[3]);

  var _titleBar = _$$_REQUIRE(_dependencyMap[4]);

  var _navigationBar = _$$_REQUIRE(_dependencyMap[5]);

  var _card = _$$_REQUIRE(_dependencyMap[6]);

  var _gear = _$$_REQUIRE(_dependencyMap[7]);

  var _separator = _$$_REQUIRE(_dependencyMap[8]);

  var _spinner = _$$_REQUIRE(_dependencyMap[9]);

  var _mhDatePicker = _$$_REQUIRE(_dependencyMap[10]);

  var _dialog = _$$_REQUIRE(_dependencyMap[11]);

  var _listItem = _$$_REQUIRE(_dependencyMap[12]);

  var _fadeSlide = _$$_REQUIRE(_dependencyMap[13]);

  var _blankPage = _$$_REQUIRE(_dependencyMap[14]);

  var _touchableView = _$$_REQUIRE(_dependencyMap[15]);

  var _locale = _$$_REQUIRE(_dependencyMap[16]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);
},22411,[22414,22447,22783,22792,22798,22855,22861,22879,22903,22909,22921,22993,23026,23047,23053,23062,22933,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Radio", {
    enumerable: true,
    get: function get() {
      return _Radio.default;
    }
  });

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22414,[14305,22417]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var Radio = function (_Component) {
    (0, _inherits2.default)(Radio, _Component);

    function Radio(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Radio);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');

      _this.changeStatus = function (scaleTo, opacityTo) {
        var _this$state = _this.state,
            scale = _this$state.scale,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.spring(scale, {
          toValue: scaleTo,
          bounciness: 15,
          speed: 9
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 200
        })]).start();
      };

      _this.changeRadioCheck = function () {
        var _this$props = _this.props,
            changeCheck = _this$props.changeCheck,
            id = _this$props.id;
        changeCheck(id);
      };

      (0, _reportDecorator.referenceReport)('Radio');
      var isChecked = props.isChecked;
      var circleOpacity = isChecked ? 1 : 0;
      var circleScale = isChecked ? 0.5 : 0.4;
      _this.state = {
        scale: new _reactNative.Animated.Value(circleScale),
        opacity: new _reactNative.Animated.Value(circleOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(Radio, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isChecked = nextProps.isChecked;

        if (isChecked) {
          this.changeStatus(0.5, 1);
        } else {
          this.changeStatus(0.4, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2;

        var colorScheme = this.context.colorScheme;
        var _this$props2 = this.props,
            smallCircleBg = _this$props2.smallCircleBg,
            isChecked = _this$props2.isChecked,
            bigCircleStyle = _this$props2.bigCircleStyle,
            disabled = _this$props2.disabled,
            accessible = _this$props2.accessible,
            accessibilityRole = _this$props2.accessibilityRole,
            label = _this$props2.label,
            accessibilityLabel = _this$props2.accessibilityLabel,
            accessibilityHint = _this$props2.accessibilityHint,
            accessibilityState = _this$props2.accessibilityState;
        var checkedBigCircleStyle = {
          borderColorChecked: '#32BAC0',
          backgroundColorChecked: '#32BAC0',
          borderColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor,
          backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor
        };

        if (this.props.checkedBigCircleStyle) {
          checkedBigCircleStyle = this.props.checkedBigCircleStyle;
        }

        var _checkedBigCircleStyl = checkedBigCircleStyle,
            borderColorChecked = _checkedBigCircleStyl.borderColorChecked,
            backgroundColorChecked = _checkedBigCircleStyl.backgroundColorChecked,
            borderColor = _checkedBigCircleStyl.borderColor,
            backgroundColor = _checkedBigCircleStyl.backgroundColor;
        var _this$state2 = this.state,
            scale = _this$state2.scale,
            opacity = _this$state2.opacity;
        var colorSmallCircleBg = smallCircleBg || this.colorSwitchCircle.color(colorScheme);
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.changeRadioCheck,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: accessibilityRole || _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: accessibilityLabel || label,
          accessibilityState: accessibilityState || {
            disabled: !!disabled,
            checked: !!isChecked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: [styles.btn, bigCircleStyle, {
            borderColor: isChecked ? borderColorChecked : borderColor,
            backgroundColor: isChecked ? backgroundColorChecked : backgroundColor,
            opacity: disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.smallCircle, bigCircleStyle, {
            borderWidth: 0,
            transform: [{
              scale: scale
            }],
            opacity: opacity,
            backgroundColor: colorSmallCircleBg
          }]
        })));
      }
    }]);
    return Radio;
  }(_react.Component);

  Radio.contextType = _configProvider.ConfigContext;
  Radio.defaultProps = {
    bigCircleStyle: {},
    smallCircleBg: '#FFFFFF',
    isChecked: false,
    changeCheck: function changeCheck() {},
    id: -1,
    disabled: false
  };
  Radio.propTypes = (0, _objectSpread2.default)({
    bigCircleStyle: _propTypes.default.object,
    checkedBigCircleStyle: _propTypes.default.object,
    smallCircleBg: _propTypes.default.string,
    isChecked: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    changeCheck: _propTypes.default.func,
    id: _propTypes.default.number
  }, _accessibilityHelper.AccessibilityPropTypes);

  var styles = _reactNative.StyleSheet.create({
    btn: {
      justifyContent: 'center',
      alignItems: 'center',
      borderStyle: 'solid',
      borderWidth: 0,
      borderRadius: 11,
      width: 22,
      height: 22
    },
    smallCircle: {
      borderRadius: 11,
      width: 22,
      height: 22
    }
  });

  var _default = Radio;
  exports.default = _default;
},22417,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22423,22426,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getAccessibilityConfig = getAccessibilityConfig;
  exports.AccessibilityPropTypes = exports.AccessibilityRoles = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var isAndroid = _reactNative.Platform.OS === 'android';
  var roles = ['none', 'button', 'link', 'search', 'image', 'keyboardkey', 'text', 'adjustable', 'imagebutton', 'header', 'summary', 'alert', 'checkbox', 'combobox', 'menu', 'menubar', 'menuitem', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'spinbutton', 'switch', 'tab', 'tablist', 'timer', 'toolbar'];
  var AccessibilityRoles = roles.reduce(function (total, role) {
    (0, _extends3.default)(total, (0, _defineProperty2.default)({}, role, role));
    return total;
  }, {});
  exports.AccessibilityRoles = AccessibilityRoles;
  var AccessibilityPropTypes = {
    accessible: _propTypes.default.bool,
    accessibilityRole: _propTypes.default.oneOf(roles),
    accessibilityLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityHint: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    accessibilityState: _propTypes.default.shape({
      disabled: _propTypes.default.bool,
      selected: _propTypes.default.bool,
      checked: _propTypes.default.bool,
      busy: _propTypes.default.bool,
      expanded: _propTypes.default.bool
    }),
    accessibilityValue: _propTypes.default.shape({
      min: _propTypes.default.number,
      max: _propTypes.default.number,
      now: _propTypes.default.number,
      text: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])
    })
  };
  exports.AccessibilityPropTypes = AccessibilityPropTypes;
  var elementWithoutText = ['image', 'imagebutton'];

  function getAccessibilityConfig(accessibilityConfig) {
    var accessible = accessibilityConfig.accessible,
        accessibilityRole = accessibilityConfig.accessibilityRole,
        accessibilityLabel = accessibilityConfig.accessibilityLabel,
        accessibilityHint = accessibilityConfig.accessibilityHint,
        accessibilityState = accessibilityConfig.accessibilityState,
        accessibilityValue = accessibilityConfig.accessibilityValue;
    var isAccessible = accessible !== false;
    var accessibility = {
      accessible: isAccessible
    };

    if (!accessibility.accessible) {
      if (isAndroid) {
        accessibility.focusable = false;
      }

      return accessibility;
    }

    accessibility.accessibilityRole = String(accessibilityRole || AccessibilityRoles.none);

    if (accessibilityLabel !== undefined && accessibilityLabel !== null) {
      accessibility.accessibilityLabel = String(accessibilityLabel);
    } else if (elementWithoutText.includes(accessibility.accessibilityRole)) {
      accessibility.accessibilityLabel = ' ';
    }

    if (accessibilityHint !== undefined && accessibilityHint !== null) {
      accessibility.accessibilityHint = String(accessibilityHint);
    }

    if (accessibilityState && typeof accessibilityState === 'object') {
      accessibility.accessibilityState = accessibilityState;
    }

    if (accessibilityValue && typeof accessibilityValue === 'object') {
      accessibility.accessibilityValue = accessibilityValue;
    }

    return accessibility;
  }
},22420,[14305,14317,14344,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.withReport = withReport;
  exports.referenceReport = undefined;

  var _construct2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;

  function _doReport(moduleName, methodName, success, cost) {
    var errcode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 200404;

    if (!MIOTPackage) {
      return;
    }

    var reportInfo = {
      module: moduleName,
      method: methodName,
      success: success,
      cost: cost,
      tip: '6.0.0.0.114',
      errcode: errcode
    };
    MIOTPackage.apiReport(reportInfo);
  }

  var referenceReport = function referenceReport(moduleName) {
    var methodName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'constructor';
    {
      _doReport(moduleName, methodName, true, 0);
    }
  };

  exports.referenceReport = referenceReport;

  function withReport(target, moduleName) {
    if (MIOTPackage && typeof Proxy === 'function') {
      return new Proxy(target, {
        construct: function construct(target, args) {
          referenceReport(moduleName);
          return (0, _construct2.default)(target, (0, _toConsumableArray2.default)(args));
        }
      });
    } else {
      return target;
    }
  }
},22423,[14305,14464,14359,10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ConfigProvider = exports.ConfigConsumer = exports.ConfigContext = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _themes = _$$_REQUIRE(_dependencyMap[9]);

  var _mihome = _$$_REQUIRE(_dependencyMap[10]);

  var ConfigContext = (0, _react.createContext)({
    language: _mihome.language,
    theme: (0, _themes.getTheme)('default', _mihome.currentDarkMode),
    colorScheme: _mihome.currentDarkMode,
    environment: 'mihome',
    media: {
      screenType: 'phone'
    }
  });
  exports.ConfigContext = ConfigContext;
  var ConfigConsumer = ConfigContext.Consumer;
  exports.ConfigConsumer = ConfigConsumer;

  var ConfigProvider = function (_PureComponent) {
    (0, _inherits2.default)(ConfigProvider, _PureComponent);

    function ConfigProvider() {
      (0, _classCallCheck2.default)(this, ConfigProvider);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConfigProvider).apply(this, arguments));
    }

    (0, _createClass2.default)(ConfigProvider, [{
      key: "render",
      value: function render() {
        var config = {
          language: this.props.language || 'zh',
          theme: (0, _themes.getTheme)('default', this.props.colorScheme || 'light'),
          colorScheme: this.props.colorScheme || 'light',
          environment: this.props.environment || 'native',
          media: (0, _objectSpread2.default)({
            screenType: 'phone'
          }, this.props.media)
        };
        return _react.default.createElement(ConfigContext.Provider, {
          value: (0, _objectSpread2.default)({}, config)
        }, this.props.children);
      }
    }]);
    return ConfigProvider;
  }(_react.PureComponent);

  exports.ConfigProvider = ConfigProvider;
},22426,[14308,14305,14314,14320,14323,14371,14377,14386,10297,22429,22444]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getTheme = getTheme;
  Object.defineProperty(exports, "ITheme", {
    enumerable: true,
    get: function get() {
      return _ITheme.default;
    }
  });

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ITheme = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var themes = {
    default: _default.default
  };

  function getTheme() {
    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';
    var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'light';
    var result = {};
    Object.entries(themes[theme]).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];

      result[key] = value[colorScheme];
    });
    return result;
  }
},22429,[14305,14347,22432,22441]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var defaultTheme = {
    colorPrimary: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorPrimaryFocus: new _DynamicColor.default('#25a9af', '#158b90'),
    colorPrimaryDisabled: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(37,169,175, 0.3)'),
    colorWarn: new _DynamicColor.default('#f43f31', '#d92719'),
    colorWarnFocus: new _DynamicColor.default('#d53c32', '#b62920'),
    colorWarnDisabled: new _DynamicColor.default('rgba(244,63,49,0.3)', '#b62920'),
    colorBlack: new _DynamicColor.default('#000000', '#e6e6e6'),
    colorGrayHeavier: new _DynamicColor.default('#333333', '#cccccc'),
    colorGrayHeavy: new _DynamicColor.default('#4c4c4c', '#b3b3b3'),
    colorGrayNormal: new _DynamicColor.default('#666666', '#999999'),
    colorGrayLight: new _DynamicColor.default('#7f7f7f', '#808080'),
    colorGrayLighter: new _DynamicColor.default('#999999', '#666666'),
    colorWhite: new _DynamicColor.default('#ffffff', '#000000'),
    colorWhite2: new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.9)'),
    colorBlack1: new _DynamicColor.default('#000000', '#ffffff'),
    colorToast: new _DynamicColor.default('#4c4c4c', 'rgba(255,255,255,0.7)'),
    colorPlaceHolder: new _DynamicColor.default('rgba(0,0,0,0.3)', 'rgba(255,255,255,0.9)'),
    colorBtnGreenNor: new _DynamicColor.default('#32bac0', '#25a9af'),
    colorBtnGreenPres: new _DynamicColor.default('#25a9af', '#158b90'),
    colorBtnGrayNor: new _DynamicColor.default('#f5f5f5', '#333333'),
    colorBtnGrayPres: new _DynamicColor.default('#e2e2e2', '#666666'),
    colorBtnGreenOpaNor: new _DynamicColor.default('rgba(50,186,192,0.1)', 'rgba(37,169,175,0.20)'),
    colorBtnGreenOpaPres: new _DynamicColor.default('rgba(50,186,192,0.3)', 'rgba(50,186,192,0.3)'),
    colorBackground: new _DynamicColor.default('#f7f7f7', '#000000'),
    colorOverLayerBlack: new _DynamicColor.default('rgba(0,0,0,0.4)', 'rgba(0,0,0,0.6)'),
    colorSeparator: new _DynamicColor.default('#e5e5e5', '#262626'),
    colorForeground: new _DynamicColor.default('#ffffff', '#1a1a1a'),
    colorSlideLeft: new _DynamicColor.default('#D9D9D9', 'rgba(255,255,255,0.08)'),
    colorInputBackground: new _DynamicColor.default('#F5F5F5', 'rgba(255,255,255,0.10)'),
    colorInputBorder: new _DynamicColor.default('rgba(244,63,49,0.2)', 'rgba(217,39,25,0.2)'),
    colorGearBackground: new _DynamicColor.default('#EDEEEF', 'rgba(255,255,255,0.20)'),
    iconViewPress: new _DynamicColor.default('#B0B6B8', '#52595B'),
    iconViewNor: new _DynamicColor.default('#F7F7F7', 'rgba(255,255,255,0.20)'),
    listUnderlayColor: new _DynamicColor.default('#ECECEC', 'rgba(255,255,255,0.20)'),
    barChartItem: new _DynamicColor.default('#FFE4BD', 'rgba(230,142,16,0.3)'),
    barChartItemSelected: new _DynamicColor.default('#FFA626', '#E68E10')
  };
  var _default = defaultTheme;
  exports.default = _default;
},22432,[14305,22435]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _check = _$$_REQUIRE(_dependencyMap[3]);

  var DynamicColor = function () {
    function DynamicColor(light, dark) {
      (0, _classCallCheck2.default)(this, DynamicColor);

      if (_check.isMiHome) {
        this.light = "xm" + light;
        this.dark = "xm" + dark;
      } else {
        this.light = light;
        this.dark = dark;
      }
    }

    (0, _createClass2.default)(DynamicColor, [{
      key: "color",
      value: function color() {
        var colorScheme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';
        return colorScheme === 'light' ? this.light : this.dark;
      }
    }]);
    return DynamicColor;
  }();

  var _default = DynamicColor;
  exports.default = _default;
},22435,[14305,14320,14323,22438]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.isAndroid = exports.isIOS = exports.isMiHome = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTPackage = _reactNative.NativeModules.MIOTPackage;
  var isMiHome = !!MIOTPackage;
  exports.isMiHome = isMiHome;
  var isIOS = _reactNative.Platform.OS === 'ios';
  exports.isIOS = isIOS;
  var isAndroid = _reactNative.Platform.OS === 'android';
  exports.isAndroid = isAndroid;
},22438,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;
},22441,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.language = exports.currentDarkMode = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTHost = _reactNative.Platform.OS === 'ios' ? _reactNative.NativeModules.MHPluginSDK : _reactNative.NativeModules.MIOTHost;
  var MIOTService = _reactNative.NativeModules.MIOTService;
  var LanguageNameMap = _reactNative.Platform.OS === 'ios' ? {
    zh: ['zh_CN', 'zh-CN', 'zh-Hans'],
    zh_tw: ['zh_TW', 'zh-TW', 'zh-Hant'],
    zh_hk: ['zh_HK', 'zh-HK', 'zh-Hant-HK'],
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /^id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  } : {
    zh: ['zh', 'zh_CN'],
    zh_tw: 'zh_TW',
    zh_hk: 'zh_HK',
    zh_bo: /bo($|_)/,
    en: /^en($|_)/,
    es: /^es($|_)/,
    ko: /^ko($|_)/,
    ru: /^ru($|_)/,
    it: /^it($|_)/,
    fr: /^fr($|_)/,
    de: /^de($|_)/,
    id: /(^|_)id($|_)/,
    pl: /^pl($|_)/,
    vi: /^vi($|_)/,
    ja: /^ja($|_)/,
    th: /^th($|_)/,
    pt: /^pt($|_)/,
    nl: /^nl($|_)/,
    ar: /^ar($|_)/,
    tr: /^tr($|_)/
  };

  function getStandardLanguageName(name, nameMap) {
    if (!name) return 'en';

    var std = function std(n) {
      return n.toLowerCase().replace(/-/g, '_');
    };

    name = std(name);
    var ns = Object.keys(nameMap);

    for (var i = 0; i < ns.length; i++) {
      var lang = ns[i];
      var nm = nameMap[lang];
      if (!nm) continue;

      if (Array.isArray(nm)) {
        for (var j = 0; j < nm.length; j++) {
          if (typeof nm[j].test === 'function') {
            if (nm[j].test(name)) return lang;
          } else if (name == std(nm[j])) {
            return lang;
          }
        }
      } else if (typeof nm === 'function') {
        if (nm(name)) return lang;
      } else if (typeof nm.test === 'function') {
        if (nm.test(name)) return lang;
      } else if (name == std(nm)) {
        return lang;
      }
    }

    return 'en';
  }

  function getSystemLanguage() {
    return getStandardLanguageName((MIOTHost == null ? undefined : MIOTHost.language) || 'en', LanguageNameMap);
  }

  var currentDarkMode = (MIOTService == null ? undefined : MIOTService.currentDarkMode) || 'light';
  exports.currentDarkMode = currentDarkMode;
  var language = getSystemLanguage();
  exports.language = language;
},22444,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Switch", {
    enumerable: true,
    get: function get() {
      return _Switch.default;
    }
  });

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22447,[14305,22450]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var OFF_COLOR = '#f0f0f0';
  var BORDER_COLOR = 'rgba(0,0,0,0.1)';
  var BACK_WIDTH = 44;
  var BACK_HEIGHT = 24;
  var BORDER_WIDTH = _reactNative.StyleSheet.hairlineWidth;
  var ratio = 4;
  var minMargin = 2.5;

  var Switch = function (_React$Component) {
    (0, _inherits2.default)(Switch, _React$Component);

    function Switch(props) {
      var _this;

      (0, _classCallCheck2.default)(this, Switch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).call(this, props));
      _this.colorSwitchCircle = new _DynamicColor.default('#ffffff', '#ebebeb');
      _this.colorSwitchOff = new _DynamicColor.default('#E5E5E5', '#333333');
      (0, _reportDecorator.referenceReport)('Switch');
      _this.state = {
        value: _this.props.value
      };
      var _this$props$style = _this.props.style,
          width = _this$props$style.width,
          height = _this$props$style.height;
      var backWidth = width || BACK_WIDTH;
      var backHeight = height || BACK_HEIGHT;
      var margin = backHeight / ratio < minMargin ? minMargin : Math.round(backHeight / ratio);
      var circleSize = backHeight / 2;
      _this.offsetXMax = backWidth - backHeight;
      var toValue = _this.props.value ? _this.offsetXMax : 0;
      _this.offsetX = new _reactNative.Animated.Value(toValue);
      _this.backStyle = {
        width: backWidth,
        height: backHeight,
        borderRadius: backHeight / 2
      };
      _this.circleStyle = {
        margin: margin,
        width: circleSize,
        height: circleSize,
        borderRadius: circleSize / 2
      };
      return _this;
    }

    (0, _createClass2.default)(Switch, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.value !== this.state.value) {
          this.setState({
            value: newProps.value
          }, this.animated);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme;
        var onTintColor = this.props.onTintColor ? this.props.onTintColor : theme.colorPrimary;
        var tintColor = this.props.tintColor ? this.props.tintColor : this.colorSwitchOff.color(colorScheme);
        var backgroundColor = this.state.value ? onTintColor : tintColor;
        var opacity = this.props.disabled ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            opacity: opacity
          }]
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [styles.back, this.backStyle, {
            backgroundColor: backgroundColor
          }],
          disabled: this.props.disabled,
          activeOpacity: 0.8,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: this.props.accessibilityRole || _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityState: this.props.accessibilityState || {
            disabled: this.props.disabled,
            checked: !!this.state.value
          }
        }))), this.context.colorScheme === 'dark' ? _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        }) : _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.circle, this.circleStyle, {
            backgroundColor: this.colorSwitchCircle.color(colorScheme),
            transform: [{
              translateX: this.offsetX
            }]
          }]
        })));
      }
    }, {
      key: "animated",
      value: function animated() {
        var toValue = this.state.value ? this.offsetXMax : 0;

        _reactNative.Animated.spring(this.offsetX, {
          toValue: toValue,
          bounciness: 9,
          speed: 9
        }).start();
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var _this3 = this;

        var value = !this.state.value;
        this.setState({
          value: value
        }, function () {
          _this3.animated();

          if (typeof _this3.props.onValueChange === 'function') {
            _this3.props.onValueChange(value);
          }
        });
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.animated();
      }
    }]);
    return Switch;
  }(_react.default.Component);

  Switch.contextType = _configProvider.ConfigContext;
  Switch.propTypes = (0, _objectSpread2.default)({
    value: _propTypes.default.bool.isRequired,
    style: _propTypes.default.object,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func.isRequired
  }, _accessibilityHelper.AccessibilityPropTypes);
  Switch.defaultProps = {
    value: false,
    style: {},
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    back: {
      justifyContent: 'center'
    },
    circle: {
      position: 'absolute',
      backgroundColor: '#fff'
    }
  });

  var _default = Switch;
  exports.default = _default;
},22450,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22426,22435,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Images", {
    enumerable: true,
    get: function get() {
      return _Images.default;
    }
  });
  Object.defineProperty(exports, "Styles", {
    enumerable: true,
    get: function get() {
      return _Styles.default;
    }
  });

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22453,[14305,22456,22780]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;
  var _default = {
    common: {
      right_arrow: _$$_REQUIRE(_dependencyMap[0]),
      close: _$$_REQUIRE(_dependencyMap[1]),
      mihome: _$$_REQUIRE(_dependencyMap[2]),
      selectIcon: _$$_REQUIRE(_dependencyMap[3]),
      tick: _$$_REQUIRE(_dependencyMap[4]),
      select: _$$_REQUIRE(_dependencyMap[5])
    },
    chart: {
      dark: {
        empty: _$$_REQUIRE(_dependencyMap[6])
      },
      light: {
        empty: _$$_REQUIRE(_dependencyMap[7])
      }
    },
    navigation: {
      dot: _$$_REQUIRE(_dependencyMap[8]),
      dark: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[9]),
          press: _$$_REQUIRE(_dependencyMap[10]),
          disable: _$$_REQUIRE(_dependencyMap[11])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[12]),
          press: _$$_REQUIRE(_dependencyMap[13]),
          disable: _$$_REQUIRE(_dependencyMap[14])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[15]),
          press: _$$_REQUIRE(_dependencyMap[16]),
          disable: _$$_REQUIRE(_dependencyMap[17])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[18]),
          press: _$$_REQUIRE(_dependencyMap[19]),
          disable: _$$_REQUIRE(_dependencyMap[20])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[21]),
          press: _$$_REQUIRE(_dependencyMap[22]),
          disable: _$$_REQUIRE(_dependencyMap[23])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[24]),
          press: _$$_REQUIRE(_dependencyMap[25]),
          disable: _$$_REQUIRE(_dependencyMap[26])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[27]),
          press: _$$_REQUIRE(_dependencyMap[28]),
          disable: _$$_REQUIRE(_dependencyMap[29])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[30]),
          press: _$$_REQUIRE(_dependencyMap[31]),
          disable: _$$_REQUIRE(_dependencyMap[32])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[33]),
          press: _$$_REQUIRE(_dependencyMap[34]),
          disable: _$$_REQUIRE(_dependencyMap[35])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[36]),
          press: _$$_REQUIRE(_dependencyMap[37]),
          disable: _$$_REQUIRE(_dependencyMap[38])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[39]),
          press: _$$_REQUIRE(_dependencyMap[40]),
          disable: _$$_REQUIRE(_dependencyMap[41])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[42]),
          press: _$$_REQUIRE(_dependencyMap[43]),
          disable: _$$_REQUIRE(_dependencyMap[44])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[45]),
          press: _$$_REQUIRE(_dependencyMap[46]),
          disable: _$$_REQUIRE(_dependencyMap[47])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[48]),
          press: _$$_REQUIRE(_dependencyMap[49]),
          disable: _$$_REQUIRE(_dependencyMap[50])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[51]),
          press: _$$_REQUIRE(_dependencyMap[52]),
          disable: _$$_REQUIRE(_dependencyMap[53])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[54]),
          press: _$$_REQUIRE(_dependencyMap[55]),
          disable: _$$_REQUIRE(_dependencyMap[56])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[57]),
          press: _$$_REQUIRE(_dependencyMap[58]),
          disable: _$$_REQUIRE(_dependencyMap[59])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[60]),
          press: _$$_REQUIRE(_dependencyMap[61]),
          disable: _$$_REQUIRE(_dependencyMap[62])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[63]),
          press: _$$_REQUIRE(_dependencyMap[64]),
          disable: _$$_REQUIRE(_dependencyMap[65])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[66]),
          press: _$$_REQUIRE(_dependencyMap[67]),
          disable: _$$_REQUIRE(_dependencyMap[68])
        }
      },
      light: {
        add: {
          normal: _$$_REQUIRE(_dependencyMap[69]),
          press: _$$_REQUIRE(_dependencyMap[70]),
          disable: _$$_REQUIRE(_dependencyMap[71])
        },
        back: {
          normal: _$$_REQUIRE(_dependencyMap[72]),
          press: _$$_REQUIRE(_dependencyMap[73]),
          disable: _$$_REQUIRE(_dependencyMap[74])
        },
        close: {
          normal: _$$_REQUIRE(_dependencyMap[75]),
          press: _$$_REQUIRE(_dependencyMap[76]),
          disable: _$$_REQUIRE(_dependencyMap[77])
        },
        collect: {
          normal: _$$_REQUIRE(_dependencyMap[78]),
          press: _$$_REQUIRE(_dependencyMap[79]),
          disable: _$$_REQUIRE(_dependencyMap[80])
        },
        complete: {
          normal: _$$_REQUIRE(_dependencyMap[81]),
          press: _$$_REQUIRE(_dependencyMap[82]),
          disable: _$$_REQUIRE(_dependencyMap[83])
        },
        delete: {
          normal: _$$_REQUIRE(_dependencyMap[84]),
          press: _$$_REQUIRE(_dependencyMap[85]),
          disable: _$$_REQUIRE(_dependencyMap[86])
        },
        detail: {
          normal: _$$_REQUIRE(_dependencyMap[87]),
          press: _$$_REQUIRE(_dependencyMap[88]),
          disable: _$$_REQUIRE(_dependencyMap[89])
        },
        more: {
          normal: _$$_REQUIRE(_dependencyMap[90]),
          press: _$$_REQUIRE(_dependencyMap[91]),
          disable: _$$_REQUIRE(_dependencyMap[92])
        },
        next: {
          normal: _$$_REQUIRE(_dependencyMap[93]),
          press: _$$_REQUIRE(_dependencyMap[94]),
          disable: _$$_REQUIRE(_dependencyMap[95])
        },
        profile: {
          normal: _$$_REQUIRE(_dependencyMap[96]),
          press: _$$_REQUIRE(_dependencyMap[97]),
          disable: _$$_REQUIRE(_dependencyMap[98])
        },
        qr: {
          normal: _$$_REQUIRE(_dependencyMap[99]),
          press: _$$_REQUIRE(_dependencyMap[100]),
          disable: _$$_REQUIRE(_dependencyMap[101])
        },
        search: {
          normal: _$$_REQUIRE(_dependencyMap[102]),
          press: _$$_REQUIRE(_dependencyMap[103]),
          disable: _$$_REQUIRE(_dependencyMap[104])
        },
        select_all: {
          normal: _$$_REQUIRE(_dependencyMap[105]),
          press: _$$_REQUIRE(_dependencyMap[106]),
          disable: _$$_REQUIRE(_dependencyMap[107])
        },
        selected_all: {
          normal: _$$_REQUIRE(_dependencyMap[108]),
          press: _$$_REQUIRE(_dependencyMap[109]),
          disable: _$$_REQUIRE(_dependencyMap[110])
        },
        setting: {
          normal: _$$_REQUIRE(_dependencyMap[111]),
          press: _$$_REQUIRE(_dependencyMap[112]),
          disable: _$$_REQUIRE(_dependencyMap[113])
        },
        share: {
          normal: _$$_REQUIRE(_dependencyMap[114]),
          press: _$$_REQUIRE(_dependencyMap[115]),
          disable: _$$_REQUIRE(_dependencyMap[116])
        },
        edit: {
          normal: _$$_REQUIRE(_dependencyMap[117]),
          press: _$$_REQUIRE(_dependencyMap[118]),
          disable: _$$_REQUIRE(_dependencyMap[119])
        },
        record: {
          normal: _$$_REQUIRE(_dependencyMap[120]),
          press: _$$_REQUIRE(_dependencyMap[121]),
          disable: _$$_REQUIRE(_dependencyMap[122])
        },
        orientation: {
          normal: _$$_REQUIRE(_dependencyMap[123]),
          press: _$$_REQUIRE(_dependencyMap[124]),
          disable: _$$_REQUIRE(_dependencyMap[125])
        },
        save: {
          normal: _$$_REQUIRE(_dependencyMap[126]),
          press: _$$_REQUIRE(_dependencyMap[127]),
          disable: _$$_REQUIRE(_dependencyMap[128])
        }
      }
    },
    loading: {
      dark: {
        empty: _$$_REQUIRE(_dependencyMap[129])
      },
      light: {
        empty: _$$_REQUIRE(_dependencyMap[130])
      }
    },
    sort: {
      light: {
        normal: _$$_REQUIRE(_dependencyMap[131]),
        press: _$$_REQUIRE(_dependencyMap[132])
      },
      dark: {
        normal: _$$_REQUIRE(_dependencyMap[133]),
        press: _$$_REQUIRE(_dependencyMap[134])
      }
    }
  };
  exports.default = _default;
},22456,[22459,22462,22465,22468,23305,23308,23311,23314,22471,22474,22477,22480,22483,22486,22489,22492,22495,22498,22501,22504,22507,22510,22513,22516,22519,22522,22525,22528,22531,22534,22537,22540,22543,22546,22549,22552,22555,22558,22561,22564,22567,22570,22573,22576,22579,22582,22585,22588,22591,22594,22597,22600,22603,22606,22609,22612,22615,22618,22621,22624,23188,23191,23194,23251,23254,23257,23260,23263,23266,22627,22630,22633,22636,22639,22642,22645,22648,22651,22654,22657,22660,22663,22666,22669,22672,22675,22678,22681,22684,22687,22690,22693,22696,22699,22702,22705,22708,22711,22714,22717,22720,22723,22726,22729,22732,22735,22738,22741,22744,22747,22750,22753,22756,22759,22762,22765,22768,22771,22774,22777,23197,23200,23203,23269,23272,23275,23278,23281,23284,23206,23209,23287,23290,23293,23296]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 24,
    "height": 24,
    "scales": [1, 1.5, 2, 3, 4],
    "hash": "429182adb27a0752e9ed335169b6e7cd",
    "name": "right_arrow",
    "type": "png"
  });
},22459,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 20,
    "height": 20,
    "scales": [2, 3],
    "hash": "513efe08c931e5bdfb2d0fade0a99585",
    "name": "close",
    "type": "png"
  });
},22462,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 170,
    "height": 170,
    "scales": [1],
    "hash": "c749a1206e5e8038ce207871a9d3efdf",
    "name": "mihome",
    "type": "png"
  });
},22465,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 6,
    "height": 10,
    "scales": [2, 3],
    "hash": "0fa399f5d3ff3ccfa6349b4fadce3ec2",
    "name": "select_icon",
    "type": "png"
  });
},22468,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d64f463ebe229908246c9458f507dbf3",
    "name": "dot",
    "type": "png"
  });
},22471,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bd423b230418efeb7f166e7d58ef6ba",
    "name": "add_n_dark",
    "type": "png"
  });
},22474,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "eadfcd6310ce848ab88c395d24515f67",
    "name": "add_p_dark",
    "type": "png"
  });
},22477,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "212ae3dd040f06a3b7275f07bac925ac",
    "name": "add_d_dark",
    "type": "png"
  });
},22480,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d175986353189419a421f22df98236c",
    "name": "back_n_dark",
    "type": "png"
  });
},22483,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "61088f5ae4334497423ed4ba4d0efd57",
    "name": "back_p_dark",
    "type": "png"
  });
},22486,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d71a75220ff84f218dc74b8c9d643d9d",
    "name": "back_d_dark",
    "type": "png"
  });
},22489,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3aa862c6c1a8e0d751e6c0060ec8e936",
    "name": "close_n_dark",
    "type": "png"
  });
},22492,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "67a1d09012ca0bf153eec6d399bdf8cb",
    "name": "close_p_dark",
    "type": "png"
  });
},22495,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "38396687cc2aed9e12a24f0e4d8d6d52",
    "name": "close_d_dark",
    "type": "png"
  });
},22498,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0aa419f7ab32a31ece8cbe06f3df918",
    "name": "collect_n_dark",
    "type": "png"
  });
},22501,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "92d1cf303e84b2f49636c7f1774bb117",
    "name": "collect_p_dark",
    "type": "png"
  });
},22504,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f63b4a7eadbd183ff6f0528a77f85fa9",
    "name": "collect_d_dark",
    "type": "png"
  });
},22507,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0a4bc632ff6618367f4a8268b94539e0",
    "name": "complete_n_dark",
    "type": "png"
  });
},22510,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e1ce6460ed6bea45b04c8408365aeb55",
    "name": "complete_p_dark",
    "type": "png"
  });
},22513,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "aea57b6079a28e34f5cdf64aeefa9d10",
    "name": "complete_d_dark",
    "type": "png"
  });
},22516,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5b4f878534e8df6f1db628336f7942a1",
    "name": "delete_n_dark",
    "type": "png"
  });
},22519,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5fe3bd8bd680430c3c0893cd838509ac",
    "name": "delete_p_dark",
    "type": "png"
  });
},22522,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a62a8690a84ac16c06ddc49e2500035a",
    "name": "delete_d_dark",
    "type": "png"
  });
},22525,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "06d360cd217e890d502905d042d8ab70",
    "name": "detail_n_dark",
    "type": "png"
  });
},22528,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "36adf09873ef8f4cb8e9c3293a073b2c",
    "name": "detail_p_dark",
    "type": "png"
  });
},22531,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a6260dff61235a9308ccae6a43f6326c",
    "name": "detail_d_dark",
    "type": "png"
  });
},22534,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "01768feec61a58fedc099e1bce9944a1",
    "name": "more_n_dark",
    "type": "png"
  });
},22537,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "818473fe7ed624d1ef8a94b71fb44f85",
    "name": "more_p_dark",
    "type": "png"
  });
},22540,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bddb75affe70f164ce1e438f4409f17b",
    "name": "more_d_dark",
    "type": "png"
  });
},22543,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ec7c38f272c0f55f23be22336145074",
    "name": "next_n_dark",
    "type": "png"
  });
},22546,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f0d7968b2b57b3029789298b23cfc17f",
    "name": "next_p_dark",
    "type": "png"
  });
},22549,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "46c88f2e3560d5b2d85fe2577eda345b",
    "name": "next_d_dark",
    "type": "png"
  });
},22552,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3fc8a34d07b39ab0975eeea5513b8c29",
    "name": "profile_n_dark",
    "type": "png"
  });
},22555,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4e4af3425de30ca74529cd83a5fa8cc4",
    "name": "profile_p_dark",
    "type": "png"
  });
},22558,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1e146ef52c0cd2c2b1296453ae202c3b",
    "name": "profile_d_dark",
    "type": "png"
  });
},22561,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "43558cf6431c2a80d0996e83087ed74a",
    "name": "qr_n_dark",
    "type": "png"
  });
},22564,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ca67ebbf39a108d2051be0f43022b309",
    "name": "qr_p_dark",
    "type": "png"
  });
},22567,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bf1c3f93c8df793ac79b6fb7ae12b368",
    "name": "qr_d_dark",
    "type": "png"
  });
},22570,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ef8d45b7107fa1997a340a6cde17d846",
    "name": "search_n_dark",
    "type": "png"
  });
},22573,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9f3cbff8a37a52b57f9630e779cbbf50",
    "name": "search_p_dark",
    "type": "png"
  });
},22576,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9bc47c03cb46538e397812dbe9130779",
    "name": "search_d_dark",
    "type": "png"
  });
},22579,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ec06b11be77df9693ec1e8e5eee2584a",
    "name": "select_all_n_dark",
    "type": "png"
  });
},22582,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0d6d205ce85797276f1e56d9f3a69036",
    "name": "select_all_p_dark",
    "type": "png"
  });
},22585,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7f244b41795961799676b2bb03572b",
    "name": "select_all_d_dark",
    "type": "png"
  });
},22588,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "feb1e39bc2f9f74ffa3b5e43dd2576d0",
    "name": "selected_all_n_dark",
    "type": "png"
  });
},22591,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1edf29ddf9b1bd821cb81f0545ae4213",
    "name": "selected_all_p_dark",
    "type": "png"
  });
},22594,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f332bb6a35b954c4b5a5a156b5a318cb",
    "name": "selected_all_d_dark",
    "type": "png"
  });
},22597,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea3bcaa2adbb2e5c69d294c1a785f1ff",
    "name": "setting_n_dark",
    "type": "png"
  });
},22600,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0f4e2e5b336a3e6df2ee61b442d525f8",
    "name": "setting_p_dark",
    "type": "png"
  });
},22603,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "399e720ce64e830a32e655050ca9650c",
    "name": "setting_d_dark",
    "type": "png"
  });
},22606,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ac348a4120eb9a807f6f26de2d54ed6c",
    "name": "share_n_dark",
    "type": "png"
  });
},22609,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "48ccaaa711bb0765271a227810c0b2a5",
    "name": "share_p_dark",
    "type": "png"
  });
},22612,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "af7d9b9276788b5babab6dee0010718a",
    "name": "share_d_dark",
    "type": "png"
  });
},22615,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d0600233b9840af9fb9d2c886a2c1318",
    "name": "edit_n_dark",
    "type": "png"
  });
},22618,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dfed43b3fb99a8a6f29255d2fcb85595",
    "name": "edit_p_dark",
    "type": "png"
  });
},22621,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "be2507d558cd74c7be64aa2d95701cd1",
    "name": "edit_d_dark",
    "type": "png"
  });
},22624,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8bafdbd4b0404adf0853ac00532b1e79",
    "name": "add_n_light",
    "type": "png"
  });
},22627,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0164cec94f8ec71e4e9adb97fc870ab3",
    "name": "add_p_light",
    "type": "png"
  });
},22630,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "0ceb7837a4c9b50b2cc41ae511436394",
    "name": "add_d_light",
    "type": "png"
  });
},22633,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d35c428ca5b361dee0fc11c6ed857d85",
    "name": "back_n_light",
    "type": "png"
  });
},22636,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "40ac17d325f10a6d829ad1555800ce72",
    "name": "back_p_light",
    "type": "png"
  });
},22639,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "65d7cc395c9e1964da242475a5cf5463",
    "name": "back_d_light",
    "type": "png"
  });
},22642,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "ea16ea01af17c8f1d5a1a75cfa0fa4da",
    "name": "close_n_light",
    "type": "png"
  });
},22645,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2],
    "hash": "120e386ff9e57f96b116f4a74926eec6",
    "name": "close_p_light",
    "type": "png"
  });
},22648,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2b639ed6f188a166393c35cbebba5a98",
    "name": "close_d_light",
    "type": "png"
  });
},22651,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dbb118618abcff775dce42a48115207d",
    "name": "collect_n_light",
    "type": "png"
  });
},22654,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c191261b7355631ee834af49dc32685f",
    "name": "collect_p_light",
    "type": "png"
  });
},22657,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "18f9db9e4605e20d0fd44ca7d0f23fbd",
    "name": "collect_d_light",
    "type": "png"
  });
},22660,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1bd45768499eff55cc3d05773043ad9",
    "name": "complete_n_light",
    "type": "png"
  });
},22663,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "4eb8ac68188682e0cd6e1c8eeada1caf",
    "name": "complete_p_light",
    "type": "png"
  });
},22666,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7da108cda8573079daeea58daa1f9804",
    "name": "complete_d_light",
    "type": "png"
  });
},22669,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "276b44f481b127e60909bef6af54bec1",
    "name": "delete_n_light",
    "type": "png"
  });
},22672,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8506cca89f55c8cc2eed16cc74f56943",
    "name": "delete_p_light",
    "type": "png"
  });
},22675,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9da9b53b85d9dceca54de2cac5418b19",
    "name": "delete_d_light",
    "type": "png"
  });
},22678,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d1829d99bed03923f1b8f1ebf0010130",
    "name": "detail_n_light",
    "type": "png"
  });
},22681,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d50634fa85b7ae6995b9e3e87d5a4d4d",
    "name": "detail_p_light",
    "type": "png"
  });
},22684,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "64fe4c41e9f9e03cb43bdf9ef74c3b1d",
    "name": "detail_d_light",
    "type": "png"
  });
},22687,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7d796b935e6bc3314cb02944228d96ba",
    "name": "more_n_light",
    "type": "png"
  });
},22690,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f72680ce6545ce33ea92cd05d6d0b781",
    "name": "more_p_light",
    "type": "png"
  });
},22693,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b1555c8200e8033bd520e486c62d50f6",
    "name": "more_d_light",
    "type": "png"
  });
},22696,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "b06e919c1aabe23c6b6204ed4c6be2f2",
    "name": "next_n_light",
    "type": "png"
  });
},22699,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d9e2fbca34f818935153d5cd14bfe308",
    "name": "next_p_light",
    "type": "png"
  });
},22702,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a83f2f4e7a6a06ec0aca2e5d9c2d6425",
    "name": "next_d_light",
    "type": "png"
  });
},22705,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "80df0a9c305f460e686305b20a4121e5",
    "name": "profile_n_light",
    "type": "png"
  });
},22708,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a324d91d85f4ebb75c79d149113d2986",
    "name": "profile_p_light",
    "type": "png"
  });
},22711,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a27828fbcbc4f32763f5b16003e77fda",
    "name": "profile_d_light",
    "type": "png"
  });
},22714,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bc698fecd6edf342a8abd9935a26c54f",
    "name": "qr_n_light",
    "type": "png"
  });
},22717,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7148f22f62b47295594876ac7e59b627",
    "name": "qr_p_light",
    "type": "png"
  });
},22720,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1d5e61ff437c1fed89412bb1414b0e12",
    "name": "qr_d_light",
    "type": "png"
  });
},22723,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f51992416b82a3978180624bbcd3aa6b",
    "name": "search_n_light",
    "type": "png"
  });
},22726,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7343717d2172db8e7e809f333304bf18",
    "name": "search_p_light",
    "type": "png"
  });
},22729,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8ca380593445ff388dc5d46cc2f9372b",
    "name": "search_d_light",
    "type": "png"
  });
},22732,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9df30e16d642ba2f9208fe5fb6912941",
    "name": "select_all_n_light",
    "type": "png"
  });
},22735,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e07a585ed15f6298ceda6c57d112af5a",
    "name": "select_all_p_light",
    "type": "png"
  });
},22738,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "79a9f622c8a14ca78e1c22fbb7552f93",
    "name": "select_all_d_light",
    "type": "png"
  });
},22741,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "31ceea4acc13d14db8013f4e9f285a5c",
    "name": "selected_all_n_light",
    "type": "png"
  });
},22744,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "6e5cd5f673df012ba88b127147b7fcf8",
    "name": "selected_all_p_light",
    "type": "png"
  });
},22747,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efc658ab288e2a7a6812d5043c23101b",
    "name": "selected_all_d_light",
    "type": "png"
  });
},22750,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "84f010399151dba78c3632943d118f51",
    "name": "setting_n_light",
    "type": "png"
  });
},22753,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "3443dad864861e535b7069114e900875",
    "name": "setting_p_light",
    "type": "png"
  });
},22756,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "e8c9e0ccf400909f5fafc5876055be7c",
    "name": "setting_d_light",
    "type": "png"
  });
},22759,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "d169ce4c6a497c942dc9e79158cb31d0",
    "name": "share_n_light",
    "type": "png"
  });
},22762,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5267a30047ef07ac0f81f0d2c41eb9d4",
    "name": "share_p_light",
    "type": "png"
  });
},22765,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "2bbd5837d46a53fa4cfd901ff339721f",
    "name": "share_d_light",
    "type": "png"
  });
},22768,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "20eeed0f6e9ec17338bd85b45f839d5e",
    "name": "edit_n_light",
    "type": "png"
  });
},22771,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "bcf1344a655071e586f35b03c192b126",
    "name": "edit_p_light",
    "type": "png"
  });
},22774,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7ba5916e8c4ce832feb18527d230fed6",
    "name": "edit_d_light",
    "type": "png"
  });
},22777,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var PADDING = 24;
  var SEPARATOR_HEIGHT = _reactNative.StyleSheet.hairlineWidth;
  var HAIRLINE_COLOR = 'rgba(0,0,0,0.15)';
  var MODAL_MARGIN = 0;
  var MODAL_WIDTH = width - 0;
  var _default = {
    MODAL_MARGIN: MODAL_MARGIN,
    common: {
      padding: PADDING,
      MHGreen: '#32BAC0',
      underlayColor: 'rgba(0,0,0,0.05)',
      hairlineColor: HAIRLINE_COLOR,
      backgroundColor: '#f7f7f7',
      separatorHeight: SEPARATOR_HEIGHT,
      title: {
        fontSize: 16,
        lineHeight: 20,
        color: '#000'
      },
      subtitle: {
        fontSize: 13,
        color: 'rgba(0,0,0,0.6)'
      },
      separator: {
        height: SEPARATOR_HEIGHT,
        backgroundColor: HAIRLINE_COLOR
      }
    },
    dialog: {
      background: {
        flex: 1,
        backgroundColor: 'rgba(0,0,0,0.4)'
      },
      modal: {
        position: 'absolute',
        bottom: 0,
        marginHorizontal: MODAL_MARGIN,
        width: MODAL_WIDTH,
        borderTopEndRadius: 20,
        borderTopStartRadius: 20,
        paddingBottom: 30,
        backgroundColor: '#fff'
      },
      padModal: {
        borderRadius: 20,
        bottom: null,
        width: MODAL_WIDTH * 0.75,
        position: 'absolute',
        paddingBottom: 30,
        backgroundColor: '#fff',
        marginHorizontal: MODAL_MARGIN
      },
      title: {
        titleHeightThin: 73,
        titleHeightFat: 83
      },
      subtitle: {
        width: MODAL_WIDTH * 0.75,
        textAlign: 'center',
        fontSize: 13,
        color: '#666'
      },
      buttons: {
        height: 46,
        flexDirection: 'row',
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      button: {
        flex: 1,
        backgroundColor: 'transparent',
        justifyContent: 'center',
        alignItems: 'center',
        marginHorizontal: 27
      },
      buttonText: {
        fontSize: 14,
        lineHeight: 19,
        color: '#666',
        fontFamily: 'D-DINCondensed-Bold'
      }
    }
  };
  exports.default = _default;
},22780,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Checkbox", {
    enumerable: true,
    get: function get() {
      return _Checkbox.default;
    }
  });

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22783,[14305,22786]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var SIZE = 40;
  var UNCHECKED_BORDER_COLOR = 'rgba(0,0,0,0.1)';

  var Checkbox = function (_React$Component) {
    (0, _inherits2.default)(Checkbox, _React$Component);

    function Checkbox(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkbox);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).call(this, props, context));
      _this.UNCHECKED_BACKGROUNDCOLOR = new _DynamicColor.default('#F5F5F5', '#333333');
      _this.backgroundColor = new _reactNative.Animated.Value(0);
      (0, _reportDecorator.referenceReport)('Checkbox');
      _this.state = {
        checked: _this.props.checked
      };
      return _this;
    }

    (0, _createClass2.default)(Checkbox, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.checked !== this.state.checked) {
          this.setState({
            checked: newProps.checked
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var colorScheme = this.context.colorScheme;
        var toValue = this.state.checked ? 1 : 0;
        var backgroundColor = this.backgroundColor.interpolate({
          inputRange: [0, 1],
          outputRange: [this.UNCHECKED_BACKGROUNDCOLOR.color(colorScheme), this.props.checkedColor]
        });
        var _this$props$style = this.props.style,
            borderWidth = _this$props$style.borderWidth,
            borderColor = _this$props$style.borderColor,
            width = _this$props$style.width,
            height = _this$props$style.height;
        var size = Math.min(width || SIZE, height || SIZE);
        var borderStyle = this.state.checked ? {
          borderWidth: 0
        } : {
          borderWidth: borderWidth || 0,
          borderColor: borderColor || UNCHECKED_BORDER_COLOR
        };

        _reactNative.Animated.timing(this.backgroundColor, {
          toValue: toValue,
          duration: 200
        }).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          opacity: this.props.disabled ? 0.3 : 1,
          style: [styles.container, this.props.style, borderStyle, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: function onPress() {
            return _this2._onValueChange();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props, {
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.label,
          accessibilityState: {
            disabled: !!this.props.disabled,
            checked: !!this.state.checked
          }
        }))), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1,
            justifyContent: 'center',
            alignItems: 'center'
          }
        }, _react.default.createElement(_Checkable.default, {
          size: size,
          visible: this.state.checked
        }))));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange() {
        var checked = !this.state.checked;

        if (this.props.onValueChange) {
          this.props.onValueChange(checked);
        }

        this.setState({
          checked: checked
        });
      }
    }]);
    return Checkbox;
  }(_react.default.Component);

  Checkbox.contextType = _configProvider.ConfigContext;
  Checkbox.propTypes = {
    style: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    checked: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    checkedColor: _propTypes.default.string,
    label: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Checkbox.defaultProps = {
    style: {},
    disabled: false,
    checked: false,
    checkedColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: SIZE,
      height: SIZE
    }
  });

  var _default = Checkbox;
  exports.default = _default;
},22786,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22453,22789,22435,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Surface = _reactNative.ART.Surface,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path,
      Transform = _reactNative.ART.Transform;

  var Rectangle = function (_React$Component) {
    (0, _inherits2.default)(Rectangle, _React$Component);

    function Rectangle() {
      (0, _classCallCheck2.default)(this, Rectangle);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rectangle).apply(this, arguments));
    }

    (0, _createClass2.default)(Rectangle, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            width = _this$props.width,
            height = _this$props.height;
        if (width < height) return null;
        var newWidth = width - height;
        var path = Path().moveTo(height / 2 - width / 2, height / 2).arc(0, -height, height / 2).line(newWidth, 0).arc(0, height, height / 2).line(-newWidth, 0).close();
        return _react.default.createElement(Shape, (0, _extends2.default)({
          transform: new Transform().rotate(this.props.degree)
        }, this.props, {
          d: path
        }));
      }
    }]);
    return Rectangle;
  }(_react.default.Component);

  Rectangle.propTypes = {
    width: _propTypes.default.number.isRequired,
    height: _propTypes.default.number.isRequired,
    degree: _propTypes.default.number.isRequired
  };

  var AnimatedRectangle = _reactNative.Animated.createAnimatedComponent(Rectangle);

  var degree = 45;

  var Checkable = function (_React$Component2) {
    (0, _inherits2.default)(Checkable, _React$Component2);

    function Checkable(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Checkable);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkable).call(this, props, context));
      _this.state = {
        animatedWidth: new _reactNative.Animated.Value(0)
      };
      var size = _this.props.size;
      var containerHeight = size;
      var leftWidth = size * 0.43;
      var rightWidth = size - leftWidth;
      var intersectionHeight = Math.floor(size * 2 / 3);
      var leftRectangleWidth = intersectionHeight / 1.5;
      var rightRectangleWidth = size / 1.2;
      var rectangleHeight = size / 10;
      _this.animationConfig = {
        toValue: rightRectangleWidth,
        speed: 9,
        bounciness: 9
      };
      _this.containerHeight = containerHeight;
      _this.leftWidth = leftWidth;
      _this.rightWidth = rightWidth;
      _this.intersectionHeight = intersectionHeight;
      _this.leftRectangleWidth = leftRectangleWidth;
      _this.rightRectangleWidth = rightRectangleWidth;
      _this.rectangleHeight = rectangleHeight;
      return _this;
    }

    (0, _createClass2.default)(Checkable, [{
      key: "render",
      value: function render() {
        if (!this.props.visible) {
          this.preVisible = false;
          return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }));
        }

        if (!this.preVisible) {
          this.state.animatedWidth.setValue(0);

          _reactNative.Animated.spring(this.state.animatedWidth, this.animationConfig).start();
        }

        this.preVisible = true;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: {
            flexDirection: 'row'
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(Surface, {
          width: this.leftWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent'
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: degree,
          fill: "#fff",
          width: this.leftRectangleWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: this.leftWidth
        })), _react.default.createElement(Surface, {
          width: this.rightWidth,
          height: this.containerHeight,
          style: {
            backgroundColor: 'transparent',
            marginLeft: -0.5
          }
        }, _react.default.createElement(AnimatedRectangle, {
          degree: -45,
          fill: "#fff",
          width: this.state.animatedWidth,
          height: this.rectangleHeight,
          y: this.intersectionHeight,
          x: 0
        })));
      }
    }]);
    return Checkable;
  }(_react.default.Component);

  exports.default = Checkable;
  Checkable.propTypes = {
    size: _propTypes.default.number.isRequired,
    visible: _propTypes.default.bool.isRequired
  };
  Checkable.defaultProps = {
    size: 50,
    visible: false
  };
},22789,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ImageButton", {
    enumerable: true,
    get: function get() {
      return _ImageButton.default;
    }
  });

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22792,[14305,22795]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[11]);

  var ImageButton = function (_React$Component) {
    (0, _inherits2.default)(ImageButton, _React$Component);

    function ImageButton(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ImageButton);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageButton).call(this, props));
      (0, _reportDecorator.referenceReport)('ImageButton');
      _this.state = {
        buttonPressed: false
      };
      return _this;
    }

    (0, _createClass2.default)(ImageButton, [{
      key: "_buttonPressIn",
      value: function _buttonPressIn() {
        this.setState({
          buttonPressed: true
        });
      }
    }, {
      key: "_buttonPressOut",
      value: function _buttonPressOut() {
        this.setState({
          buttonPressed: false
        });
      }
    }, {
      key: "_isButtonPressed",
      value: function _isButtonPressed() {
        return this.state.buttonPressed;
      }
    }, {
      key: "render",
      value: function render() {
        var source = this.props.source;

        if (this._isButtonPressed() && this.props.highlightedSource) {
          source = this.props.highlightedSource;
        }

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          disabled: this.props.disabled,
          onPress: this.props.onPress,
          onPressIn: this._buttonPressIn.bind(this),
          onPressOut: this._buttonPressOut.bind(this)
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.imagebutton,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          }
        })), _react.default.createElement(_reactNative.Image, {
          style: this.props.style,
          source: source
        }));
      }
    }]);
    return ImageButton;
  }(_react.default.Component);

  ImageButton.initialState = {
    buttonPressed: false
  };
  ImageButton.propTypes = {
    source: _propTypes.default.any,
    highlightedSource: _propTypes.default.any,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    style: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ImageButton.defaultProps = {
    source: null,
    highlightedSource: null,
    onPress: null
  };
  var _default = ImageButton;
  exports.default = _default;
},22795,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TitleBar", {
    enumerable: true,
    get: function get() {
      return _TitleBar.default;
    }
  });

  var _TitleBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22798,[14305,22801]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeIphoneXHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[12]);

  var _reactNavigation = _$$_REQUIRE(_dependencyMap[13]);

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var isIOS = _reactNative.Platform.OS === 'ios';

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var statusBarHeight = (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);
  var titleHeight = 55;
  var imgHeight = 28;
  var containerHeight = (_reactNative.StatusBar.currentHeight || 0) + titleHeight;
  var marginV = 13.5;
  var marginH = 14;
  var dotSize = 10;

  var TitleBar = function (_Component) {
    (0, _inherits2.default)(TitleBar, _Component);

    function TitleBar(props) {
      var _this;

      (0, _classCallCheck2.default)(this, TitleBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TitleBar).call(this, props));
      (0, _reportDecorator.referenceReport)('TitleBar');
      return _this;
    }

    (0, _createClass2.default)(TitleBar, [{
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.isDarkStyle = this.props.type === 'dark';

        if (_reactNative.Platform.OS == 'android') {
          _reactNative.StatusBar.setTranslucent(true);
        }
      }
    }, {
      key: "render",
      value: function render() {
        this.isDarkStyle = this.props.type === 'dark';

        if (this.context.colorScheme === 'dark') {
          if (this.isDarkStyle === false) {
            if (this.props.style !== undefined && this.props.style.backgroundColor !== undefined) {
              this.props.style.backgroundColor = "xm" + this.props.style.backgroundColor;
            }
          }

          this.isDarkStyle = false;
        } else if (this.context.colorScheme === 'dark') {
          this.isDarkStyle = false;
        }

        this.isDarkStyle ? _reactNative.StatusBar.setBarStyle('dark-content') : _reactNative.StatusBar.setBarStyle('light-content');
        var containerStyle = this.isDarkStyle ? styles.blackTitleBarContainer : styles.lightTitleBarContainer;
        var leftWidth = this.props.leftTextStyle ? this.props.leftTextStyle.width : 0;
        var rightWidth = this.props.rightTextStyle ? this.props.rightTextStyle.width : 0;
        var titleTextStyle = this.isDarkStyle ? styles.blackTitleText : styles.whiteTitleText;
        var subtitleTextStyle = this.isDarkStyle ? styles.blackSubtitleText : styles.whiteSubtitleText;
        var leftRightTextStyle = this.isDarkStyle ? styles.blackLeftRightText : styles.whiteLeftRightText;
        var back_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[18]) : _$$_REQUIRE(_dependencyMap[19]);
        var back_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[20]) : _$$_REQUIRE(_dependencyMap[21]);
        var set_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[22]) : _$$_REQUIRE(_dependencyMap[23]);
        var set_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[24]) : _$$_REQUIRE(_dependencyMap[25]);
        var share_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[26]) : _$$_REQUIRE(_dependencyMap[27]);
        var share_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[28]) : _$$_REQUIRE(_dependencyMap[29]);
        var more_n = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[30]) : _$$_REQUIRE(_dependencyMap[31]);
        var more_p = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[32]) : _$$_REQUIRE(_dependencyMap[33]);
        var message = this.isDarkStyle ? _$$_REQUIRE(_dependencyMap[34]) : _$$_REQUIRE(_dependencyMap[34]);

        var _ref = this.props.style || {},
            height = _ref.height;

        var containerHeight = {};
        var dotTop = {};
        var offset;

        if (height !== undefined) {
          containerHeight = {
            height: (_reactNative.StatusBar.currentHeight || 0) + height
          };
          offset = height - titleHeight;
          dotTop = {
            top: statusBarHeight + marginV + offset
          };
        }

        return _react.default.createElement(_reactNavigation.SafeAreaView, {
          style: [containerStyle, this.props.style, containerHeight]
        }, this.props.leftText ? _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          contentStyle: [leftRightTextStyle, this.props.leftTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressLeft ? titleHeight : 0,
            width: leftWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel || this.props.leftText,
          accessibilityHint: this.props.leftAccessibilityHint
        })), this.props.leftText) : _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft,
          style: [styles.img, {
            height: this.props.onPressLeft ? imgHeight : 0
          }],
          source: back_n,
          highlightedSource: back_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft ? this.props.accessible : false,
          accessibilityLabel: this.props.leftAccessibilityLabel,
          accessibilityHint: this.props.leftAccessibilityHint
        }))), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressLeft2,
          style: [styles.img, {
            marginLeft: 0,
            height: this.props.onPressLeft2 ? imgHeight : 0
          }],
          source: set_n,
          highlightedSource: set_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressLeft2 ? this.props.accessible : false,
          accessibilityLabel: this.props.left2AccessibilityLabel,
          accessibilityHint: this.props.left2AccessibilityHint
        }))), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.textContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [titleTextStyle, this.props.titleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.title), this.props.subTitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [subtitleTextStyle, this.props.subtitleStyle],
          allowFontScaling: this.props.allowFontScaling,
          onPress: this.props.onPressTitle
        }, this.props.subTitle) : null), _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight2,
          style: [styles.img, {
            marginRight: 0,
            height: this.props.onPressRight2 ? imgHeight : 0
          }],
          source: share_n,
          highlightedSource: share_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight2 ? this.props.accessible : false,
          accessibilityLabel: this.props.right2AccessibilityLabel,
          accessibilityHint: this.props.right2AccessibilityHint
        }))), this.props.rightText ? _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          contentStyle: [leftRightTextStyle, this.props.rightTextStyle],
          style: [leftRightTextStyle, {
            height: this.props.onPressRight ? titleHeight : 0,
            width: rightWidth || 56
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel || this.props.rightText,
          accessibilityHint: this.props.rightAccessibilityHint
        })), this.props.rightText), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })) : _react.default.createElement(_reactNative.View, null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
          onPress: this.props.onPressRight,
          style: [styles.img, {
            height: this.props.onPressRight ? imgHeight : 0
          }],
          source: more_n,
          highlightedSource: more_p
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.onPressRight ? this.props.accessible : false,
          accessibilityLabel: this.props.rightAccessibilityLabel,
          accessibilityHint: this.props.rightAccessibilityHint
        }))), this.props.showDot && _react.default.createElement(_reactNative.Image, {
          style: [styles.dot],
          resizeMode: "contain",
          source: message
        })));
      }
    }]);
    return TitleBar;
  }(_react.Component);

  TitleBar.contextType = _configProvider.ConfigContext;
  TitleBar.propTypes = {
    type: _propTypes.default.oneOf(['dark', 'light']),
    leftTextStyle: _propTypes.default.any,
    rightTextStyle: _propTypes.default.any,
    style: _propTypes.default.any,
    leftText: _propTypes.default.string,
    rightText: _propTypes.default.string,
    onPressLeft: _propTypes.default.func,
    onPressLeft2: _propTypes.default.func,
    onPressRight: _propTypes.default.func,
    onPressRight2: _propTypes.default.func,
    onPressTitle: _propTypes.default.func,
    title: _propTypes.default.string,
    subTitle: _propTypes.default.string,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    allowFontScaling: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    leftAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    leftAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    left2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    left2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    rightAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    rightAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    right2AccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    right2AccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  TitleBar.defaultProps = {
    type: 'light',
    allowFontScaling: true,
    titleStyle: {},
    subtitleStyle: {}
  };

  var styles = _reactNative.StyleSheet.create({
    lightTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmblack'
    },
    blackTitleBarContainer: {
      flexDirection: 'row',
      width: width,
      alignItems: 'flex-end',
      height: containerHeight,
      backgroundColor: 'xmwhite'
    },
    textContainer: {
      minHeight: titleHeight,
      flex: 1,
      alignItems: 'stretch',
      justifyContent: 'center'
    },
    blackTitleText: {
      color: 'xm#000000cc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteTitleText: {
      color: 'xm#ffffffcc',
      fontSize: 15,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackSubtitleText: {
      color: 'xm#00000088',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteSubtitleText: {
      color: 'xm#ffffff88',
      fontSize: 12,
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    blackLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#00000088',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    whiteLeftRightText: {
      backgroundColor: 'xm#0000',
      color: 'xm#ffffff88',
      fontSize: 14,
      alignItems: 'center',
      justifyContent: 'center',
      textAlignVertical: 'center',
      textAlign: 'center'
    },
    img: {
      width: imgHeight,
      height: imgHeight,
      resizeMode: 'contain',
      marginHorizontal: marginH,
      marginVertical: marginV
    },
    dot: {
      position: 'absolute',
      width: dotSize,
      height: dotSize,
      resizeMode: 'contain',
      right: marginH,
      top: marginV
    }
  });

  var _default = TitleBar;
  exports.default = _default;
},22801,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13696,11251,10918,22795,22426,22420,22423,22804,22807,22810,22813,22816,22819,22822,22825,22828,22831,22834,22837,22840,22843,22846,22849,22852]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3ac342e621b9ffa0c200ab5ec4651fd5",
    "name": "std_tittlebar_main_device_back_normal",
    "type": "png"
  });
},22804,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "3b5c33e031f042072bfd34104bdd2f0e",
    "name": "std_tittlebar_main_device_back_white_normal",
    "type": "png"
  });
},22807,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "03d2a427cd538718957f203472bb1909",
    "name": "std_tittlebar_main_device_back_press",
    "type": "png"
  });
},22810,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "e2cd9dae60d00bdaaf370d0ce935bcd1",
    "name": "std_tittlebar_main_device_back_white_press",
    "type": "png"
  });
},22813,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "1f87d21e189f8407cf2193f497a3009b",
    "name": "std_tittlebar_main_device_back2_normal",
    "type": "png"
  });
},22816,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "245580044e6fde980a40017d0a84b8a0",
    "name": "std_titlebar_setting_back_normal",
    "type": "png"
  });
},22819,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "58b0bbb3fe18c3f9f403a7462df13b16",
    "name": "std_tittlebar_main_device_back2_press",
    "type": "png"
  });
},22822,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 87,
    "height": 87,
    "scales": [1],
    "hash": "04afc8dcfd074448cf6df1dd0ccc1834",
    "name": "std_titlebar__setting_back_press",
    "type": "png"
  });
},22825,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "c1de7bdd3f696c32718913b813324785",
    "name": "std_tittlebar_main_device_share_normal",
    "type": "png"
  });
},22828,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "f7e6cada2c77978f5ba39df82526dbd4",
    "name": "std_tittlebar_main_device_share_white_normal",
    "type": "png"
  });
},22831,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "94f64d86d775616685fbd8d0551af687",
    "name": "std_tittlebar_main_device_share_press",
    "type": "png"
  });
},22834,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "44be9deb2614f593e6ef99df7db8de8e",
    "name": "std_tittlebar_main_device_share_white_press",
    "type": "png"
  });
},22837,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "a5bb68ab122b74c581fd2454e5218cea",
    "name": "std_tittlebar_main_device_more_normal",
    "type": "png"
  });
},22840,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "24d81d84c61d4181f21e615e4a6d3918",
    "name": "std_tittlebar_main_device_more_white_normal",
    "type": "png"
  });
},22843,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "1fe8ece2871c461ef1644d01f207c332",
    "name": "std_tittlebar_main_device_more_press",
    "type": "png"
  });
},22846,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 84,
    "height": 84,
    "scales": [1],
    "hash": "d6f11d70982f64f3a70d831f321355fe",
    "name": "std_tittlebar_main_device_more_white_press",
    "type": "png"
  });
},22849,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "std_tittlebar_main_device_massage_point",
    "type": "png"
  });
},22852,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "NavigationBar", {
    enumerable: true,
    get: function get() {
      return _NavigationBar.default;
    }
  });

  var _NavigationBar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22855,[14305,22858]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ImageButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _font = _$$_REQUIRE(_dependencyMap[18]);

  var TYPE = {
    DARK: 'dark',
    LIGHT: 'light'
  };
  Object.freeze(TYPE);
  var ICON = {
    ADD: 'add',
    BACK: 'back',
    CLOSE: 'close',
    COLLECT: 'collect',
    COMPLETE: 'complete',
    DELETE: 'delete',
    DETAIL: 'detail',
    MORE: 'more',
    NEXT: 'next',
    PROFILE: 'profile',
    QR: 'qr',
    SEARCH: 'search',
    SELECT_ALL: 'select_all',
    SELECTED_ALL: 'selected_all',
    SETTING: 'setting',
    SHARE: 'share',
    EDIT: 'edit',
    RECORD: 'record',
    ORIENTATION: 'orientation',
    SAVE: 'save'
  };
  Object.freeze(ICON);
  var _Images$navigation = _Images.default.navigation,
      light = _Images$navigation.light,
      dark = _Images$navigation.dark,
      dot = _Images$navigation.dot;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var navigationBarHeightThin = 53;
  var navigationBarHeightFat = 65;
  var paddingHorizontal = 9;
  var iconSize = 40;
  var lightTitleColor = 'xm#000000';
  var darkTitleColor = 'xm#ffffff';
  var colorSubtitleNormal = new _DynamicColor.default('rgba(0,0,0,0.60)', 'rgba(255,255,255,0.50)');
  var colorSubtitleWarning = new _DynamicColor.default('#f43f31', '#d92719');
  var colorSubtitleException = new _DynamicColor.default('#f5a623', '#db8e0d');
  var COLOR_SUBTITLE = {
    normal: colorSubtitleNormal,
    warning: colorSubtitleWarning,
    exception: colorSubtitleException
  };

  var NavigationBar = function (_Component) {
    (0, _inherits2.default)(NavigationBar, _Component);

    function NavigationBar(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NavigationBar);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NavigationBar).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NavigationBar');
      return _this;
    }

    (0, _createClass2.default)(NavigationBar, [{
      key: "getIconsOfType",
      value: function getIconsOfType(arr) {
        var icons = this.isDarkStyle ? dark : light;
        return arr.map(function (item) {
          var key = item.key,
              disable = item.disable;

          if (disable) {
            item.source = icons[key] ? icons[key].disable : null;
            item.highlightedSource = null;
          } else {
            item.source = icons[key] ? icons[key].normal : null;
            item.highlightedSource = icons[key] ? icons[key].press : null;
          }

          return item;
        }).filter(function (item) {
          return item.source;
        });
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(arr) {
        var _this2 = this;

        var icons = (arr || []).slice(0, 2);
        return icons.map(function (icon, i) {
          if (!icon.source) {
            return _react.default.createElement(_reactNative.View, {
              key: icon.key + i,
              style: {
                width: iconSize
              }
            });
          }

          return _react.default.createElement(_reactNative.View, {
            key: icon.key + i,
            style: {
              width: iconSize,
              height: iconSize
            }
          }, icon.showDot ? _react.default.createElement(_reactNative.Image, {
            style: styles.dot,
            resizeMode: "contain",
            source: dot
          }) : null, _react.default.createElement(_ImageButton.default, (0, _extends2.default)({
            disabled: !!icon.disable,
            onPress: icon.onPress,
            style: styles.icon,
            source: icon.source,
            highlightedSource: icon.highlightedSource
          }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, icon, {
            accessible: icon.accessible || _this2.props.accessible,
            accessibilityLabel: icon.accessibilityLabel,
            accessibilityHint: icon.accessibilityHint
          })))));
        });
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            subtitleStyle = _this$props.subtitleStyle,
            titleStyle = _this$props.titleStyle,
            onPressTitle = _this$props.onPressTitle;
        var titleColor = {
          color: this.isDarkStyle ? darkTitleColor : lightTitleColor
        };
        var newSubtitleStyle = (0, _objectSpread2.default)({
          colorType: 'normal',
          fontSize: 14,
          fontFamily: 'MI-LANTING--GBK1-Light'
        }, subtitleStyle);
        var customSubtitleStyle = {
          fontFamily: newSubtitleStyle.fontFamily,
          fontSize: newSubtitleStyle.fontSize,
          lineHeight: newSubtitleStyle.fontSize * 1.3,
          color: this.isDarkStyle ? COLOR_SUBTITLE[newSubtitleStyle.colorType].dark : COLOR_SUBTITLE[newSubtitleStyle.colorType][this.context.colorScheme]
        };
        var newTitleStyle = (0, _objectSpread2.default)({
          fontSize: 18
        }, titleStyle);
        var customTitleStyle = {
          fontSize: newTitleStyle.fontSize,
          lineHeight: newTitleStyle.fontSize * 1.3
        };
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.header
        })), _react.default.isValidElement(title) ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          style: [styles.titleView, titleColor],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || '') : _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, titleColor, customTitleStyle],
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title || ''), subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, customSubtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling,
          onPress: onPressTitle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), subtitle) : null);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        this.updateStyleType(this.props, newProps);
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        this.updateStyleType(this.props, null);
      }
    }, {
      key: "updateStyleType",
      value: function updateStyleType(props, newProps) {
        var newIsDartStyle = (newProps ? newProps.type : props.type) === TYPE.DARK;
        this.shouldKeepColor = false;

        if (this.context.colorScheme === 'dark') {
          if (newIsDartStyle) {
            this.shouldKeepColor = true;
          }

          newIsDartStyle = true;
        } else {
          newIsDartStyle = this.context.colorScheme === 'dark' ? true : (newProps ? newProps.type : props.type) === TYPE.DARK;
        }

        if (newIsDartStyle !== this.isDarkStyle) {
          this.isDarkStyle = newIsDartStyle;

          _reactNative.StatusBar.setBarStyle(this.isDarkStyle ? 'light-content' : 'dark-content');

          if (_reactNative.Platform.OS == 'android') {
            _reactNative.StatusBar.setTranslucent(true);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var leftIcons = this.getIconsOfType(this.props.left);
        var rightIcons = this.getIconsOfType(this.props.right);
        leftIcons.length < rightIcons.length && leftIcons.push({});
        leftIcons.length > rightIcons.length && rightIcons.unshift({});
        var containerHeight = this.props.subtitle ? navigationBarHeightFat : navigationBarHeightThin;
        var backgroundColor = this.props.backgroundColor ? this.props.backgroundColor : this.isDarkStyle ? 'xm#000000' : 'xm#ffffff';

        if (this.shouldKeepColor && this.props.backgroundColor) {
          backgroundColor = "xm" + this.props.backgroundColor;
        }

        var containerStyle = {
          backgroundColor: backgroundColor
        };
        return _react.default.createElement(_reactNative.SafeAreaView, {
          style: [containerStyle, {
            paddingTop: _reactNative.StatusBar.currentHeight
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            minHeight: containerHeight
          }, this.props.useOrientation ? {} : {
            width: width
          }]
        }, this.renderIcons(leftIcons), this.renderTitle(), this.renderIcons(rightIcons)));
      }
    }]);
    return NavigationBar;
  }(_react.Component);

  NavigationBar.propTypes = {
    type: _propTypes.default.oneOf([TYPE.DARK, TYPE.LIGHT]),
    useOrientation: _propTypes.default.bool,
    style: _propTypes.default.object,
    left: _propTypes.default.arrayOf(_propTypes.default.shape({
      key: _propTypes.default.string,
      onPress: _propTypes.default.func,
      disable: _propTypes.default.bool,
      accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    right: _propTypes.default.array,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.shape({
      fontFamily: _propTypes.default.string,
      fontSize: _propTypes.default.number,
      colorType: _propTypes.default.oneOf(['normal', 'warning', 'exception'])
    }),
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _propTypes.default.shape({
      fontSize: _propTypes.default.number
    }),
    allowFontScaling: _propTypes.default.bool,
    backgroundColor: _propTypes.default.any,
    onPressTitle: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  NavigationBar.defaultProps = {
    type: TYPE.LIGHT,
    left: [],
    right: [],
    subtitleStyle: {
      fontFamily: 'sans-serif',
      colorType: 'normal',
      fontSize: 14
    },
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    useOrientation: false,
    titleStyle: {
      fontSize: 18
    }
  };
  NavigationBar.TYPE = TYPE;
  NavigationBar.ICON = ICON;
  NavigationBar.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      flexDirection: 'row',
      alignItems: 'center'
    },
    titleContainer: {
      flex: 1,
      alignSelf: 'center',
      justifyContent: 'center',
      alignItems: 'stretch',
      marginHorizontal: 5
    },
    title: (0, _objectSpread2.default)({
      fontSize: 18,
      lineHeight: 24,
      textAlignVertical: 'center',
      textAlign: 'center'
    }, _font.FontPrimary),
    titleView: (0, _objectSpread2.default)({
      fontSize: 16,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      fontSize: 14,
      lineHeight: 18,
      textAlignVertical: 'center',
      textAlign: 'center'
    }, _font.FontSecondary),
    icon: {
      position: 'absolute',
      width: iconSize,
      height: iconSize
    },
    dot: {
      width: iconSize,
      height: iconSize
    }
  });

  var _default = NavigationBar;
  exports.default = _default;
},22858,[14308,14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22435,22456,22795,22426,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Card", {
    enumerable: true,
    get: function get() {
      return _Card.default;
    }
  });
  Object.defineProperty(exports, "CardProps", {
    enumerable: true,
    get: function get() {
      return _Card.CardProps;
    }
  });
  Object.defineProperty(exports, "MHCard", {
    enumerable: true,
    get: function get() {
      return _MHCard.default;
    }
  });
  Object.defineProperty(exports, "MHCardProps", {
    enumerable: true,
    get: function get() {
      return _MHCard.MHCardProps;
    }
  });
  Object.defineProperty(exports, "ModeCard", {
    enumerable: true,
    get: function get() {
      return _ModeCard.default;
    }
  });
  Object.defineProperty(exports, "ModeCardProps", {
    enumerable: true,
    get: function get() {
      return _ModeCard.ModeCardProps;
    }
  });
  Object.defineProperty(exports, "IndependentCard", {
    enumerable: true,
    get: function get() {
      return _IndependentCard.default;
    }
  });
  Object.defineProperty(exports, "GearCard", {
    enumerable: true,
    get: function get() {
      return _GearCard.default;
    }
  });
  Object.defineProperty(exports, "ListCard", {
    enumerable: true,
    get: function get() {
      return _ListCard.default;
    }
  });

  var _Card = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2]));

  var _MHCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3]));

  var _ModeCard = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _IndependentCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _GearCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _ListCard = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));
},22861,[14305,14308,22864,22870,22873,22876,23299,23302]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _CardBase = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION = 250;
  var DEFAULT_STYLE = {
    HEIGHT: 66,
    WIDTH: width - 30,
    RADIUS: 8,
    MARGIN_TOP: {
      marginTop: 15
    }
  };

  var Card = function (_React$Component) {
    (0, _inherits2.default)(Card, _React$Component);

    function Card(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, Card);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).call(this, props, context));
      (0, _reportDecorator.referenceReport)('Card');
      _this.state = {
        showShadow: _this.props.visible && _this.props.showShadow
      };
      return _this;
    }

    (0, _createClass2.default)(Card, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        var _this2 = this;

        if (newProps.showShadow === false) return;
        if (newProps.visible === this.props.visible) return;

        if (newProps.visible === false) {
          this.setState({
            showShadow: false
          });
        } else if (newProps.visible === true) {
          setTimeout(function () {
            return _this2.setState({
              showShadow: true
            });
          }, DURATION);
        }
      }
    }, {
      key: "renderCardIOS",
      value: function renderCardIOS() {
        var shadowIOS = this.props.showShadow ? {
          position: 'relative',
          shadowColor: this.props.shadowColor,
          shadowOpacity: this.props.shadowOpacity,
          shadowOffset: {
            width: 0,
            height: 8
          }
        } : {};

        var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle, shadowIOS]);

        return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
          cardStyle: cardStyle
        }));
      }
    }, {
      key: "renderCardAndroid",
      value: function renderCardAndroid() {
        if (!this.state.showShadow) {
          var cardStyle = _reactNative.StyleSheet.flatten([{}, DEFAULT_STYLE.MARGIN_TOP, this.props.cardStyle]);

          return _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: cardStyle
          }));
        } else {
          var _this$props$cardStyle = this.props.cardStyle,
              _width = _this$props$cardStyle.width,
              height = _this$props$cardStyle.height,
              borderRadius = _this$props$cardStyle.borderRadius;

          var _this$getCorrectStyle = this.getCorrectStyle(),
              shadowAndroidStyle = _this$getCorrectStyle.shadowAndroidStyle,
              _cardStyle = _this$getCorrectStyle.cardStyle;

          var shadowAndroid = {
            width: _width || DEFAULT_STYLE.WIDTH,
            height: height || DEFAULT_STYLE.HEIGHT,
            radius: borderRadius || DEFAULT_STYLE.RADIUS,
            color: this.props.shadowColor,
            border: 10,
            opacity: this.props.shadowOpacity,
            x: 0,
            y: 6,
            style: shadowAndroidStyle
          };
          return _react.default.createElement(_reactNativeShadow.BoxShadow, {
            setting: shadowAndroid
          }, _react.default.createElement(_CardBase.default, (0, _extends2.default)({}, this.props, {
            cardStyle: _cardStyle
          })));
        }
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle() {
        var _this3 = this;

        var shadowAndroidStyle = (0, _extends2.default)({}, DEFAULT_STYLE.MARGIN_TOP);
        var cardStyle = {};
        Object.keys(this.props.cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin')) {
            shadowAndroidStyle[key] = _this3.props.cardStyle[key];
          } else {
            cardStyle[key] = _this3.props.cardStyle[key];
          }
        });
        return {
          shadowAndroidStyle: shadowAndroidStyle,
          cardStyle: cardStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        return _reactNative.Platform.select({
          android: this.renderCardAndroid(),
          ios: this.renderCardIOS()
        });
      }
    }]);
    return Card;
  }(_react.default.Component);

  Card.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    visible: _propTypes.default.bool,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    showShadow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    shadowColor: _propTypes.default.string,
    shadowOpacity: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Card.defaultProps = {
    visible: true,
    showDismiss: false,
    disabled: false,
    showShadow: true,
    cardStyle: {},
    shadowColor: '#000',
    shadowOpacity: 0.03,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  var _default = Card;
  exports.default = _default;
},22864,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13699,22867,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var DURATION_OUT = 250;
  var DURATION_IN = 250;
  var DEFAULT_STYLE = {
    MARGIN_H: 15,
    HEIGHT: 66,
    WIDTH: width - 30,
    ICON_SIZE: 35,
    CLOSE_AREA: 30,
    CLOSE_SIZE: 20
  };

  var CardBase = function (_React$Component) {
    (0, _inherits2.default)(CardBase, _React$Component);

    function CardBase(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, CardBase);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardBase).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        if (onPress && actionName === 'activate') {
          onPress();
        }
      };

      var _this$props$cardStyle = _this.props.cardStyle,
          height = _this$props$cardStyle.height,
          marginTop = _this$props$cardStyle.marginTop;
      _this.cardHeight = height || DEFAULT_STYLE.HEIGHT;
      var initValue = _this.props.visible ? 1 : 0;
      _this.height = new _reactNative.Animated.Value(initValue);
      _this.opacity = new _reactNative.Animated.Value(initValue);
      _this.marginTop = marginTop || 0;
      return _this;
    }

    (0, _createClass2.default)(CardBase, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.height.addListener(function (e) {
          _this2.refCard && _this2.refCard.setNativeProps({
            marginTop: _this2.marginTop * e.value
          });
        });
      }
    }, {
      key: "renderInner",
      value: function renderInner() {
        if (this.props.innerView === undefined) {
          var theme = this.context.theme;
          var _this$props2 = this.props,
              icon = _this$props2.icon,
              text = _this$props2.text,
              iconStyle = _this$props2.iconStyle,
              textStyle = _this$props2.textStyle;
          var textLine = this.props.numberOfLines == undefined ? 1 : this.props.numberOfLines;
          if (textLine < 0) textLine = 0;
          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
            style: [styles.innerContainer, {
              opacity: this.opacity
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
            accessibilityHint: this.props.accessibilityHint || (this.props.onPress ? text : ''),
            accessibilityState: {
              disabled: !!this.props.disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }), icon ? _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: [styles.innerIcon, iconStyle],
            source: icon,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          }))) : null, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.innerText, {
              color: theme.colorBlack
            }, textStyle],
            numberOfLines: textLine,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: true
          })), text || ''));
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          style: [{
            flex: 1
          }, {
            opacity: this.opacity
          }]
        }, this.props.innerView);
      }
    }, {
      key: "renderClose",
      value: function renderClose() {
        var _this3 = this;

        if (!this.props.showDismiss) return null;
        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: styles.closeArea,
          underlayColor: "transparent",
          onPress: function onPress() {
            return _this3.dismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.dismissAccessibilityLabel || 'close',
          accessibilityHint: this.props.dismissAccessibilityHint || 'close'
        })), _react.default.createElement(_reactNative.Animated.Image, {
          style: [styles.close, {
            opacity: this.opacity
          }],
          source: _resources.Images.common.close
        }));
      }
    }, {
      key: "getCorrectStyle",
      value: function getCorrectStyle(cardStyle) {
        var animatedViewStyle = {};
        var containerStyle = {};
        Object.keys(cardStyle).forEach(function (key) {
          if (key.toString().startsWith('margin') || key.toString() === 'width') {
            animatedViewStyle[key] = cardStyle[key];
          } else {
            containerStyle[key] = cardStyle[key];
          }
        });
        return {
          animatedViewStyle: animatedViewStyle,
          containerStyle: containerStyle
        };
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;
        var toValue = this.props.visible ? 1 : 0;
        var underlayColor = theme == null ? undefined : theme.listUnderlayColor;
        if (this.props.underlayColor) underlayColor = this.props.underlayColor;

        if (!this.props.visible) {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_OUT,
            easing: _reactNative.Easing.ease
          }), _reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 100,
            easing: _reactNative.Easing.ease
          })], {
            stopTogether: false
          }).start();
        } else {
          _reactNative.Animated.parallel([_reactNative.Animated.timing(this.opacity, {
            toValue: toValue,
            duration: 125,
            easing: _reactNative.Easing.ease,
            delay: 125
          }), _reactNative.Animated.timing(this.height, {
            toValue: toValue,
            duration: DURATION_IN,
            easing: _reactNative.Easing.ease
          })]).start();
        }

        var cardStyle = _reactNative.StyleSheet.flatten([styles.container, this.props.cardStyle]);

        var _this$getCorrectStyle = this.getCorrectStyle(cardStyle),
            animatedViewStyle = _this$getCorrectStyle.animatedViewStyle,
            containerStyle = _this$getCorrectStyle.containerStyle;

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(_ref2) {
            _this4.refCard = _ref2;
          },
          style: [animatedViewStyle, {
            opacity: this.opacity,
            height: this.props.unlimitedHeightEnable ? undefined : this.height.interpolate({
              inputRange: [0, 1],
              outputRange: [0, this.cardHeight]
            })
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [{
            backgroundColor: theme.colorForeground
          }, containerStyle, {
            flex: 1
          }],
          underlayColor: underlayColor,
          disabled: this.props.disabled,
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }, this.renderInner(), this.renderClose())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.props.dismiss && this.props.dismiss();
      }
    }]);
    return CardBase;
  }(_react.default.Component);

  exports.default = CardBase;
  CardBase.contextType = _configProvider.ConfigContext;
  CardBase.propTypes = {
    innerView: _propTypes.default.object,
    icon: _propTypes.default.number,
    text: _propTypes.default.string,
    showDismiss: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    dismiss: _propTypes.default.func,
    visible: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    cardStyle: _propTypes.default.object,
    iconStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    underlayColor: _propTypes.default.string,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    dismissAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    dismissAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CardBase.defaultProps = {
    showDismiss: false,
    disabled: false,
    visible: true,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: DEFAULT_STYLE.WIDTH
    },
    innerContainer: {
      flex: 1,
      alignItems: 'center',
      flexDirection: 'row',
      paddingHorizontal: DEFAULT_STYLE.MARGIN_H
    },
    innerIcon: {
      width: DEFAULT_STYLE.ICON_SIZE,
      height: DEFAULT_STYLE.ICON_SIZE,
      marginRight: DEFAULT_STYLE.MARGIN_H
    },
    innerText: {
      flex: 1,
      fontSize: 14
    },
    closeArea: {
      width: DEFAULT_STYLE.CLOSE_AREA,
      height: DEFAULT_STYLE.CLOSE_AREA,
      position: 'absolute',
      top: 0,
      right: 0,
      justifyContent: 'center',
      alignItems: 'center'
    },
    close: {
      width: DEFAULT_STYLE.CLOSE_SIZE,
      height: DEFAULT_STYLE.CLOSE_SIZE
    }
  });
},22867,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var CARD_TYPE = {
    NORMAL: 'normal',
    SWITCH: 'switch'
  };
  Object.freeze(CARD_TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };
  Object.freeze(CARD_RADIUS_TYPE);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 10;
  var cardWidth = width - 20;
  var cardHeight = 80;
  var cardPadding = 20;
  var ICON_SIZE = 40;

  var ARROW_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var disabledOpacity = 0.35;

  var MHCard = function (_React$Component) {
    (0, _inherits2.default)(MHCard, _React$Component);

    function MHCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, MHCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            cardType = _this$props.cardType,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange,
            switchValue = _this$props.switchValue;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.SWITCH && typeof onValueChange === 'function') {
          onValueChange(!switchValue);
        }

        if (actionName === 'activate' && cardType === CARD_TYPE.NORMAL && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('MHCard');
      _this.radiusStyle = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: 10,
        borderTopRightRadius: 10
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: 10,
        borderBottomRightRadius: 10
      }), _CARD_RADIUS_TYPE$ALL)[_this.props.cardRadiusType];
      _this.cardStyle = _reactNative.StyleSheet.flatten([_this.radiusStyle, {
        width: cardWidth,
        height: cardHeight,
        marginTop: _this.props.marginTop
      }]);
      return _this;
    }

    (0, _createClass2.default)(MHCard, [{
      key: "renderInnerView",
      value: function renderInnerView() {
        var theme = this.context.theme;
        var opacityStyle = {
          opacity: this.props.disabled ? disabledOpacity : 1
        };
        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        if (subtitleLine < 0) subtitleLine = 0;
        var rightTextLine = this.props.rightTextNumberOfLines == undefined ? 2 : this.props.rightTextNumberOfLines;
        if (rightTextLine < 0) rightTextLine = 0;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, this.radiusStyle, opacityStyle, this.props.style]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: this.props.cardType === CARD_TYPE.SWITCH ? _accessibilityHelper.AccessibilityRoles.switch : this.props.onPress ? _accessibilityHelper.AccessibilityRoles.button : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: this.props.cardType === CARD_TYPE.SWITCH ? {
            disabled: !!this.props.disabled,
            checked: this.props.switchValue
          } : {
            disabled: !!this.props.disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, this.props.iconContainerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [styles.icon, this.props.iconStyle],
          source: this.props.icon,
          resizeMode: "contain"
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))), _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [_resources.Styles.common.title, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.titleStyle],
          numberOfLines: titleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title || ''), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.subtitleStyle],
          numberOfLines: subtitleLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.rightText ? _react.default.createElement(_reactNative.View, {
          style: {
            maxWidth: '33%'
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.rightText, {
            color: theme.colorBlack
          }, this.props.unlimitedHeightEnable ? {
            height: undefined,
            lineHeight: undefined
          } : {}, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: rightTextLine
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.rightText || '')) : null), this.renderRight());
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        if (this.props.cardType === CARD_TYPE.NORMAL) {
          if (this.props.hideArrow) return null;
          return _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
            style: styles.arrow,
            source: _resources.Images.common.right_arrow,
            resizeMode: "contain"
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        if (this.props.cardType === CARD_TYPE.SWITCH) {
          return _react.default.createElement(_Switch.default, (0, _extends2.default)({
            value: this.props.switchValue
          }, this.props, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }
      }
    }, {
      key: "render",
      value: function render() {
        var cardStyle = _reactNative.StyleSheet.flatten([this.cardStyle, !this.props.allowFontScaling ? {
          height: undefined
        } : {}]);

        return _react.default.createElement(_Card.default, (0, _extends2.default)({
          innerView: this.renderInnerView(),
          cardStyle: cardStyle
        }, this.props));
      }
    }]);
    return MHCard;
  }(_react.default.Component);

  MHCard.contextType = _configProvider.ConfigContext;
  MHCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.NORMAL, CARD_TYPE.SWITCH]),
    cardRadiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.BOTTOM]),
    style: _propTypes.default.object,
    iconContainerStyle: _propTypes.default.object,
    icon: _propTypes.default.number.isRequired,
    iconStyle: _propTypes.default.object,
    title: _propTypes.default.string.isRequired,
    titleStyle: _propTypes.default.object,
    subtitle: _propTypes.default.string,
    subtitleStyle: _propTypes.default.object,
    rightText: _propTypes.default.string,
    rightTextStyle: _propTypes.default.object,
    hideArrow: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onValueChange: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    visible: _propTypes.default.bool,
    showShadow: _propTypes.default.bool,
    marginTop: _propTypes.default.number,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    rightTextNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHCard.defaultProps = {
    cardType: CARD_TYPE.NORMAL,
    cardRadiusType: CARD_RADIUS_TYPE.ALL,
    icon: _resources.Images.common.mihome,
    hideArrow: false,
    switchValue: false,
    disabled: false,
    visible: true,
    showShadow: false,
    marginTop: 0,
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  MHCard.CARD_TYPE = CARD_TYPE;
  MHCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      paddingHorizontal: cardPadding,
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE,
      borderRadius: 20
    },
    textContainer: {
      flex: 1,
      flexDirection: 'row',
      alignItems: 'center',
      marginLeft: 14
    },
    titleContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    subtitle: {
      fontSize: 12,
      lineHeight: 16
    },
    rightText: {
      paddingLeft: 10,
      textAlign: 'right',
      fontSize: 16
    },
    arrow: {
      width: ARROW_SIZE,
      height: ARROW_SIZE
    }
  });

  var _default = MHCard;
  exports.default = _default;
},22870,[14305,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[12]);

  var _resources = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var radiusValue = 10;
  var iconLength = 56;
  var padding3 = 30;
  var padding4 = 28;
  var padding5 = 20;
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var ModeCard = function (_Component) {
    (0, _inherits2.default)(ModeCard, _Component);

    function ModeCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ModeCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ModeCard).call(this, props));

      _this.createModesRN = function () {
        var _this$props = _this.props,
            modes = _this$props.modes,
            descriptionStyle = _this$props.descriptionStyle,
            activeDescriptionStyle = _this$props.activeDescriptionStyle,
            accessible = _this$props.accessible;
        var theme = _this.context.theme;
        var length = modes.length;
        var modeStyle = {};
        var iconStyle = {};

        if (length === 4) {
          iconLength = 50;
          modeStyle = {
            width: iconLength,
            marginRight: 33
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        } else if (length === 5) {
          iconLength = 46;
          modeStyle = {
            width: iconLength,
            marginRight: 17
          };
          iconStyle = {
            width: iconLength,
            height: iconLength
          };
        }

        var modesRN = modes.map(function (mode, index) {
          var isDisabled = mode.isDisabled,
              isActive = mode.isActive,
              icon = mode.icon,
              description = mode.description,
              isPressing = mode.isPressing,
              accessibilityLabel = mode.accessibilityLabel,
              accessibilityHint = mode.accessibilityHint;
          var iconSource = -1;
          var iconOpacity = 1;
          var descriptionRN = null;
          var last = {};
          var activeDescription = {};
          var descriptionOpacity = 1;

          if (isDisabled && isActive) {
            iconSource = icon.activeDisabled;
          } else if (isDisabled) {
            iconSource = icon.normal;
            iconOpacity = 0.3;
          } else if (isActive) {
            iconSource = icon.active;
            activeDescription = {
              color: _resources.Styles.common.MHGreen
            };
            (0, _extends2.default)(activeDescription, activeDescriptionStyle);
          } else if (isPressing) {
            iconSource = icon.press;
          } else {
            iconSource = icon.normal;
          }

          if (isDisabled) {
            descriptionOpacity = 0.3;
          }

          if (description && length < 5) {
            var style = _reactNative.StyleSheet.flatten([styles.description, _this.props.unlimitedHeightEnable ? {
              fontSize: undefined,
              lineHeight: undefined
            } : {}]);

            var textLine = _this.props.numberOfLines == undefined ? 1 : _this.props.numberOfLines;
            if (textLine < 0) textLine = 0;
            descriptionRN = _react.default.createElement(_reactNative.Text, {
              style: [{
                color: theme.colorGrayLight
              }, style, descriptionStyle, activeDescription, {
                opacity: descriptionOpacity
              }],
              numberOfLines: textLine
            }, ' ', description);
          }

          if (index === length - 1) {
            last = {
              marginRight: 0
            };
          }

          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index,
            onPressIn: function onPressIn() {
              _this.pressInIcon(index);
            },
            onPressOut: function onPressOut() {
              _this.pressOutIcon(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
            accessibilityLabel: accessibilityLabel || description,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: !!isDisabled,
              selected: !!isActive
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.mode, modeStyle, last]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              opacity: iconOpacity
            }, iconStyle],
            resizeMode: "contain",
            source: iconSource
          }), descriptionRN));
        });
        return modesRN;
      };

      _this.pressInIcon = function (index) {
        var _this$props2 = _this.props,
            pressIn = _this$props2.pressIn,
            modesKey = _this$props2.modesKey;

        if (pressIn && modesKey) {
          pressIn(index, modesKey);
        }
      };

      _this.pressOutIcon = function (index) {
        var _this$props3 = _this.props,
            pressOut = _this$props3.pressOut,
            modesKey = _this$props3.modesKey;

        if (pressOut && modesKey) {
          pressOut(index, modesKey);
        }
      };

      _this.renderModeCard = function () {
        var theme = _this.context.theme;
        var modes = _this.props.modes;
        var length = modes.length;
        var cardPadding = {};

        if (length === 4) {
          cardPadding = {
            paddingTop: padding4,
            paddingBottom: padding4
          };
        } else if (length === 5) {
          cardPadding = {
            paddingTop: padding5,
            paddingBottom: padding5
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.card, {
            backgroundColor: theme.colorForeground
          }, _this.radius, cardPadding]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.main
        }, _this.createModesRN()));
      };

      (0, _reportDecorator.referenceReport)('ModeCard');
      _this.cardWrapStyle = {};
      var _modes = props.modes;
      var _length = _modes.length;
      var cardWrapStyle = {
        height: 116
      };

      var hasDescription = _modes.some(function (mode) {
        return mode.description;
      });

      if (_length === 3 && hasDescription) {
        cardWrapStyle = {
          height: 140
        };
      } else if (_length === 4 && !hasDescription) {
        cardWrapStyle = {
          height: 106
        };
      } else if (_length === 4 && hasDescription) {
        cardWrapStyle = {
          height: 130
        };
      } else if (_length === 5) {
        cardWrapStyle = {
          height: 86
        };
      }

      _this.cardWrapStyle = cardWrapStyle;
      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ModeCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {}
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            showShadow = _this$props4.showShadow,
            modeCardStyle = _this$props4.modeCardStyle;
        var defaultCardStyle = {
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, modeCardStyle, this.cardWrapStyle, this.radius, !this.props.allowFontScaling ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: showShadow,
          disabled: true,
          innerView: this.renderModeCard(),
          cardStyle: mixCardStyle,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable,
          numberOfLines: this.props.numberOfLines
        });
      }
    }]);
    return ModeCard;
  }(_react.Component);

  ModeCard.contextType = _configProvider.ConfigContext;
  ModeCard.defaultProps = {
    radiusType: 'all',
    modes: [{
      description: '',
      icon: {},
      isDisabled: false,
      isActive: false,
      isPressing: false
    }],
    pressIn: function pressIn() {},
    pressOut: function pressOut() {},
    modesKey: '',
    descriptionStyle: {},
    activeDescriptionStyle: {},
    showShadow: true,
    modeCardStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true
  };
  ModeCard.propTypes = {
    radiusType: _propTypes.default.string,
    modesKey: _propTypes.default.string,
    modes: _propTypes.default.arrayOf(_propTypes.default.shape({
      isDisabled: _propTypes.default.bool,
      isActive: _propTypes.default.bool,
      icon: _propTypes.default.shape({
        normal: _propTypes.default.any,
        press: _propTypes.default.any,
        active: _propTypes.default.any,
        activeDisabled: _propTypes.default.any
      }),
      description: _propTypes.default.string,
      isPressing: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    pressIn: _propTypes.default.func,
    pressOut: _propTypes.default.func,
    descriptionStyle: _propTypes.default.object,
    activeDescriptionStyle: _propTypes.default.object,
    showShadow: _propTypes.default.bool,
    modeCardStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      paddingTop: padding3,
      paddingBottom: padding3
    },
    main: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    mode: {
      width: iconLength,
      marginRight: 40
    },
    icon: {
      width: iconLength,
      height: iconLength
    },
    description: {
      fontSize: 13,
      marginTop: 10,
      textAlign: 'center',
      lineHeight: 14
    }
  });

  var _default = ModeCard;
  exports.default = _default;
},22873,[14308,14305,14314,14317,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22864,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var radiusValue = 10;
  var pictureLength = 40;
  var OFF_COLOR = '#f0f0f0';

  var IndependentCard = function (_Component) {
    (0, _inherits2.default)(IndependentCard, _Component);

    function IndependentCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, IndependentCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IndependentCard).call(this, props));

      _this.changeSwitchValue = function () {
        var _this$props = _this.props,
            value = _this$props.value,
            changeValue = _this$props.changeValue,
            switchKey = _this$props.switchKey;

        if (changeValue) {
          changeValue(value, switchKey);
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            disabledCard = _this$props2.disabledCard,
            changeValue = _this$props2.changeValue,
            value = _this$props2.value,
            switchKey = _this$props2.switchKey;

        if (disabled || disabledCard) {
          return;
        }

        if (actionName === 'activate' && typeof changeValue === 'function') {
          changeValue(value, switchKey);
        }
      };

      (0, _reportDecorator.referenceReport)('IndependentCard');
      _this.state = {
        radius: {}
      };
      return _this;
    }

    (0, _createClass2.default)(IndependentCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var radius = {};
        this.setState(function (state, props) {
          var radiusType = props.radiusType;

          switch (radiusType) {
            case 'none':
              radius = {};
              break;

            case 'top':
              radius = {
                borderTopLeftRadius: radiusValue,
                borderTopRightRadius: radiusValue
              };
              break;

            case 'bottom':
              radius = {
                borderBottomLeftRadius: radiusValue,
                borderBottomRightRadius: radiusValue
              };
              break;

            default:
              radius = {
                borderRadius: radiusValue
              };
          }

          return {
            radius: radius
          };
        });
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        var _this$props3 = this.props,
            picture = _this$props3.picture,
            title1 = _this$props3.title1,
            title2 = _this$props3.title2,
            value = _this$props3.value,
            onTintColor = _this$props3.onTintColor,
            tintColor = _this$props3.tintColor,
            switchStyle = _this$props3.switchStyle,
            disabled = _this$props3.disabled,
            disabledCard = _this$props3.disabledCard,
            accessible = _this$props3.accessible,
            accessibilityLabel = _this$props3.accessibilityLabel,
            accessibilityHint = _this$props3.accessibilityHint;

        var subTitleRN = _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.title2, {
            color: theme.colorGrayNormal
          }],
          numberOfLines: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title2);

        var subTitle = title2 ? subTitleRN : null;
        var opacity = disabledCard ? 0.3 : 1;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.card, {
            opacity: opacity
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: !!value
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          source: picture,
          style: styles.picture
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))), _react.default.createElement(_reactNative.View, {
          style: styles.title
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 1,
          style: [styles.title1, {
            color: theme.colorBlack
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), title1), subTitle), _react.default.createElement(_reactNative.View, {
          style: styles.switchView
        }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
          value: value,
          onValueChange: this.changeSwitchValue,
          onTintColor: onTintColor,
          tintColor: tintColor,
          style: switchStyle,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))));
      }
    }]);
    return IndependentCard;
  }(_react.Component);

  IndependentCard.contextType = _configProvider.ConfigContext;
  IndependentCard.defaultProps = {
    radiusType: 'all',
    picture: -1,
    title1: '',
    title2: '',
    value: false,
    switchKey: '',
    changeValue: function changeValue() {},
    onTintColor: '',
    tintColor: '',
    switchStyle: {},
    disabled: false,
    disabledCard: false
  };
  IndependentCard.propTypes = {
    radiusType: _propTypes.default.string,
    picture: _propTypes.default.number,
    title1: _propTypes.default.string,
    title2: _propTypes.default.string,
    switchKey: _propTypes.default.string,
    value: _propTypes.default.bool,
    changeValue: _propTypes.default.func,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    disabled: _propTypes.default.bool,
    disabledCard: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };

  var styles = _reactNative.StyleSheet.create({
    card: {
      flex: 1,
      height: 80,
      paddingLeft: 20,
      paddingRight: 20,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-between'
    },
    picture: {
      width: pictureLength,
      height: pictureLength,
      borderRadius: 20,
      marginRight: 14
    },
    title: {
      flex: 1
    },
    title1: {
      fontSize: 15
    },
    title2: {
      fontSize: 12
    },
    switchView: {
      paddingLeft: 30
    }
  });

  var _default = IndependentCard;
  exports.default = _default;
},22876,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "DragGear", {
    enumerable: true,
    get: function get() {
      return _DragGear.default;
    }
  });
  Object.defineProperty(exports, "NormalGear", {
    enumerable: true,
    get: function get() {
      return _NormalGear.default;
    }
  });
  Object.defineProperty(exports, "SlideGear", {
    enumerable: true,
    get: function get() {
      return _SlideGear.default;
    }
  });

  var _DragGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NormalGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));
},22879,[14305,22882,22894,22897]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;
  var BIGGER_SIZE = 1.35;
  var dragStartAnimationConfig = {
    toValue: BIGGER_SIZE,
    duration: 50,
    useNativeDriver: true
  };
  var releaseAnimationConfig = {
    toValue: 1,
    duration: _reactNative.Platform.select({
      ios: 160,
      android: 100
    }),
    useNativeDriver: true
  };

  var DragGear = function (_React$Component) {
    (0, _inherits2.default)(DragGear, _React$Component);

    function DragGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, DragGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DragGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('DragGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        scale: new _reactNative.Animated.Value(1),
        selectIndex: _this.props.selectIndex,
        currentOption: _this.props.options[_this.props.selectIndex],
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.offset = 0;
      _this.panResponder = _reactNative.PanResponder.create({
        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
          return true;
        },
        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
          return false;
        },
        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
          return true;
        },
        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
          return true;
        },
        onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
          return false;
        },
        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
          return false;
        },
        onPanResponderGrant: _this._onPanResponderGrant.bind((0, _assertThisInitialized2.default)(_this)),
        onPanResponderMove: _reactNative.Animated.event([null, {
          dx: _this.state.pan,
          moveX: _this.state.moveX
        }]),
        onPanResponderRelease: _this._onPanResponderRelease.bind((0, _assertThisInitialized2.default)(_this))
      });
      return _this;
    }

    (0, _createClass2.default)(DragGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          if (_this2.pressToChoose && _reactNative.Platform.OS === 'ios') {
            var moveX = _this2.currentCoord + e.value;

            var index = _this2.getClosetIndex(moveX);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          }
        });

        if (_reactNative.Platform.OS === 'ios') {
          this.state.moveX.addListener(function (e) {
            var index = _this2.getClosetIndex(e.value);

            _this2.setState({
              currentOption: _this2.props.options[index]
            });
          });
        }
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;
        var diffs = this.coords.map(function (coord) {
          return Math.abs(coord - adjustCoord);
        });
        return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        _reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig).start();

        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
        this.pressToChoose = false;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var index = this.getClosetIndex(gesture.moveX);
        this.animated2TargetIndex(index);

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }, {
      key: "animated2TargetIndex",
      value: function animated2TargetIndex(index) {
        var _this3 = this;

        this.offset = 0;
        this.setState({
          selectIndex: index
        }, function () {
          _this3.getDragRange(function () {
            _this3.state.pan.setValue(0);

            _reactNative.Animated.timing(_this3.state.scale, releaseAnimationConfig).start(function () {
              if (_reactNative.Platform.OS == 'android') {
                _this3.setState({
                  currentOption: _this3.props.options[index]
                });
              }
            });
          });
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        this.length = length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord() {
        var _this4 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          var startCoord = x - _this4.optionWidth / 2;
          _this4.coords = [];

          for (var i = 0; i < _this4.props.options.length; i++) {
            _this4.coords[i] = startCoord + (_this4.optionWidth + _this4.margin) * (i + 1);
          }

          _this4.getDragRange();
        });
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this5 = this;

        this.currentCoord = this.coords[this.state.selectIndex];
        this.dragToValueArray = this.coords.map(function (coord) {
          return coord - _this5.currentCoord;
        });
        this.setState({
          dragToValueMin: this.dragToValueArray[0] || 0,
          dragToValueMax: this.dragToValueArray[this.length - 1] || 0
        }, function () {
          callback && callback();
        });
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this6 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          borderWidth: 0
        }]);

        var selectIndex = this.state.selectIndex;
        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this6.props.allowFontScaling,
            numberOfLines: _this6.props.numberOfLines,
            onPress: function onPress() {
              return _this6.onPress(index);
            },
            text: option,
            select: selectIndex === index,
            style: style,
            textStyle: _this6.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this6.props.accessible,
            accessibilityLabel: _this6.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this6.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min
        };
        var innerCircle = {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2,
          backgroundColor: this.props.selectColor,
          alignItems: 'center',
          justifyContent: 'center'
        };
        var touchArea = {
          width: this.optionWidth + this.margin * 2,
          height: this.optionWidth * BIGGER_SIZE,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }, {
            scale: this.state.scale
          }]
        };
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: innerCircle
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [this.props.textStyle, {
            color: '#fff'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }), this.state.currentOption))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this7 = this;

        if (this.showNothing) return null;
        var container = {
          width: this.containerWidth,
          height: this.optionWidth * BIGGER_SIZE
        };
        return _react.default.createElement(_reactNative.View, {
          onLayout: function onLayout() {
            return _this7.calculateCoord();
          },
          ref: function ref(container) {
            return _this7._container = container;
          },
          style: [this.props.containerStyle, styles.container, container]
        }, this.renderOptions(), this.renderDraggable());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var _this8 = this;

        this.pressToChoose = true;

        _reactNative.Animated.sequence([_reactNative.Animated.timing(this.state.scale, dragStartAnimationConfig), _reactNative.Animated.timing(this.state.pan, {
          toValue: this.dragToValueArray[index],
          duration: 200,
          useNativeDriver: true
        })]).start(function () {
          return _this8.animated2TargetIndex(index);
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return DragGear;
  }(_react.default.Component);

  DragGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  DragGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectColor: '#f0ac3d',
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = DragGear;
  exports.default = _default;
},22882,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22885,22888,22891,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var Block = function (_React$Component) {
    (0, _inherits2.default)(Block, _React$Component);

    function Block() {
      (0, _classCallCheck2.default)(this, Block);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Block).apply(this, arguments));
    }

    (0, _createClass2.default)(Block, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: this.props.style
        }, this.props.panHandlers), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onLongPress: this.props.onLongPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.children));
      }
    }]);
    return Block;
  }(_react.default.Component);

  exports.default = Block;
  Block.propTypes = {
    style: _propTypes.default.any,
    panHandlers: _propTypes.default.object,
    onLongPress: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
},22885,[14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  var SIZE = 40;
  var TEXT_COLOR = '#bbb';
  var BORDER_COLOR = '#ccc';

  var Clickable = function (_React$Component) {
    (0, _inherits2.default)(Clickable, _React$Component);

    function Clickable() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Clickable);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Clickable)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.animatedValue = new _reactNative.Animated.Value(0);
      return _this;
    }

    (0, _createClass2.default)(Clickable, [{
      key: "render",
      value: function render() {
        var color = this.props.select ? '#fff' : TEXT_COLOR;
        var boderStyle = this.props.select ? {
          borderWidth: 0
        } : {
          borderColor: BORDER_COLOR,
          borderWidth: 1
        };
        var backgroundColor = this.props.select ? this.props.selectColor : '#fff';
        return _react.default.createElement(_reactNative.Animated.View, {
          style: [styles.animationContainer, boderStyle, this.props.style, {
            backgroundColor: backgroundColor
          }]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: this.props.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel || this.props.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            checked: !!this.props.select
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.container
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.text, this.props.textStyle, {
            color: color
          }],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.props.text))));
      }
    }]);
    return Clickable;
  }(_react.default.Component);

  exports.default = Clickable;
  Clickable.propTypes = {
    select: _propTypes.default.bool,
    selectColor: _propTypes.default.string,
    style: _propTypes.default.object,
    onPress: _propTypes.default.func.isRequired,
    text: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
    textStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Clickable.defaultProps = {
    select: false,
    selectColor: '#f0ac3d',
    allowFontScaling: true
  };

  var styles = _reactNative.StyleSheet.create({
    animationContainer: {
      width: SIZE,
      height: SIZE,
      borderRadius: 20
    },
    container: {
      flex: 1,
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 11,
      textAlign: 'center'
    }
  });
},22888,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var Logger = function () {
    function Logger() {
      (0, _classCallCheck2.default)(this, Logger);
    }

    (0, _createClass2.default)(Logger, null, [{
      key: "warn",
      value: function warn(message) {
        var styles = ["color: " + Logger.theme.warning.color, "background: " + Logger.theme.warning.background, 'padding: 5px', 'font-size: 14px'].join(';');
      }
    }]);
    return Logger;
  }();

  Logger.theme = {
    ok: {
      background: 'purple',
      color: 'white'
    },
    error: {
      background: 'red',
      color: 'white'
    },
    warning: {
      background: 'darkorange',
      color: 'white'
    },
    attention: {
      background: '#ffdc00',
      color: 'black'
    },
    success: {
      background: '#bada55',
      color: 'black'
    },
    info: {
      background: '#abdcfb',
      color: 'black'
    },
    default: {
      background: 'white',
      color: 'black'
    }
  };
  var _default = Logger;
  exports.default = _default;
},22891,[14305,14320,14323]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _Clickable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      screenWidth = _Dimensions$get.width;

  var DEFAULT_SIZE = 50;
  var DEFAULT_MARGIN = 12;

  var NormalGear = function (_React$Component) {
    (0, _inherits2.default)(NormalGear, _React$Component);

    function NormalGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NormalGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NormalGear).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NormalGear');

      if (_this.props.options.length === 0) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          optionWidth = _this$getCorrectLayou.optionWidth,
          margin = _this$getCorrectLayou.margin,
          containerWidth = _this$getCorrectLayou.containerWidth;

      _this.optionWidth = optionWidth;
      _this.margin = margin;
      _this.containerWidth = containerWidth;

      if (_this.optionWidth < 20) {
        _this.showNothing = true;

        _Logger.default.warn('在目前maxWidth下显示不了这么多选项，请重新规划');

        return (0, _possibleConstructorReturn2.default)(_this);
      }

      _this.selectArray = Array.from({
        length: _this.props.options.length
      }, function () {
        return false;
      });
      var selectArray = Array.from(_this.selectArray);
      selectArray[_this.props.selectIndex] = true;
      _this.state = {
        selectArray: selectArray
      };
      return _this;
    }

    (0, _createClass2.default)(NormalGear, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.showNothing) return;
        var selectIndex = newProps.selectIndex;

        if (selectIndex !== this.props.selectIndex) {
          if (selectIndex < 0 || selectIndex >= this.props.options.length) return;
          this.onPress(selectIndex);
        }
      }
    }, {
      key: "renderOptions",
      value: function renderOptions() {
        var _this2 = this;

        var style = _reactNative.StyleSheet.flatten([this.props.normalStyle, {
          width: this.optionWidth,
          height: this.optionWidth,
          borderRadius: this.optionWidth / 2
        }]);

        return this.props.options.map(function (option, index) {
          return _react.default.createElement(_Clickable.default, (0, _extends2.default)({
            key: option,
            allowFontScaling: _this2.props.allowFontScaling,
            numberOfLines: _this2.props.numberOfLines,
            select: _this2.state.selectArray[index],
            selectColor: _this2.props.selectColor,
            onPress: function onPress() {
              return _this2.onPress(index);
            },
            text: option,
            style: style,
            textStyle: _this2.props.textStyle
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: _this2.props.clickAccessibilityLables[index] || option,
            accessibilityHint: _this2.props.clickAccessibilityHints[index]
          })));
        });
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var optionWidth = this.props.normalStyle.width || DEFAULT_SIZE;
        var _this$props = this.props,
            margin = _this$props.margin,
            maxWidth = _this$props.maxWidth;
        var length = this.props.options.length;
        var containerWidth = (optionWidth + margin) * length + margin;
        if (containerWidth <= maxWidth) return {
          optionWidth: optionWidth,
          margin: margin,
          containerWidth: containerWidth
        };
        var newOptionWidth = Math.floor(maxWidth / (length + (length + 1) * 0.5));
        var newMargin = newOptionWidth / 2;
        var newContainerWidth = (3 * length + 1) * newMargin;
        return {
          optionWidth: newOptionWidth,
          margin: newMargin,
          containerWidth: newContainerWidth
        };
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        return _react.default.createElement(_reactNative.View, {
          style: [this.props.containerStyle, styles.container, {
            width: this.containerWidth
          }]
        }, this.renderOptions());
      }
    }, {
      key: "onPress",
      value: function onPress(index) {
        var selectArray = Array.from(this.selectArray);
        selectArray[index] = true;
        this.setState({
          selectArray: selectArray
        });

        if (this.props.onSelect) {
          this.props.onSelect(index);
        }
      }
    }]);
    return NormalGear;
  }(_react.default.Component);

  NormalGear.propTypes = {
    options: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])).isRequired,
    containerStyle: _propTypes.default.object,
    normalStyle: _propTypes.default.object,
    textStyle: _propTypes.default.object,
    margin: _propTypes.default.number,
    maxWidth: _propTypes.default.number,
    selectColor: _propTypes.default.string,
    selectIndex: _propTypes.default.number,
    onSelect: _propTypes.default.func.isRequired,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    clickAccessibilityLables: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    clickAccessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };
  NormalGear.defaultProps = {
    options: [],
    normalStyle: {},
    margin: DEFAULT_MARGIN,
    maxWidth: screenWidth,
    selectIndex: 0,
    allowFontScaling: true,
    clickAccessibilityLables: [],
    clickAccessibilityHints: []
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-evenly'
    }
  });

  var _default = NormalGear;
  exports.default = _default;
},22894,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22888,22420,22891,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _color = _$$_REQUIRE(_dependencyMap[15]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[18]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[19]);

  var TYPE = {
    CIRCLE: 'circle',
    RECTANGLE: 'rectangle'
  };
  var CONTENTTYPE = {
    NUM: 'num',
    COLOR: 'color',
    COLORTEM: 'colorTem'
  };
  var COLORRANGE = {
    "0.00": '#FFA100',
    "0.10": '#FFFA00',
    "0.20": '#9AFF00',
    "0.30": '#01FF00',
    "0.40": '#00FDA4',
    "0.50": '#00EEFF',
    "0.60": '#007CFF',
    "0.70": '#0600F9',
    "0.80": '#BF00FC',
    "0.90": '#FF0081',
    "1.00": '#FF0000'
  };
  var COLORTEMRANGE = {
    "0.00": '#FFAE00',
    "0.50": '#F6EFD6',
    "1.00": '#8AB2D4'
  };
  Object.freeze(TYPE);
  Object.freeze(CONTENTTYPE);
  var DEFAULT_SIZE = 40;
  var MIN_MARGIN = 3;
  var MARGIN = 7.5;
  var MAX_MARGIN = 10;
  var DEFAULT_HEIGHT = 55;
  var DEFAULT_BLOCK_COLOR = '#FFFFFF';

  var SlideGear = function (_React$Component) {
    (0, _inherits2.default)(SlideGear, _React$Component);

    function SlideGear(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, SlideGear);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SlideGear).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
            firstCoord = _assertThisInitialize.firstCoord,
            endCoord = _assertThisInitialize.endCoord,
            currentCoord = _assertThisInitialize.currentCoord,
            coords = _assertThisInitialize.coords,
            optionStep = _assertThisInitialize.optionStep,
            length = _assertThisInitialize.length;

        var everyCoord = (optionStep ? endCoord - firstCoord : coords[length - 1] - coords[0]) / 10;
        var moveX = 0;

        switch (actionName) {
          case 'increment':
            moveX = currentCoord + everyCoord;
            break;

          case 'decrement':
            moveX = currentCoord - everyCoord;
            break;
        }

        _this.accessbilittMockReleaseCallback({
          moveX: moveX
        });
      };

      _this.accessbilittMockReleaseCallback = function (gesture) {
        var coord = gesture.moveX - _this.offset;

        if (_this.optionStep) {
          if (coord >= _this.firstCoord && coord <= _this.endCoord) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < _this.firstCoord ? _this.firstCoord : _this.endCoord;
          }
        } else {
          var min = _this.coords[0];
          var max = _this.coords[_this.length - 1];

          if (coord >= min && coord <= max) {
            _this.currentCoord = coord;
          } else {
            _this.currentCoord = coord < min ? min : max;
          }
        }

        var index = _this.getClosetIndex(gesture.moveX);

        if (_this.props.contentType !== CONTENTTYPE.COLOR) {
          _this.value = Math.max(0, Math.min(_this.length - 1, index));
        }

        if (_this.props.onSlidingComplete) {
          if (_this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = _this.getColorFromValue(index);

            _this.value = _this.props.value;

            _this.props.onSlidingComplete(colorValue);
          } else {
            _this.props.onSlidingComplete(index);

            _this.value = _this.props.value;
          }
        }
      };

      (0, _reportDecorator.referenceReport)('SlideGear');

      if (_this.props.options.length === 0) {
        if (!_this.props.optionStep) {
          _this.showNothing = true;
          return (0, _possibleConstructorReturn2.default)(_this);
        } else {
          _this.optionMin = _this.props.optionMin;
          _this.optionMax = _this.props.optionMax;
          _this.optionStep = _this.props.optionStep;
          _this.length = (_this.optionMax - _this.optionMin) / _this.optionStep + 1;
        }
      } else {
        _this.options = _this.props.options;
        _this.length = _this.props.options.length;
      }

      var _this$getCorrectLayou = _this.getCorrectLayout(),
          margin = _this$getCorrectLayou.margin,
          blockWidth = _this$getCorrectLayou.blockWidth,
          blockHeight = _this$getCorrectLayou.blockHeight,
          containerHeight = _this$getCorrectLayou.containerHeight;

      _this.margin = margin;
      _this.blockWidth = blockWidth;
      _this.blockHeight = blockHeight;
      _this.containerHeight = containerHeight;
      _this.value = _this.props.value;
      _this.state = {
        pan: new _reactNative.Animated.Value(0),
        moveX: new _reactNative.Animated.Value(0),
        value: _this.props.value,
        dragToValueMin: 0,
        dragToValueMax: 0
      };
      _this.translateX = 0;
      _this.offset = 0;

      _this.constructPanResponder(props);

      return _this;
    }

    (0, _createClass2.default)(SlideGear, [{
      key: "constructPanResponder",
      value: function constructPanResponder(props) {
        this.panResponder = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture() {
            return false;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return !props.disabled;
          },
          onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {
            return !props.disabled;
          },
          onShouldBlockNativeResponder: function onShouldBlockNativeResponder() {
            return true;
          },
          onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {
            return false;
          },
          onPanResponderGrant: this._onPanResponderGrant.bind(this),
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.state.pan,
            moveX: this.state.moveX
          }]),
          onPanResponderRelease: this._onPanResponderRelease.bind(this),
          onPanResponderTerminate: this._onPanResponderRelease.bind(this)
        });
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (this.sliding) {
          return;
        }

        var value = newProps.value,
            disabled = newProps.disabled;

        if (disabled !== this.props.disabled) {
          this.constructPanResponder(newProps);
        }

        if (this.optionStep) {
          var optionMin = newProps.optionMin,
              optionMax = newProps.optionMax,
              optionStep = newProps.optionStep;

          if (optionMin === this.state.optionMin && optionMax === this.state.optionMax && optionStep === this.state.optionStep && value === this.props.value) {
            return;
          }

          this.optionMin = optionMin;
          this.optionMax = optionMax;
          this.optionStep = optionStep;
          this.length = (this.optionMax - this.optionMin) / this.optionStep + 1;

          if (value !== this.props.value) {
            this.value = value;
          }
        } else {
          var options = newProps.options;
          if (value === this.value && this.isSameArray(options, this.props.options)) return;

          if (!this.isSameArray(options, this.props.options)) {
            if (!(options instanceof Array) || options.length === 0) {
              this.showNothing = true;
              return;
            } else {
              this.showNothing = false;
              this.options = options;
              this.length = options.length;
            }
          }

          if (value !== this.props.value) {
            if (value < 0 || value >= this.length) {
              this.value = 0;
            } else {
              this.value = value;
            }
          }
        }

        this.calculateCoord(this.containerLayout);
      }
    }, {
      key: "isSameArray",
      value: function isSameArray(arr1, arr2) {
        if (!(arr1 instanceof Array) || !(arr2 instanceof Array)) return false;
        if (arr1.length !== arr2.length) return false;

        for (var i = 0; i < arr1.length; i++) {
          if (arr1[i] !== arr2[i]) return false;
        }

        return true;
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.state.pan.addListener(function (e) {
          var _this2$state = _this2.state,
              min = _this2$state.dragToValueMin,
              max = _this2$state.dragToValueMax;

          if (e.value >= min && e.value <= max) {
            _this2.translateX = e.value;
          } else {
            _this2.translateX = e.value < min ? min : max;
          }

          _this2._background.setNativeProps({
            width: _this2.translateX + _this2.margin * 2 + _this2.blockWidth - _this2.state.dragToValueMin
          });
        });
        this.state.moveX.addListener(function (e) {
          var index = _this2.getClosetIndex(e.value);

          if (_this2.props.onValueChange) {
            if (_this2.props.contentType === CONTENTTYPE.COLOR) {
              var colorValue = _this2.getColorFromValue(index);

              _this2.props.onValueChange(colorValue);
            } else {
              _this2.props.onValueChange(index);
            }
          }
        });
      }
    }, {
      key: "getClosetIndex",
      value: function getClosetIndex(moveX) {
        var adjustCoord = moveX - this.offset;

        if (this.optionStep) {
          var value;

          if (adjustCoord <= this.firstCoord) {
            value = this.optionMin;
          } else if (adjustCoord >= this.endCoord) {
            value = this.optionMax;
          } else {
            var index = Math.round((adjustCoord - this.firstCoord) / this.d);
            value = index * this.optionStep + this.optionMin;
            if (value > this.optionMax) value = this.optionMax;
          }

          return value;
        } else {
          var diffs = this.coords.map(function (coord) {
            return Math.abs(coord - adjustCoord);
          });
          return diffs.indexOf(Math.min.apply(Math, (0, _toConsumableArray2.default)(diffs)));
        }
      }
    }, {
      key: "getColorFromValue",
      value: function getColorFromValue(value) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var colorHex = getter.getColorFromPercent((value - this.props.optionMin) / (this.props.optionMax - this.props.optionMin) * 100);
        var colorValue = (0, _color.transformHexToDigtal)(colorHex);
        return colorValue;
      }
    }, {
      key: "getValueFromColor",
      value: function getValueFromColor(colorValue) {
        var getter = (0, _color.colorGetterforRange)(this.props.colorRangeObject);
        var percent = getter.getPercentFromColor((0, _color.transformDigtalToHex)(colorValue));
        var value = this.props.optionMin + (this.props.optionMax - this.props.optionMin) * (percent / 100);
        return value;
      }
    }, {
      key: "_onPanResponderGrant",
      value: function _onPanResponderGrant(e) {
        this.sliding = true;
        this.state.pan.setOffset(this.translateX);
        this.state.pan.setValue(0);
        var pageX = e.nativeEvent.pageX;
        this.offset = pageX - this.currentCoord;
      }
    }, {
      key: "_onPanResponderRelease",
      value: function _onPanResponderRelease(e, gesture) {
        var coord = gesture.moveX - this.offset;

        if (this.optionStep) {
          if (coord >= this.firstCoord && coord <= this.endCoord) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < this.firstCoord ? this.firstCoord : this.endCoord;
          }
        } else {
          var min = this.coords[0];
          var max = this.coords[this.length - 1];

          if (coord >= min && coord <= max) {
            this.currentCoord = coord;
          } else {
            this.currentCoord = coord < min ? min : max;
          }
        }

        var index = this.getClosetIndex(gesture.moveX);

        if (this.props.contentType !== CONTENTTYPE.COLOR) {
          this.value = index;
        }

        if (this.props.onSlidingComplete) {
          if (this.props.contentType === CONTENTTYPE.COLOR) {
            var colorValue = this.getColorFromValue(index);
            this.value = colorValue;
            this.props.onSlidingComplete(colorValue);
          } else {
            this.props.onSlidingComplete(index);
            this.value = index;
          }
        }

        this.offset = 0;
        this.sliding = false;
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout() {
        var containerHeight = this.props.containerStyle.height || DEFAULT_HEIGHT;
        var blockWidth = this.props.blockStyle.width || DEFAULT_SIZE;
        var margin = ~~(containerHeight / 10);
        margin = margin > MAX_MARGIN ? MAX_MARGIN : margin;
        margin = margin < MIN_MARGIN ? MIN_MARGIN : margin;
        var blockHeight = containerHeight - margin * 2;
        return {
          margin: margin,
          blockWidth: this.props.type === TYPE.CIRCLE ? blockHeight : blockWidth,
          blockHeight: blockHeight,
          containerHeight: containerHeight
        };
      }
    }, {
      key: "_onLayout",
      value: function _onLayout() {
        var _this3 = this;

        this._container.measure(function (x, y, w, h, px, py) {
          _this3.calculateCoord({
            x: x,
            y: y,
            w: w,
            h: h,
            px: px,
            py: py
          });
        });
      }
    }, {
      key: "calculateCoord",
      value: function calculateCoord(obj) {
        if (!obj) {
          return;
        }

        var x = obj.x,
            w = obj.w;
        this.containerLayout = obj;
        var offset = this.margin * 2 + this.blockWidth;
        var startCoord = x + offset / 2;
        var d = (w - offset) / (this.length - 1);
        this.d = d;

        if (d <= 0) {}

        if (!this.optionStep) {
          this.coords = this.options.map(function (v, i) {
            return d > 0 ? startCoord + d * i : 0;
          });
          this.currentCoord = this.coords[this.value];
        } else {
          this.firstCoord = startCoord;
          this.endCoord = startCoord + d * (this.length - 1);

          if (this.props.contentType !== CONTENTTYPE.COLOR) {
            this.currentCoord = startCoord + d * ((this.value - this.optionMin) / this.optionStep);
          } else {
            var value = this.getValueFromColor(this.value);
            this.currentCoord = startCoord + d * Math.round((value - this.optionMin) / this.optionStep);
          }
        }

        this.totalWidth = w;
        this.getDragRange();
      }
    }, {
      key: "getDragRange",
      value: function getDragRange(callback) {
        var _this4 = this;

        if (!this.optionStep) {
          this.setState({
            dragToValueMin: this.coords[0] - this.currentCoord || 0,
            dragToValueMax: this.coords[this.length - 1] - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        } else {
          this.setState({
            dragToValueMin: this.firstCoord - this.currentCoord || 0,
            dragToValueMax: this.endCoord - this.currentCoord || 0
          }, function () {
            callback && callback();

            _this4.state.pan.setOffset(0);

            _this4.state.pan.setValue(0);
          });
        }
      }
    }, {
      key: "renderDraggable",
      value: function renderDraggable() {
        var _this$state = this.state,
            min = _this$state.dragToValueMin,
            max = _this$state.dragToValueMax;
        var colorScheme = this.context.colorScheme;
        if (min === undefined) return null;
        var position = {
          position: 'absolute',
          left: -min - this.margin,
          top: -this.margin
        };
        var innerCircle = this.props.type === TYPE.CIRCLE ? {
          width: this.blockHeight,
          height: this.blockHeight,
          borderRadius: this.blockHeight / 2
        } : {
          width: this.blockWidth,
          height: this.blockHeight,
          borderRadius: 0
        };
        var touchArea = {
          width: this.blockWidth + this.margin * 4,
          height: this.containerHeight + this.margin * 2,
          backgroundColor: 'transparent',
          alignItems: 'center',
          justifyContent: 'center'
        };
        var panStyle = {
          transform: [{
            translateX: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [min, min, max, max]
            })
          }]
        };
        var whiteNoDark = new _DynamicColor.default('#FFFFFF', 'rgba(255,255,255,1)');
        var greyNoDark = new _DynamicColor.default('rgba(255,255,255,1)', 'rgba(255,255,255,1)');
        return _react.default.createElement(_Block.default, {
          panHandlers: this.panResponder.panHandlers,
          style: [position, panStyle]
        }, _react.default.createElement(_reactNative.View, {
          style: touchArea
        }, _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: this.props.disabled ? greyNoDark.color(colorScheme) : whiteNoDark.color(colorScheme)
          }, this.props.blockStyle, innerCircle]
        })));
      }
    }, {
      key: "renderBackground",
      value: function renderBackground() {
        var _this$context$theme,
            _this5 = this;

        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var _this$state2 = this.state,
            min = _this$state2.dragToValueMin,
            max = _this$state2.dragToValueMax;
        if (min === undefined) return null;
        var minimumTrackTintColor = this.props.minimumTrackTintColor ? this.props.minimumTrackTintColor : (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor;

        if (this.props.disabled) {
          var _this$context$theme2;

          minimumTrackTintColor = (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorSlideLeft;
        }

        return _react.default.createElement(_reactNative.Animated.View, {
          ref: function ref(background) {
            return _this5._background = background;
          },
          style: {
            position: 'absolute',
            width: this.state.pan.interpolate({
              inputRange: [min - 1, min, max, max + 1],
              outputRange: [this.margin * 2 + this.blockWidth, this.margin * 2 + this.blockWidth, this.totalWidth, this.totalWidth]
            }),
            height: this.containerHeight,
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
            backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? minimumTrackTintColor : '',
            opacity: opacityValue
          }
        }, this.props.showEndText ? _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-start',
            minWidth: this.blockWidth + this.margin * 2,
            height: this.blockHeight
          }]
        }, _react.default.createElement(_reactNative.Text, {
          accessible: false,
          focusable: false,
          style: [styles.text, {
            color: leftTextColorValue
          }, this.props.leftTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMin : this.options[0])) : null);
      }
    }, {
      key: "renderRightText",
      value: function renderRightText() {
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        var width = this.blockWidth + this.margin * 2;

        if (this.optionStep && this.optionMax > 999999) {
          width += 20;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.textContainer, {
            margin: this.margin,
            alignSelf: 'flex-end',
            minWidth: width,
            height: this.blockHeight,
            opacity: opacityValue
          }]
        }, this.props.showEndText ? _react.default.createElement(_reactNative.Text, {
          accessible: false,
          style: [styles.text, {
            color: rightTextColorValue
          }, this.props.rightTextStyle],
          allowFontScaling: this.props.allowFontScaling,
          numberOfLines: this.props.numberOfLines
        }, this.optionStep ? this.optionMax : this.options[this.length - 1]) : null);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme3,
            _this6 = this;

        if (this.showNothing) return null;
        var maximumTrackTintColor = this.props.maximumTrackTintColor ? this.props.maximumTrackTintColor : (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorBtnGrayNor;
        var containerStyle = {
          height: this.containerHeight,
          borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0,
          backgroundColor: this.props.contentType === CONTENTTYPE.NUM ? maximumTrackTintColor : ''
        };
        var opacityValue = this.props.disabled ? 0.3 : 1;
        var leftTextColorValue = this.props.disabled && this.props.leftTextOffColor ? this.props.leftTextOffColor : this.props.leftTextColor;
        var rightTextColorValue = this.props.disabled && this.props.rightTextOffColor ? this.props.rightTextOffColor : this.props.rightTextColor;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          onLayout: function onLayout() {
            return _this6._onLayout();
          },
          ref: function ref(container) {
            return _this6._container = container;
          },
          style: [this.props.containerStyle, containerStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.state.dragToValueMin,
            max: this.state.dragToValueMax,
            now: this.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), this.props.contentType === CONTENTTYPE.NUM ? _react.default.createElement(_reactNative.View, null, this.renderRightText(), this.renderBackground(), this.renderDraggable()) : _react.default.createElement(_reactNativeLinearGradient.default, {
          start: {
            x: 0,
            y: 0
          },
          end: {
            x: 1,
            y: 0
          },
          locations: this.props.contentType === CONTENTTYPE.COLOR ? Object.keys(this.props.colorRangeObject).map(function (value) {
            return Number(value);
          }) : Object.keys(this.props.colorTemRangeObject).map(function (value) {
            return Number(value);
          }),
          colors: this.props.contentType === CONTENTTYPE.COLOR ? Object.values(this.props.colorRangeObject) : Object.values(this.props.colorTemRangeObject),
          style: {
            borderRadius: this.props.type === TYPE.CIRCLE ? this.containerHeight / 2 : 0
          }
        }, this.renderRightText(), this.renderBackground(), this.renderDraggable()));
      }
    }]);
    return SlideGear;
  }(_react.default.Component);

  SlideGear.contextType = _configProvider.ConfigContext;
  SlideGear.propTypes = {
    type: _propTypes.default.oneOf([TYPE.CIRCLE, TYPE.RECTANGLE]),
    options: _propTypes.default.array.isRequired,
    showEndText: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    blockStyle: _propTypes.default.object,
    minimumTrackTintColor: _propTypes.default.string,
    leftTextColor: _propTypes.default.string,
    leftTextOffColor: _propTypes.default.string,
    leftTextStyle: _reactNative.Text.propTypes.style,
    maximumTrackTintColor: _propTypes.default.string,
    rightTextColor: _propTypes.default.string,
    rightTextOffColor: _propTypes.default.string,
    rightTextStyle: _reactNative.Text.propTypes.style,
    value: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    optionMin: _propTypes.default.number,
    optionMax: _propTypes.default.number,
    optionStep: _propTypes.default.number,
    contentType: _propTypes.default.oneOf([CONTENTTYPE.NUM, CONTENTTYPE.COLOR, CONTENTTYPE.COLORTEM]),
    colorRangeObject: _propTypes.default.object,
    colorTemRangeObject: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    numberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SlideGear.defaultProps = {
    type: TYPE.CIRCLE,
    options: [],
    showEndText: true,
    containerStyle: {},
    blockStyle: {},
    minimumTrackTintColor: _Styles.default.common.MHGreen,
    leftTextColor: '#eee',
    leftTextOffColor: 'rgba(127, 127, 127, 0.3)',
    leftTextStyle: {},
    rightTextColor: '#999',
    rightTextOffColor: 'rgba(127, 127, 127, 0.3)',
    rightTextStyle: {},
    value: 0,
    disabled: false,
    optionMin: 0,
    optionMax: 0,
    optionStep: 0,
    contentType: CONTENTTYPE.NUM,
    colorRangeObject: COLORRANGE,
    colorTemRangeObject: COLORTEMRANGE,
    allowFontScaling: true
  };
  SlideGear.TYPE = TYPE;
  SlideGear.CONTENTTYPE = CONTENTTYPE;

  var styles = _reactNative.StyleSheet.create({
    textContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    text: {
      fontSize: 15,
      width: '100%',
      textAlign: 'center'
    }
  });

  var _default = SlideGear;
  exports.default = _default;
},22897,[14305,14344,14359,14320,14323,14371,14377,14374,14386,10318,10297,10033,22780,22885,14299,22900,22435,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$split = color.split(''),
        _color$split2 = (0, _slicedToArray2.default)(_color$split, 7),
        _1 = _color$split2[0],
        r1 = _color$split2[1],
        r2 = _color$split2[2],
        g1 = _color$split2[3],
        g2 = _color$split2[4],
        b1 = _color$split2[5],
        b2 = _color$split2[6];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},22900,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "Separator", {
    enumerable: true,
    get: function get() {
      return _Separator.default;
    }
  });

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22903,[14305,22906]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[7]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var TYPE = {
    ROW: 'row',
    COLUMN: 'column'
  };

  var Separator = function (_React$PureComponent) {
    (0, _inherits2.default)(Separator, _React$PureComponent);

    function Separator() {
      (0, _classCallCheck2.default)(this, Separator);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Separator).apply(this, arguments));
    }

    (0, _createClass2.default)(Separator, [{
      key: "render",
      value: function render() {
        var separatorContainer;
        var separatorStyle;

        if (this.props.type === TYPE.ROW) {
          var maxHeight = {};

          if (this.props.style && this.props.style.height) {
            if (this.props.style.height > 1) {
              maxHeight = {
                height: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            height: 1,
            justifyContent: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([_resources.Styles.common.separator, this.props.style, maxHeight]);
        } else {
          var maxWidth = {};

          if (this.props.style && this.props.style.width) {
            if (this.props.style.width > 1) {
              maxWidth = {
                width: 1
              };
            }
          }

          separatorContainer = {
            backgroundColor: 'transparent',
            width: 1,
            alignItems: 'center'
          };
          separatorStyle = _reactNative.StyleSheet.flatten([{
            width: _reactNative.StyleSheet.hairlineWidth,
            backgroundColor: _resources.Styles.common.hairlineColor
          }, this.props.style, maxWidth]);
        }

        return _reactNative.Platform.select({
          android: _react.default.createElement(_reactNative.View, {
            style: separatorContainer
          }, _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })),
          ios: _react.default.createElement(_reactNative.View, {
            style: separatorStyle
          })
        });
      }
    }]);
    return Separator;
  }(_react.default.PureComponent);

  Separator.propTypes = {
    type: _propTypes.default.string,
    style: _propTypes.default.any
  };
  Separator.defaultProps = {
    type: TYPE.ROW
  };
  var _default = Separator;
  exports.default = _default;
},22906,[14305,14320,14323,14371,14377,14386,10297,10033,10318,22453]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "StringSpinner", {
    enumerable: true,
    get: function get() {
      return _StringSpinner.default;
    }
  });
  Object.defineProperty(exports, "NumberSpinner", {
    enumerable: true,
    get: function get() {
      return _NumberSpinner.default;
    }
  });

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _NumberSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},22909,[14305,22912,22918]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var StringSpinner = function (_React$Component) {
    (0, _inherits2.default)(StringSpinner, _React$Component);

    function StringSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, StringSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(StringSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('StringSpinner');
      _this.gestureHandlers = {};

      if (_this.props.onChangeStart && _reactNative.Platform.OS === 'ios') {
        _this.gestureHandlers = {
          onStartShouldSetResponder: function onStartShouldSetResponder() {
            return true;
          },
          onResponderStart: function onResponderStart() {
            _this.props.onChangeStart();
          }
        };
      }

      return _this;
    }

    (0, _createClass2.default)(StringSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        var pickerStyle = this.props.pickerInnerStyle;

        if (pickerStyle && pickerStyle.textColor) {
          pickerStyle.textColor = pickerStyle.textColor + "text";
        }

        if (pickerStyle && pickerStyle.selectTextColor) {
          pickerStyle.selectTextColor = pickerStyle.selectTextColor + "text";
        }

        if (pickerStyle && pickerStyle.unitTextColor) {
          pickerStyle.unitTextColor = pickerStyle.unitTextColor + "text";
        }

        return _react.default.createElement(_nativeModules.MIOTStringPicker, (0, _extends2.default)({}, this.gestureHandlers, this.props, pickerStyle, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }), {
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onValueChanged) {
              _this2.props.onValueChanged((0, _objectSpread2.default)({}, event.nativeEvent));
            }
          }
        }));
      }
    }]);
    return StringSpinner;
  }(_react.default.Component);

  StringSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    dataSource: _propTypes.default.array,
    defaultValue: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),
    onValueChanged: _propTypes.default.func,
    pickerInnerStyle: _propTypes.default.object
  }, _reactNative.ViewPropTypes, {
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  });
  var _default = StringSpinner;
  exports.default = _default;
},22912,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,22420,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MIOTStringPicker = exports.MIOTNumberPicker = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var MIOTNumberPicker = (0, _reactNative.requireNativeComponent)('MIOTNumberPicker');
  exports.MIOTNumberPicker = MIOTNumberPicker;
  var MIOTStringPicker = (0, _reactNative.requireNativeComponent)('MHStringPicker');
  exports.MIOTStringPicker = MIOTStringPicker;
},22915,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _nativeModules = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';
  var NumberPicker = isAndroid ? _nativeModules.MIOTNumberPicker : null;

  var NumberSpinner = function (_React$Component) {
    (0, _inherits2.default)(NumberSpinner, _React$Component);

    function NumberSpinner(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, NumberSpinner);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(NumberSpinner).call(this, props, context));
      (0, _reportDecorator.referenceReport)('NumberSpinner');
      return _this;
    }

    (0, _createClass2.default)(NumberSpinner, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return isAndroid ? _react.default.createElement(NumberPicker, (0, _extends2.default)({}, this.props, this.props.pickerInnerStyle, {
          lineStyle: this.props.lineStyle || 'default',
          onValueChanged: function onValueChanged(event) {
            if (_this2.props.onNumberChanged) {
              var val = event.nativeEvent || {};
              var result = {
                newValue: parseFloat("" + val.newValue),
                oldValue: parseFloat("" + val.oldValue)
              };

              _this2.props.onNumberChanged(result);
            }
          }
        })) : _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
          type: 1
        }, this.props, {
          defaultValue: "" + this.props.defaultValue,
          onValueChanged: this.props.onNumberChanged
        }));
      }
    }]);
    return NumberSpinner;
  }(_react.default.Component);

  NumberSpinner.defaultProps = {
    valueFormat: _reactNative.Platform.select({
      ios: '%0.0f'
    })
  };
  NumberSpinner.propTypes = (0, _objectSpread2.default)({
    visible: _propTypes.default.bool,
    unit: _propTypes.default.string,
    maxValue: _propTypes.default.number,
    minValue: _propTypes.default.number,
    interval: _propTypes.default.number,
    defaultValue: _propTypes.default.number,
    valueFormat: _propTypes.default.string,
    onNumberChanged: _propTypes.default.func
  }, _reactNative.ViewPropTypes);
  var _default = NumberSpinner;
  exports.default = _default;
},22918,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22912,22915,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "MHDatePicker", {
    enumerable: true,
    get: function get() {
      return _MHDatePicker.default;
    }
  });

  var _MHDatePicker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},22921,[14305,22924]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[13]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Styles = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _string = _$$_REQUIRE(_dependencyMap[16]);

  var _StringSpinner = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _utils = _$$_REQUIRE(_dependencyMap[18]);

  var _locale = _$$_REQUIRE(_dependencyMap[19]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[20]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[21]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[22]);

  var _popButton = _$$_REQUIRE(_dependencyMap[23]);

  var _font = _$$_REQUIRE(_dependencyMap[24]);

  var _singleDataSource;

  var TYPE = {
    SINGLE: 'single',
    TIME24: 'time24',
    TIME12: 'time12',
    DATE: 'date'
  };
  Object.freeze(TYPE);
  var SINGLE_TYPE = {
    MONTH: 'month',
    DAY: 'day',
    HOUR: 'hour',
    MINUTE: 'minute',
    SECOND: 'second'
  };
  Object.freeze(SINGLE_TYPE);
  var screenBackgroundColor = 'rgba(0,0,0,0.4)';
  var margin = 0;
  var borderRadius = 20;
  var titleHeightThin = 62;
  var titleHeightFat = 78;
  var rowHeight = 48;

  var pickerContainerHeight = _reactNative.Platform.select({
    android: 240,
    ios: 224
  });

  var buttonHeight = 46;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var modalWidth = width - 0;
  var months = (0, _utils.constructArray)(12, true, false);
  var days = (0, _utils.constructArray)(31, true, false);
  var hours24 = (0, _utils.constructArray)(24, true, true);
  var hours12 = hours24.slice(1, 13);
  var minutes = (0, _utils.constructArray)(60, true, true);
  var singleDataSource = (_singleDataSource = {}, (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MONTH, months), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.DAY, days), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.HOUR, (0, _utils.constructArray)(24, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.MINUTE, (0, _utils.constructArray)(60, true, false)), (0, _defineProperty2.default)(_singleDataSource, SINGLE_TYPE.SECOND, (0, _utils.constructArray)(60, true, false)), _singleDataSource);
  Object.freeze(singleDataSource);
  var days31 = ['01', '03', '05', '07', '08', '10', '12'];
  var days30 = ['04', '06', '09', '11'];
  var defaultYearOffset = 15;

  var MHDatePicker = function (_React$Component) {
    (0, _inherits2.default)(MHDatePicker, _React$Component);

    function MHDatePicker(props, context) {
      var _context$media, _context$media2;

      var _this;

      (0, _classCallCheck2.default)(this, MHDatePicker);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MHDatePicker).call(this, props));
      _this.colorDatePickerSelectBg = new _DynamicColor.default('#f3f3f3', '#242424');
      (0, _reportDecorator.referenceReport)('MHDatePicker');

      var _this$init = _this.init(props, context),
          currentArray = _this$init.currentArray,
          dataSourceArray = _this$init.dataSourceArray;

      var subtitle = _this.getSubtitle(currentArray, context);

      _this.state = {
        visible: _this.props.visible,
        dataSourceArray: dataSourceArray,
        currentArray: currentArray,
        subtitle: subtitle
      };
      _this.responsiveDialogStyle = ((_context$media = context.media) == null ? undefined : _context$media.screenType) === 'tablet' ? {
        alignItems: 'center',
        justifyContent: 'center',
        flexDirection: 'column'
      } : {};
      _this.responsiveDialogModalStyle = ((_context$media2 = context.media) == null ? undefined : _context$media2.screenType) === 'tablet' ? _Styles.default.dialog.padModal : {};
      return _this;
    }

    (0, _createClass2.default)(MHDatePicker, [{
      key: "getSubtitle",
      value: function getSubtitle(arr, context) {
        var _TYPE$DATE$TYPE$TIME;

        if (this.props.type === TYPE.SINGLE) {
          var count = parseInt(arr[0], 10);
          var unit = count > 1 ? _locale.Locale.of(context.language)[this.props.singleType + "s"] : _locale.Locale.of(context.language)[this.props.singleType];
          return (0, _string.formatString)(_locale.Locale.of(context.language).singleSubTitle, count, unit);
        }

        return _string.formatString.apply(undefined, [(_TYPE$DATE$TYPE$TIME = {}, (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.DATE, _locale.Locale.of(context.language).dateSubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME24, _locale.Locale.of(context.language).time24SubTitle), (0, _defineProperty2.default)(_TYPE$DATE$TYPE$TIME, TYPE.TIME12, _locale.Locale.of(context.language).time12SubTitle), _TYPE$DATE$TYPE$TIME)[this.props.type]].concat((0, _toConsumableArray2.default)(arr)));
      }
    }, {
      key: "convert",
      value: function convert(cur, context) {
        var type = this.props.type;

        if (cur instanceof Date) {
          switch (type) {
            case TYPE.DATE:
              return this.convert([cur.getFullYear(), cur.getMonth() + 1, cur.getDate()], context);

            case TYPE.TIME24:
              return this.convert([cur.getHours(), cur.getMinutes()], context);

            case TYPE.TIME12:
              return this.convertTo12([cur.getHours(), cur.getMinutes()], context);

            case TYPE.SINGLE:
              return ['01'];

            default:
              return ['01'];
          }
        } else if (cur instanceof Array) {
          switch (type) {
            case TYPE.DATE:
              return cur.slice(0, 3).map(function (v, i) {
                return i === 0 ? "" + v : ("0" + v).slice(-2);
              });

            case TYPE.TIME24:
              return cur.slice(0, 2).map(function (v) {
                return ("0" + v).slice(-2);
              });

            case TYPE.TIME12:
              return this.convertTo12(cur, context);

            case TYPE.SINGLE:
              return cur.slice(0, 1).map(function (v) {
                return ("0" + v).slice(-2);
              });

            default:
              return ['01'];
          }
        } else if (typeof cur === 'string' || typeof cur === 'number') {
            return ["" + cur];
          } else {
              return ['01'];
            }
      }
    }, {
      key: "convertTo12",
      value: function convertTo12(arr, context) {
        if (arr.length === 2) {
          var newArr = arr.map(function (v) {
            return parseInt(v);
          });

          if (newArr.every(function (v) {
            return Number.isInteger;
          })) {
            var res;

            if (newArr[0] === 0) {
              res = [_locale.Locale.of(context.language).am, 12, newArr[1]];
            } else {
              var timeSystemString = newArr[0] > 11 ? _locale.Locale.of(context.language).pm : _locale.Locale.of(context.language).am;
              var hour = newArr[0] > 12 ? "" + (newArr[0] - 12) : "" + newArr[0];
              var minute = "" + newArr[1];
              res = [timeSystemString, hour, minute];
            }

            return res.map(function (v, i) {
              return i > 0 ? ("0" + v).slice(-2) : v;
            });
          }
        }

        return this.convert(new Date(), context);
      }
    }, {
      key: "slice",
      value: function slice(arr, head, tail) {
        if (head === undefined && tail === undefined) return arr;
        var index = arr.indexOf(("0" + head).slice(-2)) || 0;
        var lastIndex = arr.lastIndexOf(("0" + tail).slice(-2)) || arr.length - 1;
        return arr.slice(index, lastIndex + 1);
      }
    }, {
      key: "getYears",
      value: function getYears(min, max, context) {
        this.min = this.convert(min, context);
        this.max = this.convert(max, context);
        var minY = Number.parseInt(this.min[0]);
        var maxY = Number.parseInt(this.max[0]);
        return this.generateArray(minY, maxY);
      }
    }, {
      key: "generateArray",
      value: function generateArray(min, max) {
        if (min > max) {
          return [];
        }

        return Array.from({
          length: max - min + 1
        }, function (v, i) {
          return i + min;
        }).map(function (v) {
          return "" + v;
        });
      }
    }, {
      key: "init",
      value: function init(props, context) {
        var type = props.type,
            singleType = props.singleType,
            current = props.current,
            min = props.min,
            max = props.max;
        var currentArray = this.convert(current || new Date(), context);

        switch (type) {
          case TYPE.DATE:
            var yearNow = new Date().getFullYear();
            var minDefault = new Date();
            minDefault.setFullYear(yearNow - defaultYearOffset);
            var maxDefault = new Date();
            maxDefault.setFullYear(yearNow + defaultYearOffset);
            var years = this.getYears(min || minDefault, max || maxDefault, context);
            var dataSourceArray = [years, months, days];
            this.updateDays(currentArray, dataSourceArray);
            this.unitArray = [_locale.Locale.of(context.language).yearUnit, _locale.Locale.of(context.language).monthUnit, _locale.Locale.of(context.language).dayUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: dataSourceArray
            };

          case TYPE.TIME24:
            this.unitArray = [_locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [hours24, minutes]
            };

          case TYPE.TIME12:
            this.unitArray = ['', _locale.Locale.of(context.language).hourUnit, _locale.Locale.of(context.language).minuteUnit];
            return {
              currentArray: currentArray,
              dataSourceArray: [[_locale.Locale.of(context.language).am, _locale.Locale.of(context.language).pm], hours12, minutes]
            };

          case TYPE.SINGLE:
          default:
            this.unitArray = [_locale.Locale.of(context.language)[singleType + "Unit"]];
            return {
              currentArray: currentArray,
              dataSourceArray: [this.slice(singleDataSource[singleType], min, max)]
            };
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        if (newProps.current === undefined || newProps.current !== this.props.current) {
          var currentArray = this.convert(newProps.current || new Date(), this.context);
          this.setState({
            currentArray: currentArray,
            subtitle: this.getSubtitle(currentArray, this.context)
          });
        }
      }
    }, {
      key: "checkUnlimitedHeightEnable",
      value: function checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.datePickerStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        var theme = this.context.theme;
        var styleHeight = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var heightStyle = {
          height: styleHeight.height,
          minHeight: styleHeight.height
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        var numberOfLines = {
          titleNumberOfLines: 1,
          subTitleNumberOfLines: 1
        };

        if (this.props.datePickerStyle) {
          if (this.props.datePickerStyle.hasOwnProperty('titleNumberOfLines')) {
            numberOfLines.titleNumberOfLines = this.props.datePickerStyle.titleNumberOfLines;
          }

          if (this.props.datePickerStyle.hasOwnProperty('subTitleNumberOfLines')) {
            numberOfLines.subTitleNumberOfLines = this.props.datePickerStyle.subTitleNumberOfLines;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, heightStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.titleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.title, {
            color: theme == null ? undefined : theme.colorBlack
          }, this.props.datePickerStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: numberOfLines.subTitleNumberOfLines,
          allowFontScaling: this.props.datePickerStyle.allowFontScaling,
          style: [styles.subtitle, {
            color: theme == null ? undefined : theme.colorGrayNormal
          }, this.props.datePickerStyle.subTitleStyle]
        }, this.state.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        var _this2 = this;

        var _this$context = this.context,
            theme = _this$context.theme,
            colorScheme = _this$context.colorScheme,
            media = _this$context.media;
        var _this$state = this.state,
            currentArray = _this$state.currentArray,
            dataSourceArray = _this$state.dataSourceArray;
        var length = currentArray.length;
        var actualWidth = (media == null ? undefined : media.screenType) === 'tablet' ? _Styles.default.dialog.padModal.width : this.modalWidth;
        var normalWidth = actualWidth / length;
        var yearWidth = normalWidth + 10;
        var monthWidth = (actualWidth - yearWidth) / 2;
        var tempPickerInnerStyle = {
          lineColor: 'transparent',
          textColor: theme.colorGrayLighter,
          fontSize: 17,
          selectTextColor: theme.colorPrimary,
          selectFontSize: 19,
          unitTextColor: theme.colorPrimary,
          unitFontSize: 10,
          rowHeight: rowHeight,
          selectBgColor: 'transparent'
        };

        if (this.props.datePickerStyle && this.props.datePickerStyle.hasOwnProperty('pickerInnerStyle')) {
          tempPickerInnerStyle = this.props.datePickerStyle.pickerInnerStyle;
        }

        tempPickerInnerStyle.allowFontScaling = this.props.datePickerStyle.allowFontScaling;
        return _react.default.createElement(_reactNative.View, {
          style: styles.pickerContainer
        }, dataSourceArray.map(function (dataSource, index) {
          var style = {
            width: normalWidth
          };

          if (_this2.props.type === TYPE.DATE) {
            if (index === 0) style = {
              width: yearWidth
            };else style = {
              width: monthWidth
            };
          }

          return _react.default.createElement(_reactNative.View, {
            key: index + _this2.unitArray[index],
            style: [{
              flexDirection: 'row'
            }, style]
          }, _react.default.createElement(_StringSpinner.default, (0, _extends2.default)({
            key: index + _this2.unitArray[index],
            style: style,
            unit: _this2.unitArray[index],
            dataSource: dataSource,
            defaultValue: currentArray[index],
            pickerInnerStyle: tempPickerInnerStyle,
            onValueChanged: function onValueChanged(data) {
              return _this2._onValueChanged(index, data);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: _this2.props.accessibilityLabel,
            accessibilityHint: _this2.props.accessibilityHint,
            accessibilityValue: {
              min: Array.isArray(_this2.min) ? _this2.min[index] : 0,
              max: Array.isArray(_this2.max) ? _this2.max[index] : 0,
              now: _this2.state.currentArray[index]
            }
          }))));
        }));
      }
    }, {
      key: "renderButton",
      value: function renderButton() {
        var _this$props$datePicke,
            _this3 = this,
            _this$props$datePicke2;

        var heightStyle = {
          height: styles.buttons.minHeight,
          minHeight: styles.buttons.minHeight
        };

        if (this.checkUnlimitedHeightEnable()) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, heightStyle]
        }, _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginRight: 6
          },
          title: _locale.Locale.of(this.context.language).cancel,
          titleStyle: this.props.datePickerStyle.leftButtonStyle,
          titleColor: (_this$props$datePicke = this.props.datePickerStyle.leftButtonStyle) == null ? undefined : _this$props$datePicke.color,
          backgroundColor: this.props.datePickerStyle.leftButtonBgStyle,
          colorType: "grayLayerBlack",
          onPress: function onPress() {
            return _this3.dismiss();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }), _react.default.createElement(_popButton.PopButton, {
          sizeLevel: "medium",
          style: {
            marginLeft: 6
          },
          title: _locale.Locale.of(this.context.language).ok,
          titleStyle: this.props.datePickerStyle.rightButtonStyle,
          titleColor: (_this$props$datePicke2 = this.props.datePickerStyle.rightButtonStyle) == null ? undefined : _this$props$datePicke2.color,
          backgroundColor: this.props.datePickerStyle.rightButtonBgStyle,
          colorType: "grayLayerBlue",
          onPress: function onPress() {
            return _this3.confirm();
          },
          allowFontScaling: this.props.datePickerStyle.allowFontScaling
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        this.modalWidth = width - 0;
        return _react.default.createElement(_reactNative.Modal, {
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.background, this.responsiveDialogStyle]
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: function onPress() {
            return _this4.dismiss();
          }
        }, _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.modal, {
            backgroundColor: theme == null ? undefined : theme.colorForeground,
            width: this.modalWidth
          }, this.responsiveDialogModalStyle]
        }, this.renderTitle(), this.renderContent(), this.renderButton())));
      }
    }, {
      key: "updateDays",
      value: function updateDays(newCurrentArray, newDataSourceArray) {
        var _newCurrentArray = (0, _slicedToArray2.default)(newCurrentArray, 3),
            year = _newCurrentArray[0],
            month = _newCurrentArray[1],
            day = _newCurrentArray[2];

        if (days31.includes(month)) {
          newDataSourceArray[2] = days;
        } else if (days30.includes(month)) {
          newDataSourceArray[2] = days.slice(0, 30);
        } else {
          if ((0, _utils.isLeapYear)(parseInt(year))) {
            newDataSourceArray[2] = days.slice(0, 29);
          } else {
            newDataSourceArray[2] = days.slice(0, 28);
          }
        }

        if (!newDataSourceArray[2].includes(day)) {
          newCurrentArray[2] = newDataSourceArray[2][newDataSourceArray[2].length - 1];
        }
      }
    }, {
      key: "_onValueChanged",
      value: function _onValueChanged(index, data) {
        var _this5 = this;

        var newCurrentArray = (0, _toConsumableArray2.default)(this.state.currentArray);
        newCurrentArray[index] = data.newValue;
        var newDataSourceArray = (0, _toConsumableArray2.default)(this.state.dataSourceArray);
        this.setState({
          currentArray: newCurrentArray,
          subtitle: this.getSubtitle(newCurrentArray, this.context)
        }, function (_) {
          _this5.props.onValueChange && _this5.props.onValueChange({
            rawArray: _this5.state.currentArray,
            rawString: _this5.state.subtitle,
            date: _this5.array2Date()
          });

          if (_this5.props.type === TYPE.DATE) {
            var needUpdate = false;

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.max) > 0) {
              newCurrentArray = _this5.max;
              needUpdate = true;
            }

            if ((0, _utils.compareDateArray)(newCurrentArray, _this5.min) < 0) {
              newCurrentArray = _this5.min;
              needUpdate = true;
            }

            _this5.updateDays(newCurrentArray, newDataSourceArray);

            if (newDataSourceArray[2].length !== _this5.state.dataSourceArray[2].length) {
              needUpdate = true;
            }

            needUpdate && _this5.setState({
              subtitle: _this5.getSubtitle(newCurrentArray, _this5.context),
              currentArray: newCurrentArray,
              dataSourceArray: newDataSourceArray
            });
          }
        });
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "array2Date",
      value: function array2Date() {
        var currentArray = this.state.currentArray;
        var date = new Date();

        switch (this.props.type) {
          case TYPE.DATE:
            date.setFullYear(currentArray[0]);
            date.setMonth(parseInt(currentArray[1], 10) - 1, parseInt(currentArray[2], 10));
            date.setDate(parseInt(currentArray[2], 10));
            break;

          case TYPE.TIME24:
            date.setHours(currentArray[0]);
            date.setMinutes(currentArray[1]);
            break;

          case TYPE.TIME12:
            var hour = parseInt(currentArray[1], 10);

            if (currentArray[0] === _locale.Locale.of(this.context.language).am) {
              hour = hour === 12 ? 0 : hour;
            } else {
              hour = hour < 12 ? hour + 12 : hour;
            }

            date.setHours(hour);
            date.setMinutes(currentArray[2]);
            break;

          case TYPE.SINGLE:
          default:
            return null;
        }

        return date;
      }
    }, {
      key: "confirm",
      value: function confirm() {
        if (this.props.onSelect) {
          this.props.onSelect({
            rawArray: this.state.currentArray,
            rawString: this.state.subtitle,
            date: this.array2Date()
          });
        }

        this.dismiss();
      }
    }]);
    return MHDatePicker;
  }(_react.default.Component);

  MHDatePicker.contextType = _configProvider.ConfigContext;
  MHDatePicker.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    confirmColor: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.DATE, TYPE.SINGLE, TYPE.TIME12, TYPE.TIME24]),
    singleType: _propTypes.default.oneOf([SINGLE_TYPE.MONTH, SINGLE_TYPE.DAY, SINGLE_TYPE.HOUR, SINGLE_TYPE.MINUTE, SINGLE_TYPE.SECOND]),
    current: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]).isRequired,
    min: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    max: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.arrayOf(_propTypes.default.number), _propTypes.default.instanceOf(Date)]),
    datePickerStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MHDatePicker.defaultProps = {
    animationType: 'fade',
    visible: false,
    title: '开启时间',
    showSubtitle: true,
    confirmColor: _Styles.default.common.MHGreen,
    type: TYPE.TIME24,
    singleType: SINGLE_TYPE.MINUTE,
    datePickerStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: null,
      subTitleStyle: null,
      leftButtonNumberOfLines: 1,
      rightButtonNumberOfLines: 1,
      leftButtonStyle: null,
      rightButtonStyle: null,
      rightButtonBgStyle: null,
      leftButtonBgStyle: null
    },
    onSelect: function onSelect() {},
    accessible: true
  };
  MHDatePicker.TYPE = TYPE;
  MHDatePicker.SINGLE_TYPE = SINGLE_TYPE;

  var styles = _reactNative.StyleSheet.create({
    background: {
      flex: 1,
      backgroundColor: screenBackgroundColor
    },
    modal: {
      position: 'absolute',
      bottom: 0,
      paddingBottom: 20,
      width: modalWidth,
      marginHorizontal: margin,
      borderTopLeftRadius: borderRadius,
      borderTopRightRadius: borderRadius
    },
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    title: (0, _objectSpread2.default)({
      lineHeight: 22,
      marginTop: 25,
      fontSize: 16
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      width: modalWidth,
      textAlign: 'center',
      fontSize: 14,
      marginTop: 5
    }, _font.FontPrimary),
    pickerContainer: {
      flexDirection: 'row',
      height: pickerContainerHeight,
      justifyContent: 'space-between'
    },
    buttons: {
      minHeight: buttonHeight,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'space-around',
      marginHorizontal: 27
    }
  });

  var _default = MHDatePicker;
  exports.default = _default;
},22924,[14305,14314,14347,14344,14359,14320,14323,14371,14377,14386,14317,10318,10297,10033,22435,22780,22927,22912,22930,22933,22426,22420,22423,23212,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.formatString = undefined;
  var placeholderRegex = /(\{[\d|\w]+\})/;

  var formatString = function formatString(str) {
    for (var _len = arguments.length, valuesForPlaceholders = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      valuesForPlaceholders[_key - 1] = arguments[_key];
    }

    return (str || '').split(placeholderRegex).filter(function (textPart) {
      return !!textPart;
    }).map(function (textPart) {
      if (textPart.match(placeholderRegex)) {
        var matchedKey = textPart.slice(1, -1);
        var valueForPlaceholder = valuesForPlaceholders[matchedKey];

        if (valueForPlaceholder == undefined) {
          var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];

          if (valueFromObjectPlaceholder !== undefined) {
            valueForPlaceholder = valueFromObjectPlaceholder;
          } else {
            return valueForPlaceholder;
          }
        }

        return valueForPlaceholder;
      }

      return textPart;
    }).join('');
  };

  exports.formatString = formatString;
},22927,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.constructArray = constructArray;
  exports.isLeapYear = isLeapYear;
  exports.compareDateArray = compareDateArray;

  function constructArray(length) {
    var zeroPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    var fromZero = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var maxLength = (length - (fromZero ? 1 : 0)).toString().length;
    return Array.from({
      length: length
    }, function (v, i) {
      return ((zeroPrefix ? '0000000000000' : '') + (i + (fromZero ? 0 : 1))).slice(-maxLength);
    });
  }

  function isLeapYear(year) {
    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0 && year % 3200 !== 0;
  }

  function compareDateArray(arrA, arrB) {
    return Number(arrA.join('')) - Number(arrB.join(''));
  }
},22930,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Locale = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var langs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var Locale = function () {
    function Locale() {
      (0, _classCallCheck2.default)(this, Locale);
    }

    (0, _createClass2.default)(Locale, null, [{
      key: "of",
      value: function of() {
        var lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'zh';
        return langs[lang];
      }
    }]);
    return Locale;
  }();

  exports.Locale = Locale;
},22933,[14308,14305,14320,14323,22936]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "zh", {
    enumerable: true,
    get: function get() {
      return _zh.zh;
    }
  });
  Object.defineProperty(exports, "zh_tw", {
    enumerable: true,
    get: function get() {
      return _zh_tw.zh_tw;
    }
  });
  Object.defineProperty(exports, "zh_hk", {
    enumerable: true,
    get: function get() {
      return _zh_hk.zh_hk;
    }
  });
  Object.defineProperty(exports, "en", {
    enumerable: true,
    get: function get() {
      return _en.en;
    }
  });
  Object.defineProperty(exports, "ko", {
    enumerable: true,
    get: function get() {
      return _ko.ko;
    }
  });
  Object.defineProperty(exports, "ru", {
    enumerable: true,
    get: function get() {
      return _ru.ru;
    }
  });
  Object.defineProperty(exports, "es", {
    enumerable: true,
    get: function get() {
      return _es.es;
    }
  });
  Object.defineProperty(exports, "fr", {
    enumerable: true,
    get: function get() {
      return _fr.fr;
    }
  });
  Object.defineProperty(exports, "it", {
    enumerable: true,
    get: function get() {
      return _it.it;
    }
  });
  Object.defineProperty(exports, "de", {
    enumerable: true,
    get: function get() {
      return _de.de;
    }
  });
  Object.defineProperty(exports, "id", {
    enumerable: true,
    get: function get() {
      return _id.id;
    }
  });
  Object.defineProperty(exports, "pl", {
    enumerable: true,
    get: function get() {
      return _pl.pl;
    }
  });
  Object.defineProperty(exports, "vi", {
    enumerable: true,
    get: function get() {
      return _vi.vi;
    }
  });
  Object.defineProperty(exports, "ja", {
    enumerable: true,
    get: function get() {
      return _ja.ja;
    }
  });
  Object.defineProperty(exports, "th", {
    enumerable: true,
    get: function get() {
      return _th.th;
    }
  });
  Object.defineProperty(exports, "tr", {
    enumerable: true,
    get: function get() {
      return _tr.tr;
    }
  });
  Object.defineProperty(exports, "nl", {
    enumerable: true,
    get: function get() {
      return _nl.nl;
    }
  });
  Object.defineProperty(exports, "pt", {
    enumerable: true,
    get: function get() {
      return _pt.pt;
    }
  });

  var _zh = _$$_REQUIRE(_dependencyMap[0]);

  var _zh_tw = _$$_REQUIRE(_dependencyMap[1]);

  var _zh_hk = _$$_REQUIRE(_dependencyMap[2]);

  var _en = _$$_REQUIRE(_dependencyMap[3]);

  var _ko = _$$_REQUIRE(_dependencyMap[4]);

  var _ru = _$$_REQUIRE(_dependencyMap[5]);

  var _es = _$$_REQUIRE(_dependencyMap[6]);

  var _fr = _$$_REQUIRE(_dependencyMap[7]);

  var _it = _$$_REQUIRE(_dependencyMap[8]);

  var _de = _$$_REQUIRE(_dependencyMap[9]);

  var _id = _$$_REQUIRE(_dependencyMap[10]);

  var _pl = _$$_REQUIRE(_dependencyMap[11]);

  var _vi = _$$_REQUIRE(_dependencyMap[12]);

  var _ja = _$$_REQUIRE(_dependencyMap[13]);

  var _th = _$$_REQUIRE(_dependencyMap[14]);

  var _tr = _$$_REQUIRE(_dependencyMap[15]);

  var _nl = _$$_REQUIRE(_dependencyMap[16]);

  var _pt = _$$_REQUIRE(_dependencyMap[17]);
},22936,[22939,22942,22945,22948,22951,22954,22957,22960,22963,22966,22969,22972,22975,22978,22981,22984,22987,22990]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh = undefined;
  var zh = {
    setting: '设置',
    featureSetting: '功能设置',
    commonSetting: '通用设置',
    name: '设备名称',
    location: '位置管理',
    memberSet: '按键设置',
    share: '设备共享',
    btGateway: '蓝牙网关',
    voiceAuth: '语音授权',
    ifttt: '智能场景',
    firmwareUpgrade: '固件升级',
    more: '更多设置',
    help: '使用帮助',
    legalInfo: '法律信息',
    deleteDevice: '删除设备',
    autoUpgrade: '固件自动升级',
    checkUpgrade: '检查固件升级',
    security: '安全设置',
    networkInfo: '网络信息',
    feedback: '反馈问题',
    timezone: '设备时区',
    addToDesktop: '添加桌面快捷方式',
    cancel: '取消',
    ok: '确定',
    am: '上午',
    pm: '下午',
    months: '个月',
    days: '天',
    hours: '小时',
    minutes: '分钟',
    seconds: '秒钟',
    month: '个月',
    day: '天',
    hour: '小时',
    minute: '分钟',
    second: '秒钟',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '时',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升级',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由于您当前的设备固件版本过低，一些功能可能无法正常使用。请升级至最新版本，以体验更丰富的功能',
    firmwareUpgradeForceUpdating: '您的设备正在升级，请稍后，以体验更丰富的功能',
    firmwareUpgradeNewPre: '检测到设备有最新固件版本',
    firmwareUpgradeNewSub: '，是否升级',
    handling: '操作中...',
    error: '处理失败，请稍后再试',
    createLightGroup: '创建灯组（新）',
    manageLightGroup: '灯组管理（新）',
    deleteLightGroup: '解散灯组',
    selectPlugin: '请选择喜欢的插件样式使用',
    traditionalPlugin: '传统插件',
    standardPlugin: '标准插件',
    recommended: '（推荐使用）',
    changeSteps: '如需更改插件样式，可按照如下步骤操作',
    stepOne: '第一步：点击插件右上角进入更多设置',
    stepTwo: '第二步：在通用设置里找到“标准插件”，\n操作开关即可切换标准插件/传统插件',
    starting: '开始体验',
    switching: '切换中…',
    switchedSucess: '切换成功',
    switchedfail: '切换失败',
    guideFeedback: '意见反馈',
    next: '下一步',
    percentage: '{0}%'
  };
  exports.zh = zh;
},22939,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_tw = undefined;
  var zh_tw = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智能場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新増捷徑至桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組 (新)',
    manageLightGroup: '燈組管理 (新)',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.zh_tw = zh_tw;
},22942,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.zh_hk = undefined;
  var zh_hk = {
    setting: '設定',
    featureSetting: '裝置設定',
    commonSetting: '一般設定',
    name: '裝置名稱',
    location: '位置管理',
    memberSet: '按鍵設定',
    share: '裝置共用',
    btGateway: '藍牙網關',
    voiceAuth: '語音授權',
    ifttt: '智慧場景',
    firmwareUpgrade: '韌體更新',
    more: '更多設定',
    help: '使用説明',
    legalInfo: '法律資訊',
    deleteDevice: '刪除裝置',
    autoUpgrade: '韌體自动更新',
    checkUpgrade: '檢查韌體更新',
    security: '安全設定',
    networkInfo: '網路資訊',
    feedback: '反饋問題',
    timezone: '裝置時區',
    addToDesktop: '新增捷徑到桌面',
    cancel: '取消',
    ok: '確認',
    am: '上午',
    pm: '下午',
    months: '個月',
    days: '天',
    hours: '小時',
    minutes: '分鐘',
    seconds: '秒鐘',
    month: '個月',
    day: '天',
    hour: '小時',
    minute: '分鐘',
    second: '秒鐘',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}年{1}月{2}日',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{0} {1}:{2}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '退出',
    firmwareUpgradeUpdate: '升級',
    firmwareUpgradeLook: '去看看',
    firmwareUpgradeForceUpdate: '由於您目前的用戶端版本過低，一些功能可能無法正常使用。 請升級最新版本，以體驗更豐富的功能',
    firmwareUpgradeForceUpdating: '您的裝置正在升級，請稍後，以體驗更豐富的功能',
    firmwareUpgradeNewPre: '檢測到裝置有最新韌體版本',
    firmwareUpgradeNewSub: '，是否升級？',
    handling: '執行中...',
    error: '處理失敗，請重試',
    createLightGroup: '建立燈組（新）',
    manageLightGroup: '燈組管理（新）',
    deleteLightGroup: '解散燈組',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.zh_hk = zh_hk;
},22945,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.en = undefined;
  var en = {
    setting: 'Settings',
    featureSetting: 'Device settings',
    commonSetting: 'General settings',
    name: 'Device name',
    location: 'Manage location',
    memberSet: 'Key settings',
    share: 'Share device',
    btGateway: 'BLE Gateway',
    voiceAuth: 'Voice authorization',
    ifttt: 'Automation',
    firmwareUpgrade: 'Firmware update',
    more: 'Additional settings',
    help: 'Help',
    legalInfo: 'Legal information',
    deleteDevice: 'Delete device',
    autoUpgrade: 'Automatically update firmware',
    checkUpgrade: 'Check for firmware update',
    security: 'Security settings',
    networkInfo: 'Network info',
    feedback: 'Feedback',
    timezone: 'Device time zone',
    addToDesktop: 'Add to Home screen',
    cancel: 'Cancel',
    ok: 'Confirm',
    am: 'AM',
    pm: 'PM',
    months: 'months',
    days: 'days',
    hours: 'hours',
    minutes: 'minutes',
    seconds: 'seconds',
    month: 'month',
    day: 'day',
    hour: 'hour',
    minute: 'minute',
    second: 'second',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Exit',
    firmwareUpgradeUpdate: 'Update',
    firmwareUpgradeLook: 'Take a look',
    firmwareUpgradeForceUpdate: 'Current firmware may be too old to run some features. Update to the latest version for better experience.',
    firmwareUpgradeForceUpdating: 'Your device is updating, try again later',
    firmwareUpgradeNewPre: 'Firmware update ',
    firmwareUpgradeNewSub: ' available. Update now?',
    handling: 'Running…',
    error: 'Could not operate, please try again later',
    createLightGroup: 'Create light group(new)',
    manageLightGroup: 'Manage devices(new)',
    deleteLightGroup: 'Disband light group',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.en = en;
},22948,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ko = undefined;
  var ko = {
    setting: '설정',
    featureSetting: '기기 설정',
    commonSetting: '일반 설정',
    name: '기기 이름',
    location: '위치 관리',
    memberSet: '버튼 설정',
    share: '기기 공유',
    btGateway: 'BLE 게이트웨이',
    voiceAuth: '음성 권한',
    ifttt: '자동화',
    firmwareUpgrade: '펌웨어 업데이트',
    more: '추가 설정',
    help: '도움말',
    legalInfo: '법률 정보',
    deleteDevice: '기기 제거',
    autoUpgrade: '펌웨어 자동 업데이트',
    checkUpgrade: '펌웨어 업데이트 확인',
    security: '보안 설정',
    networkInfo: '네트워크 정보',
    feedback: '피드백',
    timezone: '디바이스 시간대',
    addToDesktop: '홈 화면에 추가',
    cancel: '취소',
    ok: '정보 확인',
    am: '오전',
    pm: '오후',
    months: '달',
    days: '일',
    hours: '시간',
    minutes: '분',
    seconds: '초',
    month: '월',
    day: '일',
    hour: '시',
    minute: '분',
    second: '초',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '나가기',
    firmwareUpgradeUpdate: '업데이트',
    firmwareUpgradeLook: '확인해보세요',
    firmwareUpgradeForceUpdate: '현재 펌웨어 버전이 너무 오래되었습니다. 몇몇 기능이 정상적으로 작동하지 않을 수 있습니다. 더 나은 사용을 위해 최신 버전으로 업데이트 하십시오.',
    firmwareUpgradeForceUpdating: '기기를 업데이트 중입니다. 나중에 다시 시도하십시오.',
    firmwareUpgradeNewPre: '펌웨어 업데이트 ',
    firmwareUpgradeNewSub: ' 가능, 지금 업데이트 하시겠습니까?',
    handling: '실행 중...',
    error: '다시 시도',
    createLightGroup: '전등 그룹 생성(신규)',
    manageLightGroup: '전등 그룹 관리(신규)',
    deleteLightGroup: '전등 그룹 해제',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.ko = ko;
},22951,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ru = undefined;
  var ru = {
    setting: 'Настройки',
    featureSetting: 'Настройки устройств',
    commonSetting: 'Общие настройки',
    name: 'Имя устройства',
    location: 'Управление местами',
    memberSet: 'Настройка кнопок',
    share: 'Поделиться устройством',
    btGateway: 'BLE шлюз',
    voiceAuth: 'Голосовая авторизация',
    ifttt: 'Автоматизация',
    firmwareUpgrade: 'Проверить наличие обновлений',
    more: 'Дополнительные настройки',
    help: 'Справка',
    legalInfo: 'Легальная информация',
    deleteDevice: 'Удалить устройство',
    autoUpgrade: 'Автоматическое обновление встроенного ПО',
    checkUpgrade: 'Проверить наличие обновлений',
    security: 'Параметры безопасности',
    networkInfo: 'Информация о сети',
    feedback: 'Отзыв',
    timezone: 'Часовой пояс устройства',
    addToDesktop: 'Добавить на главный экран',
    cancel: 'Отменить',
    ok: 'Подтвердить',
    am: 'ДП',
    pm: 'ПП',
    months: 'месяцы',
    days: 'дни',
    hours: 'часы',
    minutes: 'минуты',
    seconds: 'секунды',
    month: 'месяц ',
    day: 'день',
    hour: 'час ',
    minute: 'минута',
    second: 'сеунда',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Выход',
    firmwareUpgradeUpdate: 'Обновление',
    firmwareUpgradeLook: 'Посмотреть',
    firmwareUpgradeForceUpdate: 'Текущая версия ПО устарела, некоторые возможности могут быть недоступны. Обновите до последней версии ПО.',
    firmwareUpgradeForceUpdating: 'Устройство обновляется, попробуйте позже',
    firmwareUpgradeNewPre: 'Доступно обновление ПО ',
    firmwareUpgradeNewSub: ', обновить сейчас?',
    handling: 'Загрузка...',
    error: 'Попробовать снова',
    createLightGroup: 'Создать группу светильников (новинка)',
    manageLightGroup: 'Управление устройствами (новинка)',
    deleteLightGroup: 'Расформировать группу светильников',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.ru = ru;
},22954,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.es = undefined;
  var es = {
    setting: 'Ajustes',
    featureSetting: 'Ajustes de dispositivo',
    commonSetting: 'Ajustes generales',
    name: 'Nombre del dispositivo',
    location: 'Gestionar ubicaciones',
    memberSet: 'Ajustes de los botones',
    share: 'Compartir dispositivo',
    btGateway: 'Entrada BLE',
    voiceAuth: 'Autorización de voz',
    ifttt: 'Automatización',
    firmwareUpgrade: 'Actualizaciones de firmware',
    more: 'Ajustes adicionales',
    help: 'Ayuda',
    legalInfo: 'Información legal',
    deleteDevice: 'Eliminar dispositivo',
    autoUpgrade: 'Actualizar automáticamente el firmware',
    checkUpgrade: 'Buscar actualizaciones de firmware',
    security: 'Ajustes de seguridad',
    networkInfo: 'Información de red',
    feedback: 'Comentario',
    timezone: 'Zona horaria del dispositivo',
    addToDesktop: 'Añadir a la pantalla de Inicio',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'AM',
    pm: 'PM',
    months: 'meses',
    days: 'días',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'meses',
    day: 'día',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Salir',
    firmwareUpgradeUpdate: 'Actualizar',
    firmwareUpgradeLook: 'Echa un vistazo',
    firmwareUpgradeForceUpdate: 'La versión de firmware actual es demasiado antigua, puede que algunas características no funcionen correctamente. Actualiza a la última versión para una mejor experiencia.',
    firmwareUpgradeForceUpdating: 'Tu dispositivo se está actualizando, inténtalo más tarde',
    firmwareUpgradeNewPre: 'Actualización ',
    firmwareUpgradeNewSub: ' de firmware disponible, ¿actualizar ahora?',
    handling: 'Ejecutándose...',
    error: 'Reintentar',
    createLightGroup: 'Crear grupo de luces (nuevo)',
    manageLightGroup: 'Administrar dispositivos (nuevo)',
    deleteLightGroup: 'Deshacer grupo de luces',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.es = es;
},22957,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fr = undefined;
  var fr = {
    setting: 'Paramètres',
    featureSetting: "Paramètres de l'appareil",
    commonSetting: 'Paramètres généraux',
    name: "Nom de l'appareil",
    location: 'Gérer emplacement',
    memberSet: 'Paramètres des boutons',
    share: "Partager l'appareil",
    btGateway: 'Passerelle BLE',
    voiceAuth: 'Autorisation vocale',
    ifttt: 'Automatisation',
    firmwareUpgrade: 'Mise à jour logiciel',
    more: 'Paramètres supplémentaires',
    help: 'Aide',
    legalInfo: 'Information légale',
    deleteDevice: "Supprimer l'appareil",
    autoUpgrade: 'Mettre à jour le logiciel automatiquement',
    checkUpgrade: 'Vérifier les mises à jour du micrologiciel',
    security: 'Paramètres de sécurité',
    networkInfo: 'Informations sur le réseau',
    feedback: 'Commentaire',
    timezone: 'Fuseau horaire de l’appareil',
    addToDesktop: "Ajouter à l'écran d'accueil",
    cancel: 'Annuler',
    ok: 'Confirmer',
    am: 'AM',
    pm: 'PM',
    months: 'mois',
    days: 'jours',
    hours: 'heures',
    minutes: 'minutes',
    seconds: 'secondes',
    month: 'mois',
    day: 'jours',
    hour: 'heure',
    minute: 'minute',
    second: 'seconde',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Quitter',
    firmwareUpgradeUpdate: 'Mettre à jour',
    firmwareUpgradeLook: 'Jeter un coup d\'œil',
    firmwareUpgradeForceUpdate: 'La version actuelle du micrologiciel est trop ancienne. Certaines fonctionnalités peuvent ne pas fonctionner correctement. Mettez à jour la dernière version pour une meilleure expérience',
    firmwareUpgradeForceUpdating: 'Votre appareil est en cours de mise à jour. Réessayez plus tard',
    firmwareUpgradeNewPre: 'Mise à jour du micrologiciel ',
    firmwareUpgradeNewSub: ' disponible. Mettre à jour maintenant ?',
    handling: 'En cours d’exécution…',
    error: "Échec de l'opération, veuillez réessayer plus tard",
    createLightGroup: 'Créer un groupe d’éclairage (nouveau)',
    manageLightGroup: 'Gérer les appareils (nouveau)',
    deleteLightGroup: 'Supprimer un groupe d’éclairage',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.fr = fr;
},22960,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.it = undefined;
  var it = {
    setting: 'Impostazioni',
    featureSetting: 'Impostazioni dispositivo',
    commonSetting: 'Impostazioni generali',
    name: 'Nome dispositivo',
    location: 'Gestisci posizione',
    memberSet: 'Impostazioni pulsante',
    share: 'Condividi dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorizzazione vocale',
    ifttt: 'Automazione',
    firmwareUpgrade: 'Aggiornamento firmware',
    more: 'Impostazioni aggiuntive',
    help: 'Guida',
    legalInfo: 'Informazioni legali',
    deleteDevice: 'Rimuovi dispositivo',
    autoUpgrade: 'Aggiorna automaticamente il firmware',
    checkUpgrade: 'Controlla aggiornamento firmware',
    security: 'Impostazioni di sicurezza',
    networkInfo: 'Informazioni di rete',
    feedback: 'Feedback',
    timezone: 'Fuso orario del dispositivo',
    addToDesktop: 'Aggiungi a schermata iniziale',
    cancel: 'Annulla',
    ok: 'Conferma',
    am: 'AM',
    pm: 'PM',
    months: 'Mesi',
    days: 'Giorni',
    hours: 'Ore',
    minutes: 'Minuti',
    seconds: 'Secondi',
    month: 'Mese',
    day: 'Giorno',
    hour: 'Ora',
    minute: 'Minuto',
    second: 'Secondo',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Esci',
    firmwareUpgradeUpdate: 'Aggiorna',
    firmwareUpgradeLook: 'Guarda',
    firmwareUpgradeForceUpdate: "La versione firmware in uso è obsoleta. Alcune funzioni potrebbero non funzionare correttamente. Aggiorna all'ultima versione per una migliore esperienza.",
    firmwareUpgradeForceUpdating: 'Il dispositivo è in fase di aggiornamento. Riprova più tardi',
    firmwareUpgradeNewPre: 'Aggiornamento firmware ',
    firmwareUpgradeNewSub: ' disponibile. Aggiornare adesso?',
    handling: 'In esecuzione…',
    error: 'Potrebbe non funzionare, riprova più tardi',
    createLightGroup: 'Crea gruppo luci(nuovo)',
    manageLightGroup: 'Gestisci dispositivi(nuovo)',
    deleteLightGroup: 'Elimina gruppo luci',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.it = it;
},22963,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.de = undefined;
  var de = {
    setting: 'Einstellungen',
    featureSetting: 'Geräteinstellungen',
    commonSetting: 'Allgemeine einstellungen',
    name: 'Gerätename',
    location: 'Standort verwalten',
    memberSet: 'Schaltflächen-Einstellungen',
    share: 'Gerät teilen',
    btGateway: 'BLE-Gateway',
    voiceAuth: 'Sprachautorisierung',
    ifttt: 'Automatisierung',
    firmwareUpgrade: 'Firmware-Aktualisierung',
    more: 'Zusätzliche Einstellungen',
    help: 'Hilfe',
    legalInfo: 'Rechtsinformation',
    deleteDevice: 'Gerät entfernen',
    autoUpgrade: 'Firmware automatisch aktualisieren',
    checkUpgrade: 'Nach Firmware-Aktualisierung suchen.',
    security: 'Sicherheitseinstellungen',
    networkInfo: 'Netzwerk-Info',
    feedback: 'Feedback',
    timezone: 'Gerätezeitzone',
    addToDesktop: 'Zum Startbildschirm hinzufügen',
    cancel: 'Abbrechen',
    ok: 'Bestätigen',
    am: 'AM',
    pm: 'PM',
    months: 'Monate',
    days: 'Tage',
    hours: 'Stunden',
    minutes: 'Minuten',
    seconds: 'Sekunden',
    month: 'Monat ',
    day: 'Tag ',
    hour: 'Stunde ',
    minute: 'Minute ',
    second: 'Sekunde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Beenden',
    firmwareUpgradeUpdate: 'Aktualisieren',
    firmwareUpgradeLook: 'Ansehen',
    firmwareUpgradeForceUpdate: 'Die aktuelle Firmware ist möglicherweise zu alt, um einige Funktionen auszuführen. Aktualisieren Sie auf die neueste Version, um eine verbesserte Funktionsausführung zu erzielen.',
    firmwareUpgradeForceUpdating: 'Ihr Gerät wird aktualisiert, versuchen Sie es später erneut',
    firmwareUpgradeNewPre: 'Firmware-Aktualisierung ',
    firmwareUpgradeNewSub: ' verfügbar, jetzt aktualisieren?',
    handling: 'Wird ausgeführt...',
    error: 'Funktionierte nicht, bitte versuchen Sie es später erneut.',
    createLightGroup: 'Lichtgruppe erstellen (neu)',
    manageLightGroup: 'Geräte verwalten (neu)',
    deleteLightGroup: 'Lichtgruppe auflösen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.de = de;
},22966,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.id = undefined;
  var id = {
    setting: 'Pengaturan',
    featureSetting: 'Pengaturan perangkat',
    commonSetting: 'Pengaturan umum',
    name: 'Nama perangkat',
    location: 'Kelola lokasi',
    memberSet: 'Pengaturan tombol',
    share: 'Bagikan perangkat',
    btGateway: 'Gerbang BLE',
    voiceAuth: 'Otorisasi suara',
    ifttt: 'Otomatisasi',
    firmwareUpgrade: 'Pembaruan firmware',
    more: 'Pengaturan tambahan',
    help: 'Bantuan',
    legalInfo: 'Informasi hukum',
    deleteDevice: 'Hapus perangkat',
    autoUpgrade: 'Perbarui firmware secara otomatis',
    checkUpgrade: 'Periksa pembaruan firmware',
    security: 'Pengaturan keamanan',
    networkInfo: 'Pengaturan jaringan',
    feedback: 'Umpan balik',
    timezone: 'Zona waktu perangkat',
    addToDesktop: 'Tambahkan ke layar Beranda',
    cancel: 'Batal',
    ok: 'Konfirmasi',
    am: 'AM',
    pm: 'PM',
    months: 'bulan',
    days: 'hari',
    hours: 'jam',
    minutes: 'menit',
    seconds: 'detik',
    month: 'bulan',
    day: 'hari ',
    hour: 'jam',
    minute: 'menit',
    second: 'detik',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Keluar',
    firmwareUpgradeUpdate: 'Perbarui',
    firmwareUpgradeLook: 'Lihat',
    firmwareUpgradeForceUpdate: 'Versi firmware saat ini sudah terlalu lama. Beberapa fitur mungkin tidak berfungsi dengan benar. Perbarui ke versi terbaru untuk menikmati pengalaman yang lebih baik.',
    firmwareUpgradeForceUpdating: 'Perangkat sedang diperbarui, coba lagi nanti',
    firmwareUpgradeNewPre: 'Pembaruan firmware ',
    firmwareUpgradeNewSub: ' tersedia, perbarui sekarang?',
    handling: 'Menjalankan...',
    error: 'Tidak dapat beroperasi, coba lagi nanti',
    createLightGroup: 'Buat grup lampu(baru)',
    manageLightGroup: 'Kelola perangkat(baru)',
    deleteLightGroup: 'Hapus grup lampu',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.id = id;
},22969,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pl = undefined;
  var pl = {
    setting: 'Ustawienia',
    featureSetting: 'Ustawienia urządzenia',
    commonSetting: 'Ustawienia ogólne',
    name: 'Nazwa urządzenia',
    location: 'Zarządzaj lokalizacją',
    memberSet: 'Ustawienia przycisku',
    share: 'Udostępnij urządzenie',
    btGateway: 'Bramka BLE',
    voiceAuth: 'Autoryzacja głosu',
    ifttt: 'Automatyzacja',
    firmwareUpgrade: 'Aktualizacja oprogramowania sprzętowego',
    more: 'Dodatkowe ustawienia',
    help: 'Pomoc',
    legalInfo: 'Informacje prawne',
    deleteDevice: 'Usuń urządzenie',
    autoUpgrade: 'Automatyczna aktualizacja oprogramowania sprzętowego',
    checkUpgrade: 'Sprawdź aktualizacje oprogramowania sprzętowego',
    security: 'Ustawienia bezpieczeństwa',
    networkInfo: 'Informacje o sieci',
    feedback: 'Informacje zwrotne',
    timezone: 'Strefa czasowa urządzenia',
    addToDesktop: 'Dodaj do ekranu głównego',
    cancel: 'Anuluj',
    ok: 'Potwierdź',
    am: 'AM ',
    pm: 'PM',
    months: 'miesiące',
    days: 'dni',
    hours: 'godziny',
    minutes: 'minuty',
    seconds: 'sekundy',
    month: 'miesiąc',
    day: 'dzień',
    hour: 'godzina',
    minute: 'minuta',
    second: 'sekunda',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Wyjdź',
    firmwareUpgradeUpdate: 'Aktualizuj',
    firmwareUpgradeLook: 'Przeglądaj',
    firmwareUpgradeForceUpdate: 'Aktualna wersja oprogramowania sprzętowego jest zbyt stara, aby niektóre funkcje działały poprawnie. Zaktualizuj do najnowszej wersji, aby działo sprawniej.',
    firmwareUpgradeForceUpdating: 'Urządzenie jest aktualizowane, spróbuj ponownie później.',
    firmwareUpgradeNewPre: 'Dostępna jest aktualizacja oprogramowania sprzętowego',
    firmwareUpgradeNewSub: '. Zaktualizować teraz?',
    handling: 'Pracuje…',
    error: 'Spróbuj ponownie',
    createLightGroup: 'Utwórz grupę oświetleniową (nowość)',
    manageLightGroup: 'Zarządzaj urządzeniami (nowość)',
    deleteLightGroup: 'Rozgrupuj grupę oświetleniową',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.pl = pl;
},22972,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.vi = undefined;
  var vi = {
    setting: 'Cài đặt',
    featureSetting: 'Cài đặt thiết bị',
    commonSetting: 'Cài đặt chung',
    name: 'Tên thiết bị',
    location: 'Quản lí vị trí',
    memberSet: 'Cài đặt nút',
    share: 'Chia sẻ thiết bị',
    btGateway: 'Cổng BLE',
    voiceAuth: 'Cấp quyền bằng giọng nói',
    ifttt: 'Tự động',
    firmwareUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    more: 'Cài đặt khác',
    help: 'Trợ giúp',
    legalInfo: 'Thông tin hợp pháp',
    deleteDevice: 'Xóa thiết bị',
    autoUpgrade: 'Tự động cập nhật chương trình cơ sở',
    checkUpgrade: 'Kiểm tra bản cập nhật chương trình cơ sở',
    security: 'Cài đặt bảo mật',
    networkInfo: 'Thiết lập mạng',
    feedback: 'Phản hồi',
    timezone: 'Múi giờ thiết bị',
    addToDesktop: 'Thêm vào Màn hình chính',
    cancel: 'Huỷ bỏ',
    ok: 'Xác nhận',
    am: 'Sáng',
    pm: 'Tối',
    months: 'Tháng',
    days: 'Ngày',
    hours: 'Giờ',
    minutes: 'Phút',
    seconds: 'Giây',
    month: 'Tháng',
    day: 'Ngày',
    hour: 'Giờ',
    minute: 'Phút',
    second: 'Giây',
    yearUnit: 'Năm',
    monthUnit: 'Tháng',
    dayUnit: 'Ngày',
    hourUnit: 'Giờ',
    minuteUnit: 'Phút',
    secondUnit: 'Giây',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Thoát',
    firmwareUpgradeUpdate: 'Cập nhật',
    firmwareUpgradeLook: 'Xem xét',
    firmwareUpgradeForceUpdate: 'Phiên bản chương trình cơ sở hiện tại quá cũ, một số tính năng có thể không hoạt động bình thường. Cập nhật lên phiên bản mới nhất để có trải nghiệm tốt hơn.',
    firmwareUpgradeForceUpdating: 'Thiết bị của bạn đang cập nhật, hãy thử lại sau',
    firmwareUpgradeNewPre: 'Đã có bản cập nhật chương trình cơ sở ',
    firmwareUpgradeNewSub: ', cập nhật ngay bây giờ?',
    handling: 'Đang thực hiện',
    error: 'Thử lại',
    createLightGroup: 'Tạo nhóm đèn (mới)',
    manageLightGroup: 'Quản lý thiết bị (mới)',
    deleteLightGroup: 'Hủy nhóm đèn',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.vi = vi;
},22975,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.ja = undefined;
  var ja = {
    setting: '設定',
    featureSetting: 'デバイス設定',
    commonSetting: '全般設定',
    name: 'デバイス名',
    location: '位置を管理する',
    memberSet: 'ボタン設定',
    share: 'デバイスを共有する',
    btGateway: 'BLE ゲートウェイ',
    voiceAuth: '音声承認',
    ifttt: '自動化',
    firmwareUpgrade: 'ファームウェア更新する',
    more: '詳細設定',
    help: 'ヘルプ',
    legalInfo: '法情報',
    deleteDevice: 'デバイスを削除する',
    autoUpgrade: 'ファームウェアの自動アップグレード',
    checkUpgrade: 'ファームウェア更新プログラムの有無を確認する',
    security: 'セキュリティ設定',
    networkInfo: 'ネットワーク情報',
    feedback: 'フィードバック',
    timezone: 'デバイスタイムゾーン',
    addToDesktop: 'ホーム画面に追加する',
    cancel: 'キャンセル',
    ok: '確定',
    am: '午前',
    pm: '午後',
    months: '月',
    days: '日',
    hours: '時間',
    minutes: '分',
    seconds: '秒',
    month: '月',
    day: '日',
    hour: '時間',
    minute: '分',
    second: '秒',
    yearUnit: '年',
    monthUnit: '月',
    dayUnit: '日',
    hourUnit: '時',
    minuteUnit: '分',
    secondUnit: '秒',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: '終了',
    firmwareUpgradeUpdate: '更新',
    firmwareUpgradeLook: '調べる',
    firmwareUpgradeForceUpdate: '現在ご使用のファームウェアは旧バージョンのため、一部の機能が正しく作動しない場合があります。より良いエクスペリエンスのために、最新バージョンに更新してください。',
    firmwareUpgradeForceUpdating: 'デバイス更新中です。後ほど再試行してください。',
    firmwareUpgradeNewPre: 'ファームウェア更新',
    firmwareUpgradeNewSub: '使用可能です。今すぐ更新しますか？',
    handling: '実行中',
    error: '再試行する',
    createLightGroup: '照明グループ作成（新）',
    manageLightGroup: '照明グループ管理（新）',
    deleteLightGroup: '照明グループ解除',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.ja = ja;
},22978,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.th = undefined;
  var th = {
    setting: 'การตั้งค่า',
    featureSetting: 'การตั้งค่าอุปกรณ์',
    commonSetting: 'การตั้งค่าทั่วไป',
    name: 'ชื่ออุปกรณ์',
    location: 'จัดการตำแหน่งที่ตั้ง',
    memberSet: 'การตั้งค่าปุ่ม',
    share: 'แชร์อุปกรณ์',
    btGateway: 'เกตเวย์ BLE',
    voiceAuth: 'การอนุญาตด้วยเสียง',
    ifttt: 'ระบบอัตโนมัติ',
    firmwareUpgrade: 'การอัปเดตเฟิร์มแวร์',
    more: 'การตั้งค่าเพิ่มเติม',
    help: 'ความช่วยเหลือ',
    legalInfo: 'ข้อมูลทางกฎหมาย',
    deleteDevice: 'ลบอุปกรณ์ออก',
    autoUpgrade: 'อัปเดตเฟิร์มแวร์โดยอัตโนมัติ',
    checkUpgrade: 'ตรวจสอบหาการอัปเดตเฟิร์มแวร์',
    security: 'การตั้งค่าความปลอดภัย',
    networkInfo: 'การตั้งค่าเครือข่าย',
    feedback: 'คำติชม',
    timezone: 'โซนเวลาของอุปกรณ์',
    addToDesktop: 'เพิ่มไปยังหน้าโฮม',
    cancel: 'ยกเลิก',
    ok: 'ตกลง',
    am: 'AM',
    pm: 'PM',
    months: 'เดือน',
    days: 'วัน',
    hours: 'ชั่วโมง',
    minutes: 'นาที',
    seconds: 'วินาที',
    month: 'เดือน',
    day: 'วัน',
    hour: 'ชั่วโมง',
    minute: 'นาที',
    second: 'วินาที',
    yearUnit: 'ปี',
    monthUnit: 'เดือน',
    dayUnit: 'วัน',
    hourUnit: 'ชั่วโมง',
    minuteUnit: 'นาที',
    secondUnit: 'วินาที',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'ออก',
    firmwareUpgradeUpdate: 'อัปเดต',
    firmwareUpgradeLook: 'ลองดู',
    firmwareUpgradeForceUpdate: 'เวอร์ชั่นเฟิร์มแวร์ปัจจุบันเก่าไป ฟีเจอร์บางอย่างอาจทำงานไม่ถูกต้อง อัปเดตเป็นเวอร์ชั่นล่าสุดเพื่อประสบการณ์การใช้งานที่ดีขึ้น',
    firmwareUpgradeForceUpdating: 'อุปกรณ์กำลังอัปเดต ลองอีกครั้งในภายหลัง',
    firmwareUpgradeNewPre: 'เฟิร์มแวร์อัปเดต ',
    firmwareUpgradeNewSub: ' ใช้ได้แล้ว อัปเดตตอนนี้หรือไม่',
    handling: 'ในการดำเนินการ',
    error: 'ลองอีกครั้ง',
    createLightGroup: 'สร้างกลุ่มแสงไฟ(ใหม่)',
    manageLightGroup: 'จัดการอุปกรณ์(ใหม่)',
    deleteLightGroup: 'สลายกลุ่มแสงไฟ',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.th = th;
},22981,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.tr = undefined;
  var tr = {
    setting: 'Ayarlar',
    featureSetting: 'Cihaz ayarları',
    commonSetting: 'Genel ayarlar',
    name: 'Cihaz adı',
    location: 'Konum yönetimi',
    memberSet: 'Tuş ayarları',
    share: 'Cihazı paylaş',
    btGateway: 'BLE ağ geçidi',
    voiceAuth: 'Sesli yetkilendirme',
    ifttt: 'Otomasyon',
    firmwareUpgrade: 'Cihaz güncelleştirmeleri',
    more: 'Ek ayarlar',
    help: 'Yardım',
    legalInfo: 'Yasal bilgi',
    deleteDevice: 'Cihazı sil',
    autoUpgrade: 'Ürün yazılımını otomatik olarak güncelle',
    checkUpgrade: 'Üretici yazılımı güncelleştirmelerini denetle',
    security: 'Güvenlik ayarları',
    networkInfo: 'Ağ bilgileri',
    feedback: 'Geri bildirimlerim',
    timezone: 'Cihazın saat dilimi',
    addToDesktop: 'Ana ekrana ekleyin',
    cancel: 'İptal ',
    ok: 'Onayla',
    am: 'AM',
    pm: 'PM',
    months: 'aylar',
    days: 'günler',
    hours: 'saatler',
    minutes: 'dakikalar',
    seconds: 'saniyeler',
    month: 'ay',
    day: 'gün',
    hour: 'saat',
    minute: 'dakika',
    second: 'saniye',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: 'sa. ',
    minuteUnit: 'dk.',
    secondUnit: 'sn.',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Çıkış',
    firmwareUpgradeUpdate: 'Şimdi güncelleştir',
    firmwareUpgradeLook: 'Şimdi göz atın',
    firmwareUpgradeForceUpdate: 'Mevcut ürün yazılımı bazı özellikleri çalıştırmak için çok eski olabilir. Daha iyi bir deneyim için en son sürüme güncelleyin.',
    firmwareUpgradeForceUpdating: 'Cihazınız güncelleştiriliyor, daha sonra yeniden deneyin',
    firmwareUpgradeNewPre: 'Üretici yazılımı güncelleştirmesi',
    firmwareUpgradeNewSub: 'kullanılabilir. Şimdi güncelleştir',
    handling: 'İşleniyor…',
    error: 'Kon niet werken, probeer het later opnieuw.',
    createLightGroup: 'Işık grubu oluştur (yeni)',
    manageLightGroup: 'Cihazları yönet (yeni)',
    deleteLightGroup: 'Işık grubunu kaldır',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '%{0}'
  };
  exports.tr = tr;
},22984,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.nl = undefined;
  var nl = {
    setting: 'Instellingen',
    featureSetting: 'Apparaatinstellingen',
    commonSetting: 'Algemene instellingen',
    name: 'Apparaatnaam',
    location: 'Locatiebeheer',
    memberSet: 'Toetsinstellingen',
    share: 'Apparaat delen',
    btGateway: 'BLE-gateway',
    voiceAuth: 'Autorisatie via spraak',
    ifttt: 'Automatisering',
    firmwareUpgrade: 'Updates van het apparaat',
    more: 'Extra instellingen',
    help: 'Help',
    legalInfo: 'Legale informatie',
    deleteDevice: 'Apparaat verwijderen',
    autoUpgrade: 'Firmware automatisch bijwerken',
    checkUpgrade: 'Controleren op firmware-updates',
    security: 'Beveiligingsinstellingen',
    networkInfo: 'Netwerkgegevens',
    feedback: 'Mijn feedback',
    timezone: 'Tijdzone van het apparaat',
    addToDesktop: 'Toevoegen aan het startscherm',
    cancel: 'Annuleren',
    ok: 'Bevestigen',
    am: 'AM',
    pm: 'PM',
    months: 'Maanden',
    days: 'Dagen',
    hours: 'Uren',
    minutes: 'Minuten',
    seconds: 'Seconden',
    month: 'Maand ',
    day: 'Dag ',
    hour: 'Uur',
    minute: 'Minuut',
    second: 'Seconde ',
    yearUnit: '',
    monthUnit: '',
    dayUnit: '',
    hourUnit: '',
    minuteUnit: '',
    secondUnit: '',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Afsluiten',
    firmwareUpgradeUpdate: 'Nu updaten',
    firmwareUpgradeLook: 'Nu rondkijken',
    firmwareUpgradeForceUpdate: 'De huidige firmware is mogelijk te oud om bepaalde functies uit te voeren. Update naar de nieuwste versie voor een betere ervaring.',
    firmwareUpgradeForceUpdating: 'Uw toestel is aan het updaten, probeer het later nog eens',
    firmwareUpgradeNewPre: 'Firmware-update',
    firmwareUpgradeNewSub: 'beschikbaar. Nu updaten',
    handling: 'Verwerken...',
    error: 'Kon niet werken, probeer het later opnieuw',
    createLightGroup: 'Lichtgroep aanmaken (nieuw)',
    manageLightGroup: 'Apparaten beheren (nieuw)',
    deleteLightGroup: 'Lichtgroep opheffen',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.nl = nl;
},22987,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.pt = undefined;
  var pt = {
    setting: 'Configurações',
    featureSetting: 'Configurações do dispositivo',
    commonSetting: 'Configurações gerais',
    name: 'Nome do dispositivo',
    location: 'Gerenciamento de localização',
    memberSet: 'Configurações do teclado',
    share: 'Compartilhar dispositivo',
    btGateway: 'Gateway BLE',
    voiceAuth: 'Autorização de voz',
    ifttt: 'Automação',
    firmwareUpgrade: 'Atualizações de dispositivo',
    more: 'Configurações adicionais',
    help: 'Ajuda',
    legalInfo: 'Informação legal',
    deleteDevice: 'Excluir dispositivo',
    autoUpgrade: 'Atualizar automaticamente o firmware',
    checkUpgrade: 'Verificar se há atualizações de firmware',
    security: 'Configurações de segurança',
    networkInfo: 'Informações de rede',
    feedback: 'Meu feedback',
    timezone: 'Fuso horário do dispositivo',
    addToDesktop: 'Adicionar à tela de início',
    cancel: 'Cancelar',
    ok: 'Confirmar',
    am: 'Manhã',
    pm: 'Tarde',
    months: 'meses',
    days: 'dias',
    hours: 'horas',
    minutes: 'minutos',
    seconds: 'segundos',
    month: 'mês',
    day: 'dia',
    hour: 'hora',
    minute: 'minuto',
    second: 'segundo',
    yearUnit: 'a',
    monthUnit: 'm',
    dayUnit: 'd',
    hourUnit: 'h',
    minuteUnit: 'min',
    secondUnit: 's',
    dateSubTitle: '{0}-{1}-{2}',
    time24SubTitle: '{0}:{1}',
    time12SubTitle: '{1}:{2} {0}',
    singleSubTitle: '{0} {1}',
    firmwareUpgradeExit: 'Sair',
    firmwareUpgradeUpdate: 'Atualizar agora',
    firmwareUpgradeLook: 'Ver agora',
    firmwareUpgradeForceUpdate: 'O firmware atual pode ser muito antigo para executar alguns recursos. Atualize para a versão mais recente para obter uma melhor experiência.',
    firmwareUpgradeForceUpdating: 'Seu dispositivo está sendo atualizado. Tente novamente mais tarde',
    firmwareUpgradeNewPre: 'Atualização de firmware',
    firmwareUpgradeNewSub: 'disponível. Atualizar agora',
    handling: 'Processando...',
    error: 'Não foi possível operar, tente novamente mais tarde',
    createLightGroup: 'Criar grupo de lâmpadas (novo)',
    manageLightGroup: 'Gerenciar dispositivos (novo)',
    deleteLightGroup: 'Desfazer grupo de lâmpadas',
    selectPlugin: 'Please select your favorite plugin style.',
    traditionalPlugin: 'Traditional plugin',
    standardPlugin: 'Standard plugin',
    recommended: '(Recommended)',
    changeSteps: 'To change the plugin style, follow the steps below:',
    stepOne: 'Step 1: Tap the top right corner of the plugin to enter more settings.',
    stepTwo: 'Step 2: In the general settings, search for "Standard plugin", and use the switch to switch between standard plugin/traditional plugin.',
    starting: "Let's get started",
    switching: 'Switching…',
    switchedSucess: 'Switched successfully',
    switchedfail: "Couldn't switch",
    guideFeedback: 'Feedback',
    next: 'Next',
    percentage: '{0}%'
  };
  exports.pt = pt;
},22990,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "AbstractDialog", {
    enumerable: true,
    get: function get() {
      return _AbstractDialog.default;
    }
  });
  Object.defineProperty(exports, "ActionSheet", {
    enumerable: true,
    get: function get() {
      return _ActionSheet.default;
    }
  });
  Object.defineProperty(exports, "ChoiceDialog", {
    enumerable: true,
    get: function get() {
      return _ChoiceDialog.default;
    }
  });
  Object.defineProperty(exports, "InputDialog", {
    enumerable: true,
    get: function get() {
      return _InputDialog.default;
    }
  });
  Object.defineProperty(exports, "LoadingDialog", {
    enumerable: true,
    get: function get() {
      return _LoadingDialog.default;
    }
  });
  Object.defineProperty(exports, "MessageDialog", {
    enumerable: true,
    get: function get() {
      return _MessageDialog.default;
    }
  });
  Object.defineProperty(exports, "PinCodeDialog", {
    enumerable: true,
    get: function get() {
      return _PinCodeDialog.default;
    }
  });
  Object.defineProperty(exports, "ProgressDialog", {
    enumerable: true,
    get: function get() {
      return _ProgressDialog.default;
    }
  });
  Object.defineProperty(exports, "ShareDialog", {
    enumerable: true,
    get: function get() {
      return _ShareDialog.default;
    }
  });
  Object.defineProperty(exports, "InputView", {
    enumerable: true,
    get: function get() {
      return _InputView.default;
    }
  });
  Object.defineProperty(exports, "ModalDialog", {
    enumerable: true,
    get: function get() {
      return _ModalDialog.default;
    }
  });

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ActionSheet = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ChoiceDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _InputDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _LoadingDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _MessageDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _PinCodeDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _ProgressDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _ShareDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _ModalDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));
},22993,[14305,22996,22999,23005,23008,23011,23014,23017,23020,23023,23221,23317]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _resources = _$$_REQUIRE(_dependencyMap[9]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[12]);

  var _locale = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _Logger = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _PopButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var MODAL_MARGIN = _resources.Styles.MODAL_MARGIN;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var underlayColor = 'rgba(0,0,0,.05)';

  var AbstractDialog = function (_React$Component) {
    (0, _inherits2.default)(AbstractDialog, _React$Component);

    function AbstractDialog(props, context) {
      var _this$context$media, _this$context$media2, _this$context$media3;

      var _this;

      (0, _classCallCheck2.default)(this, AbstractDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AbstractDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('AbstractDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.MARGIN_MODAL = _this.props.useNewTheme ? 0 : 10;
      _this.responsiveContentStyle = ((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? {
        width: width * 0.75
      } : {};
      _this.responsiveDialogStyle = ((_this$context$media2 = _this.context.media) == null ? undefined : _this$context$media2.screenType) === 'tablet' ? {
        alignItems: 'center',
        justifyContent: 'center',
        flexDirection: 'column'
      } : {};
      _this.responsiveDialogModalStyle = ((_this$context$media3 = _this.context.media) == null ? undefined : _this$context$media3.screenType) === 'tablet' ? _resources.Styles.dialog.padModal : {};
      return _this;
    }

    (0, _createClass2.default)(AbstractDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps, prevState) {
        if (prevState.visible === false && this.state.visible === true) {
          var onModalShow = this.props.onModalShow;

          if (typeof onModalShow === 'function') {
            onModalShow();
          }
        }

        if (prevState.visible === true && this.state.visible === false) {
          var onModalHide = this.props.onModalHide;

          if (typeof onModalHide === 'function') {
            onModalHide();
          }
        }
      }
    }, {
      key: "_checkUnlimitedHeightEnable",
      value: function _checkUnlimitedHeightEnable() {
        var result = false;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('unlimitedHeightEnable')) {
          result = this.props.dialogStyle.unlimitedHeightEnable;
        }

        return result;
      }
    }, {
      key: "renderTitle",
      value: function renderTitle() {
        if (!this.props.showTitle) return null;
        var _Styles$dialog$title = _resources.Styles.dialog.title,
            titleHeightFat = _Styles$dialog$title.titleHeightFat,
            titleHeightThin = _Styles$dialog$title.titleHeightThin;
        var theme = this.context.theme;
        var height = {
          height: this.props.showSubtitle ? titleHeightFat : titleHeightThin
        };
        var marginBottom = this.props.showSubtitle ? {
          marginBottom: 0
        } : {};
        var language = this.context.language;
        var titleLines = 1;

        if (language !== 'zh') {
          titleLines = 3;
          height.maxHeight = 86;
        }

        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily.fontFamily = '';
        }

        var titleNumberOfLines = titleLines;
        var subTitleNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('titleNumberOfLines') && this.props.dialogStyle.titleNumberOfLines > 1) {
            titleNumberOfLines = this.props.dialogStyle.titleNumberOfLines;
            height = null;
          }

          if (this.props.dialogStyle.hasOwnProperty('subTitleNumberOfLines') && this.props.dialogStyle.subTitleNumberOfLines > 1) {
            subTitleNumberOfLines = this.props.dialogStyle.subTitleNumberOfLines;
            height = null;
          }

          if (this._checkUnlimitedHeightEnable()) {
            height = null;
          }
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.titleContainer, height, {
            backgroundColor: 'transparent'
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: titleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [{
            width: _resources.Styles.dialog.modal.width * 0.75,
            textAlign: 'center',
            fontSize: 16,
            color: theme.colorBlack,
            marginTop: height ? 7 : 10
          }, marginBottom, _font.FontPrimary, this.props.dialogStyle.titleStyle]
        }, this.props.title || ''), this.props.showSubtitle ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: subTitleNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [_resources.Styles.dialog.subtitle, {
            color: theme.colorGrayNormal,
            marginTop: 5
          }, this.props.dialogStyle.subTitleStyle]
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderContent",
      value: function renderContent() {
        if (this.props.children) return this.props.children;
        return _react.default.createElement(_reactNative.View, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        }), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null), _react.default.createElement(_reactNative.View, {
          style: [styles.content, this.responsiveContentStyle]
        }, _react.default.createElement(_reactNative.Text, null, "\u2B06\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6807\u9898\u548C\u526F\u6807\u9898\u2B06\uFE0F"), _react.default.createElement(_reactNative.Text, null, "\u53EF\u81EA\u5B9A\u4E49\u5185\u5BB9"), _react.default.createElement(_reactNative.Text, null, "\u2B07\uFE0F\u53EF\u81EA\u5B9A\u4E49\u6309\u94AE\u6587\u5B57\u548C\u6837\u5F0F\u2B07\uFE0F")), this.props.useNewTheme ? null : _react.default.createElement(_Separator.default, null));
      }
    }, {
      key: "renderButtonGroup",
      value: function renderButtonGroup() {
        if (!this.props.showButton) return null;
        var buttons = this.props.buttons;

        if (!buttons) {
          buttons = [{
            text: _locale.Locale.of(this.context.language).cancel
          }, {
            text: _locale.Locale.of(this.context.language).ok
          }];
        }

        if (this.props.useNewTheme) {
          if (buttons.length === 1) return this.renderOneButton(buttons);
          if (buttons.length === 2) return this.renderTwoButtons(buttons);
        } else {
          if (buttons.length === 1) return this.renderOneButtonDeprecated(buttons);
          if (buttons.length === 2) return this.renderTwoButtonsDeprecated(buttons);
        }

        _Logger.default.warn('只允许设置1～2个按钮');

        return null;
      }
    }, {
      key: "renderOneButton",
      value: function renderOneButton(buttons) {
        var _this2 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this2.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.button, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "regular",
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback,
          colorType: button0.colorType || 'blueLayerWhite',
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))));
      }
    }, {
      key: "renderTwoButtons",
      value: function renderTwoButtons(buttons) {
        var _this3 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this3.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this3.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.buttons, {
            height: height
          }]
        }, _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginRight: 8
          },
          title: button0.text || _locale.Locale.of(this.context.language).cancel,
          titleStyle: button0.style,
          titleColor: button0.titleColor,
          onPress: callback0,
          colorType: button0.colorType,
          disabled: button0.disabled,
          backgroundColor: button0.backgroundColor,
          allowFontScaling: button0AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        }))), _react.default.createElement(_PopButton.default, (0, _extends2.default)({
          sizeLevel: "medium",
          style: {
            marginLeft: 8
          },
          title: button1.text || _locale.Locale.of(this.context.language).ok,
          titleStyle: button1.style,
          titleColor: button1.titleColor,
          onPress: callback1,
          colorType: button1.colorType || 'blueLayerWhite',
          disabled: button1.disabled,
          backgroundColor: button1.backgroundColor,
          allowFontScaling: button1AllowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        }))));
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        var theme = this.context.theme;

        var _Dimensions$get2 = _reactNative.Dimensions.get('window'),
            width = _Dimensions$get2.width,
            height = _Dimensions$get2.height;

        return _react.default.createElement(_reactNative.Modal, (0, _extends2.default)({
          animationType: this.props.animationType,
          transparent: true,
          visible: this.state.visible,
          onRequestClose: function onRequestClose() {
            return _this4.dismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [_resources.Styles.dialog.background, {
            backgroundColor: this.props.hasShade ? theme.colorOverLayerBlack : 'transparent'
          }, this.responsiveDialogStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.layerDismiss();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.layerDismissAccessibilityHint || _locale.Locale.of(this.context.language).cancel
        }), {
          onAccessibilityTap: function onAccessibilityTap() {
            return _this4.layerDismiss();
          }
        }), _react.default.createElement(_reactNative.View, {
          style: {
            width: width,
            height: height
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [_resources.Styles.dialog.modal, {
            backgroundColor: theme.colorForeground,
            width: width - this.MARGIN_MODAL * 2,
            marginHorizontal: this.MARGIN_MODAL
          }, this.props.useNewTheme ? null : styles.modalDeprecated, this.props.style, this.responsiveDialogModalStyle]
        }, this.renderTitle(), this.renderContent(), this.renderButtonGroup())));
      }
    }, {
      key: "dismiss",
      value: function dismiss() {
        this.setState({
          visible: false
        });
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "layerDismiss",
      value: function layerDismiss() {
        if (this.props.canDismiss) {
          this.setState({
            visible: false
          });
          this.props.onDismiss && this.props.onDismiss();
        }
      }
    }, {
      key: "renderOneButtonDeprecated",
      value: function renderOneButtonDeprecated(buttons) {
        var _this5 = this;

        var button0 = buttons[0];
        if (typeof button0 !== 'object') return null;
        var callback = button0.callback;

        if (callback === undefined || !(callback instanceof Function)) {
          callback = function callback() {
            return _this5.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var buttonNumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          buttonNumberOfLines = button0.numberOfLines;

          if (buttonNumberOfLines > 1) {
            height = null;
          }
        }

        var allowFontScaling = this.props.dialogStyle.allowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          allowFontScaling = button0.allowFontScaling;
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: buttonNumberOfLines,
          allowFontScaling: allowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).ok))));
      }
    }, {
      key: "renderTwoButtonsDeprecated",
      value: function renderTwoButtonsDeprecated(buttons) {
        var _this6 = this;

        var button0 = buttons[0];
        var button1 = buttons[1];
        if (typeof button0 !== 'object' || typeof button1 !== 'object') return null;
        var callback0 = button0.callback;
        var callback1 = button1.callback;

        if (callback0 === undefined || !(callback0 instanceof Function)) {
          callback0 = function callback0() {
            return _this6.dismiss();
          };
        }

        if (callback1 === undefined || !(callback1 instanceof Function)) {
          callback1 = function callback1() {
            return _this6.dismiss();
          };
        }

        var height = _resources.Styles.dialog.buttons.height;
        var button0NumberOfLines;
        var button1NumberOfLines;

        if (button0.hasOwnProperty('numberOfLines')) {
          button0NumberOfLines = button0.numberOfLines;

          if (button0NumberOfLines > 1) {
            height = null;
          }
        }

        if (button1.hasOwnProperty('numberOfLines')) {
          button1NumberOfLines = button1.numberOfLines;

          if (button1NumberOfLines > 1) {
            height = null;
          }
        }

        if (this._checkUnlimitedHeightEnable()) {
          height = null;
        }

        var button0AllowFontScaling = this.props.dialogStyle.allowFontScaling;
        var button1AllowFontScaling = button0AllowFontScaling;

        if (button0.hasOwnProperty('allowFontScaling')) {
          button0AllowFontScaling = button0.allowFontScaling;
        }

        if (button1.hasOwnProperty('allowFontScaling')) {
          button1AllowFontScaling = button0.allowFontScaling;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.buttons, {
            height: height
          }]
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback0,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button0.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorGrayNormal
          }, button0.style],
          numberOfLines: button0NumberOfLines,
          allowFontScaling: button0AllowFontScaling
        }, button0.text || _locale.Locale.of(this.context.language).cancel))), _reactNative.Platform.select({
          android: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              flex: 1
            }
          }),
          ios: _react.default.createElement(_Separator.default, {
            type: "column",
            style: {
              height: '100%'
            }
          })
        }), _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: {
            flex: 1
          },
          onPress: callback1,
          underlayColor: underlayColor
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityHint: button1.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: _resources.Styles.dialog.button
        }, _react.default.createElement(_reactNative.Text, {
          style: [_resources.Styles.dialog.buttonText, {
            color: theme.colorPrimary
          }, button1.style],
          numberOfLines: button1NumberOfLines,
          allowFontScaling: button1AllowFontScaling
        }, button1.text || _locale.Locale.of(this.context.language).ok))));
      }
    }]);
    return AbstractDialog;
  }(_react.default.Component);

  AbstractDialog.contextType = _configProvider.ConfigContext;
  AbstractDialog.defaultProps = {
    animationType: 'fade',
    visible: false,
    showTitle: true,
    showSubtitle: false,
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      subTitleNumberOfLines: 1,
      titleStyle: {},
      subTitleStyle: {}
    },
    canDismiss: true,
    buttons: null,
    showButton: true,
    hasShade: true,
    useNewTheme: false
  };

  var styles = _reactNative.StyleSheet.create({
    titleContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    content: {
      width: width - 20,
      height: 150,
      justifyContent: 'center',
      alignItems: 'center'
    },
    modalDeprecated: {
      bottom: 20,
      paddingBottom: 0,
      borderRadius: 20
    },
    buttons: {
      height: 46,
      flexDirection: 'row',
      backgroundColor: 'transparent',
      justifyContent: 'center',
      alignItems: 'center',
      flex: 1
    }
  });

  var _default = AbstractDialog;
  exports.default = _default;
},22996,[14305,14344,14320,14323,14371,14377,14386,10297,10033,22453,22906,22420,22423,22933,22426,22891,23215,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[14]);

  var _font = _$$_REQUIRE(_dependencyMap[15]);

  var ActionSheet = function (_React$Component) {
    (0, _inherits2.default)(ActionSheet, _React$Component);
    (0, _createClass2.default)(ActionSheet, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }]);

    function ActionSheet(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ActionSheet);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ActionSheet).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ActionSheet');
      _this.state = {
        visible: props.visible
      };
      return _this;
    }

    (0, _createClass2.default)(ActionSheet, [{
      key: "renderItem",
      value: function renderItem(item) {
        var _this2 = this;

        return _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
          title: item.title || '',
          titleStyle: [(0, _objectSpread2.default)({
            textAlign: 'left',
            fontSize: 16,
            lineHeight: 22,
            marginLeft: 30
          }, _font.FontPrimary), this.props.dialogStyle.itemTitleStyle],
          subtitle: item.subtitle || '',
          subtitleStyle: [{
            textAlign: 'left',
            marginLeft: 30
          }, this.props.dialogStyle.itemSubtitleStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          unlimitedHeightEnable: this.props.dialogStyle.unlimitedHeightEnable,
          titleNumberOfLines: this.props.dialogStyle.itemTitleNumberOfLines,
          subtitleNumberOfLines: this.props.dialogStyle.itemSubtitleNumberOfLines,
          onPress: function onPress() {
            return _this2._onPress(item.onPress);
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: item.accessibilityLabel,
          accessibilityHint: item.accessibilityHint
        })));
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? 0 : 14;
        var maxHeight = this.props.options && this.props.options[0] && this.props.options[0].subtitle ? 576 : 594;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          dialogStyle: this.props.dialogStyle,
          showTitle: showTitle,
          title: this.props.title,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this3._onDismiss();
          },
          useNewTheme: true,
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.FlatList, {
          style: {
            marginBottom: 16,
            paddingTop: paddingTop,
            maxHeight: maxHeight
          },
          data: this.props.options,
          renderItem: function renderItem(_ref) {
            var item = _ref.item;
            return _this3.renderItem(item);
          },
          keyExtractor: function keyExtractor(item, index) {
            return (item.title || '') + index;
          }
        }));
      }
    }, {
      key: "_onPress",
      value: function _onPress(callback) {
        callback && callback();
        this.setState({
          visible: false
        });

        this._onDismiss();
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }]);
    return ActionSheet;
  }(_react.default.Component);

  ActionSheet.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ActionSheet.defaultProps = {
    options: [],
    canDismiss: true,
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    }
  };
  var _default = ActionSheet;
  exports.default = _default;
},22999,[14305,14344,14314,14320,14371,14377,14323,14386,10318,10297,10033,23002,22996,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var thinHeight = 54;
  var fatHeight = 72;
  var checkboxSize = 22;
  var TYPE = {
    STATELESS: 'stateless',
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceItem = function (_React$Component) {
    (0, _inherits2.default)(ChoiceItem, _React$Component);

    function ChoiceItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceItem).call(this, props, context));
      _this.state = {
        selected: props.selected
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceItem, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.selected !== this.state.selected) {
          this.setState({
            selected: newProps.selected
          });
        }
      }
    }, {
      key: "renderIcon",
      value: function renderIcon() {
        if (this.props.type === TYPE.STATELESS) return null;

        if (!this.state.selected || this.props.type === TYPE.MULTIPLE) {
          return _react.default.createElement(_reactNative.View, {
            style: {
              width: 38,
              height: fatHeight
            }
          });
        }

        var paddingTop = {
          paddingTop: 22
        };
        if (this.props.subtitle) paddingTop.paddingTop = 31;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.iconContainer, paddingTop]
        }, _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          resizeMode: "contain",
          style: styles.icon
        }));
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var theme = this.context.theme;
        var color = {};
        var textAlign = {};
        if (this.state.selected) color.color = this.props.color;
        if (this.props.type === TYPE.STATELESS) textAlign.textAlign = 'center';
        var adaptedFontStyle = {};

        if (!this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined,
            lineHeight: undefined
          };
        }

        return _react.default.createElement(_reactNative.View, {
          style: styles.textContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: [styles.title, {
            color: theme.colorBlack
          }, _font.FontPrimary, color, textAlign, adaptedFontStyle, this.props.titleStyle],
          numberOfLines: this.props.titleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, {
          style: [styles.subtitle, {
            color: theme.colorGrayNormal
          }, _font.FontSecondary, color, textAlign, adaptedFontStyle, this.props.subtitleStyle],
          numberOfLines: this.props.subtitleNumberOfLines,
          allowFontScaling: this.props.allowFontScaling
        }, this.props.subtitle) : null);
      }
    }, {
      key: "renderCheckbox",
      value: function renderCheckbox() {
        var _this2 = this;

        if (this.props.type !== TYPE.MULTIPLE) return null;
        return _react.default.createElement(_Checkbox.default, {
          style: {
            width: checkboxSize,
            height: checkboxSize,
            borderRadius: 11,
            marginRight: 30
          },
          checked: this.state.selected,
          checkedColor: this.props.color,
          onValueChange: function onValueChange(selected) {
            return _this2._onValueChange(selected);
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme,
            _this3 = this;

        var height = {
          height: thinHeight
        };

        if (this.props.subtitle) {
          height.height = fatHeight;
        }

        var heightStyle = {
          minHeight: height.height,
          height: height.height
        };

        if (this.props.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          underlayColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.listUnderlayColor,
          onPress: function onPress() {
            return _this3._onPress();
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.radio,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            selected: this.state.selected,
            checked: this.state.selected
          }
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, heightStyle]
        }, this.renderIcon(), this.renderText(), this.renderCheckbox()));
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(selected) {
        this.setState({
          selected: selected
        });

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }, {
      key: "_onPress",
      value: function _onPress() {
        var type = this.props.type;
        var selected = this.state.selected;

        if (type !== TYPE.STATELESS) {
          if (type === TYPE.MULTIPLE) selected = !selected;
          if (type === TYPE.SINGLE) selected = true;
          this.setState({
            selected: selected
          });
        }

        if (this.props.onPress) {
          this.props.onPress(selected);
        }
      }
    }]);
    return ChoiceItem;
  }(_react.default.Component);

  exports.default = ChoiceItem;
  ChoiceItem.contextType = _configProvider.ConfigContext;
  ChoiceItem.propTypes = {
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    selected: _propTypes.default.bool,
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    onPress: _propTypes.default.func,
    unlimitedHeightEnable: _propTypes.default.bool,
    allowFontScaling: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    titleStyle: _reactNative.Text.propTypes.style,
    subtitleStyle: _reactNative.Text.propTypes.style,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ChoiceItem.defaultProps = {
    type: TYPE.STATELESS,
    selected: false,
    color: _resources.Styles.common.MHGreen,
    icon: _resources.Images.common.selectIcon,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    titleStyle: {},
    subtitleStyle: {}
  };
  ChoiceItem.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    iconContainer: {
      width: 38,
      alignSelf: 'stretch',
      alignItems: 'center'
    },
    icon: {
      width: 10,
      height: 10
    },
    textContainer: {
      flex: 1,
      justifyContent: 'center'
    },
    title: {
      alignSelf: 'stretch',
      fontSize: 16,
      lineHeight: 22
    },
    subtitle: {
      alignSelf: 'stretch',
      fontSize: 13,
      lineHeight: 18
    }
  });
},23002,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22426,22420,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var TYPE = {
    SINGLE: 'single',
    MULTIPLE: 'multiple'
  };
  Object.freeze(TYPE);

  var ChoiceDialog = function (_React$Component) {
    (0, _inherits2.default)(ChoiceDialog, _React$Component);

    function ChoiceDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ChoiceDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChoiceDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ChoiceDialog');
      var buttons = props.buttons;

      if (buttons instanceof Array) {
        var button = buttons[buttons.length - 1];

        if (button && button.callback) {
          var callbackOrigin = button.callback;

          button.callback = function () {
            var selectedIndexArray = [];
            var selectedIndex;

            for (var i = 0; i < _this.state.selectedArray.length; i++) {
              var item = _this.state.selectedArray[i];

              if (item) {
                selectedIndexArray.push(i);
                selectedIndex = i;
              }
            }

            if (_this.props.type === TYPE.SINGLE) _this.props.onSelect && _this.props.onSelect([selectedIndex]);
            callbackOrigin(selectedIndexArray);
          };
        }
      }

      _this.buttons = buttons;
      var selectedArray = Array.from({
        length: props.options.length
      }, function (v, i) {
        return props.selectedIndexArray.includes(i);
      });
      _this.state = {
        visible: props.visible,
        selectedArray: selectedArray
      };
      return _this;
    }

    (0, _createClass2.default)(ChoiceDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }

        var selectedArray = Array.from({
          length: newProps.options.length
        }, function (v, i) {
          return newProps.selectedIndexArray.includes(i);
        });
        this.setState({
          selectedArray: selectedArray
        });
      }
    }, {
      key: "_onPress",
      value: function _onPress(selected, index) {
        if (selected) {} else {}

        if (this.props.type === TYPE.SINGLE) {
          var selectedArray = Array.from({
            length: this.props.options.length
          }, function () {
            return false;
          });
          selectedArray[index] = selected;

          if (this.props.useNewType) {
            this.setState({
              selectedArray: selectedArray
            });
          } else {
            this.setState({
              selectedArray: selectedArray,
              visible: false
            });

            this._onDismiss();

            this.props.onSelect && this.props.onSelect([index]);
          }
        } else {
          var _selectedArray = this.state.selectedArray;
          _selectedArray[index] = selected;
          this.setState({
            selectedArray: _selectedArray
          });
        }
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        var showButton = this.props.type === TYPE.MULTIPLE || this.props.useNewType;
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          showButton: showButton,
          buttons: this.buttons,
          style: this.props.modalStyle,
          useNewTheme: true,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this2._onDismiss();
          },
          canDismiss: this.props.canDismiss
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessibilityLabel: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: {
            marginBottom: 16
          }
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.View, {
            key: (option.title || '') + index
          }, _react.default.createElement(_ChoiceItem.default, (0, _extends2.default)({
            type: _this2.props.type,
            title: option.title || '',
            titleStyle: _this2.props.dialogStyle.itemTitleStyle,
            subtitleStyle: _this2.props.dialogStyle.itemSubtitleStyle,
            allowFontScaling: _this2.props.dialogStyle.allowFontScaling,
            unlimitedHeightEnable: _this2.props.dialogStyle.unlimitedHeightEnable,
            titleNumberOfLines: _this2.props.dialogStyle.itemTitleNumberOfLines,
            subtitleNumberOfLines: _this2.props.dialogStyle.itemSubtitleNumberOfLines,
            subtitle: option.subtitle || '',
            selected: _this2.state.selectedArray[index],
            color: _this2.props.color,
            icon: _this2.props.icon,
            onPress: function onPress(selected) {
              return _this2._onPress(selected, index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityLabel: option.accessibilityLabel,
            accessibilityHint: option.accessibilityHint
          }))));
        })));
      }
    }]);
    return ChoiceDialog;
  }(_react.default.Component);

  ChoiceDialog.propTypes = {
    animationType: _propTypes.default.string,
    type: _propTypes.default.oneOf([TYPE.STATELESS, TYPE.SINGLE, TYPE.MULTIPLE]),
    visible: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      subtitle: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    selectedIndexArray: _propTypes.default.arrayOf(_propTypes.default.number),
    color: _propTypes.default.string,
    icon: _propTypes.default.number,
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func
    })),
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    onSelect: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    canDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  ChoiceDialog.defaultProps = {
    useNewType: false,
    type: TYPE.SINGLE,
    options: [],
    selectedIndexArray: [],
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleStyle: {},
      itemTitleStyle: {},
      itemSubtitleStyle: {},
      itemTitleNumberOfLines: 1,
      itemSubtitleNumberOfLines: 1
    },
    canDismiss: true
  };
  ChoiceDialog.TYPE = TYPE;
  var _default = ChoiceDialog;
  exports.default = _default;
},23005,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,23002,22996,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _InputView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 27;
  var paddingVertical = 28;
  var paddingTop = 9;
  var paddingBottom = 6;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    BOTH: 'both'
  };
  Object.freeze(TYPE);

  var InputDialog = function (_React$Component) {
    (0, _inherits2.default)(InputDialog, _React$Component);

    function InputDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, InputDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('InputDialog');
      _this.state = {
        checked: props.checkboxData.checked || false,
        disButton: props.noInputDisButton
      };
      _this.textInputArray = [];

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(InputDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.checkboxData.checked || false
        });
        this.processButton(props);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.visible && !this.props.visible) {
          this.textInputArray = [];
          this.setState({
            disButton: this.props.noInputDisButton
          });
        } else if (!prevProps.visible && this.props.visible) {
          this.textInputArray = [];

          for (var i = 0; i < ((_this$props$inputs = this.props.inputs) == null ? undefined : _this$props$inputs.length) || 0; i++) {
            var _this$props$inputs;

            var input = this.props.inputs[i];

            if (input !== undefined) {
              this.textInputArray.push(input.defaultValue || '');
            }
          }

          if (this.props.noInputDisButton) {
            var result = this.isInputArrayEmpty(this.textInputArray);
            if (result !== this.state.disButton) this.setState({
              disButton: result
            });
          }
        }
      }
    }, {
      key: "processButton",
      value: function processButton(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                hasPressUnderlineText: _this2.hasPressUnderlineText,
                checked: _this2.state.checked,
                textInputArray: _this2.textInputArray
              });
            };
          }
        }

        this.buttons = buttons;
        this.hasPressUnderlineText = false;
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this3 = this;

        var inputs = props.inputs;

        if (props.inputs === null || props.inputs === undefined) {
          inputs = [{
            defaultValue: '',
            textInputProps: {
              autoFocus: true
            }
          }];
        }

        var _loop = function _loop(i) {
          var input = inputs[i];

          if (input !== undefined) {
            _this3.textInputArray.push(input.defaultValue || '');

            var onChangeTextOrigin = input.onChangeText;

            input.onChangeText = function (text) {
              _this3._onChangeText(text, i);

              if (onChangeTextOrigin instanceof Function) {
                onChangeTextOrigin(text);
              }
            };
          }
        };

        for (var i = 0; i < inputs.length; i++) {
          _loop(i);
        }

        this.inputs = inputs;
        this.processButton(props);
      }
    }, {
      key: "isInputArrayEmpty",
      value: function isInputArrayEmpty(arr) {
        for (var _iterator = arr, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === "function" ? Symbol.iterator : "@@iterator"]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var _element = _ref;
          if (_element === '' || typeof _element === undefined || _element === null) return true;
        }

        return false;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text, index) {
        this.textInputArray[index] = text;

        if (this.props.noInputDisButton) {
          var result = this.isInputArrayEmpty(this.textInputArray);
          if (result !== this.state.disButton) this.setState({
            disButton: result
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this4 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && !this.props.underlineData.useNewTheme) {
          var _this$props$underline = this.props.underlineData,
              leftText = _this$props$underline.leftText,
              underlineText = _this$props$underline.underlineText,
              accessibilityLabel = _this$props$underline.accessibilityLabel,
              accessibilityHint = _this$props$underline.accessibilityHint;
          var leftTextNumberOfLines = 1;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('leftTextNumberOfLines')) {
            leftTextNumberOfLines = this.props.underlineData.leftTextNumberOfLines;
          }

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer, {
              paddingBottom: 5,
              paddingTop: 0
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: leftTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            style: [styles.label, this.props.underlineData.leftTextStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), leftText || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this4.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderDownUnderline",
      value: function renderDownUnderline() {
        var _this5 = this;

        if ((this.props.type === TYPE.BOTH || this.props.type === TYPE.UNDERLINE) && this.props.underlineData.useNewTheme) {
          var _this$props$underline2 = this.props.underlineData,
              underlineText = _this$props$underline2.underlineText,
              accessibilityLabel = _this$props$underline2.accessibilityLabel,
              accessibilityHint = _this$props$underline2.accessibilityHint;
          var underlineTextNumberOfLines = 1;

          if (this.props.underlineData && this.props.underlineData.hasOwnProperty('underlineTextNumberOfLines')) {
            underlineTextNumberOfLines = this.props.underlineData.underlineTextNumberOfLines;
          }

          return _react.default.createElement(_reactNative.View, {
            style: [styles.underlineContainer]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: [styles.underlineText, {
              color: this.props.color,
              textAlign: 'left'
            }, this.props.underlineData.underlineTextStyle],
            numberOfLines: underlineTextNumberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling,
            onPress: function onPress() {
              return _this5.onPressUnderlineText();
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: accessibilityLabel,
            accessibilityHint: accessibilityHint
          })), underlineText || ''));
        }

        return null;
      }
    }, {
      key: "renderWarnText",
      value: function renderWarnText() {
        var _this$context$theme;

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.inputWarnText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWarn
          }],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.inputWarnText);
      }
    }, {
      key: "renderInputView",
      value: function renderInputView(input, index) {
        var _this6 = this;

        if (input === undefined) return null;
        var accessibilityLabel = input.accessibilityLabel,
            accessibilityHint = input.accessibilityHint;
        var marginTop = index === 0 ? 0 : 7;
        var onChangeTextOrigin = input.onChangeText;

        input.onChangeText = function (text) {
          _this6._onChangeText(text, index);

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(text);
          }
        };

        return _react.default.createElement(_InputView.default, (0, _extends2.default)({
          key: index + (input.placeholder || ''),
          style: {
            marginTop: marginTop
          },
          placeholder: input.placeholder || '',
          onChangeText: input.onChangeText,
          defaultValue: input.defaultValue || '',
          textInputProps: input.textInputProps || {},
          type: input.type,
          borderColor: input.borderColor,
          isCorrect: input.isCorrect
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint
        })));
      }
    }, {
      key: "renderInputGroup",
      value: function renderInputGroup() {
        var input0 = this.props.inputs ? this.props.inputs[0] : [{
          defaultValue: '',
          textInputProps: {
            autoFocus: true
          }
        }];
        var input1 = this.props.inputs ? this.props.inputs.length > 1 ? this.props.inputs[1] : undefined : undefined;
        return _react.default.createElement(_reactNative.View, {
          flexDirection: 'column',
          alignItems: 'center',
          justifyContent: 'center'
        }, this.renderInputView(input0, 0), input0.hasOwnProperty('isCorrect') && !input0.isCorrect ? this.renderWarnText() : null, this.renderInputView(input1, 1));
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this7 = this;

        if (this.props.type === TYPE.BOTH || this.props.type === TYPE.CHECKBOX) {
          var _this$context$theme2;

          var _this$props$checkboxD = this.props.checkboxData,
              text = _this$props$checkboxD.text,
              accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
              accessibilityHint = _this$props$checkboxD.accessibilityHint;
          var numberOfLines = 1;

          if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
            numberOfLines = this.props.checkboxData.numberOfLines;
          }

          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            onPress: function onPress() {
              return _this7.onPressCheckbox();
            },
            activeOpacity: 1,
            style: {
              paddingTop: paddingTop,
              marginHorizontal: 13
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabel || text,
            accessibilityHint: accessibilityHint,
            accessibilityState: {
              disabled: false,
              checked: this.state.checked
            }
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.checkboxContainer]
          }, _react.default.createElement(_Checkbox.default, {
            checked: this.state.checked,
            checkedColor: this.props.color,
            style: {
              width: 22,
              height: 22,
              borderRadius: 11
            },
            onValueChange: function onValueChange(checked) {
              _this7.setState({
                checked: checked
              });
            }
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.checkboxText, {
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
            }, this.props.checkboxData.textStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: this.props.dialogStyle.allowFontScaling
          }, text || '')));
        }

        return null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this8 = this;

        var buttons = this.buttons;

        if (this.props.noInputDisButton && buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.disButton;
          button.colorType = this.state.disButton ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.45),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this8._onDismiss();
          },
          showSubtitle: !this.props.isCorrect,
          subtitle: this.props.warnText,
          canDismiss: this.props.canDismiss,
          useNewTheme: true,
          dialogStyle: {
            subTitleStyle: {
              color: '#F43F31',
              fontSize: 14,
              lineHeight: 19
            }
          },
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), this.renderInputGroup(), this.renderDownUnderline(), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
        this.setState({
          disButton: this.props.noInputDisButton
        });
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.underlineData.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return InputDialog;
  }(_react.default.Component);

  InputDialog.contextType = _configProvider.ConfigContext;
  InputDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX, TYPE.BOTH]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    extra: _propTypes.default.object,
    underlineData: _propTypes.default.shape({
      useNewTheme: _propTypes.default.bool,
      leftText: _propTypes.default.string,
      underlineText: _propTypes.default.string,
      onPress: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    inputs: _propTypes.default.arrayOf(_propTypes.default.shape({
      placeholder: _propTypes.default.string,
      defaultValue: _propTypes.default.string,
      onChangeText: _propTypes.default.func,
      textInputProps: _propTypes.default.object,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    isCorrect: _propTypes.default.bool,
    inputWarnText: _propTypes.default.string,
    warnText: _propTypes.default.string,
    noInputDisButton: _propTypes.default.bool,
    canDismiss: _propTypes.default.bool
  };
  InputDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    underlineData: {},
    checkboxData: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      titleStyle: {}
    },
    buttons: [{
      text: '取消'
    }, {
      text: '确定'
    }],
    inputs: [{
      placeholder: '自定义占位字符',
      defaultValue: '',
      textInputProps: {
        autoFocus: true
      }
    }],
    isCorrect: true,
    inputWarnText: '输入错误',
    warnText: '结果错误',
    noInputDisButton: false,
    canDismiss: true
  };
  InputDialog.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      backgroundColor: 'transparent',
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    underlineContainer: {
      marginHorizontal: 13,
      paddingTop: paddingTop,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'space-around'
    },
    label: {
      fontSize: 14,
      lineHeight: 19,
      color: 'rgba(0,0,0,0.8)',
      flex: 1
    },
    underlineText: {
      flex: 1,
      textAlign: 'right',
      lineHeight: 19,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    },
    inputWarnText: {
      alignSelf: 'flex-start',
      marginHorizontal: 19,
      marginTop: 9,
      fontSize: 14,
      lineHeight: 19,
      flex: 1
    }
  });

  var _default = InputDialog;
  exports.default = _default;
},23008,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22426,23221,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeIndicators = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _Icons = _$$_REQUIRE(_dependencyMap[16]);

  var LoadingDialog = function (_React$Component) {
    (0, _inherits2.default)(LoadingDialog, _React$Component);

    function LoadingDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, LoadingDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LoadingDialog).call(this, props, context));

      _this.onShowView = function () {
        _this.state.rotate.setValue(0);

        _reactNative.Animated.timing(_this.state.rotate, {
          toValue: 1,
          useNativeDriver: true,
          duration: 1000
        }).start(function () {
          return _this.onShowView();
        });
      };

      (0, _reportDecorator.referenceReport)('LoadingDialog');
      _this.state = {
        visible: _this.props.visible,
        rotate: new _reactNative.Animated.Value(0)
      };
      _this.uselesscode = _reactNativeIndicators.BallIndicator;
      return _this;
    }

    (0, _createClass2.default)(LoadingDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.onShowView();
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme;

        var timeout = this.props.timeout;
        var paddingTop = 25;

        if (timeout && typeof parseInt(timeout) === 'number') {
          if (!this.state.visible) {
            clearTimeout(this.timer);
            this.timer = null;
          } else if (!this.timer) {
            this.timer = setTimeout(function () {
              _this2.setState({
                visible: false
              });

              _this2.props.onDismiss && _this2.props.onDismiss();
            }, parseInt(timeout));
          }
        }

        var pic = this.context.colorScheme === 'dark' ? _Icons.Icons.loadingPicDark : _Icons.Icons.loadingPicLight;

        var imageView = _react.default.createElement(_reactNative.Animated.Image, {
          source: pic,
          style: {
            marginLeft: 1,
            backgroundColor: 'transparent',
            width: 20,
            height: 20,
            transform: [{
              rotate: this.state.rotate.interpolate({
                inputRange: [0, 1],
                outputRange: ['0deg', '360deg']
              })
            }]
          }
        });

        var heightStyle = {
          height: styles.container.height,
          minHeight: styles.container.height
        };

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('textNumberOfLines')) {
          if (this.props.dialogStyle.textNumberOfLines > 1) {
            heightStyle.height = null;
          }
        }

        if (this.props.dialogStyle && this.props.dialogStyle.unlimitedHeightEnable) {
          heightStyle.height = null;
        }

        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          accessible: this.props.accessible,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, heightStyle, {
            paddingTop: paddingTop
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), imageView, _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: this.props.dialogStyle.textNumberOfLines
        }, this.props.message || '')));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return LoadingDialog;
  }(_react.default.Component);

  LoadingDialog.contextType = _configProvider.ConfigContext;
  LoadingDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    timeout: _propTypes.default.number,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  LoadingDialog.defaultProps = {
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      messageStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      height: 65,
      flexDirection: 'row',
      alignItems: 'center',
      paddingHorizontal: 27,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: {
      marginLeft: 15,
      flex: 1,
      fontSize: 16
    }
  });

  var _default = LoadingDialog;
  exports.default = _default;
},23011,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13711,22453,22996,22426,22420,22423,23080]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var paddingHorizontal = 40;
  var paddingVertical = 28;
  var paddingTop = 17;
  var TYPE = {
    SIMPLE: 'simple',
    UNDERLINE: 'underline',
    CHECKBOX: 'checkbox',
    SUBTEXT: 'subtext'
  };
  Object.freeze(TYPE);

  var MessageDialog = function (_React$Component) {
    (0, _inherits2.default)(MessageDialog, _React$Component);

    function MessageDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, MessageDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MessageDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('MessageDialog');
      _this.state = {
        checked: props.extra.checked || false
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(MessageDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        this.setState({
          checked: props.extra.checked || false
        });
        this.process(props);
      }
    }, {
      key: "process",
      value: function process(props) {
        var _this2 = this;

        this.hasPressUnderlineText = false;
        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              if (props.type === TYPE.UNDERLINE) {
                callbackOrigin({
                  hasPressUnderlineText: _this2.hasPressUnderlineText
                });
              } else if (props.type === TYPE.CHECKBOX) {
                callbackOrigin({
                  checked: _this2.state.checked
                });
              } else {
                callbackOrigin({});
              }
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "renderExtra",
      value: function renderExtra() {
        var _this3 = this,
            _this$context$theme,
            _this$context$theme2;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        switch (this.props.type) {
          case TYPE.SIMPLE:
            return null;

          case TYPE.UNDERLINE:
            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: [styles.extraContainer, {
                paddingTop: paddingTop
              }]
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.underlineText, {
                color: this.props.color
              }, this.props.dialogStyle.extraTextStyle],
              onPress: function onPress() {
                return _this3.onPressUnderlineText();
              }
            }, this.props.extraText || ''));

          case TYPE.CHECKBOX:
            return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
              onPress: function onPress() {
                return _this3.onPressCheckbox();
              },
              activeOpacity: 1,
              style: {
                paddingTop: paddingTop
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: styles.extraContainer
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint,
              accessibilityState: {
                disabled: false,
                checked: this.state.checked
              }
            })), _react.default.createElement(_Checkbox.default, {
              checked: this.state.checked,
              checkedColor: this.props.color,
              style: {
                width: 22,
                height: 22,
                borderRadius: 11
              },
              onValueChange: function onValueChange(checked) {
                _this3.setState({
                  checked: checked
                });
              }
            }), _react.default.createElement(_reactNative.Text, {
              style: [styles.checkboxText, {
                color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
              }, this.props.dialogStyle.extraTextStyle],
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling
            }, this.props.extraText || '')));

          case TYPE.SUBTEXT:
            extraTextNumberOfLines = 15;

            if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
              extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
            }

            return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
              style: {
                paddingTop: 10
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
              accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
              accessibilityHint: this.props.accessibilityHint
            })), _react.default.createElement(_reactNative.Text, {
              numberOfLines: extraTextNumberOfLines,
              allowFontScaling: this.props.dialogStyle.allowFontScaling,
              style: [styles.subText, {
                color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
              }, this.props.dialogStyle.extraTextStyle]
            }, this.props.extraText || ''));

          default:
            return null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this,
            _this$context$theme3;

        var showTitle = !!this.props.title;
        var paddingTop = showTitle ? {
          paddingTop: 8
        } : {};
        var messageNumberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          showTitle: showTitle,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          style: this.props.modalStyle,
          onModalHide: this.props.onModalHide,
          canDismiss: this.props.canDismiss,
          onDismiss: function onDismiss() {
            return _this4._onDismiss();
          },
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container, paddingTop]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: messageNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          style: [styles.message, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.messageStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || ''), this.renderExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressUnderlineText",
      value: function onPressUnderlineText() {
        this.hasPressUnderlineText = true;
        var onPress = this.props.extra.onPress;
        onPress && onPress();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return MessageDialog;
  }(_react.default.Component);

  MessageDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    type: _propTypes.default.oneOf([TYPE.SIMPLE, TYPE.UNDERLINE, TYPE.CHECKBOX]),
    color: _propTypes.default.string,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    messageStyle: _reactNative.Text.propTypes.style,
    extraText: _propTypes.default.string,
    extra: _propTypes.default.object,
    buttons: _propTypes.default.arrayOf(_propTypes.default.object),
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MessageDialog.defaultProps = {
    type: TYPE.SIMPLE,
    color: _resources.Styles.common.MHGreen,
    message: '请自定义提示文案',
    messageStyle: {},
    dialogStyle: {
      allowFontScaling: true,
      unlimitedHeightEnable: false,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      extraTextStyle: {}
    },
    canDismiss: true,
    extra: {}
  };
  MessageDialog.TYPE = TYPE;
  MessageDialog.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingVertical: paddingVertical,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    message: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontSecondary),
    subText: (0, _objectSpread2.default)({
      fontSize: 12,
      lineHeight: 16
    }, _font.FontSecondary),
    underlineText: {
      flex: 1,
      textDecorationLine: 'underline',
      fontSize: 14
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14
    }
  });

  var _default = MessageDialog;
  exports.default = _default;
},23014,[14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22786,22996,22420,22423,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var paddingHorizontal = 25;
  var paddingVertical = 28;
  var marginVertical = 26;
  var blockSize = 48;

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      height = _Dimensions$get.height,
      width = _Dimensions$get.width;

  var PinCodeDialog = function (_React$Component) {
    (0, _inherits2.default)(PinCodeDialog, _React$Component);
    (0, _createClass2.default)(PinCodeDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(props) {
        if (props.visible === true) {
          this.setState({
            numArr: Array.from({
              length: this.digit
            }, function () {
              return undefined;
            }),
            value: ''
          });
        }

        this.setState({
          checked: (props.checkboxData || {})['checked'] || false
        });
        this.process(props);
      }
    }]);

    function PinCodeDialog(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, PinCodeDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PinCodeDialog).call(this, props, context));

      _this.fadeInView = function () {
        var animationSequence = _reactNative.Animated.sequence([_reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 1,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        }), _reactNative.Animated.timing(_this.state.fadeAnim, {
          toValue: 0,
          duration: 490,
          easing: _reactNative.Easing.exp,
          useNativeDriver: true
        })]);

        _reactNative.Animated.loop(animationSequence).start();

        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            width: 2,
            height: 18,
            borderRadius: 0.5,
            backgroundColor: '#32BAC0',
            opacity: _this.state.fadeAnim
          }
        });
      };

      (0, _reportDecorator.referenceReport)('PinCodeDialog');
      _this.digit = _this.props.digit;

      if (_this.digit > 6 || _this.digit < 3) {
        _this.digit = 6;
      }

      var numArr = Array.from({
        length: _this.digit
      }, function () {
        return undefined;
      });
      _this.state = {
        numArr: numArr,
        value: '',
        checked: (props.checkboxData || {})['checked'] || false,
        fadeAnim: new _reactNative.Animated.Value(0)
      };

      _this.process(props);

      return _this;
    }

    (0, _createClass2.default)(PinCodeDialog, [{
      key: "process",
      value: function process(props) {
        var _this2 = this;

        var buttons = props.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];

          if (button && button.callback) {
            var callbackOrigin = button.callback;

            button.callback = function () {
              callbackOrigin({
                checked: _this2.state.checked,
                numArr: _this2.state.numArr
              });
            };
          }
        }

        this.buttons = buttons;
      }
    }, {
      key: "_onChangeText",
      value: function _onChangeText(text) {
        if (/^\d*$/.test(text)) {
          if (text.length <= this.digit) {
            var numArr = this.state.numArr.map(function (v, i) {
              return text[i];
            });
            this.setState({
              numArr: numArr
            });
          }

          this.setState({
            value: text.slice(0, this.digit)
          });
        } else {
          var value = text.match(/\d*/)[0];
          this.setState({
            value: value
          });
        }
      }
    }, {
      key: "renderUpExtra",
      value: function renderUpExtra() {
        var _this$context$theme;

        if (!this.props.message) return null;
        var numberOfLines = 15;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('messageNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.messageNumberOfLines;
        }

        return _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.message, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling,
          numberOfLines: numberOfLines
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
        })), this.props.message || '');
      }
    }, {
      key: "renderTextGroup",
      value: function renderTextGroup() {
        var _this3 = this;

        var focusIndex = this.state.numArr.indexOf(undefined);
        return Array.from({
          length: this.digit
        }, function (v, i) {
          return i;
        }).map(function (v, i) {
          var _this3$context$theme3, _this3$context$theme4;

          var marginLeft = i === 0 ? {} : {
            marginLeft: 66 / _this3.digit
          };
          var borderColor = {};
          var boxView;

          if (i < focusIndex - 1 || focusIndex === -1) {
            var _this3$context$theme;

            boxView = _react.default.createElement(_reactNative.View, {
              style: {
                width: 8,
                height: 8,
                backgroundColor: (_this3$context$theme = _this3.context.theme) == null ? undefined : _this3$context$theme.colorBlack1,
                borderRadius: 4
              }
            });
          } else if (i === focusIndex) {
            boxView = _this3.fadeInView();
          } else {
            var _this3$context$theme2;

            boxView = _react.default.createElement(_reactNative.Text, {
              style: [styles.blockText, {
                color: (_this3$context$theme2 = _this3.context.theme) == null ? undefined : _this3$context$theme2.colorBlack1
              }, _this3.props.dialogStyle.digitStyle],
              selectionColor: 'green',
              allowFontScaling: _this3.props.dialogStyle.allowFontScaling
            }, _this3.state.numArr[i] || '');
          }

          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: i,
            style: [styles.blockContainer, {
              backgroundColor: (_this3$context$theme3 = _this3.context.theme) == null ? undefined : _this3$context$theme3.colorBtnGrayNor,
              borderColor: (_this3$context$theme4 = _this3.context.theme) == null ? undefined : _this3$context$theme4.colorBtnGrayNor
            }, marginLeft, borderColor]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible
          })), boxView);
        });
      }
    }, {
      key: "renderDownExtra",
      value: function renderDownExtra() {
        var _this4 = this,
            _this$context$theme2;

        if (!(this.props.checkboxData instanceof Object)) return null;
        var numberOfLines = 1;

        if (this.props.checkboxData && this.props.checkboxData.hasOwnProperty('numberOfLines')) {
          numberOfLines = this.props.checkboxData.numberOfLines;
        }

        var _this$props$checkboxD = this.props.checkboxData,
            text = _this$props$checkboxD.text,
            accessibilityLabel = _this$props$checkboxD.accessibilityLabel,
            accessibilityHint = _this$props$checkboxD.accessibilityHint;
        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this4.onPressCheckbox();
          },
          activeOpacity: 1
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: accessibilityLabel,
          accessibilityHint: accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.checkboxContainer
        }, _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.color,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this4.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayHeavier
          }, this.props.checkboxData.textStyle],
          numberOfLines: numberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, text || '')));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var buttons = this.buttons;

        if (buttons instanceof Array) {
          var button = buttons[buttons.length - 1];
          button.disabled = this.state.value === '';
          button.colorType = this.state.value === '' ? 'grayLayerBlack' : 'blueLayerWhite';
        }

        var absDialogStyle = _reactNative.Platform.OS === 'ios' ? {
          bottom: ~~(height * 0.4),
          borderRadius: 20,
          marginHorizontal: 10,
          width: width - 20
        } : {};
        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          buttons: this.buttons,
          dialogStyle: this.props.dialogStyle,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          style: this.props.modalStyle,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          useNewTheme: true,
          canDismiss: this.props.canDismiss,
          style: absDialogStyle
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible
        })), _react.default.createElement(_reactNative.View, {
          style: [styles.container]
        }, this.renderUpExtra(), _react.default.createElement(_reactNative.View, {
          style: styles.pinCodeContainer
        }, _react.default.createElement(_reactNative.View, {
          style: styles.textGroup
        }, this.renderTextGroup()), _react.default.createElement(_reactNative.TextInput, {
          autoFocus: true,
          caretHidden: true,
          style: styles.textinput,
          value: this.state.value,
          underlineColorAndroid: "transparent",
          onChangeText: function onChangeText(text) {
            return _this5._onChangeText(text);
          },
          keyboardType: "numeric"
        })), this.renderDownExtra()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return PinCodeDialog;
  }(_react.default.Component);

  PinCodeDialog.contextType = _configProvider.ConfigContext;
  PinCodeDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    message: _propTypes.default.string,
    digit: _propTypes.default.oneOf([3, 4, 5, 6]),
    color: _propTypes.default.any,
    dialogStyle: _propTypes.default.object,
    checkboxData: _propTypes.default.shape({
      checked: _propTypes.default.bool,
      text: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    }),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  PinCodeDialog.defaultProps = {
    digit: 6,
    color: _resources.Styles.common.MHGreen,
    checkboxData: {},
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      messageNumberOfLines: 15,
      titleStyle: {},
      messageStyle: {},
      digitStyle: {}
    },
    canDismiss: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      paddingHorizontal: paddingHorizontal,
      paddingBottom: paddingVertical,
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    message: {
      fontSize: 16,
      lineHeight: 22,
      flex: 1,
      marginHorizontal: 15
    },
    pinCodeContainer: {
      marginVertical: marginVertical,
      marginBottom: 12,
      alignItems: 'center',
      justifyContent: 'center'
    },
    textinput: {
      position: 'absolute',
      width: _resources.Styles.dialog.modal.width - 50,
      height: 50,
      backgroundColor: 'transparent',
      color: 'transparent'
    },
    textGroup: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    blockContainer: {
      height: blockSize,
      width: blockSize,
      borderRadius: 10,
      borderWidth: 2,
      alignItems: 'center',
      justifyContent: 'center'
    },
    blockText: {
      fontSize: 20
    },
    checkboxContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      marginHorizontal: 15
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      lineHeight: 19
    }
  });

  var _default = PinCodeDialog;
  exports.default = _default;
},23017,[14305,14344,14320,14371,14377,14323,14386,10318,10297,10033,22453,22786,22996,22426,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _index = _$$_REQUIRE(_dependencyMap[17]);

  var _string = _$$_REQUIRE(_dependencyMap[18]);

  var padding = 27;

  var ProgressDialog = function (_React$Component) {
    (0, _inherits2.default)(ProgressDialog, _React$Component);

    function ProgressDialog(props, context) {
      var _this$context$media;

      var _this;

      (0, _classCallCheck2.default)(this, ProgressDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ProgressDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ProgressDialog');
      _this.state = {
        visible: _this.props.visible
      };
      _this.responsiveProgressWidth = (((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? _resources.Styles.dialog.padModal.width : _resources.Styles.dialog.modal.width) - 54;
      return _this;
    }

    (0, _createClass2.default)(ProgressDialog, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(newProps) {
        if (newProps.visible !== this.state.visible) {
          this.setState({
            visible: newProps.visible
          });
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this,
            _this$context$theme,
            _this$context$theme2,
            _this$context$theme3;

        if (this.props.autoDismiss && this.state.visible === true && this.props.progress >= 1) {
          this.timer = setTimeout(function () {
            _this2.setState({
              visible: false
            });

            _this2.props.onDismiss && _this2.props.onDismiss();
          }, 350);
        }

        var progressText = (0, _string.formatString)(_index.Locale.of(this.context.language).percentage, Math.round(this.props.progress * 100));
        var messageNumberOfLines = 1;

        if (this.props.dialogStyle) {
          if (this.props.dialogStyle.hasOwnProperty('messageNumberOfLines') && this.props.dialogStyle.messageNumberOfLines > 1) {
            messageNumberOfLines = this.props.dialogStyle.messageNumberOfLines;
          }
        }

        var unfilledColor = (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGrayNor;

        if (this.props.unfilledColor) {
          unfilledColor = this.props.unfilledColor;
        }

        return _react.default.createElement(_AbstractDialog.default, (0, _extends2.default)({
          animationType: this.props.animationType,
          visible: this.state.visible,
          showTitle: false,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          canDismiss: false,
          showButton: false,
          useNewTheme: true
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorForeground
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.progressbar,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityValue: this.props.accessibilityValue || {
            text: progressText
          }
        })), _react.default.createElement(_reactNative.View, {
          style: styles.messageContainer
        }, _react.default.createElement(_reactNative.Text, {
          numberOfLines: messageNumberOfLines,
          style: [styles.message, {
            flex: 1,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayHeavier
          }, this.props.dialogStyle.messageStyle],
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.message || ''), _react.default.createElement(_reactNative.Text, {
          style: [styles.message, {
            minWidth: 45,
            textAlign: 'right'
          }, {
            color: this.props.textColor
          }, this.props.dialogStyle.progressTextStyle],
          numberOfLines: 1,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, progressText)), _react.default.createElement(Progress.Bar, {
          style: {
            marginBottom: messageNumberOfLines > 1 ? 10 : 0
          },
          progress: this.props.progress,
          color: this.props.color,
          unfilledColor: unfilledColor,
          width: this.responsiveProgressWidth,
          height: 6,
          borderRadius: 5.5,
          borderWidth: 0,
          borderColor: "#e5e5e5",
          useNativeDriver: true
        })));
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
      }
    }]);
    return ProgressDialog;
  }(_react.default.Component);

  ProgressDialog.contextType = _configProvider.ConfigContext;
  ProgressDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    message: _propTypes.default.string,
    progress: _propTypes.default.number,
    color: _propTypes.default.string,
    unfilledColor: _propTypes.default.string,
    textColor: _propTypes.default.string,
    autoDismiss: _propTypes.default.bool,
    dialogStyle: _propTypes.default.object,
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityValue: _accessibilityHelper.AccessibilityPropTypes.accessibilityValue
  };
  ProgressDialog.defaultProps = {
    progress: 0,
    color: _resources.Styles.common.MHGreen,
    textColor: _resources.Styles.common.MHGreen,
    autoDismiss: false,
    dialogStyle: {
      allowFontScaling: true,
      messageNumberOfLines: 1,
      messageStyle: {},
      progressTextStyle: {}
    }
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      minHeight: 86,
      paddingHorizontal: padding,
      justifyContent: 'center',
      paddingTop: 20,
      borderTopEndRadius: _resources.Styles.dialog.modal.borderTopEndRadius,
      borderTopStartRadius: _resources.Styles.dialog.modal.borderTopStartRadius
    },
    messageContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center',
      marginBottom: 12
    },
    message: {
      fontSize: 16
    }
  });

  var _default = ProgressDialog;
  exports.default = _default;
},23020,[14308,14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13636,22453,22996,22426,22420,22423,22933,22927]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSwiper = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _AbstractDialog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[15]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[16]);

  var paddingHorizontal = 40;
  var paddingBottomSmall = 20;
  var paddingBottomLarge = 28;
  var iconSize = 48;
  var optionHeight = 80;
  var testIcon = _resources.Images.common.mihome;

  var ShareDialog = function (_React$Component) {
    (0, _inherits2.default)(ShareDialog, _React$Component);

    function ShareDialog(props, context) {
      var _this$context$media;

      var _this;

      (0, _classCallCheck2.default)(this, ShareDialog);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ShareDialog).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ShareDialog');
      _this.state = {
        swiperVisible: false,
        pressed: -1,
        checked: props.checked || false
      };
      _this.pages = Array.from({
        length: Math.ceil(props.options.length / 8)
      }, function (v, i) {
        return props.options.slice(8 * i, 8 * i + 8);
      });
      _this.iconMargin = ~~(((((_this$context$media = _this.context.media) == null ? undefined : _this$context$media.screenType) === 'tablet' ? _resources.Styles.dialog.padModal.width : _resources.Styles.dialog.modal.width) - 80 - 192) / 3);
      return _this;
    }

    (0, _createClass2.default)(ShareDialog, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.setState({
          swiperVisible: true
        });
      }
    }, {
      key: "renderCheckBox",
      value: function renderCheckBox() {
        var _this2 = this,
            _this$context$theme;

        var extraTextNumberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('extraTextNumberOfLines')) {
          extraTextNumberOfLines = this.props.dialogStyle.extraTextNumberOfLines;
        }

        return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          onPress: function onPress() {
            return _this2.onPressCheckbox();
          },
          activeOpacity: 1,
          style: {
            paddingTop: 10,
            paddingHorizontal: paddingHorizontal
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.extraContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
          accessibilityLabel: this.props.accessibilityLabel || this.props.extraText,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: false,
            checked: this.state.checked
          }
        })), _react.default.createElement(_Checkbox.default, {
          checked: this.state.checked,
          checkedColor: this.props.checkColor,
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          onValueChange: function onValueChange(checked) {
            _this2.setState({
              checked: checked
            });
          }
        }), _react.default.createElement(_reactNative.Text, {
          style: [styles.checkboxText, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorGrayHeavier
          }, this.props.dialogStyle.extraTextStyle],
          numberOfLines: extraTextNumberOfLines,
          allowFontScaling: this.props.dialogStyle.allowFontScaling
        }, this.props.extraText || '')));
      }
    }, {
      key: "renderIcons",
      value: function renderIcons(options, index) {
        var _this3 = this;

        var numberOfLines = 1;

        if (this.props.dialogStyle && this.props.dialogStyle.hasOwnProperty('itemTextNumberOfLines')) {
          numberOfLines = this.props.dialogStyle.itemTextNumberOfLines;
        }

        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          key: index + "0",
          style: styles.optionsPage
        }, options.map(function (option, index) {
          if (option === undefined) return null;
          var marginLeft = index % 4 === 0 ? {} : {
            marginLeft: _this3.iconMargin
          };
          var scale = _this3.state.pressed === index ? 0.95 : 1;
          var opacity = _this3.state.pressed === index ? 0.88 : 1;
          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({
            key: index + (option.text || ''),
            onPress: option.callback,
            onPressIn: function onPressIn() {
              return _this3.setState({
                pressed: index
              });
            },
            onPressOut: function onPressOut() {
              return _this3.setState({
                pressed: -1
              });
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this3.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: option.accessibilityLabel || option.text || '',
            accessibilityHint: option.accessibilityHint
          })), _react.default.createElement(_reactNative.View, {
            style: [styles.optionContainer, marginLeft]
          }, _react.default.createElement(_reactNative.Image, {
            style: [styles.icon, {
              transform: [{
                scale: scale
              }]
            }],
            source: option.icon,
            resizeMode: "center"
          }), _react.default.createElement(_reactNative.Text, {
            style: [styles.optionText, {
              opacity: opacity,
              color: theme.colorGrayHeavier
            }, _this3.props.dialogStyle.itemTextStyle],
            numberOfLines: numberOfLines,
            allowFontScaling: _this3.props.dialogStyle.allowFontScaling
          }, option.text || '')));
        }));
      }
    }, {
      key: "renderIconsPages",
      value: function renderIconsPages(options) {
        var _this4 = this;

        if (options.length < 9) return this.renderIcons(options, 0);
        if (!this.state.swiperVisible) return _react.default.createElement(_reactNative.View, {
          style: styles.swiper
        });
        var theme = this.context.theme;
        return _react.default.createElement(_reactNativeSwiper.default, (0, _extends2.default)({
          style: styles.swiper,
          autoplay: false,
          loop: false,
          paginationStyle: styles.paginationStyle,
          dotColor: "rgba(0,0,0,0.2)",
          activeDotColor: theme.colorPrimary,
          dotStyle: styles.dot,
          activeDotStyle: styles.dot
        }, {
          accessibilityLabel: '',
          accessibilityHint: _reactNative.Platform.OS === 'ios' ? '' : ' '
        }), this.pages.map(function (options, index) {
          return _this4.renderIcons(options, index);
        }));
      }
    }, {
      key: "render",
      value: function render() {
        var _this5 = this;

        var theme = this.context.theme;
        var paddingBottom = this.props.options.length > 8 ? {
          paddingBottom: paddingBottomLarge
        } : {
          paddingBottom: paddingBottomSmall
        };
        var hasCheckBox = !!this.props.extraText;
        return _react.default.createElement(_AbstractDialog.default, {
          animationType: this.props.animationType,
          visible: this.props.visible,
          title: this.props.title,
          dialogStyle: this.props.dialogStyle,
          buttons: this.props.buttons,
          onModalShow: this.props.onModalShow,
          onModalHide: this.props.onModalHide,
          onDismiss: function onDismiss() {
            return _this5._onDismiss();
          },
          style: this.props.modalStyle,
          canDismiss: this.props.canDismiss,
          useNewTheme: true
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            backgroundColor: theme.colorForeground
          }, paddingBottom]
        }, this.renderIconsPages(this.props.options), hasCheckBox && this.renderCheckBox()));
      }
    }, {
      key: "_onDismiss",
      value: function _onDismiss() {
        this.props.onDismiss && this.props.onDismiss();
      }
    }, {
      key: "onPressCheckbox",
      value: function onPressCheckbox() {
        this.setState({
          checked: !this.state.checked
        });
      }
    }]);
    return ShareDialog;
  }(_react.default.Component);

  ShareDialog.contextType = _configProvider.ConfigContext;
  ShareDialog.propTypes = {
    animationType: _propTypes.default.string,
    visible: _propTypes.default.bool,
    title: _propTypes.default.string,
    dialogStyle: _propTypes.default.object,
    modalStyle: _propTypes.default.object,
    canDismiss: _propTypes.default.bool,
    options: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.any,
      text: _propTypes.default.string,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    buttons: _propTypes.default.arrayOf(_propTypes.default.shape({
      text: _propTypes.default.string,
      style: _propTypes.default.any,
      callback: _propTypes.default.func,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onModalShow: _propTypes.default.func,
    onModalHide: _propTypes.default.func,
    onDismiss: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    checked: _propTypes.default.bool,
    checkColor: _propTypes.default.string,
    extraText: _propTypes.default.string,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ShareDialog.defaultProps = {
    options: Array.from({
      length: 6
    }, function () {
      return {
        icon: testIcon,
        text: ['米家', '微信', 'QQ', '微博', '朋友圈', '收藏', '即刻'][~~(Math.random() * 7)],
        callback: function callback() {
          return undefined;
        }
      };
    }),
    dialogStyle: {
      unlimitedHeightEnable: false,
      allowFontScaling: true,
      titleNumberOfLines: 1,
      itemTextNumberOfLines: 1
    },
    canDismiss: true,
    checkColor: _resources.Styles.common.MHGreen
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      borderRadius: _resources.Styles.dialog.modal.borderRadius
    },
    extraContainer: {
      flexDirection: 'row',
      alignItems: 'center'
    },
    swiper: {
      height: 173,
      marginTop: 9
    },
    optionsPage: {
      flexDirection: 'row',
      flexWrap: 'wrap',
      paddingHorizontal: paddingHorizontal
    },
    optionContainer: {
      minHeight: optionHeight,
      alignItems: 'center'
    },
    icon: {
      width: iconSize,
      height: iconSize
    },
    optionText: {
      marginTop: 4,
      marginBottom: 10,
      width: iconSize,
      textAlign: 'center',
      fontSize: 12
    },
    paginationStyle: {
      position: 'absolute',
      bottom: 0
    },
    dot: {
      width: 6,
      height: 6
    },
    checkboxText: {
      flex: 1,
      marginLeft: 7,
      fontSize: 14,
      color: '#333333'
    }
  });

  var _default = ShareDialog;
  exports.default = _default;
},23023,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13663,22453,22786,22996,22420,22423,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ChoiceItem", {
    enumerable: true,
    get: function get() {
      return _ChoiceItem.default;
    }
  });
  Object.defineProperty(exports, "ListItem", {
    enumerable: true,
    get: function get() {
      return _ListItem.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSlider", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSlider.default;
    }
  });
  Object.defineProperty(exports, "ListItemWithSwitch", {
    enumerable: true,
    get: function get() {
      return _ListItemWithSwitch.default;
    }
  });

  var _ChoiceItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _ListItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _ListItemWithSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _ListItemWithSwitch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));
},23026,[14305,23002,23029,23038,23044]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[15]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var dot = _$$_REQUIRE(_dependencyMap[18]);

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var dotSize = 8;

  var ICON_SIZE = _reactNative.Platform.select({
    android: 26,
    ios: 24
  });

  var ListItem = function (_React$Component) {
    (0, _inherits2.default)(ListItem, _React$Component);

    function ListItem(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItem);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).call(this, props, context));
      (0, _reportDecorator.referenceReport)('ListItem');
      return _this;
    }

    (0, _createClass2.default)(ListItem, [{
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraRightStyle = {};

        if (!this.props.hideArrow) {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '30%'
          };
        } else {
          extraRightStyle = {
            maxWidth: this.props.valueMaxWidth || '35%'
          };
        }

        var valueStyle = {
          marginRight: 7,
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;

        if (_reactNative.Platform.OS === 'android') {
          valueStyle.height = THIN_HEIGHT;
        }

        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            opacity: this.props.disabled ? 0.3 : 1
          }
        }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: this.props.disabled,
          underlayColor: this.props.underlayColor,
          onPress: this.props.onPress,
          onLongPress: this.props.onLongPress,
          delayLongPress: this.props.delayLongPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        })), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, {
          style: [styles.left]
        }, _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            paddingBottom: 1
          }
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, this.props.useNewType ? (0, _objectSpread2.default)({}, _font.FontPrimary) : (0, _objectSpread2.default)({}, _font.FontPrimary), {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            flex: 1
          }, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title)), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, (0, _objectSpread2.default)({
            lineHeight: subtitleHeight,
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, _font.FontSecondary), this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: {
            width: 10
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.right, extraRightStyle]
        }, this.props.value ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.subtitle, (0, _objectSpread2.default)({
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, _font.FontSecondary), this.props.valueStyle, valueStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value) : null), this.props.showDot ? _react.default.createElement(_reactNative.Image, {
          style: [styles.dot, this.props.dotStyle],
          resizeMode: "contain",
          source: dot
        }) : null, !this.props.hideArrow ? _react.default.createElement(_reactNative.Image, {
          style: styles.icon,
          source: _resources.Images.common.right_arrow
        }) : null), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListItem;
  }(_react.default.Component);

  ListItem.contextType = _configProvider.ConfigContext;
  ListItem.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    onPress: _propTypes.default.func.isRequired,
    onLongPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    hideArrow: _propTypes.default.bool,
    showDot: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    dotStyle: _propTypes.default.object,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  ListItem.defaultProps = {
    title: '',
    subtitle: '',
    value: '',
    onPress: function onPress() {},
    onLongPress: function onLongPress() {},
    disabled: false,
    showSeparator: true,
    hideArrow: false,
    showDot: false,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueStyle: {},
    dotStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    underlayColor: _resources.Styles.common.underlayColor
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    },
    left: {
      flex: 1
    },
    right: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-start'
    },
    icon: {
      width: ICON_SIZE,
      height: ICON_SIZE
    },
    dot: {
      width: dotSize,
      height: dotSize
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    }
  });

  var _default = ListItem;
  exports.default = _default;
},23029,[14305,14344,14314,14320,14323,14371,14377,14386,10318,10297,10033,23032,22453,22906,22426,22420,22423,23041,23035]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[11]);

  var TouchableView = function (_React$Component) {
    (0, _inherits2.default)(TouchableView, _React$Component);

    function TouchableView(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, TouchableView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TouchableView).call(this, props, context));
      _this.state = {
        inPress: false
      };
      return _this;
    }

    (0, _createClass2.default)(TouchableView, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, (0, _extends2.default)({}, this.props, {
          delayLongPress: this.props.delayLongPress,
          delayPressIn: this.props.delayPressIn,
          delayPressOut: this.props.delayPressOut,
          disabled: this.props.disabled,
          onLongPress: this.props.onLongPress,
          onPress: this.props.onPress,
          onPressIn: function onPressIn() {
            _this2.setState({
              inPress: true
            });
          },
          onPressOut: function onPressOut() {
            _this2.setState({
              inPress: false
            });
          }
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, this.props.viewStyle, this.state.inPress ? {
            backgroundColor: this.props.underlayColor
          } : {}]
        }, this.props.children));
      }
    }]);
    return TouchableView;
  }(_react.default.Component);

  exports.default = TouchableView;
  TouchableView.propTypes = {
    delayLongPress: _propTypes.default.number,
    delayPressIn: _propTypes.default.number,
    delayPressOut: _propTypes.default.number,
    disabled: _propTypes.default.bool,
    onLongPress: _propTypes.default.func,
    onPress: _propTypes.default.func,
    viewStyle: _reactNative.ViewPropTypes.style,
    underlayColor: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  TouchableView.defaultProps = {
    delayLongPress: 100,
    delayPressIn: 100,
    delayPressOut: 100,
    disabled: false,
    viewStyle: {},
    underlayColor: _resources.Styles.common.underlayColor
  };
},23032,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/title",
    "width": 30,
    "height": 30,
    "scales": [1],
    "hash": "522ed59eaa31441e8b11ae8bab872663",
    "name": "dot",
    "type": "png"
  });
},23035,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSlider = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _font = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var HEIGHT = 104;
  var PADDING = 29;
  var THUMB_SIZE = 24;
  var THUMB_TOUCH_SIZE = {
    width: 50,
    height: 50
  };

  var ListItemWithSlider = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSlider, _React$Component);

    function ListItemWithSlider(props, context) {
      var _this$context$theme, _this$context$theme2, _this$context$theme3;

      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSlider);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSlider).call(this, props, context));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$sliderProps = _this.sliderProps,
            minimumValue = _this$sliderProps.minimumValue,
            maximumValue = _this$sliderProps.maximumValue,
            step = _this$sliderProps.step;
        var disabled = _this.props.disabled;

        if (disabled) {
          return;
        }

        var value = _this.state.value;
        var totalSteps = (maximumValue - minimumValue) / step;
        var everyStep = totalSteps >= 10 ? Math.floor(totalSteps / 10) : 1;
        var currentStep = (value - minimumValue) / step;
        var actionStep = currentStep;

        switch (actionName) {
          case 'increment':
            actionStep += everyStep;
            break;

          case 'decrement':
            actionStep -= everyStep;
            break;
        }

        var targetValue = Math.min(maximumValue, Math.max(minimumValue, actionStep * step + minimumValue));

        _this._onValueChange(targetValue, function () {
          _this._onSlidingComplete(targetValue);
        });
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSlider');
      _this.sliderProps = (0, _extends2.default)({
        minimumValue: 0,
        maximumValue: 100,
        step: 1,
        value: 50
      }, _this.props.sliderProps);
      _this.sliderStyle = (0, _extends2.default)({
        minimumTrackTintColor: (_this$context$theme = _this.context.theme) == null ? undefined : _this$context$theme.colorPrimary,
        maximumTrackTintColor: (_this$context$theme2 = _this.context.theme) == null ? undefined : _this$context$theme2.colorBtnGrayNor,
        thumbTintColor: (_this$context$theme3 = _this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary
      }, _this.props.sliderStyle);
      _this.state = {
        value: _this.sliderProps.value,
        valueStr: _this.format(_this.sliderProps.value)
      };
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSlider, [{
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        var gear;

        if (this.props.useNewType) {
          gear = _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            value: this.state.value,
            containerStyle: {
              height: 26
            },
            showEndText: false,
            optionMin: this.sliderProps.minimumValue,
            optionMax: this.sliderProps.maximumValue,
            optionStep: this.sliderProps.step,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            },
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            disabled: this.props.disabled
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        } else {
          gear = _react.default.createElement(_reactNativeSlider.default, (0, _extends2.default)({
            disabled: this.props.disabled,
            style: [this.sliderStyle.style],
            maximumValue: this.sliderProps.maximumValue,
            minimumValue: this.sliderProps.minimumValue,
            step: this.sliderProps.step,
            minimumTrackTintColor: this.sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: this.sliderStyle.maximumTrackTintColor,
            thumbTintColor: this.sliderStyle.thumbTintColor,
            thumbTouchSize: THUMB_TOUCH_SIZE,
            trackStyle: [styles.trackStyle, this.sliderStyle.trackStyle],
            thumbStyle: [styles.thumbStyle, this.sliderStyle.thumbStyle],
            value: this.state.value,
            onValueChange: function onValueChange(value) {
              return _this2._onValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2._onSlidingComplete(value);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })));
        }

        return gear;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4, _this$context$theme5, _this$context$theme6;

        var extraStyle = {
          maxWidth: (width - 58) * 0.7
        };

        if (this.props.containerStyle.width) {
          extraStyle = {
            maxWidth: (this.props.containerStyle.width - 58) * 0.7
          };
        }

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.valueStyle.fontSize ? this.props.valueStyle.fontSize + 5 : 18;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [{
            backgroundColor: '#fff'
          }, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, {
            backgroundColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWhite
          }, this.props.containerStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: !!this.props.disabled
          },
          accessibilityValue: {
            min: this.sliderProps.minimumValue,
            max: this.sliderProps.maximumValue,
            now: this.state.value
          }
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.title, {
            lineHeight: titleHeight,
            color: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBlack
          }, _font.FontPrimary, this.props.titleStyle, extraStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol, this.props.unlimitedHeightEnable ? {
            height: '80%'
          } : {}]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          style: [styles.value, {
            color: (_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorGrayLighter,
            lineHeight: subtitleHeight
          }, _font.FontSecondary, this.props.valueStyle, adaptedFontStyle],
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle || this.state.valueStr)), _react.default.createElement(_reactNative.View, {
          style: styles.down
        }, this.renderGear())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, null);
      }
    }, {
      key: "format",
      value: function format(val) {
        if (this.props.showWithPercent) {
          var _this$sliderProps2 = this.sliderProps,
              min = _this$sliderProps2.minimumValue,
              max = _this$sliderProps2.maximumValue;
          return Math.round((val - min) / (max - min) * 100) + " %";
        }

        return val + " " + this.props.unit;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var _this3 = this;

        if (nextProps.sliderProps === undefined) return;

        if (typeof nextProps.sliderProps.value !== 'number') {
          return;
        }

        var _nextProps$sliderProp = nextProps.sliderProps,
            value = _nextProps$sliderProp.value,
            minimumValue = _nextProps$sliderProp.minimumValue,
            maximumValue = _nextProps$sliderProp.maximumValue;

        if (minimumValue !== undefined && minimumValue !== this.sliderProps.minimumValue) {
          this.sliderProps.minimumValue = minimumValue;
        }

        if (maximumValue !== undefined && maximumValue !== this.sliderProps.maximumValue) {
          this.sliderProps.maximumValue = maximumValue;
        }

        if (value !== this.state.value) {
          setTimeout(function () {
            _this3.setState({
              value: value,
              valueStr: _this3.format(value)
            });
          }, 0);
        }
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        this.setState({
          value: value,
          valueStr: this.format(value)
        });

        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }, {
      key: "_onSlidingComplete",
      value: function _onSlidingComplete(value) {
        if (this.props.onSlidingComplete) {
          this.props.onSlidingComplete(value);
        }
      }
    }]);
    return ListItemWithSlider;
  }(_react.default.Component);

  ListItemWithSlider.propTypes = {
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    sliderProps: _propTypes.default.object,
    showWithPercent: _propTypes.default.bool,
    unit: _propTypes.default.string,
    sliderStyle: _propTypes.default.object,
    onValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func.isRequired,
    disabled: _propTypes.default.bool,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    useNewType: _propTypes.default.bool
  };
  ListItemWithSlider.defaultProps = {
    title: '',
    subtitle: '',
    showWithPercent: true,
    unit: '',
    disabled: false,
    containerStyle: {},
    titleStyle: {},
    valueStyle: {},
    showSeparator: false,
    onSlidingComplete: function onSlidingComplete() {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    useNewType: false
  };
  ListItemWithSlider.contextType = _configProvider.ConfigContext;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      backgroundColor: '#fff',
      paddingHorizontal: PADDING,
      height: HEIGHT
    },
    up: {
      marginTop: 13,
      flexDirection: 'row',
      alignItems: 'center'
    },
    down: {
      flex: 1,
      justifyContent: 'center',
      marginTop: 15,
      marginBottom: 21
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 8,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    value: {
      fontSize: 13,
      color: '#999999',
      lineHeight: 16,
      flex: 1
    },
    trackStyle: {
      height: 2,
      borderRadius: 1
    },
    thumbStyle: {
      width: THUMB_SIZE,
      height: THUMB_SIZE,
      borderRadius: 12
    }
  });

  var _default = ListItemWithSlider;
  exports.default = _default;
},23038,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,13687,22453,22906,23041,22426,22897,22420,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontSecondary = exports.FontPrimary = exports.FontDsDigital = exports.FontLantingProNormal = exports.FontLantingProMedium = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontLantingProMedium = 'MILanPro_MEDIUM--GB1-4';
  exports.FontLantingProMedium = FontLantingProMedium;
  var FontLantingProNormal = 'MILanPro_NORMAL--GB1-4';
  exports.FontLantingProNormal = FontLantingProNormal;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontPrimary = {
    fontFamily: 'sans-serif-medium',
    fontWeight: _reactNative.Platform.OS === 'ios' ? '500' : 'normal'
  };
  exports.FontPrimary = FontPrimary;
  var FontSecondary = {
    fontFamily: 'sans-serif',
    fontWeight: 'normal'
  };
  exports.FontSecondary = FontSecondary;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? null : FontKmedium;
  exports.FontDefault = FontDefault;
},23041,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _resources = _$$_REQUIRE(_dependencyMap[10]);

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _popButton = _$$_REQUIRE(_dependencyMap[14]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _Images = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[17]);

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[20]);

  var _font = _$$_REQUIRE(_dependencyMap[21]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var THIN_HEIGHT = 58;
  var PADDING = 29;
  var checkboxSize = 22;
  var Line_Height = 24;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    SORT: 'sort'
  };
  Object.freeze(TYPE);

  var ListItemWithSwitch = function (_React$Component) {
    (0, _inherits2.default)(ListItemWithSwitch, _React$Component);

    function ListItemWithSwitch(props, context) {
      var _this;

      (0, _classCallCheck2.default)(this, ListItemWithSwitch);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemWithSwitch).call(this, props, context));
      _this.colorForVerticalLine = new _DynamicColor.default('#E5E5E5', 'rgba(255,255,255,0.15)');

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onValueChange = _this$props.onValueChange,
            onPress = _this$props.onPress,
            value = _this$props.value;

        if (disabled) {
          return;
        }

        if (actionName === 'activate' && typeof onValueChange === 'function') {
          onValueChange(!value);
        }

        if (actionName === 'activate' && typeof onPress === 'function') {
          onPress();
        }
      };

      (0, _reportDecorator.referenceReport)('ListItemWithSwitch');
      return _this;
    }

    (0, _createClass2.default)(ListItemWithSwitch, [{
      key: "renderRight",
      value: function renderRight() {
        var _this2 = this,
            _this$props$buttonOpt,
            _this$props$buttonOpt2,
            _this$props$buttonOpt3,
            _this$props$buttonOpt4,
            _this$props$buttonOpt5,
            _this$props$buttonOpt6,
            _this$props$choiceOpt,
            _this$props$choiceOpt2,
            _this$props$choiceOpt3;

        var rightView;
        var rightSortView;

        if (this.props.type === TYPE.SORT) {
          var _this$props$sortOptio, _this$props$sortOptio2;

          var source = this.context.colorScheme === 'dark' ? _Images.default.sort.dark.normal : _Images.default.sort.light.normal;
          rightSortView = _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: this.props.disabled,
            activeOpacity: 0.8,
            style: {
              width: 35,
              height: 40,
              justifyContent: 'center',
              alignItems: 'flex-end'
            },
            onPress: (_this$props$sortOptio = this.props.sortOption) == null ? undefined : _this$props$sortOptio.onPress,
            onLongPress: (_this$props$sortOptio2 = this.props.sortOption) == null ? undefined : _this$props$sortOptio2.onLongPress
          }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          })), _react.default.createElement(_reactNative.Image, {
            source: source
          }));
        }

        switch (this.props.type) {
          case TYPE.SWITCH:
            rightView = _react.default.createElement(_Switch.default, (0, _extends2.default)({
              style: this.props.switchStyle,
              value: this.props.value,
              disabled: this.props.disabled,
              tintColor: this.props.tintColor,
              onTintColor: this.props.onTintColor,
              onValueChange: function onValueChange(value) {
                return _this2._onValueChange(value);
              }
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.BUTTON:
            rightView = _react.default.createElement(_popButton.PopButton, (0, _extends2.default)({
              sizeLevel: 'small',
              title: (_this$props$buttonOpt = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.title,
              disabled: this.props.disabled,
              backgroundColor: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.backgroundColor,
              titleStyle: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.titleStyle,
              titleColor: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt5 = _this$props$buttonOpt4.titleStyle) == null ? undefined : _this$props$buttonOpt5.color,
              allowFontScaling: this.props.allowFontScaling,
              onPress: (_this$props$buttonOpt6 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt6.onPress
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.CHOICE:
            rightView = _react.default.createElement(_Checkbox.default, (0, _extends2.default)({
              style: {
                width: checkboxSize,
                height: checkboxSize,
                borderRadius: 11
              },
              disabled: this.props.disabled,
              checked: (_this$props$choiceOpt = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.checked,
              checkedColor: (_this$props$choiceOpt2 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checkedColor,
              onValueChange: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.onValueChange
            }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: this.props.accessible,
              accessibilityLabel: this.props.accessibilityLabel || this.props.title,
              accessibilityHint: this.props.accessibilityHint
            })));
            break;

          case TYPE.SORT:
            rightView = rightSortView;
            break;

          default:
            rightView = null;
            break;
        }

        return rightView;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3, _this$context$theme4;

        var extraContainerStyle = {};

        if (this.props.subtitle) {
          extraContainerStyle = {
            paddingVertical: this.props.leftIcon ? 8 : 15,
            height: 77
          };
        }

        var leftIconContainerStyle = {};

        if (this.props.leftIcon) {
          leftIconContainerStyle = {
            height: 70,
            paddingLeft: 22
          };
        }

        var extraStyle = {};

        if (this.props.valueText) {
          extraStyle.maxWidth = (width - 58) * 0.4;

          if (this.props.containerStyle.width) {
            extraStyle.maxWidth = (this.props.containerStyle.width - 58) * 0.4;
          }
        }

        var adaptedFontStyle = {};
        var adaptedContainerStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            height: undefined
          };
          adaptedContainerStyle = {
            height: undefined,
            paddingVertical: 10
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 2 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 1 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        var titleHeight, subtitleHeight;

        if (this.props.titleStyle) {
          titleHeight = this.props.titleStyle.fontSize ? this.props.titleStyle.fontSize + 6 : 22;
        }

        if (this.props.subtitleStyle) {
          subtitleHeight = this.props.subtitleStyle.fontSize ? this.props.titleStyle.fontSize + 5 : 18;
        }

        var showVerticalLine = false;

        if (this.props.type == TYPE.SWITCH && this.props.showVerticalLine) {
          showVerticalLine = true;
        }

        return _react.default.createElement(_reactNative.View, {
          style: {
            opacity: this.props.disabled ? 0.3 : 1
          }
        }, _react.default.createElement(_TouchableView.default, (0, _extends2.default)({
          disabled: !this.props.onPress ? true : this.props.disabled,
          underlayColor: _resources.Styles.common.underlayColor,
          onPress: this.props.onPress,
          viewStyle: [styles.container, {
            backgroundColor: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorWhite
          }, this.props.containerStyle, leftIconContainerStyle, extraContainerStyle, adaptedContainerStyle]
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: this.props.value
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.props.leftIcon ? _react.default.createElement(_reactNative.Image, {
          style: styles.leftIcon,
          source: this.props.leftIcon
        }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.left
        }, !this.props.onPress ? {} : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled
          }
        }), {
          accessibilityActions: !this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: !this.props.onPress ? null : this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.View, {
          style: [styles.up]
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [_resources.Styles.common.title, _font.FontPrimary, {
            lineHeight: titleHeight,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack
          }, extraStyle, this.props.titleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.valueText ? _react.default.createElement(_reactNative.View, {
          style: {
            flexDirection: 'row',
            flex: 1
          }
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.separatorCol]
        }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, _font.FontSecondary, this.props.valueTextStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.valueText)) : null), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [_resources.Styles.common.subtitle, {
            lineHeight: subtitleHeight,
            color: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGrayLighter
          }, this.props.subtitleStyle, adaptedFontStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), _react.default.createElement(_reactNative.View, {
          style: [styles.right, showVerticalLine ? {
            flexDirection: 'row',
            justifyContent: 'space-between'
          } : {}]
        }, showVerticalLine ? _react.default.createElement(_reactNative.View, {
          style: [styles.verticalLine, {
            backgroundColor: this.colorForVerticalLine[this.context.colorScheme]
          }]
        }) : null, this.renderRight())), this.renderSeparator());
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator || this.props.useNewType) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginLeft: _resources.Styles.common.padding
          }
        });
      }
    }, {
      key: "_onValueChange",
      value: function _onValueChange(value) {
        if (this.props.onValueChange) {
          this.props.onValueChange(value);
        }
      }
    }]);
    return ListItemWithSwitch;
  }(_react.default.Component);

  ListItemWithSwitch.contextType = _configProvider.ConfigContext;
  ListItemWithSwitch.propTypes = {
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.BUTTON, TYPE.CHOICE, TYPE.SORT]),
    title: _propTypes.default.string.isRequired,
    subtitle: _propTypes.default.string,
    valueText: _propTypes.default.string,
    value: _propTypes.default.bool,
    disabled: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    onValueChange: _propTypes.default.func.isRequired,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    containerStyle: _propTypes.default.object,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueTextStyle: _propTypes.default.object,
    switchStyle: _propTypes.default.object,
    tintColor: _propTypes.default.string,
    onTintColor: _propTypes.default.string,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    sortOption: _propTypes.default.object,
    showVerticalLine: _propTypes.default.bool
  };
  ListItemWithSwitch.defaultProps = {
    type: TYPE.SWITCH,
    title: '',
    subtitle: '',
    valueText: '',
    value: false,
    disabled: false,
    showSeparator: true,
    containerStyle: {},
    titleStyle: {},
    subtitleStyle: {},
    valueTextStyle: {},
    switchStyle: {},
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    leftIcon: null,
    useNewType: false,
    showVerticalLine: false
  };
  ListItemWithSwitch.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      width: width,
      height: THIN_HEIGHT,
      paddingHorizontal: PADDING,
      flexDirection: 'row',
      alignItems: 'center'
    },
    left: {
      flex: 3
    },
    right: {
      flex: 1,
      alignItems: 'flex-end',
      maxWidth: 80
    },
    up: {
      flexDirection: 'row',
      alignItems: 'center',
      paddingVertical: 2
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 5,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    leftIcon: {
      resizeMode: 'contain',
      width: 56,
      height: 56,
      marginRight: 2
    },
    verticalLine: {
      height: Line_Height,
      width: 0.5,
      marginLeft: 15,
      marginRight: 5
    }
  });

  var _default = ListItemWithSwitch;
  exports.default = _default;
},23044,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,22453,23032,22906,22450,23212,22786,22456,22426,22435,22420,22423,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "FadeSlide", {
    enumerable: true,
    get: function get() {
      return _FadeSlide.default;
    }
  });

  var _FadeSlide = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23047,[14305,23050]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[10]);

  var FadeSlide = function (_Component) {
    (0, _inherits2.default)(FadeSlide, _Component);

    function FadeSlide(props) {
      var _this;

      (0, _classCallCheck2.default)(this, FadeSlide);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FadeSlide).call(this, props));

      _this.changeStatus = function (heightTo, opacityTo) {
        var _this$state = _this.state,
            height = _this$state.height,
            opacity = _this$state.opacity;

        _reactNative.Animated.parallel([_reactNative.Animated.timing(height, {
          toValue: heightTo,
          duration: 250
        }), _reactNative.Animated.timing(opacity, {
          toValue: opacityTo,
          duration: 250
        })]).start();
      };

      (0, _reportDecorator.referenceReport)('FadeSlide');
      var isShown = props.isShown,
          childrenHeight = props.childrenHeight;
      var blockOpacity = isShown ? 1 : 0;
      var blockHeight = isShown ? childrenHeight : 0;
      _this.state = {
        height: new _reactNative.Animated.Value(blockHeight),
        opacity: new _reactNative.Animated.Value(blockOpacity)
      };
      return _this;
    }

    (0, _createClass2.default)(FadeSlide, [{
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var isShown = nextProps.isShown,
            childrenHeight = nextProps.childrenHeight;

        if (isShown) {
          this.changeStatus(childrenHeight, 1);
        } else {
          this.changeStatus(0, 0);
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$state2 = this.state,
            opacity = _this$state2.opacity,
            height = _this$state2.height;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            opacity: opacity,
            height: height
          }
        }, this.props.children);
      }
    }]);
    return FadeSlide;
  }(_react.Component);

  FadeSlide.defaultProps = {
    isShown: false,
    childrenHeight: 0
  };
  FadeSlide.propTypes = {
    isShown: _propTypes.default.bool,
    childrenHeight: _propTypes.default.number
  };
  var _default = FadeSlide;
  exports.default = _default;
},23050,[14308,14305,14320,14323,14371,14377,14386,10318,10297,10033,22423]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "BlankPage", {
    enumerable: true,
    get: function get() {
      return _BlankPage.default;
    }
  });

  var _BlankPage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23053,[14305,23056]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[10]);

  var _resources = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _reportDecorator = _$$_REQUIRE(_dependencyMap[13]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[14]);

  var _font = _$$_REQUIRE(_dependencyMap[15]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width,
      height = _Dimensions$get.height;

  var ratio = 0.2;
  var imageMarginTop = height * ratio;
  var imageContainerSize = 138;
  var imageWidth = 84;
  var imageHeight = 114;

  var imageSource = _$$_REQUIRE(_dependencyMap[16]);

  var padding = 40;
  var safeBottom = 20;
  var TYPE = {
    BUTTON: 'button',
    UNDERLINE: 'underline'
  };
  Object.freeze(TYPE);

  var BlankPage = function (_React$Component) {
    (0, _inherits2.default)(BlankPage, _React$Component);

    function BlankPage(props) {
      var _this;

      (0, _classCallCheck2.default)(this, BlankPage);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankPage).call(this, props));
      (0, _reportDecorator.referenceReport)('BlankPage');
      return _this;
    }

    (0, _createClass2.default)(BlankPage, [{
      key: "renderCenter",
      value: function renderCenter() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: styles.center
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.imageContainer
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel || this.props.message,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Image, {
          source: this.props.icon,
          style: [styles.image, this.props.iconStyle],
          resizeMode: "contain"
        })), _react.default.createElement(_reactNative.Text, {
          numberOfLines: 1,
          style: [styles.message, {
            color: theme.colorGrayLighter
          }]
        }, this.props.message), this.props.desc ? _react.default.createElement(_reactNative.Text, {
          numberOfLines: 3,
          style: [styles.desc, {
            marginTop: 10,
            color: theme.colorGrayLighter
          }]
        }, this.props.desc || '') : null);
      }
    }, {
      key: "renderBottom",
      value: function renderBottom() {
        var _this2 = this;

        var theme = this.context.theme;

        if (this.props.type === TYPE.UNDERLINE) {
          var _this$props$underline = this.props.underline,
              _text = _this$props$underline.text,
              _callback = _this$props$underline.callback,
              _textStyle = _this$props$underline.textStyle;
          return _react.default.createElement(_reactNative.View, {
            style: [styles.bottom, {
              marginBottom: 40
            }]
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            onPress: function onPress() {
              return _this2.onPress(_callback);
            },
            numberOfLines: 1,
            style: [styles.desc, {
              textDecorationLine: 'underline',
              color: theme.colorPrimary,
              textAlign: 'center'
            }, _textStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.link,
            accessibilityLabel: _text,
            accessibilityHint: this.props.accessibilityHint
          })), _text));
        }

        var _this$props$button = this.props.button,
            text = _this$props$button.text,
            callback = _this$props$button.callback,
            buttonStyle = _this$props$button.buttonStyle,
            textStyle = _this$props$button.textStyle;
        return _react.default.createElement(_reactNative.View, {
          style: styles.bottom
        }, this.props.extraInfo ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: 2,
          style: [styles.desc, {
            color: theme.colorGrayLighter
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.extraInfo,
          accessibilityHint: this.props.accessibilityHint
        })), this.props.extraInfo) : null, _react.default.createElement(_reactNativeUiKitten.RkButton, (0, _extends2.default)({
          style: [styles.buttonContainer, {
            backgroundColor: theme.colorPrimary
          }, buttonStyle],
          onPress: function onPress() {
            return _this2.onPress(callback);
          },
          activeOpacity: 0.8
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: text,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: [styles.buttonText, _font.FontPrimary, textStyle]
        }, text)));
      }
    }, {
      key: "onPress",
      value: function onPress(callback) {
        if (typeof callback === 'function') {
          callback();
        } else {}
      }
    }, {
      key: "render",
      value: function render() {
        var theme = this.context.theme;
        return _react.default.createElement(_reactNative.View, {
          style: [styles.container, theme.colorBackground]
        }, this.renderCenter(), _react.default.createElement(_reactNative.View, {
          style: {
            flex: 1
          }
        }), this.renderBottom());
      }
    }]);
    return BlankPage;
  }(_react.default.Component);

  BlankPage.contextType = _configProvider.ConfigContext;
  BlankPage.propTypes = {
    type: _propTypes.default.oneOf([TYPE.BUTTON, TYPE.UNDERLINE]),
    icon: _propTypes.default.any,
    underline: _propTypes.default.object,
    button: _propTypes.default.object,
    iconStyle: _reactNative.ViewPropTypes.style,
    message: _propTypes.default.string.isRequired,
    desc: _propTypes.default.string,
    extraInfo: _propTypes.default.string,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };
  BlankPage.defaultProps = {
    type: TYPE.BUTTON,
    underline: {},
    button: {},
    icon: imageSource
  };
  BlankPage.TYPE = TYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1,
      width: width
    },
    center: {
      marginTop: imageMarginTop,
      width: width,
      alignItems: 'center'
    },
    imageContainer: {
      width: imageContainerSize,
      height: imageContainerSize,
      alignItems: 'center'
    },
    image: {
      width: imageWidth,
      height: imageHeight,
      marginTop: 5
    },
    message: {
      width: width,
      fontSize: 15,
      color: '#999',
      textAlign: 'center'
    },
    desc: {
      width: width,
      paddingHorizontal: padding,
      fontSize: 13,
      color: '#999',
      lineHeight: 18
    },
    bottom: {
      width: width,
      marginBottom: safeBottom
    },
    buttonContainer: {
      width: width - _resources.Styles.common.padding * 2,
      height: 42,
      borderRadius: 5,
      marginTop: 21,
      marginHorizontal: _resources.Styles.common.padding
    },
    buttonText: {
      flex: 1,
      fontSize: 13,
      fontWeight: 'bold',
      textAlign: 'center',
      color: '#ffffff',
      lineHeight: 18
    }
  });

  var _default = BlankPage;
  exports.default = _default;
},23056,[14305,14344,14320,14323,14371,14377,14386,10318,10297,10033,11251,22453,22420,22423,22426,23041,23059]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 84,
    "height": 114,
    "scales": [2, 3],
    "hash": "9fa4438dffed7ccf84357debec9c8e5d",
    "name": "blank_page_icon",
    "type": "png"
  });
},23059,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "TouchableView", {
    enumerable: true,
    get: function get() {
      return _TouchableView.default;
    }
  });

  var _TouchableView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23062,[14305,23032]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _colors = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var BigNumber = function (_PureComponent) {
    (0, _inherits2.default)(BigNumber, _PureComponent);

    function BigNumber() {
      (0, _classCallCheck2.default)(this, BigNumber);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BigNumber).apply(this, arguments));
    }

    (0, _createClass2.default)(BigNumber, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            number = _this$props.number,
            themeColor = _this$props.themeColor;

        if (title === undefined || number === undefined) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint
        })), _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title), _react.default.createElement(_reactNative.Text, {
          style: [Styles.number, themeColor ? {
            color: themeColor
          } : null]
        }, number));
      }
    }]);
    return BigNumber;
  }(_react.PureComponent);

  exports.default = BigNumber;
  BigNumber.propTypes = {
    title: _propTypes.default.string,
    number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.9)'
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(196),
      fontFamily: _fonts.FontKmedium,
      color: _colors.ColorGreen
    }
  });
},23065,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.adjustSize = adjustSize;
  exports.window = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      windowWidth = _Dimensions$get.width,
      windowHeight = _Dimensions$get.height;

  var window = {
    get width() {
      return windowWidth;
    },

    get height() {
      if (_reactNative.Platform.OS === 'android') {
        return windowHeight / windowWidth > 1.8 ? windowHeight + _reactNative.NativeModules.StatusBarManager.HEIGHT : windowHeight;
      }

      return windowHeight;
    }

  };
  exports.window = window;

  function adjustSize(n) {
    return n / 1080 * window.width;
  }
},23068,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.FontDefault = exports.FontDsDigital = exports.FontLantingLight = exports.FontKmedium = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var FontKmedium = 'KMedium';
  exports.FontKmedium = FontKmedium;
  var FontLantingLight = 'MI-LANTING--GBK1-Light';
  exports.FontLantingLight = FontLantingLight;
  var FontDsDigital = 'DS-Digital';
  exports.FontDsDigital = FontDsDigital;
  var FontDefault = _reactNative.Platform.OS === 'ios' ? undefined : FontKmedium;
  exports.FontDefault = FontDefault;
},23071,[10033]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.fixHex = fixHex;
  exports.transformHexToDigtal = transformHexToDigtal;
  exports.transformDigtalToHex = transformDigtalToHex;
  exports.colorGetterforRange = colorGetterforRange;
  exports.ColorRed = exports.ColorOrange = exports.ColorGreen = undefined;

  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var ColorGreen = '#00B7A2';
  exports.ColorGreen = ColorGreen;
  var ColorOrange = '#FFA943';
  exports.ColorOrange = ColorOrange;
  var ColorRed = '#FC675F';
  exports.ColorRed = ColorRed;

  function fixHex(hex) {
    hex = hex.replace(/[^0-9a-fA-F]/, '').split('');
    var length = hex.length;

    if (length < 6) {
      hex = [hex[0] || 0, hex[0] || 0, hex[1] || 0, hex[1] || 0, hex[2] || 0, hex[2] || 0];
    }

    hex = "#" + hex.slice(0, 6).join('');
    return hex.toUpperCase();
  }

  function transformHexToDigtal(hex) {
    hex = fixHex(hex).slice(1);
    return parseInt(hex, 16);
  }

  function transformDigtalToHex(digtal) {
    return ("#" + ("000000" + digtal.toString(16)).slice(-6)).toUpperCase();
  }

  function splitRgb(color) {
    color = fixHex(color);

    var _color$slice$split = color.slice(1).split(''),
        _color$slice$split2 = (0, _slicedToArray2.default)(_color$slice$split, 6),
        r1 = _color$slice$split2[0],
        r2 = _color$slice$split2[1],
        g1 = _color$slice$split2[2],
        g2 = _color$slice$split2[3],
        b1 = _color$slice$split2[4],
        b2 = _color$slice$split2[5];

    var r = parseInt(r1 + r2, 16);
    var g = parseInt(g1 + g2, 16);
    var b = parseInt(b1 + b2, 16);
    return {
      r: r,
      g: g,
      b: b
    };
  }

  function colorGetterforRange(range) {
    var colors = formatColors(range);

    function formatColors(range) {
      var colors = [];

      for (var k in range) {
        if (range.hasOwnProperty(k)) {
          var p = parseFloat(k);
          var c = fixHex(range[k]);

          if (typeof p === 'number' && p >= 0 && p <= 1) {
            colors.push([p, c]);
          }
        }
      }

      colors.sort(function (a, b) {
        return a[0] > b[0] ? 1 : -1;
      });

      if (colors.length < 1) {
        colors = [[0, '#000000'], [1, '#ffffff']];
      }

      if (colors[0][0] > 0) {
        colors[0] = [0, colors[0][1]];
      }

      if (colors[colors.length - 1][0] < 1) {
        colors[colors.length - 1] = [1, colors[colors.length - 1][1]];
      }

      return colors;
    }

    function getColorFromPercent(p) {
      p = Math.max(0, Math.min(1, p / 100));
      var s1 = null;
      var s2 = null;

      for (var i = 1, l = colors.length; i < l; i++) {
        var c = colors[i];
        var cp = colors[i - 1];

        if (cp[0] <= p && c[0] >= p) {
          s1 = cp;
          s2 = c;
          break;
        }
      }

      if (s1[0] >= s2[0]) {
        return s1[1];
      }

      var p0 = (p - s1[0]) / (s2[0] - s1[0]);

      var _splitRgb = splitRgb(s1[1]),
          r1 = _splitRgb.r,
          g1 = _splitRgb.g,
          b1 = _splitRgb.b;

      var _splitRgb2 = splitRgb(s2[1]),
          r2 = _splitRgb2.r,
          g2 = _splitRgb2.g,
          b2 = _splitRgb2.b;

      var r = parseInt(p0 * r2 + (1 - p0) * r1, 10);
      var g = parseInt(p0 * g2 + (1 - p0) * g1, 10);
      var b = parseInt(p0 * b2 + (1 - p0) * b1, 10);
      return "#" + ("00" + r.toString(16)).slice(-2) + ("00" + g.toString(16)).slice(-2) + ("00" + b.toString(16)).slice(-2);
    }

    function getPercentFromColor(color) {
      var _splitRgb3 = splitRgb(color),
          r = _splitRgb3.r,
          g = _splitRgb3.g,
          b = _splitRgb3.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb4 = splitRgb(c),
            rc = _splitRgb4.r,
            gc = _splitRgb4.g,
            bc = _splitRgb4.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return 50;
    }

    function getPercentFromColorV2(color) {
      var _splitRgb5 = splitRgb(color),
          r = _splitRgb5.r,
          g = _splitRgb5.g,
          b = _splitRgb5.b;

      for (var i = 0, l = 1000; i < l; i++) {
        var c = getColorFromPercent(i / 10);

        var _splitRgb6 = splitRgb(c),
            rc = _splitRgb6.r,
            gc = _splitRgb6.g,
            bc = _splitRgb6.b;

        if (Math.abs(r - rc) <= 5 && Math.abs(g - gc) <= 5 && Math.abs(b - bc) <= 5) {
          return i / 10;
        }
      }

      return -1;
    }

    return {
      getColorFromPercent: getColorFromPercent,
      getPercentFromColor: getPercentFromColor,
      getPercentFromColorV2: getPercentFromColorV2
    };
  }
},23074,[14305,14347]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _Icons = _$$_REQUIRE(_dependencyMap[11]);

  var _Colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _switch = _$$_REQUIRE(_dependencyMap[13]);

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _font = _$$_REQUIRE(_dependencyMap[16]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[17]);

  var CardButton = function (_PureComponent) {
    (0, _inherits2.default)(CardButton, _PureComponent);

    function CardButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CardButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CardButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (typeof onPress === 'function' && !disabled) {
          onPress();
        }
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabled = _this$props2.disabled,
            onSwitch = _this$props2.onSwitch,
            switchOn = _this$props2.switchOn,
            onPress = _this$props2.onPress;

        if (disabled || !onSwitch && !onPress || actionName !== 'activate') {
          return;
        }

        if (onSwitch) {
          onSwitch(!switchOn);
          return;
        }

        onPress();
      };

      return _this;
    }

    (0, _createClass2.default)(CardButton, [{
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            themeColor = _this$props3.themeColor,
            themeBackgroundColor = _this$props3.themeBackgroundColor,
            underlayColor = _this$props3.underlayColor,
            hasShadow = _this$props3.hasShadow,
            iconContainerStyle = _this$props3.iconContainerStyle,
            iconStyle = _this$props3.iconStyle,
            icon = _this$props3.icon,
            iconText = _this$props3.iconText,
            title = _this$props3.title,
            subtitle = _this$props3.subtitle,
            onSwitch = _this$props3.onSwitch,
            switchOn = _this$props3.switchOn,
            disabled = _this$props3.disabled,
            onPress = _this$props3.onPress,
            rightText = _this$props3.rightText,
            rightArrow = _this$props3.rightArrow,
            offColor = _this$props3.offColor,
            iconDisabled = _this$props3.iconDisabled,
            invisible = _this$props3.invisible;
        var opacity = disabled ? 0.3 : 1;
        var finalIcon = icon;

        if (disabled && iconDisabled) {
          finalIcon = iconDisabled;
        }

        if (!finalIcon && !iconText && !title && !subtitle && !onSwitch) {
          return null;
        }

        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        return _react.default.createElement(Wrap, {
          invisible: invisible
        }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [Styles.container, containerStyle, themeBackgroundColor ? {
            backgroundColor: themeBackgroundColor
          } : null],
          underlayColor: disabled || !onPress ? themeBackgroundColor || '#fff' : underlayColor,
          onPress: this.onPress
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: onSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled,
            checked: onSwitch && !!switchOn
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_react.Fragment, null, finalIcon || iconText ? _react.default.createElement(_reactNative.View, {
          style: [Styles.iconContainer, iconContainerStyle, {
            backgroundColor: (!switchOn && offColor ? offColor : themeColor) || _Colors.default.green,
            opacity: opacity
          }]
        }, finalIcon ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.icon, iconStyle],
          source: finalIcon
        }) : _react.default.createElement(_reactNative.Text, {
          style: Styles.iconText
        }, iconText)) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), onSwitch ? _react.default.createElement(_reactNative.View, {
          style: Styles.switchContainer
        }, _react.default.createElement(_switch.Switch, (0, _extends2.default)({
          value: switchOn,
          onValueChange: onSwitch,
          onTintColor: themeColor || _Colors.default.green,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })))) : rightText || rightArrow ? _react.default.createElement(_react.Fragment, null, rightText ? _react.default.createElement(_reactNative.Text, {
          style: Styles.rightText
        }, rightText) : null, rightArrow ? _react.default.createElement(_reactNative.Image, {
          style: [Styles.rightArrow, {
            opacity: opacity
          }],
          source: _Icons.Icons.rightArrow
        }) : null) : null)));
      }
    }]);
    return CardButton;
  }(_react.PureComponent);

  exports.default = CardButton;
  CardButton.defaultProps = {
    underlayColor: 'rgba(0, 0, 0, 0.05)',
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      height: (0, _sizes.adjustSize)(240),
      paddingHorizontal: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    iconContainer: {
      marginRight: (0, _sizes.adjustSize)(39),
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(60),
      justifyContent: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    },
    iconText: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(60),
      color: '#fff'
    }, _font.FontSecondary),
    titleContainer: {
      flex: 1
    },
    title: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000'
    }, _font.FontPrimary),
    subtitle: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(42),
      color: '#999',
      marginTop: (0, _sizes.adjustSize)(12)
    }, _font.FontSecondary),
    switchContainer: {
      marginLeft: (0, _sizes.adjustSize)(30)
    },
    rightText: (0, _objectSpread2.default)({
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#999',
      marginLeft: (0, _sizes.adjustSize)(30)
    }, _font.FontSecondary),
    rightArrow: {
      height: (0, _sizes.adjustSize)(72),
      width: (0, _sizes.adjustSize)(72),
      resizeMode: 'contain'
    }
  });
},23077,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10297,10033,23080,23083,22447,23086,23068,23041,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Icons = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Icons = function Icons() {
    (0, _classCallCheck2.default)(this, Icons);
  };

  exports.Icons = Icons;
  Icons.rightArrow = _$$_REQUIRE(_dependencyMap[2]);
  Icons.inputDelete = _$$_REQUIRE(_dependencyMap[3]);
  Icons.inputEyeSecure = _$$_REQUIRE(_dependencyMap[4]);
  Icons.inputEye = _$$_REQUIRE(_dependencyMap[5]);
  Icons.loadingPicLight = _$$_REQUIRE(_dependencyMap[6]);
  Icons.loadingPicDark = _$$_REQUIRE(_dependencyMap[7]);
},23080,[14305,14320,22459,23224,23227,23230,23233,23236]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var Colors = function Colors() {
    (0, _classCallCheck2.default)(this, Colors);
  };

  Colors.green = '#00B7A2';
  Colors.range = '#FFA943';
  Colors.red = '#FC675F';
  var _default = Colors;
  exports.default = _default;
},23083,[14305,14320]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "ContainerWithShadowAndSeparator", {
    enumerable: true,
    get: function get() {
      return _ContainerWithShadowAndSeparator.default;
    }
  });

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23086,[14305,23089]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNativeShadow = _$$_REQUIRE(_dependencyMap[10]);

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _GapWrap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var ContainerWithShadowAndSeparator = function (_Component) {
    (0, _inherits2.default)(ContainerWithShadowAndSeparator, _Component);

    function ContainerWithShadowAndSeparator() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, ContainerWithShadowAndSeparator);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ContainerWithShadowAndSeparator)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        width: (0, _sizes.adjustSize)(1020),
        height: (0, _sizes.adjustSize)(240)
      };

      _this.onLayout = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            height = _e$nativeEvent$layout.height;

        _this.setState({
          width: width,
          height: height
        });
      };

      return _this;
    }

    (0, _createClass2.default)(ContainerWithShadowAndSeparator, [{
      key: "getContents",
      value: function getContents() {
        var _this$props = this.props,
            children = _this$props.children,
            separatorStyle = _this$props.separatorStyle,
            horizontal = _this$props.horizontal;

        if (!children) {
          return null;
        }

        return (Array.isArray(children) ? children : [children]).filter(function (child) {
          return !!child;
        }).map(function (child, index) {
          return _react.default.createElement(_GapWrap.default, {
            key: "" + index,
            hasSeparator: index > 0,
            horizontal: horizontal,
            separatorStyle: separatorStyle
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var contents = this.getContents();
        var _this$props2 = this.props,
            containerStyle = _this$props2.containerStyle,
            horizontal = _this$props2.horizontal,
            invisible = _this$props2.invisible;
        var _this$state = this.state,
            width = _this$state.width,
            height = _this$state.height;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.box, {
            height: height <= 1 ? 0 : height + (0, _sizes.adjustSize)(9),
            overflow: 'visible',
            opacity: invisible ? 0 : 1
          }]
        }, _react.default.createElement(_reactNativeShadow.BoxShadow, {
          setting: {
            width: width,
            height: height,
            color: '#000',
            border: (0, _sizes.adjustSize)(9),
            radius: (0, _sizes.adjustSize)(30),
            opacity: 0.015,
            x: 0,
            y: (0, _sizes.adjustSize)(9),
            style: {
              position: 'absolute',
              top: 0,
              left: 0
            }
          }
        }), _react.default.createElement(_reactNative.View, {
          style: [Styles.container, horizontal ? Styles.containerHorizontal : Styles.containerVertical, containerStyle],
          onLayout: this.onLayout
        }, contents));
      }
    }]);
    return ContainerWithShadowAndSeparator;
  }(_react.Component);

  exports.default = ContainerWithShadowAndSeparator;
  ContainerWithShadowAndSeparator.propTypes = {
    containerStyle: _propTypes.default.any,
    separatorStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    invisible: _propTypes.default.bool
  };
  ContainerWithShadowAndSeparator.defaultProps = {
    containerStyle: {},
    separatorStyle: {},
    horizontal: false,
    invisible: false
  };

  var Styles = _reactNative.StyleSheet.create({
    box: {
      position: 'relative'
    },
    container: {
      borderRadius: (0, _sizes.adjustSize)(33),
      overflow: 'hidden',
      backgroundColor: '#fff'
    },
    containerHorizontal: {
      flexDirection: 'row'
    }
  });
},23089,[14308,14305,14320,14323,14371,14377,14386,10297,10033,10318,13699,23068,23092]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[8]);

  var _separator = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var GapWrap = function (_Component) {
    (0, _inherits2.default)(GapWrap, _Component);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > (0, _sizes.adjustSize)(3.1)
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            hasSeparator = _this$props.hasSeparator,
            separatorStyle = _this$props.separatorStyle,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          onLayout: this.onLayout
        }, hasSeparator && shown ? _react.default.createElement(_separator.Separator, {
          style: [{
            height: Math.min((0, _sizes.adjustSize)(3), 1),
            opacity: 0.35,
            marginHorizontal: (0, _sizes.adjustSize)(60)
          }, separatorStyle]
        }) : null, children);
      }
    }]);
    return GapWrap;
  }(_react.Component);

  exports.default = GapWrap;
},23092,[14308,14305,14320,14323,14371,14377,14386,10297,10033,22903,23068]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var _styles = _$$_REQUIRE(_dependencyMap[15]);

  var Size72 = (0, _sizes.adjustSize)(72);
  var Size120 = (0, _sizes.adjustSize)(120);
  var Size168 = (0, _sizes.adjustSize)(168);
  var Size150 = (0, _sizes.adjustSize)(150);
  var Size138 = (0, _sizes.adjustSize)(138);

  var CircleButton = function (_Component) {
    (0, _inherits2.default)(CircleButton, _Component);

    function CircleButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CircleButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CircleButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isPressing: false
      };

      _this.onPress = function () {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            onPress = _this$props.onPress;

        if (disabled) {
          return;
        }

        onPress();
      };

      _this.onPressIn = function () {
        var showHighlight = _this.props.showHighlight;

        if (showHighlight) {
          _this.setState({
            isPressing: true
          });
        }
      };

      _this.onPressOut = function () {
        _this.setState({
          isPressing: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(CircleButton, [{
      key: "renderTouchableList",
      value: function renderTouchableList() {
        var _this$props2 = this.props,
            sizeLevel = _this$props2.sizeLevel,
            selected = _this$props2.selected,
            title = _this$props2.title,
            icon = _this$props2.icon,
            iconSelected = _this$props2.iconSelected,
            iconText = _this$props2.iconText,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            horizontal = _this$props2.horizontal,
            offColor = _this$props2.offColor,
            titleIsTouchable = _this$props2.titleIsTouchable;
        var isPressing = this.state.isPressing;
        var containerSizeStyle = _styles.Styles[['container0', 'container1', 'container2', 'container3'][sizeLevel || 0]] || _styles.Styles.container0;
        var iconContainerSizeStyle = _styles.Styles[['iconContainer0', 'iconContainer1', 'iconContainer2', 'iconContainer3'][sizeLevel || 0]] || _styles.Styles.iconContainer0;
        selected = selected || isPressing;

        if (titleIsTouchable) {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: [horizontal ? _styles.Styles.containerHorizontal : null, _styles.Styles.listContainer],
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null])
          }, icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null));
        } else {
          return _react.default.createElement(_reactNative.View, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.container, containerSizeStyle, horizontal ? _styles.Styles.containerHorizontal : null, disabled ? {
              opacity: 0.3
            } : null])
          }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            disabled: disabled,
            style: _reactNative.StyleSheet.flatten([_styles.Styles.iconContainer, iconContainerSizeStyle, selected ? {
              backgroundColor: themeColor || _colors.ColorGreen
            } : offColor ? {
              backgroundColor: offColor
            } : null, disabled ? _styles.Styles.iconContainerDisabled : null, disabled && selected ? _styles.Styles.iconContainerDisabledSelected : null]),
            activeOpacity: 1,
            onPress: this.onPress,
            onPressIn: this.onPressIn,
            onPressOut: this.onPressOut
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: this.props.accessibilityLabel || title || iconText,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: disabled,
              checked: selected,
              selected: selected
            }
          })), icon ? _react.default.createElement(_reactNative.Image, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.icon]),
            source: selected && !disabled ? iconSelected || iconSelected : icon
          }) : _react.default.createElement(_reactNative.Text, {
            style: [_styles.Styles.iconText, selected && !disabled ? _styles.Styles.iconTextSelected : null]
          }, iconText)), title ? _react.default.createElement(_reactNative.Text, {
            style: _reactNative.StyleSheet.flatten([_styles.Styles.title, selected ? {
              color: themeColor || _colors.ColorGreen
            } : null, disabled ? _styles.Styles.titleDisabled : null, horizontal ? _styles.Styles.titleHorizontal : null]),
            numberOfLines: horizontal ? 2 : 1
          }, title) : null);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return this.renderTouchableList();
      }
    }]);
    return CircleButton;
  }(_react.Component);

  exports.default = CircleButton;
  CircleButton.propTypes = {
    sizeLevel: _propTypes.default.oneOf([0, 1, 2, 3]),
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    disabled: _propTypes.default.bool,
    showHighlight: _propTypes.default.bool,
    selected: _propTypes.default.bool,
    horizontal: _propTypes.default.bool,
    onPress: _propTypes.default.func,
    title: _propTypes.default.string,
    titleIsTouchable: _propTypes.default.bool,
    icon: _propTypes.default.any,
    iconSelected: _propTypes.default.any,
    iconText: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  CircleButton.defaultProps = {
    sizeLevel: 0,
    themeColor: '',
    offColor: '#F7F7F7',
    disabled: false,
    showHighlight: false,
    selected: false,
    horizontal: false,
    onPress: _fns.NOOP,
    title: '',
    titleIsTouchable: false,
    icon: null,
    iconSelected: null,
    iconText: ''
  };
},23095,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23137,22420,23098]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Styles = undefined;

  var _reactNative = _$$_REQUIRE(_dependencyMap[0]);

  var _sizes = _$$_REQUIRE(_dependencyMap[1]);

  var _fonts = _$$_REQUIRE(_dependencyMap[2]);

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center'
    },
    container0: {
      width: (0, _sizes.adjustSize)(120)
    },
    container1: {
      width: (0, _sizes.adjustSize)(168)
    },
    container2: {
      width: (0, _sizes.adjustSize)(150)
    },
    container3: {
      width: (0, _sizes.adjustSize)(138)
    },
    containerHorizontal: {
      width: 'auto',
      flex: 1,
      flexDirection: 'row'
    },
    iconContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    iconContainer0: {
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      borderRadius: (0, _sizes.adjustSize)(120) / 2
    },
    iconContainer1: {
      width: (0, _sizes.adjustSize)(168),
      height: (0, _sizes.adjustSize)(168),
      borderRadius: (0, _sizes.adjustSize)(168) / 2
    },
    iconContainer2: {
      width: (0, _sizes.adjustSize)(150),
      height: (0, _sizes.adjustSize)(150),
      borderRadius: (0, _sizes.adjustSize)(150) / 2
    },
    iconContainer3: {
      width: (0, _sizes.adjustSize)(138),
      height: (0, _sizes.adjustSize)(138),
      borderRadius: (0, _sizes.adjustSize)(138) / 2
    },
    iconContainerDisabled: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    iconContainerDisabledSelected: {
      backgroundColor: 'rgba(197, 201, 203, 0.3)'
    },
    icon: {
      resizeMode: 'contain',
      width: (0, _sizes.adjustSize)(72),
      height: (0, _sizes.adjustSize)(72)
    },
    iconText: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      color: '#000'
    },
    iconTextSelected: {
      color: '#FFF'
    },
    title: {
      marginTop: (0, _sizes.adjustSize)(27),
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#999999'
    },
    title3: {
      display: 'none'
    },
    titleDisabled: {
      color: '#999999'
    },
    titleHorizontal: {
      marginTop: 0,
      flex: 1,
      textAlign: 'left',
      marginLeft: (0, _sizes.adjustSize)(39)
    },
    listContainer: {
      alignItems: 'center'
    }
  });

  exports.Styles = Styles;
},23098,[10033,23068,23071]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var GapWrap = function (_PureComponent) {
    (0, _inherits2.default)(GapWrap, _PureComponent);

    function GapWrap() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, GapWrap);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(GapWrap)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        shown: true
      };

      _this.onLayout = function (e) {
        _this.setState({
          shown: e.nativeEvent.layout.height > 0
        });
      };

      return _this;
    }

    (0, _createClass2.default)(GapWrap, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            gap = _this$props.gap,
            horizontal = _this$props.horizontal,
            children = _this$props.children;
        var shown = this.state.shown;

        if (!children) {
          return null;
        }

        var gapSize = shown ? gap : 0;
        return _react.default.createElement(_react.Fragment, null, _react.default.createElement(_reactNative.View, {
          style: horizontal ? {
            flex: 1
          } : null,
          onLayout: this.onLayout
        }, children), _react.default.createElement(_reactNative.View, {
          style: [StylesGap.gap, (0, _defineProperty2.default)({}, horizontal ? 'width' : 'height', gapSize)]
        }));
      }
    }]);
    return GapWrap;
  }(_react.PureComponent);

  var ContainerWithGap = function (_PureComponent2) {
    (0, _inherits2.default)(ContainerWithGap, _PureComponent2);

    function ContainerWithGap() {
      (0, _classCallCheck2.default)(this, ContainerWithGap);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(ContainerWithGap).apply(this, arguments));
    }

    (0, _createClass2.default)(ContainerWithGap, [{
      key: "getContents",
      value: function getContents() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            horizontal = _this$props2.horizontal,
            gap = _this$props2.gap;

        if (!children) {
          return null;
        }

        var length = children.length;
        var lengtEdge = length - 1;
        return children.map(function (child, index) {
          return _react.default.createElement(GapWrap, {
            key: index,
            gap: index < lengtEdge ? gap : 0,
            horizontal: horizontal
          }, child);
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props3 = this.props,
            containerStyle = _this$props3.containerStyle,
            horizontal = _this$props3.horizontal,
            outerGap = _this$props3.outerGap,
            _this$props3$useChild = _this$props3.useChildGap,
            useChildGap = _this$props3$useChild === undefined ? true : _this$props3$useChild,
            children = _this$props3.children;
        var contents = useChildGap ? this.getContents() : children;

        if (!contents) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, (0, _defineProperty2.default)({}, horizontal ? 'marginVertical' : 'marginHorizontal', outerGap), horizontal ? {
            flexDirection: 'row'
          } : null, containerStyle]
        }, contents);
      }
    }]);
    return ContainerWithGap;
  }(_react.PureComponent);

  exports.default = ContainerWithGap;
  ContainerWithGap.propTypes = {
    containerStyle: _propTypes.default.any,
    horizontal: _propTypes.default.bool,
    gap: _propTypes.default.number,
    outerGap: _propTypes.default.number
  };
  ContainerWithGap.defaultProps = {
    containerStyle: {},
    horizontal: false,
    gap: 7,
    outerGap: 0
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {}
  });

  var StylesGap = _reactNative.StyleSheet.create({
    gap: {
      alignSelf: 'stretch'
    }
  });
},23101,[14308,14305,14317,14320,14323,14371,14377,14386,10297,10033,10318]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _colors = _$$_REQUIRE(_dependencyMap[11]);

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var Surface = _reactNative.ART.Surface,
      Group = _reactNative.ART.Group,
      Shape = _reactNative.ART.Shape,
      Path = _reactNative.ART.Path;
  var PI = Math.PI;

  var DeviceWithInfo = function (_PureComponent) {
    (0, _inherits2.default)(DeviceWithInfo, _PureComponent);

    function DeviceWithInfo() {
      (0, _classCallCheck2.default)(this, DeviceWithInfo);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceWithInfo).apply(this, arguments));
    }

    (0, _createClass2.default)(DeviceWithInfo, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            holdPlace = _this$props.holdPlace,
            progress = _this$props.progress,
            themeColor = _this$props.themeColor;

        if (!progress) {
          progress = 0;
        }

        progress = Math.min(1, Math.max(0, progress));
        var r = (0, _sizes.adjustSize)(324);
        var rDot = (0, _sizes.adjustSize)(7.5);
        var startX = r + Math.cos(-0.5 * PI) * r;
        var startY = r + Math.sin(-0.5 * PI) * r;
        var halfX = r + Math.cos(0.5 * PI) * r;
        var halfY = r + Math.sin(0.5 * PI) * r;
        var endX = r + Math.cos(progress * 2 * PI - 0.5 * PI) * r;
        var endY = r + Math.sin(progress * 2 * PI - 0.5 * PI) * r;
        var PathCircleBase = new Path().moveTo(startX, startY).arcTo(halfX, halfY, r, r, false, false).arcTo(startX, startY, r, r, false, false);
        var PathCircle = new Path().moveTo(startX, startY);

        if (progress >= 0.5) {
          PathCircle.arcTo(halfX, halfY, r, r, false, false);
        }

        PathCircle.arcTo(endX, endY, r, r, false, false);
        var PathDot = new Path().moveTo(endX, endY - rDot).arcTo(endX, endY + rDot, rDot, rDot, false, false).arcTo(endX, endY - rDot, rDot, rDot, false, false);
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityLabel: this.props.accessibilityLabel || progress
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.deviceContainer
        }, _react.default.createElement(Surface, {
          width: r * 2,
          height: r * 2,
          style: {
            position: 'absolute',
            left: 0,
            top: (0, _sizes.adjustSize)(7.5)
          }
        }, _react.default.createElement(Shape, {
          d: PathCircleBase,
          strokeWidth: 1,
          stroke: themeColor ? ((0, _colors.fixHex)(themeColor) + "33").slice(0, 9) : '#33ABF233'
        }), progress > 0 ? _react.default.createElement(Group, null, _react.default.createElement(Shape, {
          d: PathCircle,
          strokeWidth: 1,
          stroke: themeColor || '#33ABF2'
        }), _react.default.createElement(Shape, {
          d: PathDot,
          strokeWidth: 1,
          fill: themeColor || '#33ABF2'
        })) : null), _react.default.createElement(_reactNative.View, {
          style: [Styles.deviceInner, themeColor ? {
            backgroundColor: themeColor
          } : null]
        }, _react.default.createElement(_reactNative.Image, {
          style: Styles.deviceIcon,
          source: icon
        }))), _react.default.createElement(_reactNative.View, {
          style: Styles.infoContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.infoTitle
        }, title || (holdPlace ? ' ' : '')), _react.default.createElement(_reactNative.Text, {
          style: Styles.infoSubtitle
        }, subtitle || (holdPlace ? ' ' : ''))));
      }
    }]);
    return DeviceWithInfo;
  }(_react.PureComponent);

  exports.default = DeviceWithInfo;
  DeviceWithInfo.propTypes = {
    icon: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    holdPlace: _propTypes.default.bool,
    progress: _propTypes.default.number,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(300)
    },
    deviceContainer: {
      width: (0, _sizes.adjustSize)(663),
      height: (0, _sizes.adjustSize)(663),
      justifyContent: 'center',
      alignItems: 'center'
    },
    deviceInner: {
      width: (0, _sizes.adjustSize)(558),
      height: (0, _sizes.adjustSize)(558),
      borderRadius: (0, _sizes.adjustSize)(279),
      justifyContent: 'center',
      alignItems: 'center',
      backgroundColor: '#43C2FA'
    },
    deviceIcon: {
      width: (0, _sizes.adjustSize)(264),
      height: (0, _sizes.adjustSize)(228)
    },
    infoContainer: {
      marginTop: (0, _sizes.adjustSize)(33),
      alignItems: 'center'
    },
    infoTitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      lineHeight: (0, _sizes.adjustSize)(60),
      color: '#000'
    },
    infoSubtitle: {
      marginTop: (0, _sizes.adjustSize)(9),
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#B2B2B2'
    }
  });
},23104,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23074,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _reactNativeSvg = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var Size708 = (0, _sizes.adjustSize)(708);

  function getCircleCenter(type, index) {
    switch (type) {
      case 0:
      case 1:
        return {
          x: 0,
          y: 0
        };

      case 2:
        return {
          x: [3, -2, -1, 2][index] || 0,
          y: 0
        };

      case 3:
        return {
          x: [2, -2, -1, 0][index] || 0,
          y: 0
        };

      case -1:
      default:
        return {
          x: 0,
          y: 0
        };
    }
  }

  function getCircleColors(type, index) {
    switch (type) {
      case 0:
        return [['#475154'], ['#475154', '#4A5867'], ['#2D3947'], ['#F7F7F7']][index] || '#475154';

      case 1:
        return [['#00AEFF'], ['#00AEFF', '#5BCCFF'], ['#007DFF'], ['#F7F7F7']][index] || '#00AEFF';

      case 2:
        return [['#00B7AF'], ['#00B7AF', '#0BCEB7'], ['#05CFC6'], ['#F7F7F7']][index] || '#00B7AF';

      case 3:
        return [['#7538F7'], ['#7538F7', '#B88CFF'], ['#7231FB'], ['#F7F7F7']][index] || '#7538F7';

      case 4:
        return [['#5067F9'], ['#5067F9', '#589BFB'], ['#2240F7'], ['#F7F7F7']][index] || '#5067F9';

      default:
        return [['#FFFFFF'], ['#FFFFFF', '#FFFFFF'], ['#FFFFFF'], ['#F7F7F7']][index] || '#FFFFFF';
    }
  }

  function getCircleOpacity(type, index) {
    switch (type) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        return [0.2, 1, 1, 1][index] || 1;

      case -1:
      default:
        return [0.2, 0.6, 1, 1][index] || 1;
    }
  }

  var Circle = function (_Component) {
    (0, _inherits2.default)(Circle, _Component);

    function Circle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Circle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Circle)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        rotation: new _reactNative.Animated.Value(0)
      };
      _this.inited = false;
      _this.currentValue = 0;
      return _this;
    }

    (0, _createClass2.default)(Circle, [{
      key: "rotate",
      value: function rotate(_ref) {
        var disabled = _ref.disabled,
            _ref$duration = _ref.duration,
            duration = _ref$duration === undefined ? 4000 : _ref$duration;

        if (!this.inited) {
          return;
        }

        if (disabled) {
          this.stopRotation();
          return;
        }

        this.startRotation(duration);
      }
    }, {
      key: "startRotation",
      value: function startRotation() {
        var _this2 = this;

        var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;
        var isReset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        this.stopRotation();
        this.aniRotation = _reactNative.Animated.timing(this.state.rotation, {
          toValue: 1,
          duration: isReset ? duration : duration * (1 - this.currentValue || 0.01),
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start(function (_ref2) {
          var finished = _ref2.finished;

          if (finished) {
            if (_this2.props.disabled) {
              return;
            }

            _this2.state.rotation.setValue(0);

            _this2.startRotation(_this2.props.duration, true);
          }
        });
      }
    }, {
      key: "stopRotation",
      value: function stopRotation() {
        var _this3 = this;

        this.state.rotation.stopAnimation(function (v) {
          _this3.currentValue = v;
        });
        this.aniRotation = null;
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps && nextProps.disabled) {
          this.stopRotation();
          return;
        }

        if (nextProps && this.props && nextProps.duration === this.props.duration && nextProps.disabled === this.props.disabled) {
          return;
        }

        this.rotate(nextProps || {});
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        this.inited = true;
        this.rotate(this.props);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopRotation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            color = _this$props.color,
            opacity = _this$props.opacity,
            rx = _this$props.rx,
            ry = _this$props.ry,
            _this$props$center = _this$props.center,
            x = _this$props$center.x,
            y = _this$props$center.y,
            counterClock = _this$props.counterClock,
            _this$props$centerInn = _this$props.centerInner,
            ix = _this$props$centerInn.x,
            iy = _this$props$centerInn.y,
            rxInner = _this$props.rxInner,
            ryInner = _this$props.ryInner;
        var rotation = this.state.rotation;
        var r = rotation.interpolate({
          inputRange: [0, 1],
          outputRange: !counterClock ? ['0deg', '360deg'] : ['360deg', '0deg']
        });
        var d = "\n      M" + (118 + x - rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x + rx) + " " + (118 + y) + "\n      L" + (118 + ix + rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix - rxInner) + " " + (118 + iy) + "\n      A" + rxInner + " " + ryInner + " 0 0 0 " + (118 + ix + rxInner) + " " + (118 + iy) + "\n      L" + (118 + x + rx) + " " + (118 + y) + "\n      A" + rx + " " + ry + " 0 0 1 " + (118 + x - rx) + " " + (118 + y) + "\n    ";
        return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({
          style: [Styles.circleWrap, {
            transform: [{
              rotate: r
            }]
          }]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNativeSvg.Svg, {
          width: Size708,
          height: Size708,
          viewBox: "0 0 236 236"
        }, _react.default.createElement(_reactNativeSvg.Defs, null, _react.default.createElement(_reactNativeSvg.LinearGradient, {
          id: "circleGradient",
          x1: "0",
          y1: "0",
          x2: "236",
          y2: "236"
        }, _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "0",
          stopColor: color[1] || color[0],
          stopOpacity: opacity
        }), _react.default.createElement(_reactNativeSvg.Stop, {
          offset: "1",
          stopColor: color[0],
          stopOpacity: opacity
        }))), _react.default.createElement(_reactNativeSvg.Path, {
          rotation: 0,
          origin: (118, 118),
          d: d,
          fill: "url(#circleGradient)"
        })));
      }
    }]);
    return Circle;
  }(_react.Component);

  Circle.propTypes = {
    disabled: _propTypes.default.bool,
    duration: _propTypes.default.number,
    color: _propTypes.default.string,
    opacity: _propTypes.default.number,
    rx: _propTypes.default.number,
    ry: _propTypes.default.number,
    center: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    centerInner: _propTypes.default.shape({
      x: _propTypes.default.number,
      y: _propTypes.default.number
    }),
    counterClock: _propTypes.default.bool,
    rxInner: _propTypes.default.number,
    ryInner: _propTypes.default.number
  };

  var Fan = function (_Component2) {
    (0, _inherits2.default)(Fan, _Component2);

    function Fan() {
      (0, _classCallCheck2.default)(this, Fan);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Fan).apply(this, arguments));
    }

    (0, _createClass2.default)(Fan, [{
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            disabled = _this$props2.disabled,
            type = _this$props2.type,
            speedLevel = _this$props2.speedLevel,
            noDisableColor = _this$props2.noDisableColor;
        var centerInner = getCircleCenter(type, 3);
        var rxInner = 91;
        var ryInner = 91;
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel || speedLevel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: -15,
          counterClock: true,
          opacity: getCircleOpacity(disabled ? 0 : type, 0),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 0),
          duration: 6000 / speedLevel,
          type: type,
          rx: 113,
          ry: 107,
          center: getCircleCenter(type, 0),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 0,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 1),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 1),
          duration: 5200 / speedLevel,
          type: type,
          rx: 105,
          ry: 105,
          center: getCircleCenter(type, 1),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }), _react.default.createElement(Circle, {
          disabled: disabled,
          initRotation: 45,
          counterClock: false,
          opacity: getCircleOpacity(disabled ? 0 : type, 2),
          color: getCircleColors(disabled && !noDisableColor ? 0 : type, 2),
          duration: 4000 / speedLevel,
          type: type,
          rx: 102,
          ry: 95,
          center: getCircleCenter(type, 2),
          centerInner: centerInner,
          rxInner: rxInner,
          ryInner: ryInner
        }));
      }
    }]);
    return Fan;
  }(_react.Component);

  exports.default = Fan;
  Fan.propTypes = {
    disabled: _propTypes.default.bool,
    noDisableColor: _propTypes.default.bool,
    speedLevel: _propTypes.default.number,
    type: _propTypes.default.oneOf([-1, 0, 1, 2, 3, 4]),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Fan.defaultProps = {
    disabled: false,
    noDisableColor: false,
    speedLevel: 1,
    type: -1
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginVertical: (0, _sizes.adjustSize)(165),
      width: Size708,
      height: Size708,
      alignSelf: 'center'
    },
    circleWrap: {
      position: 'absolute',
      width: '100%',
      height: '100%',
      left: 0,
      top: 0
    }
  });
},23107,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,11485,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.Background = exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var Source0 = _$$_REQUIRE(_dependencyMap[15]);

  var Source1 = _$$_REQUIRE(_dependencyMap[16]);

  var Source2 = _$$_REQUIRE(_dependencyMap[17]);

  var Source3 = _$$_REQUIRE(_dependencyMap[18]);

  var Source4 = _$$_REQUIRE(_dependencyMap[19]);

  var Source5 = _$$_REQUIRE(_dependencyMap[20]);

  var Source6 = _$$_REQUIRE(_dependencyMap[21]);

  function getRandomBetween(min, max) {
    return Math.random() * (max - min) + min;
  }

  var HeaterHeader = function (_PureComponent) {
    (0, _inherits2.default)(HeaterHeader, _PureComponent);

    function HeaterHeader() {
      (0, _classCallCheck2.default)(this, HeaterHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(HeaterHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(HeaterHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            showLargeTitle = _this$props.showLargeTitle,
            subtitle = _this$props.subtitle,
            showSubtitle = _this$props.showSubtitle,
            unit = _this$props.unit,
            disabled = _this$props.disabled,
            themeColor = _this$props.themeColor;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel
        })), _react.default.createElement(_reactNative.View, {
          style: Styles.container1
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' '), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unitTransparent
        }, "" + unit) : null, _react.default.createElement(_reactNative.View, {
          style: Styles.titlesContainer
        }, showLargeTitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.titleLarge
        }, title) : null, showLargeTitle ? null : _react.default.createElement(_reactNative.Text, {
          style: Styles.titleSmall
        }, title), showSubtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null), unit ? _react.default.createElement(_reactNative.Text, {
          style: Styles.unit
        }, "" + unit) : null, _react.default.createElement(_reactNative.Text, {
          style: Styles.titlesContainerHeightHolder
        }, ' ')));
      }
    }]);
    return HeaterHeader;
  }(_react.PureComponent);

  exports.default = HeaterHeader;
  HeaterHeader.propTypes = {
    title: _propTypes.default.string,
    showLargeTitle: _propTypes.default.bool,
    subtitle: _propTypes.default.string,
    showSubtitle: _propTypes.default.bool,
    unit: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Dot = function (_Component) {
    (0, _inherits2.default)(Dot, _Component);

    function Dot() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Dot);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Dot)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        progress: new _reactNative.Animated.Value(0),
        isLoading: true
      };

      _this.onLayout = function () {
        _this.setState({
          isLoading: false
        });
      };

      return _this;
    }

    (0, _createClass2.default)(Dot, [{
      key: "startAnimation",
      value: function startAnimation() {
        this.ani && this.ani.stop();
        this.ani = _reactNative.Animated.loop(_reactNative.Animated.timing(this.state.progress, {
          toValue: 1,
          duration: getRandomBetween(12000, 24000),
          useNativeDriver: true
        })).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.ani && this.ani.stop();
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.timer = setTimeout(function () {
          _this2.startAnimation();
        }, 2000);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        clearTimeout(this.timer);
        this.stopAnimation();
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            width = _this$props2.width,
            height = _this$props2.height,
            source = _this$props2.source;
        var progress = this.state.progress;
        var originLeft = getRandomBetween(20, 350);
        var opacity = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [1, 0]
        });
        var translateX = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [originLeft - 3, originLeft + 3]
        });
        var randomTranslateY = getRandomBetween(_sizes.window.height * 0.8, _sizes.window.height);
        var translateY = progress.interpolate({
          inputRange: [0, 1],
          outputRange: [randomTranslateY, 0]
        });

        if (this.state.isLoading) {
          return _react.default.createElement(_reactNative.View, {
            onLayout: this.onLayout,
            style: [StylesDot.container, {
              width: width,
              height: height
            }]
          });
        }

        return _react.default.createElement(_reactNative.Animated.Image, {
          style: [StylesDot.container, {
            width: width,
            height: height,
            opacity: opacity,
            transform: [{
              translateX: translateX
            }, {
              translateY: translateY
            }]
          }],
          source: source
        });
      }
    }]);
    return Dot;
  }(_react.Component);

  Dot.propTypes = {
    width: _propTypes.default.number,
    height: _propTypes.default.height,
    source: _propTypes.default.any
  };

  var Dot0 = function (_Component2) {
    (0, _inherits2.default)(Dot0, _Component2);

    function Dot0() {
      (0, _classCallCheck2.default)(this, Dot0);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot0).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot0, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 26,
          height: 28,
          source: Source0
        });
      }
    }]);
    return Dot0;
  }(_react.Component);

  var Dot1 = function (_Component3) {
    (0, _inherits2.default)(Dot1, _Component3);

    function Dot1() {
      (0, _classCallCheck2.default)(this, Dot1);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot1).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot1, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 4,
          height: 4,
          source: Source1
        });
      }
    }]);
    return Dot1;
  }(_react.Component);

  var Dot2 = function (_Component4) {
    (0, _inherits2.default)(Dot2, _Component4);

    function Dot2() {
      (0, _classCallCheck2.default)(this, Dot2);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot2).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot2, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 3,
          height: 3,
          source: Source2
        });
      }
    }]);
    return Dot2;
  }(_react.Component);

  var Dot3 = function (_Component5) {
    (0, _inherits2.default)(Dot3, _Component5);

    function Dot3() {
      (0, _classCallCheck2.default)(this, Dot3);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot3).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot3, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 16,
          height: 16,
          source: Source3
        });
      }
    }]);
    return Dot3;
  }(_react.Component);

  var Dot4 = function (_Component6) {
    (0, _inherits2.default)(Dot4, _Component6);

    function Dot4() {
      (0, _classCallCheck2.default)(this, Dot4);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot4).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot4, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 8,
          height: 8,
          source: Source4
        });
      }
    }]);
    return Dot4;
  }(_react.Component);

  var Dot5 = function (_Component7) {
    (0, _inherits2.default)(Dot5, _Component7);

    function Dot5() {
      (0, _classCallCheck2.default)(this, Dot5);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot5).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot5, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 22,
          height: 22,
          source: Source5
        });
      }
    }]);
    return Dot5;
  }(_react.Component);

  var Dot6 = function (_Component8) {
    (0, _inherits2.default)(Dot6, _Component8);

    function Dot6() {
      (0, _classCallCheck2.default)(this, Dot6);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Dot6).apply(this, arguments));
    }

    (0, _createClass2.default)(Dot6, [{
      key: "render",
      value: function render() {
        return _react.default.createElement(Dot, {
          width: 83,
          height: 83,
          source: Source6
        });
      }
    }]);
    return Dot6;
  }(_react.Component);

  var Background = function (_Component9) {
    (0, _inherits2.default)(Background, _Component9);

    function Background() {
      (0, _classCallCheck2.default)(this, Background);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf3.default)(Background).apply(this, arguments));
    }

    (0, _createClass2.default)(Background, [{
      key: "getDots",
      value: function getDots() {
        var dots = [];
        var Dots = [Dot0, Dot1, Dot2, Dot3, Dot4, Dot5, Dot6].reverse();
        var dotCount = [14, 11, 18, 10, 11, 10, 11].reverse();
        dotCount.forEach(function (c, index) {
          var DotN = Dots[index];

          for (var i = 0; i < c; i++) {
            dots.push(_react.default.createElement(DotN, {
              key: String(index) + String(i)
            }));
          }
        });
        return dots;
      }
    }, {
      key: "render",
      value: function render() {
        var on = this.props.on;
        var gradientProps = {
          useAngel: this.props.useAngel,
          angel: this.props.angel,
          angelCenter: this.props.angelCenter,
          locations: this.props.locations,
          colors: this.props.colors
        };

        if (!on) {
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps));
        } else {
          var dots = this.getDots();
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            style: StylesBackground.container
          }, gradientProps), dots);
        }
      }
    }]);
    return Background;
  }(_react.Component);

  exports.Background = Background;
  Background.propTypes = {
    on: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    useAngel: _propTypes.default.bool,
    angel: _propTypes.default.number,
    angelCenter: _propTypes.default.object,
    locations: _propTypes.default.array,
    colors: _propTypes.default.array
  };
  Background.defaultProps = {
    on: false,
    themeColor: null,
    useAngel: true,
    angel: 180,
    angelCenter: {
      x: 0.5,
      y: 0.5
    },
    locations: [0, 1],
    colors: ["#FFAC6A", "rgba(247,247,247,0.25)"]
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingVertical: (0, _sizes.adjustSize)(195),
      flexDirection: 'column',
      justifyContent: 'center'
    },
    container1: {
      flexDirection: 'row',
      justifyContent: 'center'
    },
    titleLarge: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(240),
      textAlign: 'center',
      color: '#000000'
    },
    titlesContainer: {
      justifyContent: 'center',
      alignItems: 'center'
    },
    titlesContainerHeightHolder: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(282),
      textAlign: 'center',
      color: 'transparent'
    },
    titleSmall: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(120),
      textAlign: 'center',
      color: '#000000'
    },
    unitTransparent: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: 'transparent'
    },
    unit: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000000'
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: '#000000'
    },
    subtitlePlaceHolder: {
      fontFamily: _fonts.FontDefault,
      textAlign: 'center',
      fontSize: (0, _sizes.adjustSize)(42),
      color: 'transparent'
    }
  });

  var StylesDot = _reactNative.StyleSheet.create({
    container: {
      position: 'absolute',
      resizeMode: 'contain'
    }
  });

  var StylesBackground = _reactNative.StyleSheet.create({
    container: {
      height: "100%",
      position: 'absolute',
      left: 0,
      top: 0,
      right: 0,
      bottom: 0
    }
  });
},23110,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420,14299,23113,23116,23119,23122,23125,23128,23131]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 26,
    "height": 28,
    "scales": [1],
    "hash": "e437a57822191991fca0f7568e3c4cd8",
    "name": "heater-dot0",
    "type": "png"
  });
},23113,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 4,
    "height": 4,
    "scales": [1],
    "hash": "c94e9e5660e90a16d10ddf030db99992",
    "name": "heater-dot1",
    "type": "png"
  });
},23116,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 3,
    "height": 3,
    "scales": [1],
    "hash": "8075bed0a415b161aa351bf95108e0e2",
    "name": "heater-dot2",
    "type": "png"
  });
},23119,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 16,
    "height": 16,
    "scales": [1],
    "hash": "f2b5b67cd2695b07bb24f7293526a495",
    "name": "heater-dot3",
    "type": "png"
  });
},23122,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 8,
    "height": 8,
    "scales": [1],
    "hash": "224724549f1506eb56b7cabd953ab33e",
    "name": "heater-dot4",
    "type": "png"
  });
},23125,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 22,
    "scales": [1],
    "hash": "7ee7506ecc080d92634d4f285aff3210",
    "name": "heater-dot5",
    "type": "png"
  });
},23128,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 83,
    "height": 83,
    "scales": [1],
    "hash": "76d5b015b10d6e50eb919f8ece03c611",
    "name": "heater-dot6",
    "type": "png"
  });
},23131,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[12]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _sizes = _$$_REQUIRE(_dependencyMap[16]);

  var _fns = _$$_REQUIRE(_dependencyMap[17]);

  var _fonts = _$$_REQUIRE(_dependencyMap[18]);

  var _colors = _$$_REQUIRE(_dependencyMap[19]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[20]);

  var SelectorWithButton = function (_Component) {
    (0, _inherits2.default)(SelectorWithButton, _Component);

    function SelectorWithButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SelectorWithButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SelectorWithButton)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        selectedIndexs: [0]
      };

      _this.select = function (index) {
        var _this$props = _this.props,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled,
            multiple = _this$props.multiple,
            onSelected = _this$props.onSelected,
            minSelected = _this$props.minSelected,
            maxSelected = _this$props.maxSelected;

        if (disabled || switchDisabled) {
          return;
        }

        var selectedIndexs = (0, _toConsumableArray2.default)(_this.state.selectedIndexs);
        var selectedIndex = selectedIndexs.indexOf(index);
        var hasChanged = false;

        if (multiple) {
          if (selectedIndex === -1) {
            if (selectedIndexs.length >= maxSelected) {
              selectedIndexs.shift();
            }

            selectedIndexs.push(index);
            hasChanged = true;
          } else {
            if (selectedIndexs.length > minSelected) {
              selectedIndexs.splice(selectedIndex, 1);
              hasChanged = true;
            }
          }
        } else {
          if (selectedIndex === -1) {
            hasChanged = true;
            selectedIndexs = [index];
          }
        }

        if (hasChanged) {
          onSelected(selectedIndexs);
        }

        return null;
      };

      _this.getSelectors = function () {
        var _this$props2 = _this.props,
            items = _this$props2.items,
            themeColor = _this$props2.themeColor,
            disabled = _this$props2.disabled,
            switchDisabled = _this$props2.switchDisabled,
            maxNumberInRow = _this$props2.maxNumberInRow,
            hideTitleLeastNumber = _this$props2.hideTitleLeastNumber;
        var selectedIndexs = _this.state.selectedIndexs;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        var isHorizontal = itemCount === 2 ? _this.props.isHorizontal : false;
        var hasSeparator = itemCount === 2;
        var newArray = [];
        var index = 0;

        while (index < items.length) {
          newArray.push(items.slice(index, index += maxNumberInRow));
        }

        return newArray.map(function (array, index1) {
          return _react.default.createElement(_reactNative.View, {
            key: index1,
            style: [Styles.selectors, itemCount === 2 && !isHorizontal ? {
              justifyContent: 'space-evenly'
            } : {}]
          }, array.map(function (item, index2) {
            var realIndex = index2 + maxNumberInRow * index1;
            var selected = selectedIndexs.indexOf(realIndex) !== -1;
            var numInOneRow = itemCount > maxNumberInRow ? maxNumberInRow : itemCount;
            var hideTitle = items.findIndex(function (item) {
              return item;
            }) === -1 || numInOneRow >= 5 && _this.context.language !== 'zh' || itemCount >= hideTitleLeastNumber;
            return _react.default.createElement(_react.Fragment, {
              key: index2 + maxNumberInRow * index1
            }, hasSeparator && realIndex > 0 ? _react.default.createElement(_reactNative.View, {
              style: Styles.separator
            }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              horizontal: isHorizontal,
              themeColor: themeColor,
              disabled: disabled || switchDisabled,
              selected: selected,
              title: hideTitle ? '' : item.title,
              icon: item.icon,
              iconSelected: item.iconSelected,
              iconText: item.title || '',
              onPress: function onPress() {
                _this.select(realIndex);
              }
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: _this.props.accessible,
              accessibilityLabel: item.accessibilityLabel,
              accessibilityHint: item.accessibilityHint
            }))));
          }), itemCount > maxNumberInRow && itemCount % maxNumberInRow !== 0 && index1 === parseInt(itemCount / maxNumberInRow) ? Array.apply(null, Array(maxNumberInRow - itemCount % maxNumberInRow)).map(function (item, index) {
            return _react.default.createElement(_reactNative.View, {
              style: {
                opacity: 0
              },
              key: index
            }, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
              sizeLevel: sizeLevel,
              disabled: true
            }, (0, _accessibilityHelper.getAccessibilityConfig)({
              accessible: false
            }))));
          }) : null);
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SelectorWithButton, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : 2;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props4 = this.props,
            title = _this$props4.title,
            subtitle = _this$props4.subtitle,
            items = _this$props4.items,
            hasShadow = _this$props4.hasShadow,
            showSwitch = _this$props4.showSwitch,
            disabled = _this$props4.disabled,
            switchOn = _this$props4.switchOn,
            themeColor = _this$props4.themeColor,
            onSwitch = _this$props4.onSwitch,
            maxNumberInRow = _this$props4.maxNumberInRow,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle,
          ellipsizeMode: "tail",
          numberOfLines: 1
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, {
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }) : null) : null, showSwitch && !switchOn ? alwaysShowSelectors ? _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors()) : null : _react.default.createElement(_reactNative.View, {
          style: [title || subtitle || showSwitch ? Styles.selectorsWithHeader : null, items.length >= maxNumberInRow ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(nextProps, prevState) {
        var selectedIndexsProp = nextProps.initSelectedIndexs;
        var selectedIndexsState = prevState.initSelectedIndexs;

        if ((0, _fns.isSameArrayElements)(selectedIndexsProp, selectedIndexsState)) {
          return null;
        }

        return {
          selectedIndexs: selectedIndexsProp
        };
      }
    }]);
    return SelectorWithButton;
  }(_react.Component);

  exports.default = SelectorWithButton;
  SelectorWithButton.contextType = _configProvider.ConfigContext;
  SelectorWithButton.propTypes = {
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    initSelectedIndexs: _propTypes.default.array,
    onSelected: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    multiple: _propTypes.default.bool,
    minSelected: _propTypes.default.number,
    maxSelected: _propTypes.default.number,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    maxNumberInRow: _propTypes.default.number,
    hideTitleLeastNumber: _propTypes.default.number,
    isHorizontal: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SelectorWithButton.defaultProps = {
    title: '',
    subtitle: '',
    items: [],
    initSelectedIndexs: [0],
    onSelected: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '',
    multiple: false,
    minSelected: 1,
    maxSelected: Infinity,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true,
    maxNumberInRow: 4,
    isHorizontal: true,
    hideTitleLeastNumber: 1000
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)',
      flex: 1
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'flex-start'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23134,[14308,14305,14344,14359,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.NOOP = NOOP;
  exports.log = log;
  exports.isSameArrayElements = isSameArrayElements;
  exports.getType = getType;

  function NOOP() {}

  function log() {}

  function isSameArrayElements(a, b) {
    if (a === b) {
      return true;
    }

    if (!a && b || a && !b) {
      return false;
    }

    if (a && b && a.length !== b.length) {
      return false;
    }

    var _loop = function _loop(i, l) {
      var item = a[i];

      if (b.find(function (n) {
        return n === item;
      }) === undefined) {
        return {
          v: false
        };
      }
    };

    for (var i = 0, l = a.length; i < l; i++) {
      var _ret = _loop(i, l);

      if (typeof _ret === "object") return _ret.v;
    }

    return true;
  }

  function getType(o) {
    return Object.prototype.toString.call(o).slice(8, -1);
  }
},23137,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _containerWithShadowAndSeparator = _$$_REQUIRE(_dependencyMap[13]);

  var _fns = _$$_REQUIRE(_dependencyMap[14]);

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fonts = _$$_REQUIRE(_dependencyMap[16]);

  var _colors = _$$_REQUIRE(_dependencyMap[17]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[18]);

  var SliderWithHeader = function (_Component) {
    (0, _inherits2.default)(SliderWithHeader, _Component);

    function SliderWithHeader() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SliderWithHeader);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SliderWithHeader)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onSlidingChange = function (v) {
        var _this$props = _this.props,
            onSlidingChange = _this$props.onSlidingChange,
            options = _this$props.options,
            min = _this$props.min,
            max = _this$props.max,
            step = _this$props.step;
        var isRange = min !== max && step !== 0;
        onSlidingChange(isRange ? v : options[v]);
      };

      _this.onSlidingComplete = function (v) {
        var _this$props2 = _this.props,
            onSlidingComplete = _this$props2.onSlidingComplete,
            options = _this$props2.options,
            min = _this$props2.min,
            max = _this$props2.max,
            step = _this$props2.step;
        var isRange = min !== max && step !== 0;
        onSlidingComplete(isRange ? v : options[v]);
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props3 = _this.props,
            disabled = _this$props3.disabled,
            showSwitch = _this$props3.showSwitch,
            switchOn = _this$props3.switchOn,
            onSwitch = _this$props3.onSwitch;

        if (disabled || !showSwitch || !onSwitch || actionName !== 'activate') {
          return;
        }

        onSwitch(!switchOn);
      };

      return _this;
    }

    (0, _createClass2.default)(SliderWithHeader, [{
      key: "showSelector",
      value: function showSelector() {
        var _this$props4 = this.props,
            showSwitch = _this$props4.showSwitch,
            switchOn = _this$props4.switchOn,
            alwaysShowSelectors = _this$props4.alwaysShowSelectors;

        if (showSwitch && !switchOn) {
          return !!alwaysShowSelectors;
        } else {
          return true;
        }
      }
    }, {
      key: "minimumTrackTintColor",
      value: function minimumTrackTintColor() {
        var _this$props5 = this.props,
            showSwitch = _this$props5.showSwitch,
            switchOn = _this$props5.switchOn,
            disabled = _this$props5.disabled,
            themeColor = _this$props5.themeColor,
            offColor = _this$props5.offColor;

        if (showSwitch && !switchOn) {
          return (offColor ? offColor : themeColor) || _colors.ColorGreen;
        } else {
          return (disabled && offColor ? offColor : themeColor) || _colors.ColorGreen;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props6 = this.props,
            options = _this$props6.options,
            disabled = _this$props6.disabled,
            switchDisabled = _this$props6.switchDisabled,
            themeColor = _this$props6.themeColor,
            offColor = _this$props6.offColor,
            showSwitch = _this$props6.showSwitch,
            switchOn = _this$props6.switchOn,
            onSwitch = _this$props6.onSwitch,
            initValue = _this$props6.initValue,
            title = _this$props6.title,
            subtitle = _this$props6.subtitle,
            hasShadow = _this$props6.hasShadow,
            min = _this$props6.min,
            max = _this$props6.max,
            step = _this$props6.step,
            contentType = _this$props6.contentType,
            showEndText = _this$props6.showEndText,
            alwaysShowSelectors = _this$props6.alwaysShowSelectors;
        var isRange = min !== max && step !== 0;

        if ((!options || !options.length) && !isRange) {
          return null;
        }

        var initSelectedIndex = options.findIndex(function (option) {
          return option === initValue;
        });
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.ContainerWithShadowAndSeparator : _react.Fragment;
        var opacity = disabled ? 0.3 : 1;
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || subtitle || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityRoles.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: showSwitch ? this.props.accessibilityHint : '',
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        }), {
          accessibilityActions: [{
            name: 'activate'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), title || subtitle ? _react.default.createElement(_reactNative.View, {
          style: [Styles.titleContainer, {
            opacity: opacity
          }]
        }, title ? _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title) : null, title && subtitle ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleSeparator
        }) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
          style: Styles.subtitle
        }, subtitle) : null) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, this.showSelector() ? _react.default.createElement(_reactNative.View, {
          style: [Styles.sliderContainer, title || subtitle || showSwitch ? Styles.sliderContainerWithHeader : null]
        }, _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
          disabled: disabled || showSwitch && switchDisabled,
          containerStyle: Styles.slider,
          options: isRange ? [] : options,
          minimumTrackTintColor: this.minimumTrackTintColor(),
          contentType: contentType,
          showEndText: showEndText,
          value: isRange ? initValue : Math.max(0, initSelectedIndex),
          optionMin: min,
          optionMax: max,
          optionStep: step,
          onValueChange: this.onSlidingChange,
          onSlidingComplete: this.onSlidingComplete
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.sliderAccessibilityLabel,
          accessibilityHint: this.props.sliderAccessibilityHint
        })))) : null));
      }
    }]);
    return SliderWithHeader;
  }(_react.Component);

  exports.default = SliderWithHeader;
  SliderWithHeader.propTypes = {
    options: _propTypes.default.array,
    min: _propTypes.default.number,
    max: _propTypes.default.number,
    step: _propTypes.default.number,
    initValue: _propTypes.default.number,
    onSlidingChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    alwaysShowSelectors: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    offColor: _propTypes.default.any,
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    contentType: _propTypes.default.string,
    showEndText: _propTypes.default.bool,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    sliderAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    sliderAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  SliderWithHeader.defaultProps = {
    options: [],
    min: 0,
    max: 0,
    step: 0,
    initValue: 0,
    onSlidingChange: _fns.log,
    onSlidingComplete: _fns.log,
    disabled: false,
    switchDisabled: false,
    alwaysShowSelectors: false,
    themeColor: '',
    offColor: '#EDEEEF',
    title: '',
    subtitle: '',
    contentType: '',
    showEndText: true,
    showSwitch: false,
    switchOn: true,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    titleSeparator: {
      width: 1,
      height: (0, _sizes.adjustSize)(42),
      backgroundColor: 'rgba(0, 0, 0, 0.3)',
      marginHorizontal: (0, _sizes.adjustSize)(18)
    },
    subtitle: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      color: 'rgba(0, 0, 0, 0.6)'
    },
    sliderContainer: {
      paddingVertical: (0, _sizes.adjustSize)(60)
    },
    sliderContainerWithHeader: {
      paddingTop: 0
    }
  });
},23140,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22450,22897,23086,23137,23068,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SmallNumber = function (_PureComponent) {
    (0, _inherits2.default)(SmallNumber, _PureComponent);

    function SmallNumber() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, SmallNumber);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(SmallNumber)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.offsetX = new _reactNative.Animated.Value(0);
      _this.containerWidth = 0;
      _this.centerWidth = 0;
      _this.centerX = 0;

      _this.onLayoutContainer = function (e) {
        var width = e.nativeEvent.layout.width;
        _this.containerWidth = width;

        if (width && _this.centerWidth) {
          _this.offsetX.setValue(width / 2 - _this.centerWidth / 2 - _this.centerX);
        }
      };

      _this.onLayoutCenter = function (e) {
        var _e$nativeEvent$layout = e.nativeEvent.layout,
            width = _e$nativeEvent$layout.width,
            x = _e$nativeEvent$layout.x;
        _this.centerWidth = width;
        _this.centerX = x;

        if (width && _this.containerWidth) {
          _this.offsetX.setValue(_this.containerWidth / 2 - width / 2 - x);
        }
      };

      _this.getItems = function () {
        var _this$props = _this.props,
            list = _this$props.list,
            themeColor = _this$props.themeColor,
            titleThemeColor = _this$props.titleThemeColor;
        var filtered = list.filter(function (item) {
          return item && item.title !== undefined && item.number !== undefined;
        });
        var total = filtered.length;
        var isOdd = total % 2 === 1;
        var centerIndex = total <= 0 ? 0 : isOdd ? total / 2 - 0.5 : total / 2;
        return filtered.map(function (item, index) {
          var title = item.title,
              number = item.number;
          var theme = item.themeColor || themeColor;
          var titleTheme = item.titleThemeColor || titleThemeColor;
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, index > 0 ? _react.default.createElement(_reactNative.View, {
            style: [Styles.separator, titleTheme ? {
              backgroundColor: titleTheme
            } : null],
            onLayout: centerIndex === index && !isOdd ? _this.onLayoutCenter : null
          }) : null, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: Styles.item,
            onLayout: centerIndex === index && isOdd ? _this.onLayoutCenter : null
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: item.accessibilityLabel
          })), _react.default.createElement(_reactNative.Text, {
            style: [Styles.number, theme ? {
              color: theme
            } : null, isNaN(number) ? {
              fontSize: (0, _sizes.adjustSize)(88)
            } : null]
          }, number), _react.default.createElement(_reactNative.Text, {
            style: [Styles.title, titleTheme ? {
              color: titleTheme
            } : null]
          }, title)));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(SmallNumber, [{
      key: "render",
      value: function render() {
        var list = this.props.list;

        if (!list || !list.length) {
          return null;
        }

        var items = this.getItems();
        var offsetX = this.offsetX;
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container,
          onLayout: this.onLayoutContainer
        }, _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.containerInner, {
            transform: [{
              translateX: offsetX
            }]
          }]
        }, items));
      }
    }]);
    return SmallNumber;
  }(_react.PureComponent);

  exports.default = SmallNumber;
  SmallNumber.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      number: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
      themeColor: _propTypes.default.any,
      titleThemeColor: _propTypes.default.any,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    themeColor: _propTypes.default.any,
    titleThemeColor: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };

  var Styles = _reactNative.StyleSheet.create({
    containerInner: {
      alignItems: 'center',
      flexDirection: 'row',
      justifyContent: 'center'
    },
    separator: {
      width: (0, _sizes.adjustSize)(2.1),
      height: (0, _sizes.adjustSize)(135),
      marginHorizontal: (0, _sizes.adjustSize)(33),
      marginTop: (0, _sizes.adjustSize)(12),
      backgroundColor: 'rgba(0, 0, 0, 1)',
      opacity: 0.2
    },
    item: {
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(36),
      fontFamily: _fonts.FontDefault,
      lineHeight: (0, _sizes.adjustSize)(48),
      color: '#1C2229',
      opacity: 1
    },
    number: {
      fontSize: (0, _sizes.adjustSize)(102),
      fontFamily: 'Helvetica',
      lineHeight: (0, _sizes.adjustSize)(123),
      color: '#1C2229',
      opacity: 0.8
    }
  });
},23143,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNativeLinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var SwitchBgColorsOn = ["#fff", "#f1f1f2"];
  var SwitchBgColorsOff = ["#f1f1f2", "#fff"];
  var MarginTops = [0, (0, _sizes.adjustSize)(240), (0, _sizes.adjustSize)(180), (0, _sizes.adjustSize)(105), (0, _sizes.adjustSize)(90)];
  var Heights = [0, (0, _sizes.adjustSize)(990), (0, _sizes.adjustSize)(852), (0, _sizes.adjustSize)(720), (0, _sizes.adjustSize)(516)];

  var WallSwitch = function (_Component) {
    (0, _inherits2.default)(WallSwitch, _Component);

    function WallSwitch() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, WallSwitch);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(WallSwitch)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.switch = function (index) {
        var onSwitch = _this.props.onSwitch;

        if (typeof onSwitch === 'function') {
          onSwitch(index);
        }
      };

      _this.getItems = function (items) {
        var length = items.length;
        return items.map(function (item, index) {
          var isFirst = index === 0;
          var isLast = index === length - 1;
          var isOn = item.isOn;
          return _react.default.createElement(_reactNativeLinearGradient.default, (0, _extends2.default)({
            key: index,
            style: [Styles.item, isOn ? Styles.itemOn : Styles.itemOff, isFirst ? Styles.itemFirst : null, isLast ? Styles.itemLast : null],
            colors: isOn ? SwitchBgColorsOn : SwitchBgColorsOff
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint,
            accessibilityState: {
              selected: isOn,
              checked: isOn
            }
          })), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            style: {
              width: '100%',
              height: '100%'
            },
            activeOpacity: 0.8,
            onPress: function onPress() {
              _this.switch(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), _react.default.createElement(_reactNative.View, {
            style: Styles.upper
          }, _react.default.createElement(_reactNative.View, {
            style: [Styles.indicator, isOn ? Styles.indicatorOn : Styles.indicatorOff]
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(WallSwitch, [{
      key: "render",
      value: function render() {
        var items = this.props.items;

        if (!items || !items.length) {
          return null;
        }

        var length = items.length;
        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, {
            height: Heights[length],
            marginTop: MarginTops[length]
          }]
        }, this.getItems(items));
      }
    }]);
    return WallSwitch;
  }(_react.Component);

  exports.default = WallSwitch;
  WallSwitch.propTypes = {
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      isOn: _propTypes.default.bool,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onSwitch: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  WallSwitch.defaultProps = {
    items: [],
    onSwitch: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(30),
      flexDirection: 'row',
      backgroundColor: '#CDCED0',
      borderRadius: (0, _sizes.adjustSize)(30),
      borderWidth: (0, _sizes.adjustSize)(6),
      borderColor: '#CDCED0',
      overflow: 'hidden'
    },
    item: {
      flex: 1,
      backgroundColor: '#F7F7F7',
      marginHorizontal: (0, _sizes.adjustSize)(3),
      alignItems: 'center'
    },
    itemOn: {
      marginTop: (0, _sizes.adjustSize)(30),
      paddingTop: (0, _sizes.adjustSize)(90),
      marginBottom: 0,
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    itemOff: {
      marginTop: 0,
      paddingTop: (0, _sizes.adjustSize)(120),
      marginBottom: (0, _sizes.adjustSize)(30),
      paddingBottom: (0, _sizes.adjustSize)(30)
    },
    itemFirst: {
      borderTopLeftRadius: (0, _sizes.adjustSize)(30),
      borderBottomLeftRadius: (0, _sizes.adjustSize)(30),
      borderTopRightRadius: 1,
      borderBottomRightRadius: 1
    },
    itemLast: {
      borderTopLeftRadius: 1,
      borderBottomLeftRadius: 1,
      borderTopRightRadius: (0, _sizes.adjustSize)(30),
      borderBottomRightRadius: (0, _sizes.adjustSize)(30)
    },
    upper: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(30),
      alignItems: 'center'
    },
    indicator: {
      width: (0, _sizes.adjustSize)(84),
      height: (0, _sizes.adjustSize)(6),
      marginTop: (0, _sizes.adjustSize)(60)
    },
    indicatorOn: {
      backgroundColor: '#3CB3F7'
    },
    indicatorOff: {
      backgroundColor: '#A2AFC1'
    }
  });
},23146,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,14299,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _sizes = _$$_REQUIRE(_dependencyMap[10]);

  var _selectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _containerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var DoubleSelectors = function (_Component) {
    (0, _inherits2.default)(DoubleSelectors, _Component);

    function DoubleSelectors() {
      (0, _classCallCheck2.default)(this, DoubleSelectors);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DoubleSelectors).apply(this, arguments));
    }

    (0, _createClass2.default)(DoubleSelectors, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            subtitle = _this$props.subtitle,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            secondShow = _this$props.secondShow,
            secondDisabled = _this$props.secondDisabled,
            first = _this$props.first,
            second = _this$props.second,
            hasShadow = _this$props.hasShadow;
        var Wrap = hasShadow ? _containerWithShadowAndSeparator.default : _react.Fragment;
        return _react.default.createElement(Wrap, {
          separatorStyle: Styles.separator
        }, _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          title: title,
          subtitle: subtitle,
          disabled: disabled
        }, first)), secondShow ? _react.default.createElement(_selectorWithButton.default, (0, _extends2.default)({
          hasShadow: false,
          themeColor: themeColor,
          disabled: secondDisabled || disabled
        }, second)) : null);
      }
    }]);
    return DoubleSelectors;
  }(_react.Component);

  exports.default = DoubleSelectors;
  DoubleSelectors.defaultProps = {
    title: '',
    subtitle: '',
    disabled: false,
    secondShow: true,
    secondDisabled: true,
    first: {
      items: []
    },
    second: {
      items: []
    },
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    separator: {
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23149,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,23068,23152,23086]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "SelectorWithButton", {
    enumerable: true,
    get: function get() {
      return _SelectorWithButton.default;
    }
  });

  var _SelectorWithButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));
},23152,[14305,23134]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fns = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var SourceCurtainPole = _$$_REQUIRE(_dependencyMap[14]);

  var SourceCurtainLight = _$$_REQUIRE(_dependencyMap[15]);

  var SourceCurtainDark = _$$_REQUIRE(_dependencyMap[16]);

  var SourceCurtainBg = _$$_REQUIRE(_dependencyMap[17]);

  var Width858 = (0, _sizes.adjustSize)(858);
  var Width429 = (0, _sizes.adjustSize)(429);
  var Width108 = (0, _sizes.adjustSize)(108);

  function getCurrentValue(type, isLeft, lastValue, moveX) {
    var min = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    var max = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 100;
    var diffValue = 100 / (type === 0 ? Width429 : Width858) * moveX;
    var value = lastValue + (isLeft ? -1 : 1) * diffValue;
    return Math.min(max, Math.max(min, value));
  }

  var Curtain = function (_Component) {
    (0, _inherits2.default)(Curtain, _Component);

    function Curtain() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, Curtain);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Curtain)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.currValue = 0;
      _this.lastValue = 0;
      _this.value = new _reactNative.Animated.Value(0);
      _this.leftX = new _reactNative.Animated.Value(0);
      _this.rightX = new _reactNative.Animated.Value(0);

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var onValueChange = _this.props.onValueChange;
        var targetValue = _this.lastValue;

        switch (actionName) {
          case 'increment':
            targetValue += 10;
            break;

          case 'decrement':
            targetValue -= 10;
            break;
        }

        targetValue = Math.min(100, Math.max(0, targetValue));

        _this.value.setValue(targetValue);

        _this.lastValue = targetValue;
        onValueChange(targetValue);
      };

      return _this;
    }

    (0, _createClass2.default)(Curtain, [{
      key: "animateToPosition",
      value: function animateToPosition(position) {
        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;

        if (isNaN(position) || !isFinite(position)) {
          return;
        }

        this.stopAnimation();
        var currValue = this.currValue;
        this.aniPosition = _reactNative.Animated.timing(this.value, {
          toValue: position,
          duration: Math.abs(currValue - position) * duration,
          easing: _reactNative.Easing.inOut(_reactNative.Easing.linear)
        }).start();
      }
    }, {
      key: "stopAnimation",
      value: function stopAnimation() {
        this.aniPosition && this.aniPosition.stop();
      }
    }, {
      key: "initPanResponder",
      value: function initPanResponder() {
        this.panResponderLeft = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.leftX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
        this.panResponderRight = _reactNative.PanResponder.create({
          onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {
            return true;
          },
          onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {
            return true;
          },
          onPanResponderGrant: _fns.log,
          onPanResponderMove: _reactNative.Animated.event([null, {
            dx: this.rightX
          }]),
          onPanResponderRelease: this.touchEnd.bind(this),
          onPanResponderTerminate: this.touchEnd.bind(this)
        });
      }
    }, {
      key: "touchEnd",
      value: function touchEnd() {
        this.lastValue = this.currValue;
        this.props.onValueChange(this.lastValue);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        var props = this.props;
        this.lastValue = nextProps.position;

        if (nextProps.type !== props.type) {
          this.initPanResponder(nextProps.type);
        }

        if (nextProps.position !== props.position) {
          this.animateToPosition(nextProps.position);
        }
      }
    }, {
      key: "UNSAFE_componentWillMount",
      value: function UNSAFE_componentWillMount() {
        var _this2 = this;

        this.leftX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, true, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.rightX.addListener(function (e) {
          var currValue = getCurrentValue(_this2.props.type, false, _this2.lastValue, e.value);

          _this2.animateToPosition(currValue, 0);

          _this2.props.onValueChanging(currValue);
        });
        this.initPanResponder(this.props.type);
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this3 = this;

        this.value.addListener(function (_ref2) {
          var value = _ref2.value;
          _this3.currValue = value;
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.stopAnimation();
      }
    }, {
      key: "getCurtains",
      value: function getCurtains() {
        var type = this.props.type;
        var ret = [];
        var l = type === 0 ? 7 : 13;

        for (var i = 0; i < l; i++) {
          ret.push(_react.default.createElement(_reactNative.Image, {
            key: String(i),
            style: Styles.curtainSingle,
            source: i % 2 === 0 ? SourceCurtainDark : SourceCurtainLight
          }));
        }

        return ret;
      }
    }, {
      key: "render",
      value: function render() {
        var type = this.props.type;
        var value = this.value;
        var curtains = this.getCurtains();
        var width = value.interpolate({
          inputRange: [0, 100],
          outputRange: type === 0 ? [Width429, Width108] : [Width858, Width108]
        });
        return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.container
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
          accessibilityLabel: this.props.accessibilityLabel || this.props.position + "%",
          accessibilityHint: this.props.accessibilityHint
        }), {
          accessibilityActions: [{
            name: 'increment'
          }, {
            name: 'decrement'
          }],
          onAccessibilityAction: this.onAccessibilityAction
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.bg,
          source: SourceCurtainBg
        }), _react.default.createElement(_reactNative.Image, {
          style: Styles.pole,
          source: SourceCurtainPole
        }), _react.default.createElement(_reactNative.View, {
          style: Styles.curtains
        }, [0, 1].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderLeft.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainLeft, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        })))), [0, 2].indexOf(type) === -1 ? null : _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: Styles.curtainWrap
        }, this.panResponderRight.panHandlers, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), _react.default.createElement(_reactNative.Animated.View, {
          style: [Styles.curtain, Styles.curtainRight, {
            width: width
          }]
        }, curtains, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtn
        }, _react.default.createElement(_reactNative.View, {
          style: Styles.curtainBtnInner
        }))))));
      }
    }]);
    return Curtain;
  }(_react.Component);

  exports.default = Curtain;
  Curtain.propTypes = {
    type: _propTypes.default.oneOf([0, 1, 2]),
    position: _propTypes.default.number,
    onValueChanging: _propTypes.default.func,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Curtain.defaultProps = {
    type: 0,
    position: 0,
    onValueChanging: _fns.log,
    onValueChange: _fns.log
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      alignItems: 'center',
      marginTop: (0, _sizes.adjustSize)(249),
      paddingBottom: (0, _sizes.adjustSize)(60)
    },
    bg: {
      position: 'absolute',
      left: '50%',
      marginLeft: (0, _sizes.adjustSize)(-540),
      width: (0, _sizes.adjustSize)(1080),
      height: (0, _sizes.adjustSize)(879),
      resizeMode: 'contain'
    },
    pole: {
      width: (0, _sizes.adjustSize)(882),
      height: (0, _sizes.adjustSize)(21),
      resizeMode: 'contain'
    },
    curtains: {
      flexDirection: 'row',
      justifyContent: 'space-between',
      width: (0, _sizes.adjustSize)(858)
    },
    curtainWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtain: {
      position: 'absolute',
      height: (0, _sizes.adjustSize)(858),
      flexDirection: 'row',
      overflow: 'hidden'
    },
    curtainSingle: {
      flex: 1,
      height: (0, _sizes.adjustSize)(858)
    },
    curtainLeft: {
      left: 0
    },
    curtainRight: {
      right: 0,
      transform: [{
        scaleX: -1
      }]
    },
    curtainBtn: {
      position: 'absolute',
      width: (0, _sizes.adjustSize)(120),
      height: (0, _sizes.adjustSize)(120),
      top: '50%',
      marginTop: (0, _sizes.adjustSize)(-60),
      borderRadius: (0, _sizes.adjustSize)(60),
      right: 0,
      marginRight: (0, _sizes.adjustSize)(-60),
      justifyContent: 'center',
      backgroundColor: '#fff'
    },
    curtainBtnInner: {
      width: (0, _sizes.adjustSize)(9),
      height: (0, _sizes.adjustSize)(48),
      borderRadius: (0, _sizes.adjustSize)(6),
      backgroundColor: '#5898FF',
      marginLeft: (0, _sizes.adjustSize)(30)
    }
  });
},23155,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23137,22420,23158,23161,23164,23167]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 294,
    "height": 7,
    "scales": [2, 3],
    "hash": "5c656ab1687db8936983a7210b3a4118",
    "name": "curtain-pole",
    "type": "png"
  });
},23158,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "2219fcc0db10734da3173b657bcc7764",
    "name": "curtain-light",
    "type": "png"
  });
},23161,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 22,
    "height": 286,
    "scales": [2, 3],
    "hash": "11212d789dc6f34a86845319d96fa8db",
    "name": "curtain-dark",
    "type": "png"
  });
},23164,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/modules/resources/images",
    "width": 360,
    "height": 293,
    "scales": [2, 3],
    "hash": "0267ff3dcfca2c2caf9e5a5d3b30c1f4",
    "name": "curtain-bg",
    "type": "png"
  });
},23167,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _Radio = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11]));

  var _sizes = _$$_REQUIRE(_dependencyMap[12]);

  var _fonts = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var CurtainStyle = function (_Component) {
    (0, _inherits2.default)(CurtainStyle, _Component);

    function CurtainStyle() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, CurtainStyle);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(CurtainStyle)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onAccessibilityAction = function (_ref, id) {
        var actionName = _ref.nativeEvent.actionName;

        switch (actionName) {
          case 'activate':
            _this.onCheckChange(id);

            break;
        }
      };

      _this.onCheckChange = function (id) {
        var onValueChange = _this.props.onValueChange;

        if (typeof onValueChange === 'function') {
          onValueChange(id);
        }
      };

      return _this;
    }

    (0, _createClass2.default)(CurtainStyle, [{
      key: "getItems",
      value: function getItems() {
        var _this2 = this;

        var _this$props = this.props,
            _this$props$icons = _this$props.icons,
            icons = _this$props$icons === undefined ? [] : _this$props$icons,
            _this$props$titles = _this$props.titles,
            titles = _this$props$titles === undefined ? [] : _this$props$titles,
            _this$props$ids = _this$props.ids,
            ids = _this$props$ids === undefined ? [] : _this$props$ids,
            checkedId = _this$props.checkedId,
            disabled = _this$props.disabled,
            _this$props$accessibi = _this$props.accessibilityLabels,
            accessibilityLabels = _this$props$accessibi === undefined ? [] : _this$props$accessibi,
            _this$props$accessibi2 = _this$props.accessibilityHints,
            accessibilityHints = _this$props$accessibi2 === undefined ? [] : _this$props$accessibi2;
        return titles.map(function (_, index) {
          var title = titles[index];
          var icon = icons[index];
          var id = ids[index];
          return title && icon ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            key: index,
            style: Styles.item
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.checkbox,
            accessibilityLabel: accessibilityLabels[index],
            accessibilityHint: accessibilityHints[index],
            accessibilityState: {
              selected: checkedId === id,
              checked: checkedId === id,
              disabled: disabled
            }
          }), {
            accessibilityActions: [{
              name: 'activate'
            }],
            onAccessibilityAction: function onAccessibilityAction(e) {
              _this2.onAccessibilityAction(e, id);
            }
          }), _react.default.createElement(_reactNative.Image, {
            style: Styles.icon,
            source: icon
          }), _react.default.createElement(_reactNative.Text, {
            style: Styles.title
          }, title), _react.default.createElement(_Radio.default, {
            id: Number(id),
            disabled: disabled,
            isChecked: checkedId === id,
            changeCheck: _this2.onCheckChange,
            bigCircleStyle: {
              width: (0, _sizes.adjustSize)(60),
              height: (0, _sizes.adjustSize)(60),
              borderWidth: (0, _sizes.adjustSize)(12)
            },
            checkedBigCircleStyle: {
              borderColor: '#f0f0f0',
              borderColorChecked: '#32BAC0'
            },
            smallCircleBg: "#fff"
          })) : null;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var items = this.getItems();
        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, items);
      }
    }]);
    return CurtainStyle;
  }(_react.Component);

  exports.default = CurtainStyle;
  CurtainStyle.propTypes = {
    icons: _propTypes.default.array,
    titles: _propTypes.default.arrayOf(_propTypes.default.string),
    ids: _propTypes.default.array,
    checkedId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    disabled: _propTypes.default.bool,
    onValueChange: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabels: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityLabel),
    accessibilityHints: _propTypes.default.arrayOf(_accessibilityHelper.AccessibilityPropTypes.accessibilityHint)
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {},
    item: {
      marginTop: (0, _sizes.adjustSize)(30),
      marginHorizontal: (0, _sizes.adjustSize)(30),
      paddingLeft: (0, _sizes.adjustSize)(57),
      paddingRight: (0, _sizes.adjustSize)(60),
      paddingVertical: (0, _sizes.adjustSize)(54),
      flexDirection: 'row',
      alignItems: 'center',
      backgroundColor: '#fff'
    },
    icon: {
      width: (0, _sizes.adjustSize)(312),
      height: (0, _sizes.adjustSize)(306),
      resizeMode: 'contain',
      marginRight: (0, _sizes.adjustSize)(57)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(45),
      color: '#000',
      flex: 1
    }
  });
},23170,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22417,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _fns = _$$_REQUIRE(_dependencyMap[13]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[14]);

  var PrimeButton = function (_Component) {
    (0, _inherits2.default)(PrimeButton, _Component);

    function PrimeButton() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, PrimeButton);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PrimeButton)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.onPress = function () {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick();
        }
      };

      return _this;
    }

    (0, _createClass2.default)(PrimeButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            title = _this$props.title,
            themeColor = _this$props.themeColor,
            textColor = _this$props.textColor,
            disabled = _this$props.disabled;

        if (!title) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
          style: [Styles.btn, themeColor ? {
            backgroundColor: themeColor,
            borderColor: themeColor
          } : null],
          onPress: this.onPress,
          disabled: disabled
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: disabled
          }
        })), _react.default.createElement(_reactNative.Text, {
          style: [Styles.title, textColor ? {
            color: textColor
          } : null]
        }, title)));
      }
    }]);
    return PrimeButton;
  }(_react.Component);

  exports.default = PrimeButton;
  PrimeButton.propTypes = {
    title: _propTypes.default.string,
    themeColor: _propTypes.default.any,
    textColor: _propTypes.default.any,
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  PrimeButton.defaultProps = {
    title: '',
    themeColor: '',
    textColor: '',
    onClick: _fns.NOOP,
    disabled: false
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    btn: {
      height: (0, _sizes.adjustSize)(126),
      justifyContent: 'center',
      borderWidth: Math.min(1, (0, _sizes.adjustSize)(1.5)),
      borderColor: 'rgba(0, 0, 0, 0.15)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      textAlign: 'center',
      color: '#000'
    }
  });
},23173,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _fonts = _$$_REQUIRE(_dependencyMap[12]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[13]);

  var isAndroid = _reactNative.Platform.OS === 'android';

  var QAList = function (_Component) {
    (0, _inherits2.default)(QAList, _Component);

    function QAList() {
      (0, _classCallCheck2.default)(this, QAList);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QAList).apply(this, arguments));
    }

    (0, _createClass2.default)(QAList, [{
      key: "getList",
      value: function getList() {
        var _this = this;

        var list = this.props.list;

        if (!list || !list.length) {
          return [];
        }

        return list.map(function (item, index) {
          var title = item.title,
              text = item.text;
          return _react.default.createElement(_reactNative.View, {
            key: String(index),
            style: Styles.item
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.title
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.titleAccessibilityLabel || title,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), title || ''), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            style: Styles.text
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.textAccessibilityLabel || text,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
          })), text || '', isAndroid ? '\n' : ''));
        });
      }
    }, {
      key: "render",
      value: function render() {
        var list = this.getList();

        if (!list || !list.length) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, list);
      }
    }]);
    return QAList;
  }(_react.Component);

  exports.default = QAList;
  QAList.propTypes = {
    list: _propTypes.default.arrayOf(_propTypes.default.shape({
      title: _propTypes.default.string,
      text: _propTypes.default.string,
      textAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      titleAccessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
    })),
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible
  };
  QAList.defaultProps = {
    list: []
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    item: {
      marginBottom: (0, _sizes.adjustSize)(45)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(36),
      fontWeight: '600',
      color: '#4C4C4C'
    },
    text: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(42),
      lineHeight: (0, _sizes.adjustSize)(78),
      color: '#7F7F7F',
      marginTop: (0, _sizes.adjustSize)(9)
    }
  });
},23176,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,23071,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _CircleButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _ContainerWithShadowAndSeparator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _sizes = _$$_REQUIRE(_dependencyMap[15]);

  var _fns = _$$_REQUIRE(_dependencyMap[16]);

  var _fonts = _$$_REQUIRE(_dependencyMap[17]);

  var _colors = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var MultiButtons = function (_Component) {
    (0, _inherits2.default)(MultiButtons, _Component);

    function MultiButtons() {
      var _getPrototypeOf2;

      var _this;

      (0, _classCallCheck2.default)(this, MultiButtons);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(MultiButtons)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        activeIndex: -1
      };

      _this.onClick = function (index) {
        var onClick = _this.props.onClick;

        if (typeof onClick === 'function') {
          onClick(index);
        }
      };

      _this.getSelectors = function () {
        var _this$props = _this.props,
            items = _this$props.items,
            themeColor = _this$props.themeColor,
            disabled = _this$props.disabled,
            switchDisabled = _this$props.switchDisabled;
        var itemCount = items.length;

        var sizeLevel = _this.getSizeLevel(items);

        return items.map(function (item, index) {
          var isHorizontal = itemCount === 2;
          var hasSeparator = isHorizontal;
          var hideTitle = itemCount >= 5 || items.findIndex(function (item) {
            return item && item.icon;
          }) === -1 || itemCount >= 3 && _this.context.language !== 'zh';
          return _react.default.createElement(_react.Fragment, {
            key: index
          }, hasSeparator && index > 0 ? _react.default.createElement(_reactNative.View, {
            style: Styles.separator
          }) : null, _react.default.createElement(_CircleButton.default, (0, _extends2.default)({
            titleIsTouchable: _this.props.titleIsTouchable,
            selected: _this.props.activeIndex === index,
            showHighlight: _this.props.activeIndex === -1,
            sizeLevel: sizeLevel,
            horizontal: isHorizontal,
            themeColor: themeColor,
            disabled: disabled || switchDisabled,
            title: hideTitle ? '' : item.title,
            icon: item.icon,
            iconSelected: item.iconSelected,
            iconText: item.title || '',
            onPress: function onPress() {
              _this.onClick(index);
            }
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this.props.accessible,
            accessibilityLabel: item.accessibilityLabel,
            accessibilityHint: item.accessibilityHint
          }))));
        });
      };

      return _this;
    }

    (0, _createClass2.default)(MultiButtons, [{
      key: "getSizeLevel",
      value: function getSizeLevel(items) {
        var itemCount = items.length;
        return itemCount <= 2 ? 0 : itemCount === 3 ? 1 : itemCount === 4 ? 2 : 3;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props2 = this.props,
            title = _this$props2.title,
            items = _this$props2.items,
            hasShadow = _this$props2.hasShadow,
            showSwitch = _this$props2.showSwitch,
            disabled = _this$props2.disabled,
            switchOn = _this$props2.switchOn,
            themeColor = _this$props2.themeColor,
            onSwitch = _this$props2.onSwitch;

        if (!items || !items.length) {
          return null;
        }

        var Wrap = hasShadow ? _ContainerWithShadowAndSeparator.default : _react.Fragment;
        var sizeLevel = this.getSizeLevel(items);
        return _react.default.createElement(Wrap, null, _react.default.createElement(_reactNative.View, {
          style: Styles.container
        }, title || showSwitch ? _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [Styles.header, disabled ? {
            opacity: 0.3
          } : null]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: showSwitch ? _accessibilityHelper.AccessibilityRoles.switch : _accessibilityHelper.AccessibilityPropTypes.text,
          accessibilityLabel: this.props.accessibilityLabel,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: showSwitch ? {
            disabled: disabled,
            checked: switchOn
          } : {
            disabled: disabled
          }
        })), title ? _react.default.createElement(_reactNative.View, {
          style: Styles.titleContainer
        }, _react.default.createElement(_reactNative.Text, {
          style: Styles.title
        }, title)) : null, showSwitch ? _react.default.createElement(_Switch.default, (0, _extends2.default)({
          disabled: disabled,
          value: switchOn,
          onTintColor: themeColor || _colors.ColorGreen,
          onValueChange: onSwitch
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        }))) : null) : null, _react.default.createElement(_reactNative.View, {
          style: [Styles.selectors, title || showSwitch ? Styles.selectorsWithHeader : null, items.length >= 4 ? null : [Styles.selectorsPadding0, Styles.selectorsPadding1, Styles.selectorsPadding2, Styles.selectorsPadding3][sizeLevel]]
        }, this.getSelectors())));
      }
    }]);
    return MultiButtons;
  }(_react.Component);

  exports.default = MultiButtons;
  MultiButtons.contextType = _configProvider.ConfigContext;
  MultiButtons.propTypes = {
    title: _propTypes.default.string,
    activeIndex: _propTypes.default.number,
    items: _propTypes.default.arrayOf(_propTypes.default.shape({
      icon: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      iconSelected: _propTypes.default.oneOf([_propTypes.default.number, _propTypes.default.object]).required,
      title: _propTypes.default.string,
      accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
      accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
    })),
    onClick: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    switchDisabled: _propTypes.default.bool,
    themeColor: _propTypes.default.any,
    showSwitch: _propTypes.default.bool,
    switchOn: _propTypes.default.bool,
    titleIsTouchable: _propTypes.default.bool,
    onSwitch: _propTypes.default.func,
    hasShadow: _propTypes.default.bool,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  MultiButtons.defaultProps = {
    title: '',
    activeIndex: -1,
    items: [],
    onClick: _fns.NOOP,
    disabled: false,
    switchDisabled: false,
    themeColor: '',
    showSwitch: false,
    switchOn: true,
    titleIsTouchable: false,
    onSwitch: _fns.log,
    hasShadow: true
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      backgroundColor: '#fff',
      paddingHorizontal: (0, _sizes.adjustSize)(60)
    },
    header: {
      flexDirection: 'row',
      justifyContent: 'space-between'
    },
    titleContainer: {
      flex: 1,
      height: (0, _sizes.adjustSize)(156),
      flexDirection: 'row',
      alignItems: 'center'
    },
    title: {
      fontSize: (0, _sizes.adjustSize)(42),
      fontFamily: _fonts.FontDefault,
      color: '#000'
    },
    selectors: {
      paddingVertical: (0, _sizes.adjustSize)(60),
      flexDirection: 'row',
      justifyContent: 'space-between',
      alignItems: 'center'
    },
    selectorsWithHeader: {
      paddingTop: 0
    },
    selectorsPadding0: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding1: {
      paddingHorizontal: (0, _sizes.adjustSize)(78)
    },
    selectorsPadding2: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorsPadding3: {
      paddingHorizontal: (0, _sizes.adjustSize)(0)
    },
    selectorWithHeader: {
      paddingTop: 0
    },
    separator: {
      width: 1,
      height: (0, _sizes.adjustSize)(120),
      backgroundColor: 'rgba(0, 0, 0, 0.15)',
      marginHorizontal: (0, _sizes.adjustSize)(60)
    }
  });
},23179,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,22426,22450,23095,23089,23068,23137,23071,23074,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = Consumable;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[3]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _PrimeButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _colors = _$$_REQUIRE(_dependencyMap[6]);

  var _fonts = _$$_REQUIRE(_dependencyMap[7]);

  var _sizes = _$$_REQUIRE(_dependencyMap[8]);

  var _fns = _$$_REQUIRE(_dependencyMap[9]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[10]);

  function Consumable(props) {
    var title = props.title,
        titleColor = props.titleColor,
        subtitle = props.subtitle,
        subtitleColor = props.subtitleColor,
        reset = props.reset,
        buy = props.buy,
        icon = props.icon,
        onBuy = props.onBuy,
        onReset = props.onReset;
    return _react.default.createElement(_reactNative.View, {
      style: Styles.container
    }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
      style: Styles.content
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.text
    })), icon ? _react.default.createElement(_reactNative.Image, {
      style: Styles.imageWrap,
      source: icon
    }) : null, title ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.title, titleColor ? {
        color: titleColor
      } : null]
    }, title) : null, subtitle ? _react.default.createElement(_reactNative.Text, {
      style: [Styles.subtitle, subtitleColor ? {
        color: subtitleColor
      } : null]
    }, subtitle) : null), buy && reset ? _react.default.createElement(_reactNative.View, {
      style: Styles.buttons
    }, _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: Styles.buttonWrap,
      activeOpacity: 0.8,
      onPress: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, buy)), _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
      style: [Styles.buttonWrap, {
        borderLeftWidth: _reactNative.StyleSheet.hairlineWidth
      }],
      activeOpacity: 0.8,
      onPress: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    })), _react.default.createElement(_reactNative.Text, {
      style: Styles.button
    }, reset))) : buy ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: buy,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onBuy
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.buyAccessibilityHint
    }))) : reset ? _react.default.createElement(_PrimeButton.default, (0, _extends2.default)({
      title: reset,
      themeColor: _colors.ColorGreen,
      textColor: "#fff",
      onClick: onReset
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: _accessibilityHelper.AccessibilityRoles.button,
      accessibilityHint: props.resetAccessibilityHint
    }))) : null);
  }

  Consumable.propTypes = {
    title: _propTypes.default.string,
    titleColor: _propTypes.default.any,
    subtitle: _propTypes.default.string,
    subtitleColor: _propTypes.default.any,
    reset: _propTypes.default.string,
    buy: _propTypes.default.string,
    icon: _propTypes.default.any,
    onBuy: _propTypes.default.func,
    onReset: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    resetAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    buyAccessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint
  };
  Consumable.defaultProps = {
    title: '',
    titleColor: '',
    subtitle: '',
    subtitleColor: '',
    reset: '',
    buy: '',
    icon: null,
    onBuy: _fns.NOOP,
    onReset: _fns.NOOP
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      flex: 1
    },
    content: {
      flex: 1,
      marginTop: (0, _sizes.adjustSize)(144)
    },
    imageWrap: {
      width: (0, _sizes.adjustSize)(684),
      height: (0, _sizes.adjustSize)(1056),
      alignSelf: 'center',
      resizeMode: 'contain',
      marginBottom: (0, _sizes.adjustSize)(75)
    },
    title: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(60),
      fontWeight: '700',
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      marginBottom: (0, _sizes.adjustSize)(6)
    },
    subtitle: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(54),
      color: '#000',
      alignSelf: 'center',
      marginHorizontal: (0, _sizes.adjustSize)(72)
    },
    buttons: {
      flexDirection: 'row',
      marginHorizontal: (0, _sizes.adjustSize)(72),
      borderWidth: _reactNative.StyleSheet.hairlineWidth,
      borderColor: 'rgba(0, 0, 0, 0.2)',
      borderRadius: (0, _sizes.adjustSize)(15)
    },
    buttonWrap: {
      flex: 1,
      height: (0, _sizes.adjustSize)(144),
      justifyContent: 'center',
      alignItems: 'center',
      borderWidth: 0,
      borderColor: 'rgba(0, 0, 0, 0.2)'
    },
    button: {
      fontFamily: _fonts.FontDefault,
      fontSize: (0, _sizes.adjustSize)(39),
      color: '#4C4C4C'
    },
    normalButton: {
      marginHorizontal: 0,
      flex: 1
    }
  });
},23182,[14305,14344,10297,10033,10318,23173,23074,23071,23068,23137,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[9]);

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _sizes = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var ImageHeader = function (_Component) {
    (0, _inherits2.default)(ImageHeader, _Component);

    function ImageHeader() {
      (0, _classCallCheck2.default)(this, ImageHeader);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageHeader).apply(this, arguments));
    }

    (0, _createClass2.default)(ImageHeader, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            icon = _this$props.icon,
            iconStyle = _this$props.iconStyle,
            containerStyle = _this$props.containerStyle;

        if (!icon) {
          return null;
        }

        return _react.default.createElement(_reactNative.View, {
          style: [Styles.container, containerStyle]
        }, _react.default.createElement(_reactNative.Image, (0, _extends2.default)({
          style: [Styles.icon, iconStyle],
          source: icon
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityRole: _accessibilityHelper.AccessibilityRoles.image,
          accessibilityLabel: this.props.accessibilityLabel
        }))));
      }
    }]);
    return ImageHeader;
  }(_react.Component);

  exports.default = ImageHeader;
  ImageHeader.propTypes = {
    icon: _propTypes.default.any,
    iconStyle: _propTypes.default.any,
    containerStyle: _propTypes.default.any,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel
  };

  var Styles = _reactNative.StyleSheet.create({
    container: {
      paddingTop: (0, _sizes.adjustSize)(210),
      paddingBottom: (0, _sizes.adjustSize)(63),
      alignSelf: 'center',
      alignItems: 'center'
    },
    icon: {
      width: (0, _sizes.adjustSize)(540),
      height: (0, _sizes.adjustSize)(540)
    }
  });
},23185,[14308,14305,14344,14320,14323,14371,14377,14386,10297,10033,10318,23068,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "91d5bce9ca8be225bb2b053f4dc68ae6",
    "name": "record_n_dark",
    "type": "png"
  });
},23188,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "16f376276d72894454290db6b390e48b",
    "name": "record_p_dark",
    "type": "png"
  });
},23191,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "1b31138db705ad4f249356650ef77801",
    "name": "record_d_dark",
    "type": "png"
  });
},23194,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7086650f0de3e98e4bbe2ffe92d605b7",
    "name": "record_n_light",
    "type": "png"
  });
},23197,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8839aec54e1ba9da8b316b117dcb4957",
    "name": "record_p_light",
    "type": "png"
  });
},23200,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a510dc8a461e519c73a775bf00221200",
    "name": "record_d_light",
    "type": "png"
  });
},23203,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_dark",
    "type": "png"
  });
},23206,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 86,
    "height": 86,
    "scales": [2, 3],
    "hash": "799ff3d06b999ba716d765af25f4e91a",
    "name": "loading_empty_light",
    "type": "png"
  });
},23209,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  Object.defineProperty(exports, "PopButton", {
    enumerable: true,
    get: function get() {
      return _PopButton.PopButton;
    }
  });
  Object.defineProperty(exports, "ProgressButton", {
    enumerable: true,
    get: function get() {
      return _ProgressButton.default;
    }
  });

  var _PopButton = _$$_REQUIRE(_dependencyMap[1]);

  var _ProgressButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));
},23212,[14305,23215,23218]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.PopButton = PopButton;
  exports.default = exports.COLORTYPE = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[7]);

  var _font = _$$_REQUIRE(_dependencyMap[8]);

  var COLORTYPE = {
    BLUELAYERWHITE: 'blueLayerWhite',
    GRAYLAYERBLACK: 'grayLayerBlack',
    GRAYLAYERBLUE: 'grayLayerBlue'
  };
  exports.COLORTYPE = COLORTYPE;
  Object.freeze(COLORTYPE);

  function PopButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4, _context$theme5, _context$theme6, _context$theme7, _context$theme8, _context$theme9, _context$theme10, _context$theme11, _context$theme12, _context$theme13, _context$theme14, _context$theme15, _context$theme16, _context$theme17, _context$theme18;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var buttonStyle;
    var bgColorNormal;
    var bgColorPressed;
    var titleS;
    var titleC;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        titleS = styles.smallTitle;
        titleC = (_context$theme = context.theme) == null ? undefined : _context$theme.colorPrimary;
        bgColorNormal = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        bgColorPressed = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGreenOpaPres;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        titleS = styles.mediumTitle;
        titleC = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorToast;
        bgColorNormal = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
        bgColorPressed = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
        break;

      default:
        buttonStyle = styles.regularButton;
        titleS = styles.regularTitle;
        titleC = (_context$theme7 = context.theme) == null ? undefined : _context$theme7.colorWhite2;
        bgColorNormal = (_context$theme8 = context.theme) == null ? undefined : _context$theme8.colorBtnGreenNor;
        bgColorPressed = (_context$theme9 = context.theme) == null ? undefined : _context$theme9.colorBtnGreenPres;
        break;
    }

    if (props.colorType) {
      switch (props.colorType) {
        case COLORTYPE.BLUELAYERWHITE:
          titleC = (_context$theme10 = context.theme) == null ? undefined : _context$theme10.colorWhite2;
          bgColorNormal = (_context$theme11 = context.theme) == null ? undefined : _context$theme11.colorBtnGreenNor;
          bgColorPressed = (_context$theme12 = context.theme) == null ? undefined : _context$theme12.colorBtnGreenPres;
          break;

        case COLORTYPE.GRAYLAYERBLACK:
          titleC = (_context$theme13 = context.theme) == null ? undefined : _context$theme13.colorToast;
          bgColorNormal = (_context$theme14 = context.theme) == null ? undefined : _context$theme14.colorBtnGrayNor;
          bgColorPressed = (_context$theme15 = context.theme) == null ? undefined : _context$theme15.colorBtnGrayPres;
          break;

        case COLORTYPE.GRAYLAYERBLUE:
          titleC = (_context$theme16 = context.theme) == null ? undefined : _context$theme16.colorPrimary;
          bgColorNormal = (_context$theme17 = context.theme) == null ? undefined : _context$theme17.colorBtnGrayNor;
          bgColorPressed = (_context$theme18 = context.theme) == null ? undefined : _context$theme18.colorBtnGrayPres;
          break;

        default:
          break;
      }
    }

    if (props.backgroundColor) {
      bgColorNormal = props.backgroundColor.bgColorNormal;
      bgColorPressed = props.backgroundColor.bgColorPressed;
    }

    if (props.titleColor) {
      titleC = props.titleColor;
    }

    var disabled = props.disabled;
    var opacity = disabled ? 0.3 : 1;

    function sub6string(str) {
      var len = 0;
      var resStr = '';

      for (var i = 0; i < (str == null ? undefined : str.length); i++) {
        if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {
          len += 2;
        } else {
          len += 1;
        }

        if (len <= 12) {
          resStr += str.charAt(i);
        } else {
          return resStr;
        }
      }

      return resStr;
    }

    return _react.default.createElement(_reactNative.View, {
      style: [styles.container, {
        opacity: opacity
      }]
    }, _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
      style: [buttonStyle, {
        backgroundColor: String(bgColorNormal),
        alignItems: 'center',
        justifyContent: 'center',
        flex: 1
      }, props.style],
      underlayColor: String(bgColorPressed),
      disabled: disabled,
      onPress: props.onPress,
      onLongPress: props.onLongPress
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'button',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: styles.titleContainer
    }, _react.default.createElement(_reactNative.Text, {
      style: [titleS, props.titleStyle, {
        color: String(titleC)
      }],
      adjustsFontSizeToFit: props.sizeLevel === 'small',
      allowFontScaling: props.allowFontScaling,
      numberOfLines: 1
    }, props.sizeLevel === 'small' ? sub6string(props.title) : props.title))));
  }

  PopButton.defaultProps = {
    sizeLevel: 'regular',
    title: '按钮文字',
    disabled: false,
    allowFontScaling: true
  };
  PopButton.COLORTYPE = COLORTYPE;

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      flex: 1
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    titleContainer: {
      flexDirection: 'row',
      justifyContent: 'center',
      alignItems: 'center'
    },
    regularTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 306,
      fontSize: 16,
      textAlignVertical: 'center'
    }, _font.FontPrimary),
    mediumTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 147,
      fontSize: 16,
      textAlignVertical: 'center'
    }, _font.FontPrimary),
    smallTitle: (0, _objectSpread2.default)({
      textAlign: 'center',
      maxWidth: 80,
      fontSize: 13,
      textAlignVertical: 'center'
    }, _font.FontPrimary)
  });

  var _default = PopButton;
  exports.default = _default;
},23215,[14308,14305,14314,14344,10297,10033,22420,22426,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = ProgressButton;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[5]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[6]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[7]);

  var Progress = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8]));

  var _DynamicColor = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _font = _$$_REQUIRE(_dependencyMap[10]);

  function ProgressButton(props) {
    var _context$theme, _context$theme2, _context$theme3, _context$theme4;

    var context = (0, _react.useContext)(_configProvider.ConfigContext);
    var colorScheme = context.colorScheme;
    var disabled = props.disabled,
        progress = props.progress,
        animated = props.animated;
    var buttonStyle;
    var titleStyle;
    var filledBgColor = (_context$theme = context.theme) == null ? undefined : _context$theme.colorBtnGreenNor;
    var unfilledBgColor;

    switch (props.sizeLevel) {
      case 'small':
        buttonStyle = styles.smallButton;
        unfilledBgColor = (_context$theme2 = context.theme) == null ? undefined : _context$theme2.colorBtnGreenOpaNor;
        titleStyle = styles.smallTitle;
        break;

      case 'medium':
        buttonStyle = styles.mediumButton;
        unfilledBgColor = (_context$theme3 = context.theme) == null ? undefined : _context$theme3.colorBtnGrayNor;
        titleStyle = styles.mediumTitle;
        break;

      default:
        buttonStyle = styles.regularButton;
        unfilledBgColor = (_context$theme4 = context.theme) == null ? undefined : _context$theme4.colorBtnGrayNor;
        titleStyle = styles.regularTitle;
        break;
    }

    var textColor = new _DynamicColor.default('#ffffff', 'rgba(255,255,255,0.90)');
    var color = progress > 0.48 ? textColor.color(colorScheme) : '#32BAC0';
    var disabledColor = new _DynamicColor.default('rgba(76,76,76,0.3)', 'rgba(255,255,255,0.3)').color(colorScheme);

    if (disabled) {
      var _context$theme5, _context$theme6;

      unfilledBgColor = (_context$theme5 = context.theme) == null ? undefined : _context$theme5.colorBtnGrayNor;
      filledBgColor = (_context$theme6 = context.theme) == null ? undefined : _context$theme6.colorBtnGrayPres;
    }

    if (props.style) {
      buttonStyle = props.style;
    }

    var textView = disabled ? _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: disabledColor
      }]
    }, "\u7B49\u5F85") : _react.default.createElement(_reactNative.Text, {
      style: [titleStyle, {
        color: color
      }]
    }, Math.floor(progress * 10000) / 100, "%");
    return _react.default.createElement(Progress.Bar, (0, _extends2.default)({
      progress: progress,
      style: [buttonStyle, {
        justifyContent: 'center'
      }],
      height: buttonStyle.height,
      width: buttonStyle.width,
      borderRadius: buttonStyle.borderRadius,
      useNativeDriver: true,
      color: String(filledBgColor),
      unfilledColor: String(unfilledBgColor),
      borderWidth: 0,
      animated: animated
    }, (0, _accessibilityHelper.getAccessibilityConfig)({
      accessible: props.accessible,
      accessibilityRole: 'progressbar',
      accessibilityHint: props.accessibilityHint,
      accessibilityLabel: props.accessibilityLabel,
      accessibilityValue: props.accessibilityValue,
      accessibilityState: {
        disabled: disabled
      }
    })), _react.default.createElement(_reactNative.View, {
      style: [styles.container]
    }, textView));
  }

  ProgressButton.defaultProps = {
    sizeLevel: 'regular',
    animated: true,
    disabled: false,
    progress: 0
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      alignItems: 'center',
      position: 'absolute',
      backgroundColor: 'transparent',
      alignSelf: 'center'
    },
    regularButton: {
      height: 46,
      width: 306,
      borderRadius: 23
    },
    mediumButton: {
      height: 46,
      width: 147,
      borderRadius: 23
    },
    smallButton: {
      height: 34,
      width: 80,
      borderRadius: 17
    },
    regularTitle: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontPrimary),
    mediumTitle: (0, _objectSpread2.default)({
      fontSize: 16,
      lineHeight: 22
    }, _font.FontPrimary),
    smallTitle: (0, _objectSpread2.default)({
      fontSize: 13,
      lineHeight: 18
    }, _font.FontPrimary)
  });
},23218,[14308,14305,14314,14344,10297,10033,22420,22426,13636,22435,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = exports.TYPE = undefined;

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[10]);

  var _reactNativeUiKitten = _$$_REQUIRE(_dependencyMap[11]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[12]);

  var _Icons = _$$_REQUIRE(_dependencyMap[13]);

  var _font = _$$_REQUIRE(_dependencyMap[14]);

  var _configProvider = _$$_REQUIRE(_dependencyMap[15]);

  var TYPE = {
    DELETE: 'DELETE',
    SECURE: 'SECURE',
    NONE: 'NONE'
  };
  exports.TYPE = TYPE;
  Object.freeze(TYPE);

  var InputView = function (_React$Component) {
    (0, _inherits2.default)(InputView, _React$Component);

    function InputView(props) {
      var _this;

      (0, _classCallCheck2.default)(this, InputView);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(InputView).call(this, props));
      _this.state = {
        inputValue: _this.props.defaultValue || '',
        secureState: props.type === TYPE.SECURE,
        isFocused: false
      };
      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));
      _this._onFocus = _this._onFocus.bind((0, _assertThisInitialized2.default)(_this));
      return _this;
    }

    (0, _createClass2.default)(InputView, [{
      key: "_onChange",
      value: function _onChange(changeText) {
        var _this$props, _this$props$textInput;

        this.setState({
          inputValue: changeText
        });

        if (this.props.onChangeText) {
          var onChangeTextOrigin = this.props.onChangeText;

          if (onChangeTextOrigin instanceof Function) {
            onChangeTextOrigin(changeText);
          }
        }

        if ((_this$props = this.props) == null ? undefined : (_this$props$textInput = _this$props.textInputProps) == null ? undefined : _this$props$textInput.onChangeText) {
          var _onChangeTextOrigin = this.props.textInputProps.onChangeText;

          if (_onChangeTextOrigin instanceof Function) {
            _onChangeTextOrigin(changeText);
          }
        }
      }
    }, {
      key: "_onFocus",
      value: function _onFocus() {
        this.setState(function (prevState) {
          return {
            isFocused: !prevState.isFocused
          };
        });
      }
    }, {
      key: "_renderRightDeleteButtonView",
      value: function _renderRightDeleteButtonView() {
        var _this2 = this;

        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          onPress: function onPress() {
            _this2._onChange('');
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 25,
            width: 25
          },
          source: _Icons.Icons.inputDelete
        }));
      }
    }, {
      key: "_renderRightSecureButtonView",
      value: function _renderRightSecureButtonView() {
        var _this3 = this;

        var source = this.state.secureState ? _Icons.Icons.inputEyeSecure : _Icons.Icons.inputEye;
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          style: styles.touchStyle,
          activeOpacity: 1,
          onPress: function onPress() {
            _this3.setState(function (prevState) {
              return {
                secureState: !prevState.secureState
              };
            });
          }
        }, _react.default.createElement(_reactNative.Image, {
          style: {
            height: 20,
            width: 20
          },
          source: source
        }));
      }
    }, {
      key: "_notNull",
      value: function _notNull(str) {
        var result = false;

        if (str === '' || str === undefined) {
          result = false;
        }

        if (str.length > 0) {
          result = true;
        }

        return result;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme, _this$context$theme2, _this$props$textInput2, _this$context$theme3, _this$context$theme5, _this$context$theme6, _this$context$theme7;

        var _this$state = this.state,
            inputValue = _this$state.inputValue,
            secureState = _this$state.secureState,
            isFocused = _this$state.isFocused;
        var _this$props2 = this.props,
            type = _this$props2.type,
            isCorrect = _this$props2.isCorrect;
        var greenBorder = this.props.borderColor ? this.props.borderColor : String((_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBtnGreenNor);
        var borderColor = isFocused && this._notNull(inputValue) ? greenBorder : 'transparent';

        _reactNativeUiKitten.RkTheme.setType('RkTextInput', 'textinput', {
          input: (0, _objectSpread2.default)({
            marginVertical: 0,
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorBlack,
            marginLeft: 0,
            fontSize: 16
          }, _font.FontPrimary),
          marginLeft: 16,
          flex: 1,
          underlineWidth: 0,
          marginVertical: 0,
          placeholderTextColor: ((_this$props$textInput2 = this.props.textInputProps) == null ? undefined : _this$props$textInput2.placeholderTextColor) || ((_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPlaceHolder),
          minHeight: 40,
          borderRadius: 10
        });

        if (!isCorrect) {
          var _this$context$theme4;

          borderColor = String((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorWarn);
        }

        if (type === TYPE.DELETE) {
          this.renderRight = this._renderRightDeleteButtonView();
        } else if (type === TYPE.SECURE) {
          this.renderRight = this._renderRightSecureButtonView();
        } else {
          this.renderRight = null;
        }

        var textInput = _react.default.createElement(_reactNativeUiKitten.RkTextInput, (0, _extends2.default)({
          placeholder: this.props.placeholder,
          value: inputValue
        }, this.props.textInputProps || {}, {
          onChangeText: this._onChange,
          secureTextEntry: secureState,
          onFocus: this._onFocus,
          onBlur: this._onFocus,
          selectionColor: String((_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorBtnGreenNor),
          rkType: "textinput"
        }, (0, _accessibilityHelper.getAccessibilityConfig)((0, _objectSpread2.default)({}, this.props))));

        return _react.default.createElement(_reactNative.View, {
          style: [styles.containerPink, this.props.style, {
            borderColor: !isCorrect ? String((_this$context$theme6 = this.context.theme) == null ? undefined : _this$context$theme6.colorInputBorder) : 'transparent'
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: [styles.container, {
            borderColor: borderColor,
            flex: 1,
            backgroundColor: String((_this$context$theme7 = this.context.theme) == null ? undefined : _this$context$theme7.colorInputBackground)
          }]
        }, textInput, this.renderRight));
      }
    }]);
    return InputView;
  }(_react.default.Component);

  InputView.TYPE = TYPE;
  InputView.contextType = _configProvider.ConfigContext;
  InputView.defaultProps = {
    type: TYPE.NONE,
    placeholder: '自定义占位字符',
    defaultValue: '自定义默认值',
    textInputProps: {
      autoFocus: true
    },
    isCorrect: true
  };

  var styles = _reactNative.StyleSheet.create({
    container: {
      flexDirection: 'row',
      height: 48,
      alignItems: 'center',
      justifyContent: 'flex-start',
      borderRadius: 10,
      borderWidth: 2
    },
    containerPink: {
      flexDirection: 'row',
      height: 54,
      alignItems: 'center',
      justifyContent: 'center',
      borderRadius: 12,
      borderWidth: 3
    },
    touchStyle: {
      marginHorizontal: 10,
      height: 22,
      width: 22,
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center'
    }
  });

  var _default = InputView;
  exports.default = _default;
},23221,[14305,14344,14314,14320,14323,14371,14377,14374,14386,10297,10033,11251,22420,23080,23041,22426]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "796359b54e6ebf09c60cc97942c69dcf",
    "name": "delete-nor",
    "type": "png"
  });
},23224,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "81767e65ea332203ab28f5fc32f11695",
    "name": "eyeSecure_light",
    "type": "png"
  });
},23227,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "e8e6ac4aa47886abacbaafcc738edee7",
    "name": "eye_light",
    "type": "png"
  });
},23230,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "53f864756e8fabd4e6e89380ceba4454",
    "name": "L-loading",
    "type": "png"
  });
},23233,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "f22150a1c224dd7147d337586d7cfb0f",
    "name": "D-loading",
    "type": "png"
  });
},23236,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var json_stringify = _$$_REQUIRE(_dependencyMap[0]).stringify;

  var json_parse = _$$_REQUIRE(_dependencyMap[1]);

  module.exports = function (options) {
    return {
      parse: json_parse(options),
      stringify: json_stringify
    };
  };

  module.exports.parse = json_parse();
  module.exports.stringify = json_stringify;
},23239,[23242,23248]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = _$$_REQUIRE(_dependencyMap[0]);

  var JSON = module.exports;

  (function () {
    'use strict';

    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap,
        indent,
        meta = {
      '\b': '\\b',
      '\t': '\\t',
      '\n': '\\n',
      '\f': '\\f',
      '\r': '\\r',
      '"': '\\"',
      '\\': '\\\\'
    },
        rep;

    function quote(string) {
      escapable.lastIndex = 0;
      return escapable.test(string) ? '"' + string.replace(escapable, function (a) {
        var c = meta[a];
        return typeof c === 'string' ? c : "\\u" + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
      }) + '"' : '"' + string + '"';
    }

    function str(key, holder) {
      var i,
          k,
          v,
          length,
          mind = gap,
          partial,
          value = holder[key],
          isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));

      if (value && typeof value === 'object' && typeof value.toJSON === 'function') {
        value = value.toJSON(key);
      }

      if (typeof rep === 'function') {
        value = rep.call(holder, key, value);
      }

      switch (typeof value) {
        case 'string':
          if (isBigNumber) {
            return value;
          } else {
            return quote(value);
          }

        case 'number':
          return isFinite(value) ? String(value) : 'null';

        case 'boolean':
        case 'null':
        case 'bigint':
          return String(value);

        case 'object':
          if (!value) {
            return 'null';
          }

          gap += indent;
          partial = [];

          if (Object.prototype.toString.apply(value) === '[object Array]') {
            length = value.length;

            for (i = 0; i < length; i += 1) {
              partial[i] = str(i, value) || 'null';
            }

            v = partial.length === 0 ? '[]' : gap ? '[\n' + gap + partial.join(',\n' + gap) + '\n' + mind + ']' : '[' + partial.join(',') + ']';
            gap = mind;
            return v;
          }

          if (rep && typeof rep === 'object') {
            length = rep.length;

            for (i = 0; i < length; i += 1) {
              if (typeof rep[i] === 'string') {
                k = rep[i];
                v = str(k, value);

                if (v) {
                  partial.push(quote(k) + (gap ? ': ' : ':') + v);
                }
              }
            }
          } else {
            Object.keys(value).forEach(function (k) {
              var v = str(k, value);

              if (v) {
                partial.push(quote(k) + (gap ? ': ' : ':') + v);
              }
            });
          }

          v = partial.length === 0 ? '{}' : gap ? '{\n' + gap + partial.join(',\n' + gap) + '\n' + mind + '}' : '{' + partial.join(',') + '}';
          gap = mind;
          return v;
      }
    }

    if (typeof JSON.stringify !== 'function') {
      JSON.stringify = function (value, replacer, space) {
        var i;
        gap = '';
        indent = '';

        if (typeof space === 'number') {
          for (i = 0; i < space; i += 1) {
            indent += ' ';
          }
        } else if (typeof space === 'string') {
          indent = space;
        }

        rep = replacer;

        if (replacer && typeof replacer !== 'function' && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {
          throw new Error('JSON.stringify');
        }

        return str('', {
          '': value
        });
      };
    }
  })();
},23242,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  ;

  (function (globalObject) {
    'use strict';

    var BigNumber,
        isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        mathceil = Math.ceil,
        mathfloor = Math.floor,
        bignumberError = '[BigNumber Error] ',
        tooManyDigits = "[BigNumber Error] Number primitive has more than 15 significant digits: ",
        BASE = 1e14,
        LOG_BASE = 14,
        MAX_SAFE_INTEGER = 0x1fffffffffffff,
        POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
        SQRT_BASE = 1e7,
        MAX = 1E9;

    function clone(configObject) {
      var div,
          convertBase,
          parseNumeric,
          P = BigNumber.prototype = {
        constructor: BigNumber,
        toString: null,
        valueOf: null
      },
          ONE = new BigNumber(1),
          DECIMAL_PLACES = 20,
          ROUNDING_MODE = 4,
          TO_EXP_NEG = -7,
          TO_EXP_POS = 21,
          MIN_EXP = -10000000,
          MAX_EXP = 1e7,
          CRYPTO = false,
          MODULO_MODE = 1,
          POW_PRECISION = 0,
          FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',
        suffix: ''
      },
          ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';

      function BigNumber(v, b) {
        var alphabet,
            c,
            caseChanged,
            e,
            i,
            isNum,
            len,
            str,
            x = this;
        if (!(x instanceof BigNumber)) return new BigNumber(v, b);

        if (b == null) {
          if (v && v._isBigNumber === true) {
            x.s = v.s;

            if (!v.c || v.e > MAX_EXP) {
              x.c = x.e = null;
            } else if (v.e < MIN_EXP) {
              x.c = [x.e = 0];
            } else {
              x.e = v.e;
              x.c = v.c.slice();
            }

            return;
          }

          if ((isNum = typeof v == 'number') && v * 0 == 0) {
            x.s = 1 / v < 0 ? (v = -v, -1) : 1;

            if (v === ~~v) {
              for (e = 0, i = v; i >= 10; i /= 10, e++) {
                ;
              }

              if (e > MAX_EXP) {
                x.c = x.e = null;
              } else {
                x.e = e;
                x.c = [v];
              }

              return;
            }

            str = String(v);
          } else {
            if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);
            x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
          }

          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

          if ((i = str.search(/e/i)) > 0) {
            if (e < 0) e = i;
            e += +str.slice(i + 1);
            str = str.substring(0, i);
          } else if (e < 0) {
            e = str.length;
          }
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');

          if (b == 10) {
            x = new BigNumber(v);
            return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
          }

          str = String(v);

          if (isNum = typeof v == 'number') {
            if (v * 0 != 0) return parseNumeric(x, str, isNum, b);
            x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

            if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
              throw Error(tooManyDigits + v);
            }
          } else {
            x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
          }

          alphabet = ALPHABET.slice(0, b);
          e = i = 0;

          for (len = str.length; i < len; i++) {
            if (alphabet.indexOf(c = str.charAt(i)) < 0) {
              if (c == '.') {
                if (i > e) {
                  e = len;
                  continue;
                }
              } else if (!caseChanged) {
                if (str == str.toUpperCase() && (str = str.toLowerCase()) || str == str.toLowerCase() && (str = str.toUpperCase())) {
                  caseChanged = true;
                  i = -1;
                  e = 0;
                  continue;
                }
              }

              return parseNumeric(x, String(v), isNum, b);
            }
          }

          isNum = false;
          str = convertBase(str, b, 10, x.s);
          if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');else e = str.length;
        }

        for (i = 0; str.charCodeAt(i) === 48; i++) {
          ;
        }

        for (len = str.length; str.charCodeAt(--len) === 48;) {
          ;
        }

        if (str = str.slice(i, ++len)) {
          len -= i;

          if (isNum && BigNumber.DEBUG && len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error(tooManyDigits + x.s * v);
          }

          if ((e = e - i - 1) > MAX_EXP) {
            x.c = x.e = null;
          } else if (e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = e;
            x.c = [];
            i = (e + 1) % LOG_BASE;
            if (e < 0) i += LOG_BASE;

            if (i < len) {
              if (i) x.c.push(+str.slice(0, i));

              for (len -= LOG_BASE; i < len;) {
                x.c.push(+str.slice(i, i += LOG_BASE));
              }

              i = LOG_BASE - (str = str.slice(i)).length;
            } else {
              i -= len;
            }

            for (; i--; str += '0') {
              ;
            }

            x.c.push(+str);
          }
        } else {
          x.c = [x.e = 0];
        }
      }

      BigNumber.clone = clone;
      BigNumber.ROUND_UP = 0;
      BigNumber.ROUND_DOWN = 1;
      BigNumber.ROUND_CEIL = 2;
      BigNumber.ROUND_FLOOR = 3;
      BigNumber.ROUND_HALF_UP = 4;
      BigNumber.ROUND_HALF_DOWN = 5;
      BigNumber.ROUND_HALF_EVEN = 6;
      BigNumber.ROUND_HALF_CEIL = 7;
      BigNumber.ROUND_HALF_FLOOR = 8;
      BigNumber.EUCLID = 9;

      BigNumber.config = BigNumber.set = function (obj) {
        var p, v;

        if (obj != null) {
          if (typeof obj == 'object') {
            if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              DECIMAL_PLACES = v;
            }

            if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
              v = obj[p];
              intCheck(v, 0, 8, p);
              ROUNDING_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, 0, p);
                intCheck(v[1], 0, MAX, p);
                TO_EXP_NEG = v[0];
                TO_EXP_POS = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);
                TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
              }
            }

            if (obj.hasOwnProperty(p = 'RANGE')) {
              v = obj[p];

              if (v && v.pop) {
                intCheck(v[0], -1000000000, -1, p);
                intCheck(v[1], 1, MAX, p);
                MIN_EXP = v[0];
                MAX_EXP = v[1];
              } else {
                intCheck(v, -1000000000, MAX, p);

                if (v) {
                  MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
                } else {
                  throw Error(bignumberError + p + ' cannot be zero: ' + v);
                }
              }
            }

            if (obj.hasOwnProperty(p = 'CRYPTO')) {
              v = obj[p];

              if (v === !!v) {
                if (v) {
                  if (typeof crypto != 'undefined' && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
                    CRYPTO = v;
                  } else {
                    CRYPTO = !v;
                    throw Error("[BigNumber Error] crypto unavailable");
                  }
                } else {
                  CRYPTO = v;
                }
              } else {
                throw Error(bignumberError + p + ' not true or false: ' + v);
              }
            }

            if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
              v = obj[p];
              intCheck(v, 0, 9, p);
              MODULO_MODE = v;
            }

            if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
              v = obj[p];
              intCheck(v, 0, MAX, p);
              POW_PRECISION = v;
            }

            if (obj.hasOwnProperty(p = 'FORMAT')) {
              v = obj[p];
              if (typeof v == 'object') FORMAT = v;else throw Error(bignumberError + p + ' not an object: ' + v);
            }

            if (obj.hasOwnProperty(p = 'ALPHABET')) {
              v = obj[p];

              if (typeof v == 'string' && !/^.$|[+-.\s]|(.).*\1/.test(v)) {
                ALPHABET = v;
              } else {
                throw Error(bignumberError + p + ' invalid: ' + v);
              }
            }
          } else {
            throw Error("[BigNumber Error] Object expected: " + obj);
          }
        }

        return {
          DECIMAL_PLACES: DECIMAL_PLACES,
          ROUNDING_MODE: ROUNDING_MODE,
          EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
          RANGE: [MIN_EXP, MAX_EXP],
          CRYPTO: CRYPTO,
          MODULO_MODE: MODULO_MODE,
          POW_PRECISION: POW_PRECISION,
          FORMAT: FORMAT,
          ALPHABET: ALPHABET
        };
      };

      BigNumber.isBigNumber = function (v) {
        if (!v || v._isBigNumber !== true) return false;
        if (!BigNumber.DEBUG) return true;
        var i,
            n,
            c = v.c,
            e = v.e,
            s = v.s;

        out: if ({}.toString.call(c) == '[object Array]') {
          if ((s === 1 || s === -1) && e >= -1000000000 && e <= MAX && e === mathfloor(e)) {
            if (c[0] === 0) {
              if (e === 0 && c.length === 1) return true;
              break out;
            }

            i = (e + 1) % LOG_BASE;
            if (i < 1) i += LOG_BASE;

            if (String(c[0]).length == i) {
              for (i = 0; i < c.length; i++) {
                n = c[i];
                if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
              }

              if (n !== 0) return true;
            }
          }
        } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
          return true;
        }

        throw Error("[BigNumber Error] Invalid BigNumber: " + v);
      };

      BigNumber.maximum = BigNumber.max = function () {
        return maxOrMin(arguments, P.lt);
      };

      BigNumber.minimum = BigNumber.min = function () {
        return maxOrMin(arguments, P.gt);
      };

      BigNumber.random = function () {
        var pow2_53 = 0x20000000000000;
        var random53bitInt = Math.random() * pow2_53 & 0x1fffff ? function () {
          return mathfloor(Math.random() * pow2_53);
        } : function () {
          return (Math.random() * 0x40000000 | 0) * 0x800000 + (Math.random() * 0x800000 | 0);
        };
        return function (dp) {
          var a,
              b,
              e,
              k,
              v,
              i = 0,
              c = [],
              rand = new BigNumber(ONE);
          if (dp == null) dp = DECIMAL_PLACES;else intCheck(dp, 0, MAX);
          k = mathceil(dp / LOG_BASE);

          if (CRYPTO) {
            if (crypto.getRandomValues) {
              a = crypto.getRandomValues(new Uint32Array(k *= 2));

              for (; i < k;) {
                v = a[i] * 0x20000 + (a[i + 1] >>> 11);

                if (v >= 9e15) {
                  b = crypto.getRandomValues(new Uint32Array(2));
                  a[i] = b[0];
                  a[i + 1] = b[1];
                } else {
                  c.push(v % 1e14);
                  i += 2;
                }
              }

              i = k / 2;
            } else if (crypto.randomBytes) {
              a = crypto.randomBytes(k *= 7);

              for (; i < k;) {
                v = (a[i] & 31) * 0x1000000000000 + a[i + 1] * 0x10000000000 + a[i + 2] * 0x100000000 + a[i + 3] * 0x1000000 + (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

                if (v >= 9e15) {
                  crypto.randomBytes(7).copy(a, i);
                } else {
                  c.push(v % 1e14);
                  i += 7;
                }
              }

              i = k / 7;
            } else {
              CRYPTO = false;
              throw Error("[BigNumber Error] crypto unavailable");
            }
          }

          if (!CRYPTO) {
            for (; i < k;) {
              v = random53bitInt();
              if (v < 9e15) c[i++] = v % 1e14;
            }
          }

          k = c[--i];
          dp %= LOG_BASE;

          if (k && dp) {
            v = POWS_TEN[LOG_BASE - dp];
            c[i] = mathfloor(k / v) * v;
          }

          for (; c[i] === 0; c.pop(), i--) {
            ;
          }

          if (i < 0) {
            c = [e = 0];
          } else {
            for (e = -1; c[0] === 0; c.splice(0, 1), e -= LOG_BASE) {
              ;
            }

            for (i = 1, v = c[0]; v >= 10; v /= 10, i++) {
              ;
            }

            if (i < LOG_BASE) e -= LOG_BASE - i;
          }

          rand.e = e;
          rand.c = c;
          return rand;
        };
      }();

      BigNumber.sum = function () {
        var i = 1,
            args = arguments,
            sum = new BigNumber(args[0]);

        for (; i < args.length;) {
          sum = sum.plus(args[i++]);
        }

        return sum;
      };

      convertBase = function () {
        var decimal = '0123456789';

        function toBaseOut(str, baseIn, baseOut, alphabet) {
          var j,
              arr = [0],
              arrL,
              i = 0,
              len = str.length;

          for (; i < len;) {
            for (arrL = arr.length; arrL--; arr[arrL] *= baseIn) {
              ;
            }

            arr[0] += alphabet.indexOf(str.charAt(i++));

            for (j = 0; j < arr.length; j++) {
              if (arr[j] > baseOut - 1) {
                if (arr[j + 1] == null) arr[j + 1] = 0;
                arr[j + 1] += arr[j] / baseOut | 0;
                arr[j] %= baseOut;
              }
            }
          }

          return arr.reverse();
        }

        return function (str, baseIn, baseOut, sign, callerIsToString) {
          var alphabet,
              d,
              e,
              k,
              r,
              x,
              xc,
              y,
              i = str.indexOf('.'),
              dp = DECIMAL_PLACES,
              rm = ROUNDING_MODE;

          if (i >= 0) {
            k = POW_PRECISION;
            POW_PRECISION = 0;
            str = str.replace('.', '');
            y = new BigNumber(baseIn);
            x = y.pow(str.length - i);
            POW_PRECISION = k;
            y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'), 10, baseOut, decimal);
            y.e = y.c.length;
          }

          xc = toBaseOut(str, baseIn, baseOut, callerIsToString ? (alphabet = ALPHABET, decimal) : (alphabet = decimal, ALPHABET));
          e = k = xc.length;

          for (; xc[--k] == 0; xc.pop()) {
            ;
          }

          if (!xc[0]) return alphabet.charAt(0);

          if (i < 0) {
            --e;
          } else {
            x.c = xc;
            x.e = e;
            x.s = sign;
            x = div(x, y, dp, rm, baseOut);
            xc = x.c;
            r = x.r;
            e = x.e;
          }

          d = e + dp + 1;
          i = xc[d];
          k = baseOut / 2;
          r = r || d < 0 || xc[d + 1] != null;
          r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : i > k || i == k && (rm == 4 || r || rm == 6 && xc[d - 1] & 1 || rm == (x.s < 0 ? 8 : 7));

          if (d < 1 || !xc[0]) {
            str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
          } else {
            xc.length = d;

            if (r) {
              for (--baseOut; ++xc[--d] > baseOut;) {
                xc[d] = 0;

                if (!d) {
                  ++e;
                  xc = [1].concat(xc);
                }
              }
            }

            for (k = xc.length; !xc[--k];) {
              ;
            }

            for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++])) {
              ;
            }

            str = toFixedPoint(str, e, alphabet.charAt(0));
          }

          return str;
        };
      }();

      div = function () {
        function multiply(x, k, base) {
          var m,
              temp,
              xlo,
              xhi,
              carry = 0,
              i = x.length,
              klo = k % SQRT_BASE,
              khi = k / SQRT_BASE | 0;

          for (x = x.slice(); i--;) {
            xlo = x[i] % SQRT_BASE;
            xhi = x[i] / SQRT_BASE | 0;
            m = khi * xlo + xhi * klo;
            temp = klo * xlo + m % SQRT_BASE * SQRT_BASE + carry;
            carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
            x[i] = temp % base;
          }

          if (carry) x = [carry].concat(x);
          return x;
        }

        function compare(a, b, aL, bL) {
          var i, cmp;

          if (aL != bL) {
            cmp = aL > bL ? 1 : -1;
          } else {
            for (i = cmp = 0; i < aL; i++) {
              if (a[i] != b[i]) {
                cmp = a[i] > b[i] ? 1 : -1;
                break;
              }
            }
          }

          return cmp;
        }

        function subtract(a, b, aL, base) {
          var i = 0;

          for (; aL--;) {
            a[aL] -= i;
            i = a[aL] < b[aL] ? 1 : 0;
            a[aL] = i * base + a[aL] - b[aL];
          }

          for (; !a[0] && a.length > 1; a.splice(0, 1)) {
            ;
          }
        }

        return function (x, y, dp, rm, base) {
          var cmp,
              e,
              i,
              more,
              n,
              prod,
              prodL,
              q,
              qc,
              rem,
              remL,
              rem0,
              xi,
              xL,
              yc0,
              yL,
              yz,
              s = x.s == y.s ? 1 : -1,
              xc = x.c,
              yc = y.c;

          if (!xc || !xc[0] || !yc || !yc[0]) {
            return new BigNumber(!x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN : xc && xc[0] == 0 || !yc ? s * 0 : s / 0);
          }

          q = new BigNumber(s);
          qc = q.c = [];
          e = x.e - y.e;
          s = dp + e + 1;

          if (!base) {
            base = BASE;
            e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
            s = s / LOG_BASE | 0;
          }

          for (i = 0; yc[i] == (xc[i] || 0); i++) {
            ;
          }

          if (yc[i] > (xc[i] || 0)) e--;

          if (s < 0) {
            qc.push(1);
            more = true;
          } else {
            xL = xc.length;
            yL = yc.length;
            i = 0;
            s += 2;
            n = mathfloor(base / (yc[0] + 1));

            if (n > 1) {
              yc = multiply(yc, n, base);
              xc = multiply(xc, n, base);
              yL = yc.length;
              xL = xc.length;
            }

            xi = yL;
            rem = xc.slice(0, yL);
            remL = rem.length;

            for (; remL < yL; rem[remL++] = 0) {
              ;
            }

            yz = yc.slice();
            yz = [0].concat(yz);
            yc0 = yc[0];
            if (yc[1] >= base / 2) yc0++;

            do {
              n = 0;
              cmp = compare(yc, rem, yL, remL);

              if (cmp < 0) {
                rem0 = rem[0];
                if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
                n = mathfloor(rem0 / yc0);

                if (n > 1) {
                  if (n >= base) n = base - 1;
                  prod = multiply(yc, n, base);
                  prodL = prod.length;
                  remL = rem.length;

                  while (compare(prod, rem, prodL, remL) == 1) {
                    n--;
                    subtract(prod, yL < prodL ? yz : yc, prodL, base);
                    prodL = prod.length;
                    cmp = 1;
                  }
                } else {
                  if (n == 0) {
                    cmp = n = 1;
                  }

                  prod = yc.slice();
                  prodL = prod.length;
                }

                if (prodL < remL) prod = [0].concat(prod);
                subtract(rem, prod, remL, base);
                remL = rem.length;

                if (cmp == -1) {
                  while (compare(yc, rem, yL, remL) < 1) {
                    n++;
                    subtract(rem, yL < remL ? yz : yc, remL, base);
                    remL = rem.length;
                  }
                }
              } else if (cmp === 0) {
                n++;
                rem = [0];
              }

              qc[i++] = n;

              if (rem[0]) {
                rem[remL++] = xc[xi] || 0;
              } else {
                rem = [xc[xi]];
                remL = 1;
              }
            } while ((xi++ < xL || rem[0] != null) && s--);

            more = rem[0] != null;
            if (!qc[0]) qc.splice(0, 1);
          }

          if (base == BASE) {
            for (i = 1, s = qc[0]; s >= 10; s /= 10, i++) {
              ;
            }

            round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);
          } else {
            q.e = e;
            q.r = +more;
          }

          return q;
        };
      }();

      function format(n, i, rm, id) {
        var c0, e, ne, len, str;
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        if (!n.c) return n.toString();
        c0 = n.c[0];
        ne = n.e;

        if (i == null) {
          str = coeffToString(n.c);
          str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS) ? toExponential(str, ne) : toFixedPoint(str, ne, '0');
        } else {
          n = round(new BigNumber(n), i, rm);
          e = n.e;
          str = coeffToString(n.c);
          len = str.length;

          if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {
            for (; len < i; str += '0', len++) {
              ;
            }

            str = toExponential(str, e);
          } else {
            i -= ne;
            str = toFixedPoint(str, e, '0');

            if (e + 1 > len) {
              if (--i > 0) for (str += '.'; i--; str += '0') {
                ;
              }
            } else {
              i += e - len;

              if (i > 0) {
                if (e + 1 == len) str += '.';

                for (; i--; str += '0') {
                  ;
                }
              }
            }
          }
        }

        return n.s < 0 && c0 ? '-' + str : str;
      }

      function maxOrMin(args, method) {
        var n,
            i = 1,
            m = new BigNumber(args[0]);

        for (; i < args.length; i++) {
          n = new BigNumber(args[i]);

          if (!n.s) {
            m = n;
            break;
          } else if (method.call(m, n)) {
            m = n;
          }
        }

        return m;
      }

      function normalise(n, c, e) {
        var i = 1,
            j = c.length;

        for (; !c[--j]; c.pop()) {
          ;
        }

        for (j = c[0]; j >= 10; j /= 10, i++) {
          ;
        }

        if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {
          n.c = n.e = null;
        } else if (e < MIN_EXP) {
          n.c = [n.e = 0];
        } else {
          n.e = e;
          n.c = c;
        }

        return n;
      }

      parseNumeric = function () {
        var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
            dotAfter = /^([^.]+)\.$/,
            dotBefore = /^\.([^.]+)$/,
            isInfinityOrNaN = /^-?(Infinity|NaN)$/,
            whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;
        return function (x, str, isNum, b) {
          var base,
              s = isNum ? str : str.replace(whitespaceOrPlus, '');

          if (isInfinityOrNaN.test(s)) {
            x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
          } else {
            if (!isNum) {
              s = s.replace(basePrefix, function (m, p1, p2) {
                base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
                return !b || b == base ? p1 : m;
              });

              if (b) {
                base = b;
                s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
              }

              if (str != s) return new BigNumber(s, base);
            }

            if (BigNumber.DEBUG) {
              throw Error("[BigNumber Error] Not a" + (b ? ' base ' + b : '') + ' number: ' + str);
            }

            x.s = null;
          }

          x.c = x.e = null;
        };
      }();

      function round(x, sd, rm, r) {
        var d,
            i,
            j,
            k,
            n,
            ni,
            rd,
            xc = x.c,
            pows10 = POWS_TEN;

        if (xc) {
          out: {
            for (d = 1, k = xc[0]; k >= 10; k /= 10, d++) {
              ;
            }

            i = sd - d;

            if (i < 0) {
              i += LOG_BASE;
              j = sd;
              n = xc[ni = 0];
              rd = n / pows10[d - j - 1] % 10 | 0;
            } else {
              ni = mathceil((i + 1) / LOG_BASE);

              if (ni >= xc.length) {
                if (r) {
                  for (; xc.length <= ni; xc.push(0)) {
                    ;
                  }

                  n = rd = 0;
                  d = 1;
                  i %= LOG_BASE;
                  j = i - LOG_BASE + 1;
                } else {
                  break out;
                }
              } else {
                n = k = xc[ni];

                for (d = 1; k >= 10; k /= 10, d++) {
                  ;
                }

                i %= LOG_BASE;
                j = i - LOG_BASE + d;
                rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
              }
            }

            r = r || sd < 0 || xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);
            r = rm < 4 ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 && (i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));

            if (sd < 1 || !xc[0]) {
              xc.length = 0;

              if (r) {
                sd -= x.e + 1;
                xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
                x.e = -sd || 0;
              } else {
                xc[0] = x.e = 0;
              }

              return x;
            }

            if (i == 0) {
              xc.length = ni;
              k = 1;
              ni--;
            } else {
              xc.length = ni + 1;
              k = pows10[LOG_BASE - i];
              xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
            }

            if (r) {
              for (;;) {
                if (ni == 0) {
                  for (i = 1, j = xc[0]; j >= 10; j /= 10, i++) {
                    ;
                  }

                  j = xc[0] += k;

                  for (k = 1; j >= 10; j /= 10, k++) {
                    ;
                  }

                  if (i != k) {
                    x.e++;
                    if (xc[0] == BASE) xc[0] = 1;
                  }

                  break;
                } else {
                  xc[ni] += k;
                  if (xc[ni] != BASE) break;
                  xc[ni--] = 0;
                  k = 1;
                }
              }
            }

            for (i = xc.length; xc[--i] === 0; xc.pop()) {
              ;
            }
          }

          if (x.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (x.e < MIN_EXP) {
            x.c = [x.e = 0];
          }
        }

        return x;
      }

      function valueOf(n) {
        var str,
            e = n.e;
        if (e === null) return n.toString();
        str = coeffToString(n.c);
        str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(str, e) : toFixedPoint(str, e, '0');
        return n.s < 0 ? '-' + str : str;
      }

      P.absoluteValue = P.abs = function () {
        var x = new BigNumber(this);
        if (x.s < 0) x.s = 1;
        return x;
      };

      P.comparedTo = function (y, b) {
        return compare(this, new BigNumber(y, b));
      };

      P.decimalPlaces = P.dp = function (dp, rm) {
        var c,
            n,
            v,
            x = this;

        if (dp != null) {
          intCheck(dp, 0, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), dp + x.e + 1, rm);
        }

        if (!(c = x.c)) return null;
        n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;
        if (v = c[v]) for (; v % 10 == 0; v /= 10, n--) {
          ;
        }
        if (n < 0) n = 0;
        return n;
      };

      P.dividedBy = P.div = function (y, b) {
        return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
      };

      P.dividedToIntegerBy = P.idiv = function (y, b) {
        return div(this, new BigNumber(y, b), 0, 1);
      };

      P.exponentiatedBy = P.pow = function (n, m) {
        var half,
            isModExp,
            i,
            k,
            more,
            nIsBig,
            nIsNeg,
            nIsOdd,
            y,
            x = this;
        n = new BigNumber(n);

        if (n.c && !n.isInteger()) {
          throw Error("[BigNumber Error] Exponent not an integer: " + valueOf(n));
        }

        if (m != null) m = new BigNumber(m);
        nIsBig = n.e > 14;

        if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {
          y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
          return m ? y.mod(m) : y;
        }

        nIsNeg = n.s < 0;

        if (m) {
          if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);
          isModExp = !nIsNeg && x.isInteger() && m.isInteger();
          if (isModExp) x = x.mod(m);
        } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0 ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7 : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {
          k = x.s < 0 && isOdd(n) ? -0 : 0;
          if (x.e > -1) k = 1 / k;
          return new BigNumber(nIsNeg ? 1 / k : k);
        } else if (POW_PRECISION) {
          k = mathceil(POW_PRECISION / LOG_BASE + 2);
        }

        if (nIsBig) {
          half = new BigNumber(0.5);
          if (nIsNeg) n.s = 1;
          nIsOdd = isOdd(n);
        } else {
          i = Math.abs(+valueOf(n));
          nIsOdd = i % 2;
        }

        y = new BigNumber(ONE);

        for (;;) {
          if (nIsOdd) {
            y = y.times(x);
            if (!y.c) break;

            if (k) {
              if (y.c.length > k) y.c.length = k;
            } else if (isModExp) {
              y = y.mod(m);
            }
          }

          if (i) {
            i = mathfloor(i / 2);
            if (i === 0) break;
            nIsOdd = i % 2;
          } else {
            n = n.times(half);
            round(n, n.e + 1, 1);

            if (n.e > 14) {
              nIsOdd = isOdd(n);
            } else {
              i = +valueOf(n);
              if (i === 0) break;
              nIsOdd = i % 2;
            }
          }

          x = x.times(x);

          if (k) {
            if (x.c && x.c.length > k) x.c.length = k;
          } else if (isModExp) {
            x = x.mod(m);
          }
        }

        if (isModExp) return y;
        if (nIsNeg) y = ONE.div(y);
        return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
      };

      P.integerValue = function (rm) {
        var n = new BigNumber(this);
        if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
        return round(n, n.e + 1, rm);
      };

      P.isEqualTo = P.eq = function (y, b) {
        return compare(this, new BigNumber(y, b)) === 0;
      };

      P.isFinite = function () {
        return !!this.c;
      };

      P.isGreaterThan = P.gt = function (y, b) {
        return compare(this, new BigNumber(y, b)) > 0;
      };

      P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;
      };

      P.isInteger = function () {
        return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
      };

      P.isLessThan = P.lt = function (y, b) {
        return compare(this, new BigNumber(y, b)) < 0;
      };

      P.isLessThanOrEqualTo = P.lte = function (y, b) {
        return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
      };

      P.isNaN = function () {
        return !this.s;
      };

      P.isNegative = function () {
        return this.s < 0;
      };

      P.isPositive = function () {
        return this.s > 0;
      };

      P.isZero = function () {
        return !!this.c && this.c[0] == 0;
      };

      P.minus = function (y, b) {
        var i,
            j,
            t,
            xLTy,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.plus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

          if (!xc[0] || !yc[0]) {
            return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x : ROUNDING_MODE == 3 ? -0 : 0);
          }
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (xLTy = a < 0) {
            a = -a;
            t = xc;
          } else {
            ye = xe;
            t = yc;
          }

          t.reverse();

          for (b = a; b--; t.push(0)) {
            ;
          }

          t.reverse();
        } else {
          j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

          for (a = b = 0; b < j; b++) {
            if (xc[b] != yc[b]) {
              xLTy = xc[b] < yc[b];
              break;
            }
          }
        }

        if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;
        b = (j = yc.length) - (i = xc.length);
        if (b > 0) for (; b--; xc[i++] = 0) {
          ;
        }
        b = 99999999999999;

        for (; j > a;) {
          if (xc[--j] < yc[j]) {
            for (i = j; i && !xc[--i]; xc[i] = b) {
              ;
            }

            --xc[i];
            xc[j] += BASE;
          }

          xc[j] -= yc[j];
        }

        for (; xc[0] == 0; xc.splice(0, 1), --ye) {
          ;
        }

        if (!xc[0]) {
          y.s = ROUNDING_MODE == 3 ? -1 : 1;
          y.c = [y.e = 0];
          return y;
        }

        return normalise(y, xc, ye);
      };

      P.modulo = P.mod = function (y, b) {
        var q,
            s,
            x = this;
        y = new BigNumber(y, b);

        if (!x.c || !y.s || y.c && !y.c[0]) {
          return new BigNumber(NaN);
        } else if (!y.c || x.c && !x.c[0]) {
          return new BigNumber(x);
        }

        if (MODULO_MODE == 9) {
          s = y.s;
          y.s = 1;
          q = div(x, y, 0, 3);
          y.s = s;
          q.s *= s;
        } else {
          q = div(x, y, 0, MODULO_MODE);
        }

        y = x.minus(q.times(y));
        if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;
        return y;
      };

      P.multipliedBy = P.times = function (y, b) {
        var c,
            e,
            i,
            j,
            k,
            m,
            xcL,
            xlo,
            xhi,
            ycL,
            ylo,
            yhi,
            zc,
            base,
            sqrtBase,
            x = this,
            xc = x.c,
            yc = (y = new BigNumber(y, b)).c;

        if (!xc || !yc || !xc[0] || !yc[0]) {
          if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
            y.c = y.e = y.s = null;
          } else {
            y.s *= x.s;

            if (!xc || !yc) {
              y.c = y.e = null;
            } else {
              y.c = [0];
              y.e = 0;
            }
          }

          return y;
        }

        e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
        y.s *= x.s;
        xcL = xc.length;
        ycL = yc.length;
        if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

        for (i = xcL + ycL, zc = []; i--; zc.push(0)) {
          ;
        }

        base = BASE;
        sqrtBase = SQRT_BASE;

        for (i = ycL; --i >= 0;) {
          c = 0;
          ylo = yc[i] % sqrtBase;
          yhi = yc[i] / sqrtBase | 0;

          for (k = xcL, j = i + k; j > i;) {
            xlo = xc[--k] % sqrtBase;
            xhi = xc[k] / sqrtBase | 0;
            m = yhi * xlo + xhi * ylo;
            xlo = ylo * xlo + m % sqrtBase * sqrtBase + zc[j] + c;
            c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
            zc[j--] = xlo % base;
          }

          zc[j] = c;
        }

        if (c) {
          ++e;
        } else {
          zc.splice(0, 1);
        }

        return normalise(y, zc, e);
      };

      P.negated = function () {
        var x = new BigNumber(this);
        x.s = -x.s || null;
        return x;
      };

      P.plus = function (y, b) {
        var t,
            x = this,
            a = x.s;
        y = new BigNumber(y, b);
        b = y.s;
        if (!a || !b) return new BigNumber(NaN);

        if (a != b) {
          y.s = -b;
          return x.minus(y);
        }

        var xe = x.e / LOG_BASE,
            ye = y.e / LOG_BASE,
            xc = x.c,
            yc = y.c;

        if (!xe || !ye) {
          if (!xc || !yc) return new BigNumber(a / 0);
          if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
        }

        xe = bitFloor(xe);
        ye = bitFloor(ye);
        xc = xc.slice();

        if (a = xe - ye) {
          if (a > 0) {
            ye = xe;
            t = yc;
          } else {
            a = -a;
            t = xc;
          }

          t.reverse();

          for (; a--; t.push(0)) {
            ;
          }

          t.reverse();
        }

        a = xc.length;
        b = yc.length;
        if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

        for (a = 0; b;) {
          a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
          xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
        }

        if (a) {
          xc = [a].concat(xc);
          ++ye;
        }

        return normalise(y, xc, ye);
      };

      P.precision = P.sd = function (sd, rm) {
        var c,
            n,
            v,
            x = this;

        if (sd != null && sd !== !!sd) {
          intCheck(sd, 1, MAX);
          if (rm == null) rm = ROUNDING_MODE;else intCheck(rm, 0, 8);
          return round(new BigNumber(x), sd, rm);
        }

        if (!(c = x.c)) return null;
        v = c.length - 1;
        n = v * LOG_BASE + 1;

        if (v = c[v]) {
          for (; v % 10 == 0; v /= 10, n--) {
            ;
          }

          for (v = c[0]; v >= 10; v /= 10, n++) {
            ;
          }
        }

        if (sd && x.e + 1 > n) n = x.e + 1;
        return n;
      };

      P.shiftedBy = function (k) {
        intCheck(k, -9007199254740991, MAX_SAFE_INTEGER);
        return this.times('1e' + k);
      };

      P.squareRoot = P.sqrt = function () {
        var m,
            n,
            r,
            rep,
            t,
            x = this,
            c = x.c,
            s = x.s,
            e = x.e,
            dp = DECIMAL_PLACES + 4,
            half = new BigNumber('0.5');

        if (s !== 1 || !c || !c[0]) {
          return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
        }

        s = Math.sqrt(+valueOf(x));

        if (s == 0 || s == 1 / 0) {
          n = coeffToString(c);
          if ((n.length + e) % 2 == 0) n += '0';
          s = Math.sqrt(+n);
          e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

          if (s == 1 / 0) {
            n = '1e' + e;
          } else {
            n = s.toExponential();
            n = n.slice(0, n.indexOf('e') + 1) + e;
          }

          r = new BigNumber(n);
        } else {
          r = new BigNumber(s + '');
        }

        if (r.c[0]) {
          e = r.e;
          s = e + dp;
          if (s < 3) s = 0;

          for (;;) {
            t = r;
            r = half.times(t.plus(div(x, t, dp, 1)));

            if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {
              if (r.e < e) --s;
              n = n.slice(s - 3, s + 1);

              if (n == '9999' || !rep && n == '4999') {
                if (!rep) {
                  round(t, t.e + DECIMAL_PLACES + 2, 0);

                  if (t.times(t).eq(x)) {
                    r = t;
                    break;
                  }
                }

                dp += 4;
                s += 4;
                rep = 1;
              } else {
                if (!+n || !+n.slice(1) && n.charAt(0) == '5') {
                  round(r, r.e + DECIMAL_PLACES + 2, 1);
                  m = !r.times(r).eq(x);
                }

                break;
              }
            }
          }
        }

        return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
      };

      P.toExponential = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp++;
        }

        return format(this, dp, rm, 1);
      };

      P.toFixed = function (dp, rm) {
        if (dp != null) {
          intCheck(dp, 0, MAX);
          dp = dp + this.e + 1;
        }

        return format(this, dp, rm);
      };

      P.toFormat = function (dp, rm, format) {
        var str,
            x = this;

        if (format == null) {
          if (dp != null && rm && typeof rm == 'object') {
            format = rm;
            rm = null;
          } else if (dp && typeof dp == 'object') {
            format = dp;
            dp = rm = null;
          } else {
            format = FORMAT;
          }
        } else if (typeof format != 'object') {
          throw Error("[BigNumber Error] Argument not an object: " + format);
        }

        str = x.toFixed(dp, rm);

        if (x.c) {
          var i,
              arr = str.split('.'),
              g1 = +format.groupSize,
              g2 = +format.secondaryGroupSize,
              groupSeparator = format.groupSeparator || '',
              intPart = arr[0],
              fractionPart = arr[1],
              isNeg = x.s < 0,
              intDigits = isNeg ? intPart.slice(1) : intPart,
              len = intDigits.length;
          if (g2) i = g1, g1 = g2, g2 = i, len -= i;

          if (g1 > 0 && len > 0) {
            i = len % g1 || g1;
            intPart = intDigits.substr(0, i);

            for (; i < len; i += g1) {
              intPart += groupSeparator + intDigits.substr(i, g1);
            }

            if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
            if (isNeg) intPart = '-' + intPart;
          }

          str = fractionPart ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize) ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'), '$&' + (format.fractionGroupSeparator || '')) : fractionPart) : intPart;
        }

        return (format.prefix || '') + str + (format.suffix || '');
      };

      P.toFraction = function (md) {
        var d,
            d0,
            d1,
            d2,
            e,
            exp,
            n,
            n0,
            n1,
            q,
            r,
            s,
            x = this,
            xc = x.c;

        if (md != null) {
          n = new BigNumber(md);

          if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
            throw Error("[BigNumber Error] Argument " + (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
          }
        }

        if (!xc) return new BigNumber(x);
        d = new BigNumber(ONE);
        n1 = d0 = new BigNumber(ONE);
        d1 = n0 = new BigNumber(ONE);
        s = coeffToString(xc);
        e = d.e = s.length - x.e - 1;
        d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
        md = !md || n.comparedTo(d) > 0 ? e > 0 ? d : n1 : n;
        exp = MAX_EXP;
        MAX_EXP = 1 / 0;
        n = new BigNumber(s);
        n0.c[0] = 0;

        for (;;) {
          q = div(n, d, 0, 1);
          d2 = d0.plus(q.times(d1));
          if (d2.comparedTo(md) == 1) break;
          d0 = d1;
          d1 = d2;
          n1 = n0.plus(q.times(d2 = n1));
          n0 = d2;
          d = n.minus(q.times(d2 = d));
          n = d2;
        }

        d2 = div(md.minus(d0), d1, 0, 1);
        n0 = n0.plus(d2.times(n1));
        d0 = d0.plus(d2.times(d1));
        n0.s = n1.s = x.s;
        e = e * 2;
        r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];
        MAX_EXP = exp;
        return r;
      };

      P.toNumber = function () {
        return +valueOf(this);
      };

      P.toPrecision = function (sd, rm) {
        if (sd != null) intCheck(sd, 1, MAX);
        return format(this, sd, rm, 2);
      };

      P.toString = function (b) {
        var str,
            n = this,
            s = n.s,
            e = n.e;

        if (e === null) {
          if (s) {
            str = 'Infinity';
            if (s < 0) str = '-' + str;
          } else {
            str = 'NaN';
          }
        } else {
          if (b == null) {
            str = e <= TO_EXP_NEG || e >= TO_EXP_POS ? toExponential(coeffToString(n.c), e) : toFixedPoint(coeffToString(n.c), e, '0');
          } else if (b === 10) {
            n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
            str = toFixedPoint(coeffToString(n.c), n.e, '0');
          } else {
            intCheck(b, 2, ALPHABET.length, 'Base');
            str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
          }

          if (s < 0 && n.c[0]) str = '-' + str;
        }

        return str;
      };

      P.valueOf = P.toJSON = function () {
        return valueOf(this);
      };

      P._isBigNumber = true;
      if (configObject != null) BigNumber.set(configObject);
      return BigNumber;
    }

    function bitFloor(n) {
      var i = n | 0;
      return n > 0 || n === i ? i : i - 1;
    }

    function coeffToString(a) {
      var s,
          z,
          i = 1,
          j = a.length,
          r = a[0] + '';

      for (; i < j;) {
        s = a[i++] + '';
        z = LOG_BASE - s.length;

        for (; z--; s = '0' + s) {
          ;
        }

        r += s;
      }

      for (j = r.length; r.charCodeAt(--j) === 48;) {
        ;
      }

      return r.slice(0, j + 1 || 1);
    }

    function compare(x, y) {
      var a,
          b,
          xc = x.c,
          yc = y.c,
          i = x.s,
          j = y.s,
          k = x.e,
          l = y.e;
      if (!i || !j) return null;
      a = xc && !xc[0];
      b = yc && !yc[0];
      if (a || b) return a ? b ? 0 : -j : i;
      if (i != j) return i;
      a = i < 0;
      b = k == l;
      if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;
      if (!b) return k > l ^ a ? 1 : -1;
      j = (k = xc.length) < (l = yc.length) ? k : l;

      for (i = 0; i < j; i++) {
        if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;
      }

      return k == l ? 0 : k > l ^ a ? 1 : -1;
    }

    function intCheck(n, min, max, name) {
      if (n < min || n > max || n !== mathfloor(n)) {
        throw Error(bignumberError + (name || 'Argument') + (typeof n == 'number' ? n < min || n > max ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(n));
      }
    }

    function isOdd(n) {
      var k = n.c.length - 1;
      return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
    }

    function toExponential(str, e) {
      return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) + (e < 0 ? 'e' : 'e+') + e;
    }

    function toFixedPoint(str, e, z) {
      var len, zs;

      if (e < 0) {
        for (zs = z + '.'; ++e; zs += z) {
          ;
        }

        str = zs + str;
      } else {
        len = str.length;

        if (++e > len) {
          for (zs = z, e -= len; --e; zs += z) {
            ;
          }

          str += zs;
        } else if (e < len) {
          str = str.slice(0, e) + '.' + str.slice(e);
        }
      }

      return str;
    }

    BigNumber = clone();
    BigNumber['default'] = BigNumber.BigNumber = BigNumber;

    if (typeof define == 'function' && define.amd) {
      define(function () {
        return BigNumber;
      });
    } else if (typeof module != 'undefined' && module.exports) {
      module.exports = BigNumber;
    } else {
      if (!globalObject) {
        globalObject = typeof self != 'undefined' && self ? self : window;
      }

      globalObject.BigNumber = BigNumber;
    }
  })(this);
},23245,[]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var BigNumber = null;
  var suspectProtoRx = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/;
  var suspectConstructorRx = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;

  var json_parse = function json_parse(options) {
    'use strict';

    var _options = {
      strict: false,
      storeAsString: false,
      alwaysParseAsBig: false,
      useNativeBigInt: false,
      protoAction: 'error',
      constructorAction: 'error'
    };

    if (options !== undefined && options !== null) {
      if (options.strict === true) {
        _options.strict = true;
      }

      if (options.storeAsString === true) {
        _options.storeAsString = true;
      }

      _options.alwaysParseAsBig = options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;
      _options.useNativeBigInt = options.useNativeBigInt === true ? options.useNativeBigInt : false;

      if (typeof options.constructorAction !== 'undefined') {
        if (options.constructorAction === 'error' || options.constructorAction === 'ignore' || options.constructorAction === 'preserve') {
          _options.constructorAction = options.constructorAction;
        } else {
          throw new Error("Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed " + options.constructorAction);
        }
      }

      if (typeof options.protoAction !== 'undefined') {
        if (options.protoAction === 'error' || options.protoAction === 'ignore' || options.protoAction === 'preserve') {
          _options.protoAction = options.protoAction;
        } else {
          throw new Error("Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed " + options.protoAction);
        }
      }
    }

    var at,
        ch,
        escapee = {
      '"': '"',
      '\\': '\\',
      '/': '/',
      b: '\b',
      f: '\f',
      n: '\n',
      r: '\r',
      t: '\t'
    },
        text,
        error = function error(m) {
      throw {
        name: 'SyntaxError',
        message: m,
        at: at,
        text: text
      };
    },
        next = function next(c) {
      if (c && c !== ch) {
        error("Expected '" + c + "' instead of '" + ch + "'");
      }

      ch = text.charAt(at);
      at += 1;
      return ch;
    },
        number = function number() {
      var number,
          string = '';

      if (ch === '-') {
        string = '-';
        next('-');
      }

      while (ch >= '0' && ch <= '9') {
        string += ch;
        next();
      }

      if (ch === '.') {
        string += '.';

        while (next() && ch >= '0' && ch <= '9') {
          string += ch;
        }
      }

      if (ch === 'e' || ch === 'E') {
        string += ch;
        next();

        if (ch === '-' || ch === '+') {
          string += ch;
          next();
        }

        while (ch >= '0' && ch <= '9') {
          string += ch;
          next();
        }
      }

      number = +string;

      if (!isFinite(number)) {
        error('Bad number');
      } else {
        if (BigNumber == null) BigNumber = _$$_REQUIRE(_dependencyMap[0]);
        if (string.length > 15) return _options.storeAsString ? string : _options.useNativeBigInt ? BigInt(string) : new BigNumber(string);else return !_options.alwaysParseAsBig ? number : _options.useNativeBigInt ? BigInt(number) : new BigNumber(number);
      }
    },
        string = function string() {
      var hex,
          i,
          string = '',
          uffff;

      if (ch === '"') {
        var startAt = at;

        while (next()) {
          if (ch === '"') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();
            return string;
          }

          if (ch === '\\') {
            if (at - 1 > startAt) string += text.substring(startAt, at - 1);
            next();

            if (ch === 'u') {
              uffff = 0;

              for (i = 0; i < 4; i += 1) {
                hex = parseInt(next(), 16);

                if (!isFinite(hex)) {
                  break;
                }

                uffff = uffff * 16 + hex;
              }

              string += String.fromCharCode(uffff);
            } else if (typeof escapee[ch] === 'string') {
              string += escapee[ch];
            } else {
              break;
            }

            startAt = at;
          }
        }
      }

      error('Bad string');
    },
        white = function white() {
      while (ch && ch <= ' ') {
        next();
      }
    },
        word = function word() {
      switch (ch) {
        case 't':
          next('t');
          next('r');
          next('u');
          next('e');
          return true;

        case 'f':
          next('f');
          next('a');
          next('l');
          next('s');
          next('e');
          return false;

        case 'n':
          next('n');
          next('u');
          next('l');
          next('l');
          return null;
      }

      error("Unexpected '" + ch + "'");
    },
        value,
        array = function array() {
      var array = [];

      if (ch === '[') {
        next('[');
        white();

        if (ch === ']') {
          next(']');
          return array;
        }

        while (ch) {
          array.push(value());
          white();

          if (ch === ']') {
            next(']');
            return array;
          }

          next(',');
          white();
        }
      }

      error('Bad array');
    },
        object = function object() {
      var key,
          object = Object.create(null);

      if (ch === '{') {
        next('{');
        white();

        if (ch === '}') {
          next('}');
          return object;
        }

        while (ch) {
          key = string();
          white();
          next(':');

          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {
            error('Duplicate key "' + key + '"');
          }

          if (suspectProtoRx.test(key) === true) {
            if (_options.protoAction === 'error') {
              error('Object contains forbidden prototype property');
            } else if (_options.protoAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else if (suspectConstructorRx.test(key) === true) {
            if (_options.constructorAction === 'error') {
              error('Object contains forbidden constructor property');
            } else if (_options.constructorAction === 'ignore') {
              value();
            } else {
              object[key] = value();
            }
          } else {
            object[key] = value();
          }

          white();

          if (ch === '}') {
            next('}');
            return object;
          }

          next(',');
          white();
        }
      }

      error('Bad object');
    };

    value = function value() {
      white();

      switch (ch) {
        case '{':
          return object();

        case '[':
          return array();

        case '"':
          return string();

        case '-':
          return number();

        default:
          return ch >= '0' && ch <= '9' ? number() : word();
      }
    };

    return function (source, reviver) {
      var result;
      text = source + '';
      at = 0;
      ch = ' ';
      result = value();
      white();

      if (ch) {
        error('Syntax error');
      }

      return typeof reviver === 'function' ? function walk(holder, key) {
        var k,
            v,
            value = holder[key];

        if (value && typeof value === 'object') {
          Object.keys(value).forEach(function (k) {
            v = walk(value, k);

            if (v !== undefined) {
              value[k] = v;
            } else {
              delete value[k];
            }
          });
        }

        return reviver.call(holder, key, value);
      }({
        '': result
      }, '') : result;
    };
  };

  module.exports = json_parse;
},23248,[23245]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "c0c1a2c8287a20030e20c26350811688",
    "name": "orientation_n_dark",
    "type": "png"
  });
},23251,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "fc298c8501990d875df4a6b937ad9591",
    "name": "orientation_p_dark",
    "type": "png"
  });
},23254,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "efb4f84e005c31f56186fde68e17aae9",
    "name": "orientation_d_dark",
    "type": "png"
  });
},23257,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "f13fb08b174c97de0f063b5406edcd19",
    "name": "save_n_dark",
    "type": "png"
  });
},23260,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "a997ade362625254db11517feb4b57cd",
    "name": "save_p_dark",
    "type": "png"
  });
},23263,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/dark",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "7db694f5552517986af48ade14af5dee",
    "name": "save_d_dark",
    "type": "png"
  });
},23266,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "82363159dc3191db49504a2be0bc1b70",
    "name": "orientation_n_light",
    "type": "png"
  });
},23269,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "54941d4a547ad957ef4f3a08b4c78eb6",
    "name": "orientation_p_light",
    "type": "png"
  });
},23272,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "8defaf1d8235ebb098fa04bcf12ed5ad",
    "name": "orientation_d_light",
    "type": "png"
  });
},23275,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "5ec1f8035bdf49848568663eab32f910",
    "name": "save_n_light",
    "type": "png"
  });
},23278,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "dc06f34ea6451e550d102bfb79af7f49",
    "name": "save_p_light",
    "type": "png"
  });
},23281,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/navigation/light",
    "width": 40,
    "height": 40,
    "scales": [2, 3],
    "hash": "9e9264292f6e90aa0a56465fe7227563",
    "name": "save_d_light",
    "type": "png"
  });
},23284,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "fc3543c773e475858fc7376b28eb58f7",
    "name": "sort_n_light",
    "type": "png"
  });
},23287,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/light",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "ed487fb6c76e248a78da223d29a7df33",
    "name": "sort_p_light",
    "type": "png"
  });
},23290,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "a086d85121f6a4f64b59edcc4063b425",
    "name": "sort_n_dark",
    "type": "png"
  });
},23293,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/loading/dark",
    "width": 22,
    "height": 22,
    "scales": [2, 3],
    "hash": "1243c79fd61adc9fae869b00eaa7c09a",
    "name": "sort_p_dark",
    "type": "png"
  });
},23296,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0]);

  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[13]);

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _SlideGear = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[16]);

  var _font = _$$_REQUIRE(_dependencyMap[17]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var cardMargin = 12;
  var cardWidth = width - 24;
  var radiusValue = 12;
  var cardPadding = 20;
  var tabHeight = 46;
  var dotSize = 39;
  var CARD_EXCESS_PADDING = 6;
  var MAX_TAB_SHOW_COUNT = 5;
  var CARD_TYPE = {
    TAB: 'tab',
    SLIDER: 'slider',
    DOT: 'dot'
  };
  Object.freeze(CARD_TYPE);

  var GearCard = function (_Component) {
    (0, _inherits2.default)(GearCard, _Component);

    function GearCard(props) {
      var _this;

      (0, _classCallCheck2.default)(this, GearCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(GearCard).call(this, props));

      _this.onPressButton = function (index) {
        var _this$props = _this.props,
            onPress = _this$props.onPress,
            onValueChange = _this$props.onValueChange;

        _this.setState({
          gearValue: index
        }, function () {
          _this.AnimatedMoveGreenTab(index);

          if (onPress) {
            onPress(index);
          }

          if (typeof onValueChange === 'function') {
            onValueChange(index);
          }
        });
      };

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;
        var _this$props2 = _this.props,
            disabledSwitch = _this$props2.disabledSwitch,
            switchValue = _this$props2.switchValue;

        if (disabledSwitch) {
          return;
        }

        var gearValue = _this.state.gearValue;
        var toValue = gearValue;

        if (actionName === 'activate' && _this.props.onSwitchValueChange) {
          _this.props.onSwitchValueChange(!switchValue);

          return;
        }

        if (actionName === 'increment') {
          toValue++;
        }

        if (actionName === 'decrement') {
          toValue--;
        }

        _this._onSliderValueChange(toValue, function () {
          _this.props.onSlidingComplete(toValue);
        });
      };

      if (!props.options || !(props.options instanceof Array) || props.options.length < 2) {
        _this.showNothing = true;
        return (0, _possibleConstructorReturn2.default)(_this);
      }

      if (props.maxDotShowCount > 9) {
        throw new Error('maxDotShowCount cannot exceed 9');
      }

      _this.getCorrectLayout(props);

      _this.state = {
        gearValue: _this.props.sliderProps.value
      };
      _this.currentIndex = new _reactNative.Animated.Value(props.currentIndex);
      return _this;
    }

    (0, _createClass2.default)(GearCard, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.AnimatedMoveGreenTab(this.props.currentIndex);
      }
    }, {
      key: "UNSAFE_componentWillReceiveProps",
      value: function UNSAFE_componentWillReceiveProps(nextProps) {
        if (nextProps.options !== this.props.options) {
          this.getCorrectLayout(nextProps);
        }
      }
    }, {
      key: "getCorrectLayout",
      value: function getCorrectLayout(props) {
        var cardType = props.cardType,
            maxDotShowCount = props.maxDotShowCount;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(props.options.length, maxShowCount);
        var cardLength = cardWidth - 40 - CARD_EXCESS_PADDING;

        if (props.cardType === CARD_TYPE.DOT) {
          cardLength += CARD_EXCESS_PADDING;
          this.buttonWidth = Math.floor(cardLength / length) > dotSize ? dotSize : Math.floor(cardLength / length);
          this.dotSize = this.buttonWidth === dotSize ? dotSize : this.buttonWidth;
          this.leftMargin = 0;
          this.margin = (cardLength - this.buttonWidth * length) / (length - 1);
          return;
        }

        this.buttonWidth = Math.floor(cardLength / length) - 10;
        this.tabWidth = this.buttonWidth;
        this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
        this.margin = (cardLength - this.buttonWidth * length) / (length - 1);

        if (length === maxShowCount) {
          this.tabWidth = this.buttonWidth > 72 ? this.buttonWidth : 72;
          this.leftMargin = Math.abs(this.tabWidth - this.buttonWidth) / 2 + 3;
          this.margin = (cardLength - this.buttonWidth * length - this.leftMargin * 2 + CARD_EXCESS_PADDING) / (length - 1);
        }
      }
    }, {
      key: "renderUpView",
      value: function renderUpView() {
        if (!!this.props.title || this.props.showSwitch) {
          var _this$context$theme, _this$context$theme2;

          var unlimitedHeightEnable = this.props.unlimitedHeightEnable;
          return _react.default.createElement(_reactNative.View, (0, _extends2.default)({
            style: [styles.upViewContainer, unlimitedHeightEnable || !this.props.allowFontScaling ? {
              height: undefined
            } : {}]
          }, !this.props.onSwitchValueChange ? (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.text,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint
          }) : (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.switch,
            accessibilityLabel: this.props.accessibilityLabel || this.props.title,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledSwitch,
              checked: this.props.switchValue
            }
          }), {
            accessibilityActions: !this.props.onSwitchValueChange ? [] : [{
              name: 'activate'
            }],
            onAccessibilityAction: !this.props.onSwitchValueChange ? null : this.onAccessibilityAction
          }), _react.default.createElement(_reactNative.View, {
            style: styles.titleViewStyle
          }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            allowFontScaling: this.props.allowFontScaling,
            numberOfLines: this.props.titleNumberOfLines,
            ellipsizeMode: "tail",
            style: [styles.titleStyle, unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, {
              color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
            }, this.props.titleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.View, {
            style: styles.gearStyle
          }, _react.default.createElement(_reactNative.View, {
            style: [styles.separatorCol]
          }), _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
            numberOfLines: this.props.subtitleNumberOfLines,
            ellipsizeMode: "tail",
            allowFontScaling: this.props.allowFontScaling,
            style: [unlimitedHeightEnable ? {
              lineHeight: undefined
            } : {}, (0, _objectSpread2.default)({
              fontSize: 12,
              color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
            }, _font.FontSecondary), this.props.subtitleStyle]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })), this.props.subtitle)) : null), this.props.showSwitch ? _react.default.createElement(_reactNative.View, {
            style: styles.right
          }, _react.default.createElement(_Switch.default, (0, _extends2.default)({
            style: this.props.switchStyle,
            value: this.props.switchValue,
            disabled: this.props.disabledSwitch,
            tintColor: this.props.tintColor,
            onTintColor: this.props.onTintColor,
            onValueChange: this.props.onSwitchValueChange
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: false
          })))) : null);
        }

        return null;
      }
    }, {
      key: "renderAnimatedView",
      value: function renderAnimatedView() {
        var _this$props$options, _this$props$options2;

        var isTab;
        if (this.props.cardType === CARD_TYPE.TAB) isTab = true;else if (this.props.cardType === CARD_TYPE.DOT && ((_this$props$options = this.props.options) == null ? undefined : _this$props$options.length) < 10 && ((_this$props$options2 = this.props.options) == null ? undefined : _this$props$options2.length) > 1) isTab = false;
        return _react.default.createElement(_reactNative.Animated.View, {
          style: {
            height: isTab ? tabHeight : this.dotSize,
            borderRadius: isTab ? 23 : this.dotSize / 2,
            width: isTab ? this.tabWidth : this.dotSize,
            backgroundColor: this.props.animatedGearBackgroundColor || this.context.theme.colorPrimary,
            position: 'absolute',
            transform: [{
              translateX: this.currentIndex.interpolate(this.getLeftInterpolate())
            }],
            opacity: this.props.disabledGear ? 0.3 : 1,
            top: isTab ? 3 : 23 - this.dotSize / 2
          }
        });
      }
    }, {
      key: "renderGear",
      value: function renderGear() {
        var _this2 = this;

        if (this.props.cardType === CARD_TYPE.SLIDER) {
          var _this$context$theme3, _this$context$theme4, _this$context$theme5;

          var sliderProps = this.props.sliderProps;
          var sliderStyle = this.props.sliderStyle || {
            minimumTrackTintColor: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorPrimary,
            maximumTrackTintColor: (_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.colorGearBackground,
            thumbTintColor: (_this$context$theme5 = this.context.theme) == null ? undefined : _this$context$theme5.colorWhite2
          };
          return _react.default.createElement(_SlideGear.default, (0, _extends2.default)({
            options: this.props.options,
            value: this.state.gearValue,
            containerStyle: {
              height: 46,
              marginTop: 8
            },
            showEndText: sliderProps.showEndText,
            onValueChange: function onValueChange(value) {
              return _this2._onSliderValueChange(value);
            },
            onSlidingComplete: function onSlidingComplete(value) {
              return _this2.props.onSlidingComplete(value);
            },
            minimumTrackTintColor: sliderStyle.minimumTrackTintColor,
            maximumTrackTintColor: sliderStyle.maximumTrackTintColor,
            blockStyle: {
              backgroundColor: sliderStyle.thumbTintColor
            },
            disabled: this.props.disabledGear
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: this.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.adjustable,
            accessibilityLabel: this.props.accessibilityLabel,
            accessibilityHint: this.props.accessibilityHint,
            accessibilityState: {
              disabled: this.props.disabledGear
            },
            accessibilityValue: {
              value: this.state.gearValue
            }
          }), {
            accessibilityActions: [{
              name: 'increment'
            }, {
              name: 'decrement'
            }],
            onAccessibilityAction: this.onAccessibilityAction
          }));
        }

        var _this$props3 = this.props,
            cardType = _this$props3.cardType,
            maxDotShowCount = _this$props3.maxDotShowCount,
            optionGearBackgroundColor = _this$props3.optionGearBackgroundColor;
        var viewStyle = {};

        if (this.props.cardType === CARD_TYPE.TAB) {
          viewStyle = [styles.gearTabContainer, {
            backgroundColor: optionGearBackgroundColor || this.context.theme.colorGearBackground
          }];
        } else {
          viewStyle = [styles.gearDotContainer, {
            backgroundColor: optionGearBackgroundColor || 'transparent'
          }];
        }

        var _this$context$theme6 = this.context.theme,
            colorGrayLight = _this$context$theme6.colorGrayLight,
            colorWhite2 = _this$context$theme6.colorWhite2;
        var scrollViewWidth = this.props.options.length * (this.buttonWidth + this.margin) + 2 * this.leftMargin;
        var newScrollViewWidth = cardType === CARD_TYPE.TAB ? scrollViewWidth - CARD_EXCESS_PADDING : scrollViewWidth;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var gearTabContainerStyle = this.props.options.length <= maxShowCount ? {
          flex: 1
        } : {
          width: newScrollViewWidth
        };
        return _react.default.createElement(_reactNative.ScrollView, {
          alwaysBounceHorizontal: false,
          contentContainerStyle: gearTabContainerStyle,
          horizontal: true,
          showsHorizontalScrollIndicator: false
        }, _react.default.createElement(_reactNative.View, {
          style: [viewStyle, gearTabContainerStyle]
        }, this.renderAnimatedView(), _react.default.createElement(_reactNative.View, {
          style: [this.props.disabledGear ? {
            opacity: 0.3
          } : {}, styles.gearStyle]
        }, this.props.options.map(function (option, index) {
          return _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({
            key: option,
            onPress: function onPress() {
              return _this2.onPressButton(index);
            },
            activeOpacity: 1,
            disabled: _this2.props.disabledGear,
            style: [styles.textContainer, {
              width: _this2.buttonWidth
            }, index == 0 ? {
              marginLeft: _this2.leftMargin
            } : {
              marginLeft: _this2.margin
            }]
          }, (0, _accessibilityHelper.getAccessibilityConfig)({
            accessible: _this2.props.accessible,
            accessibilityRole: _accessibilityHelper.AccessibilityRoles.tab,
            accessibilityLabel: option,
            accessibilityHint: option,
            accessibilityState: {
              disabled: _this2.props.disabledGear,
              selected: index === _this2.state.gearValue
            }
          })), _react.default.createElement(_reactNative.Animated.Text, {
            ellipsizeMode: "tail",
            style: [styles.gearText, _this2.props.gearTextStyle, {
              color: _this2.state.gearValue === index ? colorWhite2 : colorGrayLight
            }]
          }, option));
        }))));
      }
    }, {
      key: "AnimatedMoveGreenTab",
      value: function AnimatedMoveGreenTab(index) {
        _reactNative.Animated.timing(this.currentIndex, {
          toValue: index,
          duration: this.props.duration,
          useNativeDriver: true
        }).start();
      }
    }, {
      key: "getLeftInterpolate",
      value: function getLeftInterpolate() {
        var _this3 = this;

        var _this$props4 = this.props,
            cardType = _this$props4.cardType,
            maxDotShowCount = _this$props4.maxDotShowCount,
            options = _this$props4.options;
        var maxShowCount = cardType === CARD_TYPE.TAB ? MAX_TAB_SHOW_COUNT : maxDotShowCount;
        var length = Math.min(options.length, maxShowCount);
        var inputRange = Array.from({
          length: length
        }).map(function (_value, idx) {
          return idx;
        });
        var outputRange = inputRange.map(function (i) {
          var value = i * (_this3.buttonWidth + _this3.margin) + _this3.leftMargin;

          if (_this3.props.cardType === CARD_TYPE.TAB && length === 5) {
            value -= (_this3.tabWidth - _this3.buttonWidth) / 2;
          }

          return value;
        });
        return {
          inputRange: inputRange,
          outputRange: outputRange
        };
      }
    }, {
      key: "renderInnerView",
      value: function renderInnerView() {
        return _react.default.createElement(_reactNative.View, {
          style: styles.innerView
        }, this.renderUpView(), this.renderGear());
      }
    }, {
      key: "render",
      value: function render() {
        if (this.showNothing) return null;
        var cardHeight = 143;
        if (!this.props.title && !this.props.showSwitch) cardHeight = 95;
        if (this.props.unlimitedHeightEnable) cardHeight = undefined;

        var cardStyle = _reactNative.StyleSheet.flatten([{
          width: cardWidth,
          height: cardHeight,
          borderRadius: radiusValue
        }, this.props.cardStyle]);

        return _react.default.createElement(_Card.default, {
          innerView: this.renderInnerView(),
          cardStyle: cardStyle,
          showShadow: false,
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "_onSliderValueChange",
      value: function _onSliderValueChange(value) {
        var _this4 = this;

        this.setState({
          gearValue: value
        }, function () {
          if (typeof _this4.props.onValueChange === 'function') {
            _this4.props.onValueChange(value);
          }
        });

        if (this.props.onSliderValueChange) {
          this.props.onSliderValueChange(value);
        }
      }
    }]);
    return GearCard;
  }(_react.Component);

  GearCard.propTypes = {
    cardType: _propTypes.default.oneOf([CARD_TYPE.DOT, CARD_TYPE.SLIDER, CARD_TYPE.TAB]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    gearTextStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    showSwitch: _propTypes.default.bool,
    switchStyle: _propTypes.default.object,
    disabledSwitch: _propTypes.default.bool,
    disabledGear: _propTypes.default.bool,
    titleNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    options: _propTypes.default.array,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    duration: _propTypes.default.number,
    currentIndex: _propTypes.default.number,
    sliderProps: _propTypes.default.object,
    sliderStyle: _propTypes.default.object,
    onSliderValueChange: _propTypes.default.func,
    onSlidingComplete: _propTypes.default.func,
    accessible: _accessibilityHelper.AccessibilityPropTypes.accessible,
    accessibilityLabel: _accessibilityHelper.AccessibilityPropTypes.accessibilityLabel,
    accessibilityHint: _accessibilityHelper.AccessibilityPropTypes.accessibilityHint,
    maxDotShowCount: _propTypes.default.number,
    onValueChange: _propTypes.default.func,
    optionGearBackgroundColor: _propTypes.default.string,
    animatedGearBackgroundColor: _propTypes.default.string
  };
  GearCard.defaultProps = {
    cardType: CARD_TYPE.TAB,
    duration: 200,
    currentIndex: 0,
    showSwitch: false,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 1,
    unlimitedHeightEnable: false,
    allowFontScaling: true,
    disabledSwitch: false,
    disabledGear: false,
    sliderProps: {
      value: 0,
      showDots: 0,
      showEndText: true
    },
    maxDotShowCount: 9
  };
  GearCard.contextType = _configProvider.ConfigContext;
  GearCard.CARD_TYPE = CARD_TYPE;

  var styles = _reactNative.StyleSheet.create({
    innerView: {
      marginHorizontal: cardPadding,
      marginTop: 14,
      marginBottom: 17,
      flex: 1
    },
    upViewContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'center',
      height: 24,
      marginBottom: 18
    },
    gearTabContainer: {
      height: 52,
      flexDirection: 'row',
      borderRadius: 26,
      marginBottom: 13,
      marginTop: 8
    },
    gearDotContainer: {
      height: 46,
      flexDirection: 'row',
      alignItems: 'center',
      marginTop: 8,
      marginBottom: 13
    },
    titleStyle: (0, _objectSpread2.default)({
      fontSize: 14,
      lineHeight: 19
    }, _font.FontPrimary),
    textContainer: {
      height: tabHeight,
      justifyContent: 'center',
      alignItems: 'center'
    },
    gearText: (0, _objectSpread2.default)({
      fontSize: 13
    }, _font.FontSecondary),
    right: {
      alignItems: 'flex-end',
      maxWidth: 70,
      marginLeft: 20
    },
    separatorCol: {
      height: 14,
      width: 0.5,
      marginHorizontal: 10,
      backgroundColor: 'rgba(0,0,0,0.2)'
    },
    dotView: {
      top: 21,
      height: 4,
      width: 4,
      borderRadius: 2,
      backgroundColor: '#999999',
      position: 'absolute'
    },
    gearStyle: {
      flexDirection: 'row',
      flex: 1,
      alignItems: 'center'
    },
    titleViewStyle: {
      flexDirection: 'row',
      flex: 1,
      marginRight: 10
    }
  });

  var _default = GearCard;
  exports.default = _default;
},23299,[14308,14305,14314,14344,14320,14323,14371,14377,14386,10318,10297,10033,22450,22426,22864,22897,22420,23041]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2]));

  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3]));

  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4]));

  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5]));

  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6]));

  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7]));

  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8]));

  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9]));

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[11]);

  var _resources = _$$_REQUIRE(_dependencyMap[12]);

  var _Separator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13]));

  var _Switch = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14]));

  var _Card = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15]));

  var _popButton = _$$_REQUIRE(_dependencyMap[16]);

  var _Checkbox = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17]));

  var _configProvider = _$$_REQUIRE(_dependencyMap[18]);

  var _accessibilityHelper = _$$_REQUIRE(_dependencyMap[19]);

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var radiusValue = 12;
  var cardHeight = 89;
  var marginHor = 20;
  var iconViewLength = 43;
  var TYPE = {
    SWITCH: 'switch',
    CHOICE: 'choice',
    BUTTON: 'button',
    ARROW: 'arrow',
    NONE: 'none'
  };
  Object.freeze(TYPE);
  var CARD_RADIUS_TYPE = {
    ALL: 'all',
    NONE: 'none',
    TOP: 'top',
    BOTTOM: 'bottom'
  };

  var ListCard = function (_React$Component) {
    (0, _inherits2.default)(ListCard, _React$Component);

    function ListCard(props) {
      var _CARD_RADIUS_TYPE$ALL;

      var _this;

      (0, _classCallCheck2.default)(this, ListCard);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListCard).call(this, props));

      _this.onAccessibilityAction = function (_ref) {
        var actionName = _ref.nativeEvent.actionName;

        if (_this.props.disabled) {
          return;
        }

        if (actionName === 'activate') {
          var _this$props$switchOpt, _this$props$switchOpt2, _this$props$choiceOpt, _this$props$choiceOpt2, _this$props$buttonOpt;

          if (_this.props.type === TYPE.SWITCH) (_this$props$switchOpt = _this.props.switchOption) == null ? undefined : _this$props$switchOpt.onSwitchValueChange(!((_this$props$switchOpt2 = _this.props.switchOption) == null ? undefined : _this$props$switchOpt2.switchValue));else if (_this.props.type === TYPE.CHOICE) (_this$props$choiceOpt = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt.onValueChange(!((_this$props$choiceOpt2 = _this.props.choiceOption) == null ? undefined : _this$props$choiceOpt2.checked));else if (_this.props.type === TYPE.BUTTON) (_this$props$buttonOpt = _this.props.buttonOption) == null ? undefined : _this$props$buttonOpt.onPress();
        }
      };

      _this.radius = (_CARD_RADIUS_TYPE$ALL = {}, (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.ALL, {
        borderRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.NONE, {
        borderRadius: 0
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.TOP, {
        borderTopLeftRadius: radiusValue,
        borderTopRightRadius: radiusValue
      }), (0, _defineProperty2.default)(_CARD_RADIUS_TYPE$ALL, CARD_RADIUS_TYPE.BOTTOM, {
        borderBottomLeftRadius: radiusValue,
        borderBottomRightRadius: radiusValue
      }), _CARD_RADIUS_TYPE$ALL)[props.radiusType];
      return _this;
    }

    (0, _createClass2.default)(ListCard, [{
      key: "renderIcon",
      value: function renderIcon() {
        return this.props.icon ? _react.default.createElement(_reactNative.View, {
          style: [styles.iconViewStyle, {
            backgroundColor: this.props.themeColor,
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.Image, {
          style: styles.iconStyle,
          source: this.props.icon
        })) : null;
      }
    }, {
      key: "renderText",
      value: function renderText() {
        var _this$context$theme, _this$context$theme2, _this$context$theme3;

        var adaptedFontStyle = {};

        if (this.props.unlimitedHeightEnable) {
          adaptedFontStyle = {
            lineHeight: undefined
          };
        }

        var valueStyle = {
          textAlignVertical: 'center',
          textAlign: 'right'
        };
        var textViewStyle = {
          flex: 1,
          flexDirection: 'row'
        };
        var fontFamily = {};

        if (_reactNative.Platform.OS === 'android') {
          fontFamily = {
            fontFamily: 'KMedium'
          };
        }

        var titleLine = this.props.titleNumberOfLines == undefined ? 1 : this.props.titleNumberOfLines;
        var subtitleLine = this.props.subtitleNumberOfLines == undefined ? 1 : this.props.subtitleNumberOfLines;
        var valueLine = this.props.valueNumberOfLines == undefined ? 2 : this.props.valueNumberOfLines;
        if (titleLine < 0) titleLine = 0;
        if (subtitleLine < 0) subtitleLine = 0;
        if (valueLine < 0) valueLine = 0;
        return _react.default.createElement(_reactNative.View, {
          style: [textViewStyle, {
            opacity: this.props.disabled ? 0.3 : 1
          }]
        }, _react.default.createElement(_reactNative.View, {
          style: styles.titleView
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: titleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.title, {
            color: (_this$context$theme = this.context.theme) == null ? undefined : _this$context$theme.colorBlack
          }, fontFamily, adaptedFontStyle, this.props.titleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.title), this.props.subtitle ? _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: subtitleLine,
          ellipsizeMode: "tail",
          allowFontScaling: this.props.allowFontScaling,
          style: [styles.subtitle, {
            color: (_this$context$theme2 = this.context.theme) == null ? undefined : _this$context$theme2.colorGrayLighter
          }, adaptedFontStyle, this.props.subtitleStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.subtitle) : null), this.props.value && (this.props.type === TYPE.NONE || this.props.type === TYPE.ARROW) ? _react.default.createElement(_reactNative.View, {
          style: styles.valueText
        }, _react.default.createElement(_reactNative.Text, (0, _extends2.default)({
          numberOfLines: valueLine,
          allowFontScaling: this.props.allowFontScaling,
          ellipsizeMode: "tail",
          style: [styles.subtitle, {
            color: (_this$context$theme3 = this.context.theme) == null ? undefined : _this$context$theme3.colorGrayLighter
          }, valueStyle, adaptedFontStyle, this.props.valueStyle]
        }, (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: false
        })), this.props.value)) : null);
      }
    }, {
      key: "renderRight",
      value: function renderRight() {
        var _this$props$buttonOpt2, _this$props$buttonOpt3, _this$props$buttonOpt4, _this$props$buttonOpt5, _this$props$buttonOpt6, _this$props$buttonOpt7, _this$props$choiceOpt3, _this$props$choiceOpt4, _this$props$choiceOpt5, _this$props$switchOpt3, _this$props$switchOpt4, _this$props$switchOpt5, _this$props$switchOpt6, _this$props$switchOpt7;

        var component = {};
        if (this.props.type === TYPE.NONE) return null;else if (this.props.type === TYPE.ARROW) component = _react.default.createElement(_reactNative.Image, {
          style: styles.arrowIcon,
          source: _resources.Images.common.right_arrow
        });else if (this.props.type === TYPE.BUTTON) component = _react.default.createElement(_popButton.PopButton, {
          sizeLevel: 'small',
          title: (_this$props$buttonOpt2 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt2.title,
          backgroundColor: (_this$props$buttonOpt3 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt3.backgroundColor,
          titleStyle: (_this$props$buttonOpt4 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt4.titleStyle,
          titleColor: (_this$props$buttonOpt5 = this.props.buttonOption) == null ? undefined : (_this$props$buttonOpt6 = _this$props$buttonOpt5.titleStyle) == null ? undefined : _this$props$buttonOpt6.color,
          disabled: this.props.disabled,
          allowFontScaling: this.props.allowFontScaling,
          onPress: (_this$props$buttonOpt7 = this.props.buttonOption) == null ? undefined : _this$props$buttonOpt7.onPress
        });else if (this.props.type === TYPE.CHOICE) component = _react.default.createElement(_Checkbox.default, {
          style: {
            width: 22,
            height: 22,
            borderRadius: 11
          },
          disabled: this.props.disabled,
          checked: (_this$props$choiceOpt3 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt3.checked,
          checkedColor: (_this$props$choiceOpt4 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt4.checkedColor,
          onValueChange: (_this$props$choiceOpt5 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt5.onValueChange
        });else if (this.props.type === TYPE.SWITCH) component = _react.default.createElement(_Switch.default, {
          style: (_this$props$switchOpt3 = this.props.switchOption) == null ? undefined : _this$props$switchOpt3.switchStyle,
          value: (_this$props$switchOpt4 = this.props.switchOption) == null ? undefined : _this$props$switchOpt4.switchValue,
          disabled: this.props.disabled,
          tintColor: (_this$props$switchOpt5 = this.props.switchOption) == null ? undefined : _this$props$switchOpt5.tintColor,
          onTintColor: (_this$props$switchOpt6 = this.props.switchOption) == null ? undefined : _this$props$switchOpt6.onTintColor,
          onValueChange: (_this$props$switchOpt7 = this.props.switchOption) == null ? undefined : _this$props$switchOpt7.onSwitchValueChange
        });
        return _react.default.createElement(_reactNative.View, {
          style: [styles.right, this.props.type === TYPE.BUTTON ? {
            flex: 1,
            maxWidth: 80
          } : {}]
        }, component);
      }
    }, {
      key: "renderListCard",
      value: function renderListCard() {
        var _this$props$choiceOpt6, _this$props$switchOpt8;

        return _react.default.createElement(_reactNative.View, {
          style: styles.cardView
        }, _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: styles.innerView
        }, this.props.onPress ? (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint
        }) : (0, _accessibilityHelper.getAccessibilityConfig)({
          accessible: this.props.accessible,
          accessibilityLabel: this.props.accessibilityLabel || this.props.title,
          accessibilityHint: this.props.accessibilityHint,
          accessibilityState: {
            disabled: this.props.disabled,
            checked: (_this$props$choiceOpt6 = this.props.choiceOption) == null ? undefined : _this$props$choiceOpt6.checked,
            value: (_this$props$switchOpt8 = this.props.switchOption) == null ? undefined : _this$props$switchOpt8.switchValue
          }
        }), {
          accessibilityActions: this.props.onPress ? [] : [{
            name: 'activate'
          }],
          onAccessibilityAction: this.props.onPress ? null : this.onAccessibilityAction
        }), this.renderIcon(), this.renderText(), this.renderRight()), this.renderSeparator());
      }
    }, {
      key: "render",
      value: function render() {
        var _this$context$theme4;

        var cardStyle = this.props.cardStyle;
        var defaultCardStyle = {
          height: cardHeight,
          marginTop: 0,
          width: width - 20
        };
        var mixCardStyle = (0, _objectSpread2.default)({}, defaultCardStyle, cardStyle, this.radius, !this.props.allowFontScaling || this.props.unlimitedHeightEnable ? {
          height: undefined
        } : {});
        return _react.default.createElement(_Card.default, {
          showShadow: false,
          onPress: this.props.onPress,
          innerView: this.renderListCard(),
          cardStyle: mixCardStyle,
          disabled: this.props.disabled,
          underlayColor: this.props.cardUnderlayColor || ((_this$context$theme4 = this.context.theme) == null ? undefined : _this$context$theme4.listUnderlayColor),
          allowFontScaling: this.props.allowFontScaling,
          unlimitedHeightEnable: this.props.unlimitedHeightEnable
        });
      }
    }, {
      key: "renderSeparator",
      value: function renderSeparator() {
        if (!this.props.showSeparator) return null;
        return this.props.separator || _react.default.createElement(_Separator.default, {
          style: {
            marginHorizontal: _resources.Styles.common.padding
          }
        });
      }
    }]);
    return ListCard;
  }(_react.default.Component);

  ListCard.contextType = _configProvider.ConfigContext;
  ListCard.TYPE = TYPE;
  ListCard.CARD_RADIUS_TYPE = CARD_RADIUS_TYPE;
  ListCard.propTypes = {
    radiusType: _propTypes.default.oneOf([CARD_RADIUS_TYPE.ALL, CARD_RADIUS_TYPE.TOP, CARD_RADIUS_TYPE.NONE, CARD_RADIUS_TYPE.BOTTOM]),
    type: _propTypes.default.oneOf([TYPE.SWITCH, TYPE.CHOICE, TYPE.BUTTON, TYPE.ARROW, TYPE.NONE]),
    title: _propTypes.default.string,
    subtitle: _propTypes.default.string,
    value: _propTypes.default.string,
    titleStyle: _propTypes.default.object,
    subtitleStyle: _propTypes.default.object,
    valueStyle: _propTypes.default.object,
    cardStyle: _propTypes.default.object,
    titleNumberOfLines: _propTypes.default.number,
    valueNumberOfLines: _propTypes.default.number,
    subtitleNumberOfLines: _propTypes.default.number,
    allowFontScaling: _propTypes.default.bool,
    unlimitedHeightEnable: _propTypes.default.bool,
    themeColor: _propTypes.default.string,
    onPress: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    showSeparator: _propTypes.default.bool,
    separator: _propTypes.default.element,
    buttonOption: _propTypes.default.object,
    choiceOption: _propTypes.default.object,
    onSwitchValueChange: _propTypes.default.func,
    switchValue: _propTypes.default.bool,
    onTintColor: _propTypes.default.string,
    tintColor: _propTypes.default.string,
    switchStyle: _propTypes.default.object,
    cardUnderlayColor: _propTypes.default.string
  };
  ListCard.defaultProps = {
    type: TYPE.NONE,
    radiusType: CARD_RADIUS_TYPE.ALL,
    themeColor: _resources.Styles.common.MHGreen,
    titleNumberOfLines: 1,
    subtitleNumberOfLines: 2,
    valueNumberOfLines: 1,
    allowFontScaling: true,
    unlimitedHeightEnable: false,
    showSeparator: true,
    disabled: false
  };

  var styles = _reactNative.StyleSheet.create({
    cardView: {
      flex: 1,
      justifyContent: 'center'
    },
    innerView: {
      flexDirection: 'row',
      marginHorizontal: marginHor,
      flex: 1,
      alignItems: 'center',
      marginTop: 20,
      marginBottom: 20
    },
    title: {
      fontSize: 16,
      lineHeight: 22,
      fontWeight: 'bold'
    },
    subtitle: {
      fontSize: 13,
      lineHeight: 18,
      marginTop: 1
    },
    valueText: {
      marginLeft: 6,
      justifyContent: 'flex-end',
      flexDirection: 'row',
      alignItems: 'center',
      flex: 1
    },
    titleView: {
      justifyContent: 'center',
      paddingRight: 10
    },
    iconViewStyle: {
      width: iconViewLength,
      height: iconViewLength,
      borderRadius: 21.5,
      alignItems: 'center',
      justifyContent: 'center',
      marginRight: 13
    },
    iconStyle: {
      width: 24,
      height: 24
    },
    arrowIcon: {
      width: 22,
      height: 22
    },
    right: {
      alignItems: 'flex-end'
    }
  });

  var _default = ListCard;
  exports.default = _default;
},23302,[14305,14314,14344,14317,14320,14323,14371,14377,14386,10318,10297,10033,22453,22906,22450,22864,23212,22786,22426,22420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 66,
    "height": 66,
    "scales": [1],
    "hash": "89fa8d6cf15dfd21d927e4b987a1fe30",
    "name": "tick",
    "type": "png"
  });
},23305,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images",
    "width": 24,
    "height": 36,
    "scales": [1],
    "hash": "0614f6a327335cac2159e6c7632b3a41",
    "name": "select",
    "type": "png"
  });
},23308,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/chart",
    "width": 36,
    "height": 40,
    "scales": [2, 3],
    "hash": "0f9ea999fc3712a45589b4b9b704b59d",
    "name": "empty_dark",
    "type": "png"
  });
},23311,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  module.exports = _$$_REQUIRE(_dependencyMap[0]).registerAsset({
    "__packager_asset": true,
    "httpServerLocation": "/assets/node_modules/mhui-rn/dist/resources/images/chart",
    "width": 36,
    "height": 40,
    "scales": [2, 3],
    "hash": "a142f3495a3879b3f401e7385246d091",
    "name": "empty_light",
    "type": "png"
  });
},23314,[10420]);
__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {
  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0]);

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1]));

  var _reactNative = _$$_REQUIRE(_dependencyMap[2]);

  var ModalDialog = _react.default.memo(function (props) {
    var children = props.children,
        visible = props.visible,
        animationType = props.animationType,
        onRequestClose = props.onRequestClose;
    return _react.default.createElement(_reactNative.Modal, {
      visible: visible,
      animationType: animationType,
      onRequestClose: onRequestClose,
      transparent: true
    }, children);
  });

  var _default = ModalDialog;
  exports.default = _default;
},23317,[14305,10297,10033]);
__r(10120);
__r(10001)
__r(10120);
__r(10001);